AAUDIO_CREATE_STREAMBUILDER_FAILED	$SOKOL/audio.zig	/AAUDIO_CREATE_STREAMBUILDER_FAILED/;"	field
AAUDIO_PTHREAD_CREATE_FAILED	$SOKOL/audio.zig	/AAUDIO_PTHREAD_CREATE_FAILED/;"	field
AAUDIO_RESTARTING_STREAM_AFTER_ERROR	$SOKOL/audio.zig	/AAUDIO_RESTARTING_STREAM_AFTER_ERROR/;"	field
AAUDIO_STREAMBUILDER_OPEN_STREAM_FAILED	$SOKOL/audio.zig	/AAUDIO_STREAMBUILDER_OPEN_STREAM_FAILED/;"	field
ADD	$SOKOL/gfx.zig	/ADD/;"	field
ADD_COMMIT_LISTENER_FAILED	$SOKOL/debugtext.zig	/ADD_COMMIT_LISTENER_FAILED/;"	field
ADD_COMMIT_LISTENER_FAILED	$SOKOL/gl.zig	/ADD_COMMIT_LISTENER_FAILED/;"	field
ALLOC	$SOKOL/gfx.zig	/ALLOC/;"	field
ALSA_FLOAT_SAMPLES_NOT_SUPPORTED	$SOKOL/audio.zig	/ALSA_FLOAT_SAMPLES_NOT_SUPPORTED/;"	field
ALSA_PTHREAD_CREATE_FAILED	$SOKOL/audio.zig	/ALSA_PTHREAD_CREATE_FAILED/;"	field
ALSA_REQUESTED_BUFFER_SIZE_NOT_SUPPORTED	$SOKOL/audio.zig	/ALSA_REQUESTED_BUFFER_SIZE_NOT_SUPPORTED/;"	field
ALSA_REQUESTED_CHANNEL_COUNT_NOT_SUPPORTED	$SOKOL/audio.zig	/ALSA_REQUESTED_CHANNEL_COUNT_NOT_SUPPORTED/;"	field
ALSA_SND_PCM_HW_PARAMS_FAILED	$SOKOL/audio.zig	/ALSA_SND_PCM_HW_PARAMS_FAILED/;"	field
ALSA_SND_PCM_HW_PARAMS_SET_RATE_NEAR_FAILED	$SOKOL/audio.zig	/ALSA_SND_PCM_HW_PARAMS_SET_RATE_NEAR_FAILED/;"	field
ALSA_SND_PCM_OPEN_FAILED	$SOKOL/audio.zig	/ALSA_SND_PCM_OPEN_FAILED/;"	field
ALWAYS	$SOKOL/gfx.zig	/ALWAYS/;"	field
ANDROID_CREATE_THREAD_PIPE_FAILED	$SOKOL/app.zig	/ANDROID_CREATE_THREAD_PIPE_FAILED/;"	field
ANDROID_LOOP_THREAD_DONE	$SOKOL/app.zig	/ANDROID_LOOP_THREAD_DONE/;"	field
ANDROID_LOOP_THREAD_STARTED	$SOKOL/app.zig	/ANDROID_LOOP_THREAD_STARTED/;"	field
ANDROID_MSG_CREATE	$SOKOL/app.zig	/ANDROID_MSG_CREATE/;"	field
ANDROID_MSG_DESTROY	$SOKOL/app.zig	/ANDROID_MSG_DESTROY/;"	field
ANDROID_MSG_FOCUS	$SOKOL/app.zig	/ANDROID_MSG_FOCUS/;"	field
ANDROID_MSG_NO_FOCUS	$SOKOL/app.zig	/ANDROID_MSG_NO_FOCUS/;"	field
ANDROID_MSG_PAUSE	$SOKOL/app.zig	/ANDROID_MSG_PAUSE/;"	field
ANDROID_MSG_RESUME	$SOKOL/app.zig	/ANDROID_MSG_RESUME/;"	field
ANDROID_MSG_SET_INPUT_QUEUE	$SOKOL/app.zig	/ANDROID_MSG_SET_INPUT_QUEUE/;"	field
ANDROID_MSG_SET_NATIVE_WINDOW	$SOKOL/app.zig	/ANDROID_MSG_SET_NATIVE_WINDOW/;"	field
ANDROID_NATIVE_ACTIVITY_CREATE_SUCCESS	$SOKOL/app.zig	/ANDROID_NATIVE_ACTIVITY_CREATE_SUCCESS/;"	field
ANDROID_NATIVE_ACTIVITY_DONE	$SOKOL/app.zig	/ANDROID_NATIVE_ACTIVITY_DONE/;"	field
ANDROID_NATIVE_ACTIVITY_ONCONFIGURATIONCHANGED	$SOKOL/app.zig	/ANDROID_NATIVE_ACTIVITY_ONCONFIGURATIONCHANGED/;"	field
ANDROID_NATIVE_ACTIVITY_ONCREATE	$SOKOL/app.zig	/ANDROID_NATIVE_ACTIVITY_ONCREATE/;"	field
ANDROID_NATIVE_ACTIVITY_ONDESTROY	$SOKOL/app.zig	/ANDROID_NATIVE_ACTIVITY_ONDESTROY/;"	field
ANDROID_NATIVE_ACTIVITY_ONINPUTQUEUECREATED	$SOKOL/app.zig	/ANDROID_NATIVE_ACTIVITY_ONINPUTQUEUECREATED/;"	field
ANDROID_NATIVE_ACTIVITY_ONINPUTQUEUEDESTROYED	$SOKOL/app.zig	/ANDROID_NATIVE_ACTIVITY_ONINPUTQUEUEDESTROYED/;"	field
ANDROID_NATIVE_ACTIVITY_ONLOWMEMORY	$SOKOL/app.zig	/ANDROID_NATIVE_ACTIVITY_ONLOWMEMORY/;"	field
ANDROID_NATIVE_ACTIVITY_ONNATIVEWINDOWCREATED	$SOKOL/app.zig	/ANDROID_NATIVE_ACTIVITY_ONNATIVEWINDOWCREATED/;"	field
ANDROID_NATIVE_ACTIVITY_ONNATIVEWINDOWDESTROYED	$SOKOL/app.zig	/ANDROID_NATIVE_ACTIVITY_ONNATIVEWINDOWDESTROYED/;"	field
ANDROID_NATIVE_ACTIVITY_ONPAUSE	$SOKOL/app.zig	/ANDROID_NATIVE_ACTIVITY_ONPAUSE/;"	field
ANDROID_NATIVE_ACTIVITY_ONRESUME	$SOKOL/app.zig	/ANDROID_NATIVE_ACTIVITY_ONRESUME/;"	field
ANDROID_NATIVE_ACTIVITY_ONSAVEINSTANCESTATE	$SOKOL/app.zig	/ANDROID_NATIVE_ACTIVITY_ONSAVEINSTANCESTATE/;"	field
ANDROID_NATIVE_ACTIVITY_ONSTART	$SOKOL/app.zig	/ANDROID_NATIVE_ACTIVITY_ONSTART/;"	field
ANDROID_NATIVE_ACTIVITY_ONSTOP	$SOKOL/app.zig	/ANDROID_NATIVE_ACTIVITY_ONSTOP/;"	field
ANDROID_NATIVE_ACTIVITY_ONWINDOWFOCUSCHANGED	$SOKOL/app.zig	/ANDROID_NATIVE_ACTIVITY_ONWINDOWFOCUSCHANGED/;"	field
ANDROID_READ_MSG_FAILED	$SOKOL/app.zig	/ANDROID_READ_MSG_FAILED/;"	field
ANDROID_UNKNOWN_MSG	$SOKOL/app.zig	/ANDROID_UNKNOWN_MSG/;"	field
ANDROID_UNSUPPORTED_INPUT_EVENT_INPUT_CB	$SOKOL/app.zig	/ANDROID_UNSUPPORTED_INPUT_EVENT_INPUT_CB/;"	field
ANDROID_UNSUPPORTED_INPUT_EVENT_MAIN_CB	$SOKOL/app.zig	/ANDROID_UNSUPPORTED_INPUT_EVENT_MAIN_CB/;"	field
ANDROID_WRITE_MSG_FAILED	$SOKOL/app.zig	/ANDROID_WRITE_MSG_FAILED/;"	field
APOSTROPHE	$SOKOL/app.zig	/APOSTROPHE = 39/;"	field
ARRAY	$SOKOL/gfx.zig	/ARRAY/;"	field
ARROW	$SOKOL/app.zig	/ARROW/;"	field
ASTC_4x4_RGBA	$SOKOL/gfx.zig	/ASTC_4x4_RGBA/;"	field
ASTC_4x4_SRGBA	$SOKOL/gfx.zig	/ASTC_4x4_SRGBA/;"	field
Allocator	$SOKOL/app.zig	/^pub const Allocator = extern struct {$/;"	struct
Allocator	$SOKOL/audio.zig	/^pub const Allocator = extern struct {$/;"	struct
Allocator	$SOKOL/debugtext.zig	/^pub const Allocator = extern struct {$/;"	struct
Allocator	$SOKOL/gfx.zig	/^pub const Allocator = extern struct {$/;"	struct
Allocator	$SOKOL/gl.zig	/^pub const Allocator = extern struct {$/;"	struct
AndroidTooltype	$SOKOL/app.zig	/^pub const AndroidTooltype = enum(i32) {$/;"	enum
BACK	$SOKOL/gfx.zig	/BACK/;"	field
BACKEND_BUFFER_SIZE_ISNT_MULTIPLE_OF_PACKET_SIZE	$SOKOL/audio.zig	/BACKEND_BUFFER_SIZE_ISNT_MULTIPLE_OF_PACKET_SIZE/;"	field
BACKSLASH	$SOKOL/app.zig	/BACKSLASH = 92/;"	field
BACKSPACE	$SOKOL/app.zig	/BACKSPACE = 259/;"	field
BC1_RGBA	$SOKOL/gfx.zig	/BC1_RGBA/;"	field
BC2_RGBA	$SOKOL/gfx.zig	/BC2_RGBA/;"	field
BC3_RGBA	$SOKOL/gfx.zig	/BC3_RGBA/;"	field
BC3_SRGBA	$SOKOL/gfx.zig	/BC3_SRGBA/;"	field
BC4_R	$SOKOL/gfx.zig	/BC4_R/;"	field
BC4_RSN	$SOKOL/gfx.zig	/BC4_RSN/;"	field
BC5_RG	$SOKOL/gfx.zig	/BC5_RG/;"	field
BC5_RGSN	$SOKOL/gfx.zig	/BC5_RGSN/;"	field
BC6H_RGBF	$SOKOL/gfx.zig	/BC6H_RGBF/;"	field
BC6H_RGBUF	$SOKOL/gfx.zig	/BC6H_RGBUF/;"	field
BC7_RGBA	$SOKOL/gfx.zig	/BC7_RGBA/;"	field
BC7_SRGBA	$SOKOL/gfx.zig	/BC7_SRGBA/;"	field
BGRA8	$SOKOL/gfx.zig	/BGRA8/;"	field
BLEND_ALPHA	$SOKOL/gfx.zig	/BLEND_ALPHA/;"	field
BLEND_COLOR	$SOKOL/gfx.zig	/BLEND_COLOR/;"	field
BUFFER_POOL_EXHAUSTED	$SOKOL/gfx.zig	/BUFFER_POOL_EXHAUSTED/;"	field
BYTE4	$SOKOL/gfx.zig	/BYTE4/;"	field
BYTE4N	$SOKOL/gfx.zig	/BYTE4N/;"	field
Backend	$SOKOL/gfx.zig	/^pub const Backend = enum(i32) {$/;"	enum
Bindings	$SOKOL/gfx.zig	/^pub const Bindings = extern struct {$/;"	struct
BlendFactor	$SOKOL/gfx.zig	/^pub const BlendFactor = enum(i32) {$/;"	enum
BlendOp	$SOKOL/gfx.zig	/^pub const BlendOp = enum(i32) {$/;"	enum
BlendState	$SOKOL/gfx.zig	/^pub const BlendState = extern struct {$/;"	struct
BorderColor	$SOKOL/gfx.zig	/^pub const BorderColor = enum(i32) {$/;"	enum
Box	$SOKOL/shape.zig	/^pub const Box = extern struct {$/;"	struct
Buffer	$SOKOL/gfx.zig	/^pub const Buffer = extern struct {$/;"	struct
Buffer	$SOKOL/shape.zig	/^pub const Buffer = extern struct {$/;"	struct
BufferDesc	$SOKOL/gfx.zig	/^pub const BufferDesc = extern struct {$/;"	struct
BufferInfo	$SOKOL/gfx.zig	/^pub const BufferInfo = extern struct {$/;"	struct
BufferItem	$SOKOL/shape.zig	/^pub const BufferItem = extern struct {$/;"	struct
BufferType	$SOKOL/gfx.zig	/^pub const BufferType = enum(i32) {$/;"	enum
CANNOT_DESTROY_DEFAULT_CONTEXT	$SOKOL/debugtext.zig	/CANNOT_DESTROY_DEFAULT_CONTEXT/;"	field
CANNOT_DESTROY_DEFAULT_CONTEXT	$SOKOL/gl.zig	/CANNOT_DESTROY_DEFAULT_CONTEXT/;"	field
CAPS_LOCK	$SOKOL/app.zig	/CAPS_LOCK = 280/;"	field
CCW	$SOKOL/gfx.zig	/CCW/;"	field
CHAR	$SOKOL/app.zig	/CHAR/;"	field
CLAMP_TO_BORDER	$SOKOL/gfx.zig	/CLAMP_TO_BORDER/;"	field
CLAMP_TO_EDGE	$SOKOL/gfx.zig	/CLAMP_TO_EDGE/;"	field
CLEAR	$SOKOL/gfx.zig	/CLEAR/;"	field
CLIPBOARD_PASTED	$SOKOL/app.zig	/CLIPBOARD_PASTED/;"	field
CLIPBOARD_STRING_TOO_BIG	$SOKOL/app.zig	/CLIPBOARD_STRING_TOO_BIG/;"	field
COMMA	$SOKOL/app.zig	/COMMA = 44/;"	field
COMMANDS_FULL	$SOKOL/gl.zig	/COMMANDS_FULL/;"	field
COMMAND_BUFFER_FULL	$SOKOL/debugtext.zig	/COMMAND_BUFFER_FULL/;"	field
COMMIT_LISTENER_ARRAY_FULL	$SOKOL/gfx.zig	/COMMIT_LISTENER_ARRAY_FULL/;"	field
COMPARISON	$SOKOL/gfx.zig	/COMPARISON/;"	field
CONTEXT_POOL_EXHAUSTED	$SOKOL/debugtext.zig	/CONTEXT_POOL_EXHAUSTED/;"	field
CONTEXT_POOL_EXHAUSTED	$SOKOL/gl.zig	/CONTEXT_POOL_EXHAUSTED/;"	field
COREAUDIO_ALLOCATE_BUFFER_FAILED	$SOKOL/audio.zig	/COREAUDIO_ALLOCATE_BUFFER_FAILED/;"	field
COREAUDIO_NEW_OUTPUT_FAILED	$SOKOL/audio.zig	/COREAUDIO_NEW_OUTPUT_FAILED/;"	field
COREAUDIO_START_FAILED	$SOKOL/audio.zig	/COREAUDIO_START_FAILED/;"	field
CROSSHAIR	$SOKOL/app.zig	/CROSSHAIR/;"	field
CUBE	$SOKOL/gfx.zig	/CUBE/;"	field
Color	$SOKOL/gfx.zig	/^pub const Color = extern struct {$/;"	struct
ColorAttachmentAction	$SOKOL/gfx.zig	/^pub const ColorAttachmentAction = extern struct {$/;"	struct
ColorMask	$SOKOL/gfx.zig	/^pub const ColorMask = enum(i32) {$/;"	enum
ColorTargetState	$SOKOL/gfx.zig	/^pub const ColorTargetState = extern struct {$/;"	struct
CommitListener	$SOKOL/gfx.zig	/^pub const CommitListener = extern struct {$/;"	struct
CompareFunc	$SOKOL/gfx.zig	/^pub const CompareFunc = enum(i32) {$/;"	enum
Context	$SOKOL/debugtext.zig	/^pub const Context = extern struct {$/;"	struct
Context	$SOKOL/gfx.zig	/^pub const Context = extern struct {$/;"	struct
Context	$SOKOL/gl.zig	/^pub const Context = extern struct {$/;"	struct
ContextDesc	$SOKOL/debugtext.zig	/^pub const ContextDesc = extern struct {$/;"	struct
ContextDesc	$SOKOL/gfx.zig	/^pub const ContextDesc = extern struct {$/;"	struct
ContextDesc	$SOKOL/gl.zig	/^pub const ContextDesc = extern struct {$/;"	struct
CubeFace	$SOKOL/gfx.zig	/^pub const CubeFace = enum(i32) {$/;"	enum
CullMode	$SOKOL/gfx.zig	/^pub const CullMode = enum(i32) {$/;"	enum
Cylinder	$SOKOL/shape.zig	/^pub const Cylinder = extern struct {$/;"	struct
D3D11	$SOKOL/gfx.zig	/D3D11/;"	field
D3D11_CREATE_2D_SRV_FAILED	$SOKOL/gfx.zig	/D3D11_CREATE_2D_SRV_FAILED/;"	field
D3D11_CREATE_2D_TEXTURE_FAILED	$SOKOL/gfx.zig	/D3D11_CREATE_2D_TEXTURE_FAILED/;"	field
D3D11_CREATE_2D_TEXTURE_UNSUPPORTED_PIXEL_FORMAT	$SOKOL/gfx.zig	/D3D11_CREATE_2D_TEXTURE_UNSUPPORTED_PIXEL_FORMAT/;"	field
D3D11_CREATE_3D_SRV_FAILED	$SOKOL/gfx.zig	/D3D11_CREATE_3D_SRV_FAILED/;"	field
D3D11_CREATE_3D_TEXTURE_FAILED	$SOKOL/gfx.zig	/D3D11_CREATE_3D_TEXTURE_FAILED/;"	field
D3D11_CREATE_3D_TEXTURE_UNSUPPORTED_PIXEL_FORMAT	$SOKOL/gfx.zig	/D3D11_CREATE_3D_TEXTURE_UNSUPPORTED_PIXEL_FORMAT/;"	field
D3D11_CREATE_BLEND_STATE_FAILED	$SOKOL/gfx.zig	/D3D11_CREATE_BLEND_STATE_FAILED/;"	field
D3D11_CREATE_BUFFER_FAILED	$SOKOL/gfx.zig	/D3D11_CREATE_BUFFER_FAILED/;"	field
D3D11_CREATE_CONSTANT_BUFFER_FAILED	$SOKOL/gfx.zig	/D3D11_CREATE_CONSTANT_BUFFER_FAILED/;"	field
D3D11_CREATE_DEPTH_STENCIL_STATE_FAILED	$SOKOL/gfx.zig	/D3D11_CREATE_DEPTH_STENCIL_STATE_FAILED/;"	field
D3D11_CREATE_DEPTH_TEXTURE_FAILED	$SOKOL/gfx.zig	/D3D11_CREATE_DEPTH_TEXTURE_FAILED/;"	field
D3D11_CREATE_DEPTH_TEXTURE_UNSUPPORTED_PIXEL_FORMAT	$SOKOL/gfx.zig	/D3D11_CREATE_DEPTH_TEXTURE_UNSUPPORTED_PIXEL_FORMAT/;"	field
D3D11_CREATE_DSV_FAILED	$SOKOL/gfx.zig	/D3D11_CREATE_DSV_FAILED/;"	field
D3D11_CREATE_INPUT_LAYOUT_FAILED	$SOKOL/gfx.zig	/D3D11_CREATE_INPUT_LAYOUT_FAILED/;"	field
D3D11_CREATE_MSAA_TEXTURE_FAILED	$SOKOL/gfx.zig	/D3D11_CREATE_MSAA_TEXTURE_FAILED/;"	field
D3D11_CREATE_RASTERIZER_STATE_FAILED	$SOKOL/gfx.zig	/D3D11_CREATE_RASTERIZER_STATE_FAILED/;"	field
D3D11_CREATE_RTV_FAILED	$SOKOL/gfx.zig	/D3D11_CREATE_RTV_FAILED/;"	field
D3D11_CREATE_SAMPLER_STATE_FAILED	$SOKOL/gfx.zig	/D3D11_CREATE_SAMPLER_STATE_FAILED/;"	field
D3D11_LOAD_D3DCOMPILER_47_DLL_FAILED	$SOKOL/gfx.zig	/D3D11_LOAD_D3DCOMPILER_47_DLL_FAILED/;"	field
D3D11_MAP_FOR_APPEND_BUFFER_FAILED	$SOKOL/gfx.zig	/D3D11_MAP_FOR_APPEND_BUFFER_FAILED/;"	field
D3D11_MAP_FOR_UPDATE_BUFFER_FAILED	$SOKOL/gfx.zig	/D3D11_MAP_FOR_UPDATE_BUFFER_FAILED/;"	field
D3D11_MAP_FOR_UPDATE_IMAGE_FAILED	$SOKOL/gfx.zig	/D3D11_MAP_FOR_UPDATE_IMAGE_FAILED/;"	field
D3D11_SHADER_COMPILATION_FAILED	$SOKOL/gfx.zig	/D3D11_SHADER_COMPILATION_FAILED/;"	field
D3D11_SHADER_COMPILATION_OUTPUT	$SOKOL/gfx.zig	/D3D11_SHADER_COMPILATION_OUTPUT/;"	field
D3d11BufferInfo	$SOKOL/gfx.zig	/^pub const D3d11BufferInfo = extern struct {$/;"	struct
D3d11ContextDesc	$SOKOL/gfx.zig	/^pub const D3d11ContextDesc = extern struct {$/;"	struct
D3d11ImageInfo	$SOKOL/gfx.zig	/^pub const D3d11ImageInfo = extern struct {$/;"	struct
D3d11PassInfo	$SOKOL/gfx.zig	/^pub const D3d11PassInfo = extern struct {$/;"	struct
D3d11PipelineInfo	$SOKOL/gfx.zig	/^pub const D3d11PipelineInfo = extern struct {$/;"	struct
D3d11SamplerInfo	$SOKOL/gfx.zig	/^pub const D3d11SamplerInfo = extern struct {$/;"	struct
D3d11ShaderInfo	$SOKOL/gfx.zig	/^pub const D3d11ShaderInfo = extern struct {$/;"	struct
DEALLOC_BUFFER_INVALID_STATE	$SOKOL/gfx.zig	/DEALLOC_BUFFER_INVALID_STATE/;"	field
DEALLOC_IMAGE_INVALID_STATE	$SOKOL/gfx.zig	/DEALLOC_IMAGE_INVALID_STATE/;"	field
DEALLOC_PASS_INVALID_STATE	$SOKOL/gfx.zig	/DEALLOC_PASS_INVALID_STATE/;"	field
DEALLOC_PIPELINE_INVALID_STATE	$SOKOL/gfx.zig	/DEALLOC_PIPELINE_INVALID_STATE/;"	field
DEALLOC_SAMPLER_INVALID_STATE	$SOKOL/gfx.zig	/DEALLOC_SAMPLER_INVALID_STATE/;"	field
DEALLOC_SHADER_INVALID_STATE	$SOKOL/gfx.zig	/DEALLOC_SHADER_INVALID_STATE/;"	field
DECR_CLAMP	$SOKOL/gfx.zig	/DECR_CLAMP/;"	field
DECR_WRAP	$SOKOL/gfx.zig	/DECR_WRAP/;"	field
DEFAULT	$SOKOL/app.zig	/DEFAULT = 0/;"	field
DEFAULT	$SOKOL/gfx.zig	/DEFAULT = 0/;"	field
DELETE	$SOKOL/app.zig	/DELETE = 261/;"	field
DEPTH	$SOKOL/gfx.zig	/DEPTH/;"	field
DEPTH_STENCIL	$SOKOL/gfx.zig	/DEPTH_STENCIL/;"	field
DONTCARE	$SOKOL/gfx.zig	/DONTCARE/;"	field
DOWN	$SOKOL/app.zig	/DOWN = 264/;"	field
DRAW_WITHOUT_BINDINGS	$SOKOL/gfx.zig	/DRAW_WITHOUT_BINDINGS/;"	field
DROPPED_FILE_PATH_TOO_LONG	$SOKOL/app.zig	/DROPPED_FILE_PATH_TOO_LONG/;"	field
DST_ALPHA	$SOKOL/gfx.zig	/DST_ALPHA/;"	field
DST_COLOR	$SOKOL/gfx.zig	/DST_COLOR/;"	field
DUMMY	$SOKOL/gfx.zig	/DUMMY/;"	field
DYNAMIC	$SOKOL/gfx.zig	/DYNAMIC/;"	field
DepthAttachmentAction	$SOKOL/gfx.zig	/^pub const DepthAttachmentAction = extern struct {$/;"	struct
DepthState	$SOKOL/gfx.zig	/^pub const DepthState = extern struct {$/;"	struct
Desc	$SOKOL/app.zig	/^pub const Desc = extern struct {$/;"	struct
Desc	$SOKOL/audio.zig	/^pub const Desc = extern struct {$/;"	struct
Desc	$SOKOL/debugtext.zig	/^pub const Desc = extern struct {$/;"	struct
Desc	$SOKOL/gfx.zig	/^pub const Desc = extern struct {$/;"	struct
Desc	$SOKOL/gl.zig	/^pub const Desc = extern struct {$/;"	struct
END	$SOKOL/app.zig	/END = 269/;"	field
ENTER	$SOKOL/app.zig	/ENTER = 257/;"	field
EQUAL	$SOKOL/app.zig	/EQUAL = 61/;"	field
EQUAL	$SOKOL/gfx.zig	/EQUAL/;"	field
ESCAPE	$SOKOL/app.zig	/ESCAPE = 256/;"	field
ETC2_RG11	$SOKOL/gfx.zig	/ETC2_RG11/;"	field
ETC2_RG11SN	$SOKOL/gfx.zig	/ETC2_RG11SN/;"	field
ETC2_RGB8	$SOKOL/gfx.zig	/ETC2_RGB8/;"	field
ETC2_RGB8A1	$SOKOL/gfx.zig	/ETC2_RGB8A1/;"	field
ETC2_RGBA8	$SOKOL/gfx.zig	/ETC2_RGBA8/;"	field
ETC2_SRGB8	$SOKOL/gfx.zig	/ETC2_SRGB8/;"	field
ETC2_SRGB8A8	$SOKOL/gfx.zig	/ETC2_SRGB8A8/;"	field
ElementRange	$SOKOL/shape.zig	/^pub const ElementRange = extern struct {$/;"	struct
Error	$SOKOL/debugtext.zig	/pub const Error = error{}/;"	constant
Error	$SOKOL/gl.zig	/^pub const Error = enum(i32) {$/;"	enum
Event	$SOKOL/app.zig	/^pub const Event = extern struct {$/;"	struct
EventType	$SOKOL/app.zig	/^pub const EventType = enum(i32) {$/;"	enum
F10	$SOKOL/app.zig	/F10 = 299/;"	field
F11	$SOKOL/app.zig	/F11 = 300/;"	field
F12	$SOKOL/app.zig	/F12 = 301/;"	field
F13	$SOKOL/app.zig	/F13 = 302/;"	field
F14	$SOKOL/app.zig	/F14 = 303/;"	field
F15	$SOKOL/app.zig	/F15 = 304/;"	field
F16	$SOKOL/app.zig	/F16 = 305/;"	field
F17	$SOKOL/app.zig	/F17 = 306/;"	field
F18	$SOKOL/app.zig	/F18 = 307/;"	field
F19	$SOKOL/app.zig	/F19 = 308/;"	field
F20	$SOKOL/app.zig	/F20 = 309/;"	field
F21	$SOKOL/app.zig	/F21 = 310/;"	field
F22	$SOKOL/app.zig	/F22 = 311/;"	field
F23	$SOKOL/app.zig	/F23 = 312/;"	field
F24	$SOKOL/app.zig	/F24 = 313/;"	field
F25	$SOKOL/app.zig	/F25 = 314/;"	field
FAILED	$SOKOL/gfx.zig	/FAILED/;"	field
FAIL_BUFFER_INVALID_STATE	$SOKOL/gfx.zig	/FAIL_BUFFER_INVALID_STATE/;"	field
FAIL_IMAGE_INVALID_STATE	$SOKOL/gfx.zig	/FAIL_IMAGE_INVALID_STATE/;"	field
FAIL_PASS_INVALID_STATE	$SOKOL/gfx.zig	/FAIL_PASS_INVALID_STATE/;"	field
FAIL_PIPELINE_INVALID_STATE	$SOKOL/gfx.zig	/FAIL_PIPELINE_INVALID_STATE/;"	field
FAIL_SAMPLER_INVALID_STATE	$SOKOL/gfx.zig	/FAIL_SAMPLER_INVALID_STATE/;"	field
FAIL_SHADER_INVALID_STATE	$SOKOL/gfx.zig	/FAIL_SHADER_INVALID_STATE/;"	field
FETCH_ERROR_BUFFER_TOO_SMALL	$SOKOL/app.zig	/FETCH_ERROR_BUFFER_TOO_SMALL/;"	field
FETCH_ERROR_NO_ERROR	$SOKOL/app.zig	/FETCH_ERROR_NO_ERROR/;"	field
FETCH_ERROR_OTHER	$SOKOL/app.zig	/FETCH_ERROR_OTHER/;"	field
FILES_DROPPED	$SOKOL/app.zig	/FILES_DROPPED/;"	field
FILTERING	$SOKOL/gfx.zig	/FILTERING/;"	field
FINGER	$SOKOL/app.zig	/FINGER = 1/;"	field
FLOAT	$SOKOL/gfx.zig	/FLOAT/;"	field
FLOAT2	$SOKOL/gfx.zig	/FLOAT2/;"	field
FLOAT3	$SOKOL/gfx.zig	/FLOAT3/;"	field
FLOAT4	$SOKOL/gfx.zig	/FLOAT4/;"	field
FOCUSED	$SOKOL/app.zig	/FOCUSED/;"	field
FRONT	$SOKOL/gfx.zig	/FRONT/;"	field
FaceWinding	$SOKOL/gfx.zig	/^pub const FaceWinding = enum(i32) {$/;"	enum
Features	$SOKOL/gfx.zig	/^pub const Features = extern struct {$/;"	struct
Filter	$SOKOL/gfx.zig	/^pub const Filter = enum(i32) {$/;"	enum
FontDesc	$SOKOL/debugtext.zig	/^pub const FontDesc = extern struct {$/;"	struct
FrameStats	$SOKOL/gfx.zig	/^pub const FrameStats = extern struct {$/;"	struct
FrameStatsD3d11	$SOKOL/gfx.zig	/^pub const FrameStatsD3d11 = extern struct {$/;"	struct
FrameStatsD3d11Bindings	$SOKOL/gfx.zig	/^pub const FrameStatsD3d11Bindings = extern struct {$/;"	struct
FrameStatsD3d11Draw	$SOKOL/gfx.zig	/^pub const FrameStatsD3d11Draw = extern struct {$/;"	struct
FrameStatsD3d11Pass	$SOKOL/gfx.zig	/^pub const FrameStatsD3d11Pass = extern struct {$/;"	struct
FrameStatsD3d11Pipeline	$SOKOL/gfx.zig	/^pub const FrameStatsD3d11Pipeline = extern struct {$/;"	struct
FrameStatsD3d11Uniforms	$SOKOL/gfx.zig	/^pub const FrameStatsD3d11Uniforms = extern struct {$/;"	struct
FrameStatsGl	$SOKOL/gfx.zig	/^pub const FrameStatsGl = extern struct {$/;"	struct
FrameStatsMetal	$SOKOL/gfx.zig	/^pub const FrameStatsMetal = extern struct {$/;"	struct
FrameStatsMetalBindings	$SOKOL/gfx.zig	/^pub const FrameStatsMetalBindings = extern struct {$/;"	struct
FrameStatsMetalIdpool	$SOKOL/gfx.zig	/^pub const FrameStatsMetalIdpool = extern struct {$/;"	struct
FrameStatsMetalPipeline	$SOKOL/gfx.zig	/^pub const FrameStatsMetalPipeline = extern struct {$/;"	struct
FrameStatsMetalUniforms	$SOKOL/gfx.zig	/^pub const FrameStatsMetalUniforms = extern struct {$/;"	struct
FrameStatsWgpu	$SOKOL/gfx.zig	/^pub const FrameStatsWgpu = extern struct {$/;"	struct
FrameStatsWgpuBindings	$SOKOL/gfx.zig	/^pub const FrameStatsWgpuBindings = extern struct {$/;"	struct
FrameStatsWgpuUniforms	$SOKOL/gfx.zig	/^pub const FrameStatsWgpuUniforms = extern struct {$/;"	struct
GBA	$SOKOL/gfx.zig	/GBA = 14/;"	field
GLCORE33	$SOKOL/gfx.zig	/GLCORE33/;"	field
GLES3	$SOKOL/gfx.zig	/GLES3/;"	field
GL_3D_TEXTURES_NOT_SUPPORTED	$SOKOL/gfx.zig	/GL_3D_TEXTURES_NOT_SUPPORTED/;"	field
GL_ARRAY_TEXTURES_NOT_SUPPORTED	$SOKOL/gfx.zig	/GL_ARRAY_TEXTURES_NOT_SUPPORTED/;"	field
GL_FRAMEBUFFER_STATUS_INCOMPLETE_ATTACHMENT	$SOKOL/gfx.zig	/GL_FRAMEBUFFER_STATUS_INCOMPLETE_ATTACHMENT/;"	field
GL_FRAMEBUFFER_STATUS_INCOMPLETE_MISSING_ATTACHMENT	$SOKOL/gfx.zig	/GL_FRAMEBUFFER_STATUS_INCOMPLETE_MISSING_ATTACHMENT/;"	field
GL_FRAMEBUFFER_STATUS_INCOMPLETE_MULTISAMPLE	$SOKOL/gfx.zig	/GL_FRAMEBUFFER_STATUS_INCOMPLETE_MULTISAMPLE/;"	field
GL_FRAMEBUFFER_STATUS_UNDEFINED	$SOKOL/gfx.zig	/GL_FRAMEBUFFER_STATUS_UNDEFINED/;"	field
GL_FRAMEBUFFER_STATUS_UNKNOWN	$SOKOL/gfx.zig	/GL_FRAMEBUFFER_STATUS_UNKNOWN/;"	field
GL_FRAMEBUFFER_STATUS_UNSUPPORTED	$SOKOL/gfx.zig	/GL_FRAMEBUFFER_STATUS_UNSUPPORTED/;"	field
GL_SHADER_COMPILATION_FAILED	$SOKOL/gfx.zig	/GL_SHADER_COMPILATION_FAILED/;"	field
GL_SHADER_LINKING_FAILED	$SOKOL/gfx.zig	/GL_SHADER_LINKING_FAILED/;"	field
GL_TEXTURE_FORMAT_NOT_SUPPORTED	$SOKOL/gfx.zig	/GL_TEXTURE_FORMAT_NOT_SUPPORTED/;"	field
GL_TEXTURE_NAME_NOT_FOUND_IN_SHADER	$SOKOL/gfx.zig	/GL_TEXTURE_NAME_NOT_FOUND_IN_SHADER/;"	field
GL_VERTEX_ATTRIBUTE_NOT_FOUND_IN_SHADER	$SOKOL/gfx.zig	/GL_VERTEX_ATTRIBUTE_NOT_FOUND_IN_SHADER/;"	field
GRAVE_ACCENT	$SOKOL/app.zig	/GRAVE_ACCENT = 96/;"	field
GREATER	$SOKOL/gfx.zig	/GREATER/;"	field
GREATER_EQUAL	$SOKOL/gfx.zig	/GREATER_EQUAL/;"	field
GlBufferInfo	$SOKOL/gfx.zig	/^pub const GlBufferInfo = extern struct {$/;"	struct
GlContextDesc	$SOKOL/gfx.zig	/^pub const GlContextDesc = extern struct {$/;"	struct
GlImageInfo	$SOKOL/gfx.zig	/^pub const GlImageInfo = extern struct {$/;"	struct
GlPassInfo	$SOKOL/gfx.zig	/^pub const GlPassInfo = extern struct {$/;"	struct
GlSamplerInfo	$SOKOL/gfx.zig	/^pub const GlSamplerInfo = extern struct {$/;"	struct
GlShaderInfo	$SOKOL/gfx.zig	/^pub const GlShaderInfo = extern struct {$/;"	struct
HALF2	$SOKOL/gfx.zig	/HALF2/;"	field
HALF4	$SOKOL/gfx.zig	/HALF4/;"	field
HOME	$SOKOL/app.zig	/HOME = 268/;"	field
Html5FetchError	$SOKOL/app.zig	/^pub const Html5FetchError = enum(i32) {$/;"	enum
Html5FetchRequest	$SOKOL/app.zig	/^pub const Html5FetchRequest = extern struct {$/;"	struct
Html5FetchResponse	$SOKOL/app.zig	/^pub const Html5FetchResponse = extern struct {$/;"	struct
IBEAM	$SOKOL/app.zig	/IBEAM/;"	field
ICONIFIED	$SOKOL/app.zig	/ICONIFIED/;"	field
IDENTICAL_COMMIT_LISTENER	$SOKOL/gfx.zig	/IDENTICAL_COMMIT_LISTENER/;"	field
IMAGE_DATA_SIZE_MISMATCH	$SOKOL/app.zig	/IMAGE_DATA_SIZE_MISMATCH/;"	field
IMAGE_POOL_EXHAUSTED	$SOKOL/gfx.zig	/IMAGE_POOL_EXHAUSTED/;"	field
IMMUTABLE	$SOKOL/gfx.zig	/IMMUTABLE/;"	field
INCR_CLAMP	$SOKOL/gfx.zig	/INCR_CLAMP/;"	field
INCR_WRAP	$SOKOL/gfx.zig	/INCR_WRAP/;"	field
INDEXBUFFER	$SOKOL/gfx.zig	/INDEXBUFFER/;"	field
INITIAL	$SOKOL/gfx.zig	/INITIAL/;"	field
INIT_BUFFER_INVALID_STATE	$SOKOL/gfx.zig	/INIT_BUFFER_INVALID_STATE/;"	field
INIT_IMAGE_INVALID_STATE	$SOKOL/gfx.zig	/INIT_IMAGE_INVALID_STATE/;"	field
INIT_PASS_INVALID_STATE	$SOKOL/gfx.zig	/INIT_PASS_INVALID_STATE/;"	field
INIT_PIPELINE_INVALID_STATE	$SOKOL/gfx.zig	/INIT_PIPELINE_INVALID_STATE/;"	field
INIT_SAMPLER_INVALID_STATE	$SOKOL/gfx.zig	/INIT_SAMPLER_INVALID_STATE/;"	field
INIT_SHADER_INVALID_STATE	$SOKOL/gfx.zig	/INIT_SHADER_INVALID_STATE/;"	field
INSERT	$SOKOL/app.zig	/INSERT = 260/;"	field
INT	$SOKOL/gfx.zig	/INT/;"	field
INT2	$SOKOL/gfx.zig	/INT2/;"	field
INT3	$SOKOL/gfx.zig	/INT3/;"	field
INT4	$SOKOL/gfx.zig	/INT4/;"	field
INVALID	$SOKOL/app.zig	/INVALID = 256/;"	field
INVALID	$SOKOL/gfx.zig	/INVALID/;"	field
INVERT	$SOKOL/gfx.zig	/INVERT/;"	field
IconDesc	$SOKOL/app.zig	/^pub const IconDesc = extern struct {$/;"	struct
Image	$SOKOL/gfx.zig	/^pub const Image = extern struct {$/;"	struct
ImageData	$SOKOL/gfx.zig	/^pub const ImageData = extern struct {$/;"	struct
ImageDesc	$SOKOL/app.zig	/^pub const ImageDesc = extern struct {$/;"	struct
ImageDesc	$SOKOL/gfx.zig	/^pub const ImageDesc = extern struct {$/;"	struct
ImageInfo	$SOKOL/gfx.zig	/^pub const ImageInfo = extern struct {$/;"	struct
ImageSampleType	$SOKOL/gfx.zig	/^pub const ImageSampleType = enum(i32) {$/;"	enum
ImageType	$SOKOL/gfx.zig	/^pub const ImageType = enum(i32) {$/;"	enum
IndexType	$SOKOL/gfx.zig	/^pub const IndexType = enum(i32) {$/;"	enum
KEEP	$SOKOL/gfx.zig	/KEEP/;"	field
KEY_DOWN	$SOKOL/app.zig	/KEY_DOWN/;"	field
KEY_UP	$SOKOL/app.zig	/KEY_UP/;"	field
KP_0	$SOKOL/app.zig	/KP_0 = 320/;"	field
KP_1	$SOKOL/app.zig	/KP_1 = 321/;"	field
KP_2	$SOKOL/app.zig	/KP_2 = 322/;"	field
KP_3	$SOKOL/app.zig	/KP_3 = 323/;"	field
KP_4	$SOKOL/app.zig	/KP_4 = 324/;"	field
KP_5	$SOKOL/app.zig	/KP_5 = 325/;"	field
KP_6	$SOKOL/app.zig	/KP_6 = 326/;"	field
KP_7	$SOKOL/app.zig	/KP_7 = 327/;"	field
KP_8	$SOKOL/app.zig	/KP_8 = 328/;"	field
KP_9	$SOKOL/app.zig	/KP_9 = 329/;"	field
KP_ADD	$SOKOL/app.zig	/KP_ADD = 334/;"	field
KP_DECIMAL	$SOKOL/app.zig	/KP_DECIMAL = 330/;"	field
KP_DIVIDE	$SOKOL/app.zig	/KP_DIVIDE = 331/;"	field
KP_ENTER	$SOKOL/app.zig	/KP_ENTER = 335/;"	field
KP_EQUAL	$SOKOL/app.zig	/KP_EQUAL = 336/;"	field
KP_MULTIPLY	$SOKOL/app.zig	/KP_MULTIPLY = 332/;"	field
KP_SUBTRACT	$SOKOL/app.zig	/KP_SUBTRACT = 333/;"	field
Keycode	$SOKOL/app.zig	/^pub const Keycode = enum(i32) {$/;"	enum
LEFT	$SOKOL/app.zig	/LEFT = 263/;"	field
LEFT_ALT	$SOKOL/app.zig	/LEFT_ALT = 342/;"	field
LEFT_BRACKET	$SOKOL/app.zig	/LEFT_BRACKET = 91/;"	field
LEFT_CONTROL	$SOKOL/app.zig	/LEFT_CONTROL = 341/;"	field
LEFT_SHIFT	$SOKOL/app.zig	/LEFT_SHIFT = 340/;"	field
LEFT_SUPER	$SOKOL/app.zig	/LEFT_SUPER = 343/;"	field
LESS	$SOKOL/gfx.zig	/LESS/;"	field
LESS_EQUAL	$SOKOL/gfx.zig	/LESS_EQUAL/;"	field
LINEAR	$SOKOL/gfx.zig	/LINEAR/;"	field
LINES	$SOKOL/gfx.zig	/LINES/;"	field
LINE_STRIP	$SOKOL/gfx.zig	/LINE_STRIP/;"	field
LINUX_EGL_BIND_OPENGL_API_FAILED	$SOKOL/app.zig	/LINUX_EGL_BIND_OPENGL_API_FAILED/;"	field
LINUX_EGL_BIND_OPENGL_ES_API_FAILED	$SOKOL/app.zig	/LINUX_EGL_BIND_OPENGL_ES_API_FAILED/;"	field
LINUX_EGL_CREATE_CONTEXT_FAILED	$SOKOL/app.zig	/LINUX_EGL_CREATE_CONTEXT_FAILED/;"	field
LINUX_EGL_CREATE_WINDOW_SURFACE_FAILED	$SOKOL/app.zig	/LINUX_EGL_CREATE_WINDOW_SURFACE_FAILED/;"	field
LINUX_EGL_GET_DISPLAY_FAILED	$SOKOL/app.zig	/LINUX_EGL_GET_DISPLAY_FAILED/;"	field
LINUX_EGL_GET_VISUAL_INFO_FAILED	$SOKOL/app.zig	/LINUX_EGL_GET_VISUAL_INFO_FAILED/;"	field
LINUX_EGL_INITIALIZE_FAILED	$SOKOL/app.zig	/LINUX_EGL_INITIALIZE_FAILED/;"	field
LINUX_EGL_MAKE_CURRENT_FAILED	$SOKOL/app.zig	/LINUX_EGL_MAKE_CURRENT_FAILED/;"	field
LINUX_EGL_NO_CONFIGS	$SOKOL/app.zig	/LINUX_EGL_NO_CONFIGS/;"	field
LINUX_EGL_NO_NATIVE_VISUAL	$SOKOL/app.zig	/LINUX_EGL_NO_NATIVE_VISUAL/;"	field
LINUX_GLX_CREATE_CONTEXT_FAILED	$SOKOL/app.zig	/LINUX_GLX_CREATE_CONTEXT_FAILED/;"	field
LINUX_GLX_CREATE_WINDOW_FAILED	$SOKOL/app.zig	/LINUX_GLX_CREATE_WINDOW_FAILED/;"	field
LINUX_GLX_EXTENSION_NOT_FOUND	$SOKOL/app.zig	/LINUX_GLX_EXTENSION_NOT_FOUND/;"	field
LINUX_GLX_GET_VISUAL_FROM_FBCONFIG_FAILED	$SOKOL/app.zig	/LINUX_GLX_GET_VISUAL_FROM_FBCONFIG_FAILED/;"	field
LINUX_GLX_LOAD_ENTRY_POINTS_FAILED	$SOKOL/app.zig	/LINUX_GLX_LOAD_ENTRY_POINTS_FAILED/;"	field
LINUX_GLX_LOAD_LIBGL_FAILED	$SOKOL/app.zig	/LINUX_GLX_LOAD_LIBGL_FAILED/;"	field
LINUX_GLX_NO_GLXFBCONFIGS	$SOKOL/app.zig	/LINUX_GLX_NO_GLXFBCONFIGS/;"	field
LINUX_GLX_NO_SUITABLE_GLXFBCONFIG	$SOKOL/app.zig	/LINUX_GLX_NO_SUITABLE_GLXFBCONFIG/;"	field
LINUX_GLX_QUERY_VERSION_FAILED	$SOKOL/app.zig	/LINUX_GLX_QUERY_VERSION_FAILED/;"	field
LINUX_GLX_REQUIRED_EXTENSIONS_MISSING	$SOKOL/app.zig	/LINUX_GLX_REQUIRED_EXTENSIONS_MISSING/;"	field
LINUX_GLX_VERSION_TOO_LOW	$SOKOL/app.zig	/LINUX_GLX_VERSION_TOO_LOW/;"	field
LINUX_X11_CREATE_WINDOW_FAILED	$SOKOL/app.zig	/LINUX_X11_CREATE_WINDOW_FAILED/;"	field
LINUX_X11_DROPPED_FILE_URI_WRONG_SCHEME	$SOKOL/app.zig	/LINUX_X11_DROPPED_FILE_URI_WRONG_SCHEME/;"	field
LINUX_X11_OPEN_DISPLAY_FAILED	$SOKOL/app.zig	/LINUX_X11_OPEN_DISPLAY_FAILED/;"	field
LINUX_X11_QUERY_SYSTEM_DPI_FAILED	$SOKOL/app.zig	/LINUX_X11_QUERY_SYSTEM_DPI_FAILED/;"	field
LOAD	$SOKOL/gfx.zig	/LOAD/;"	field
Limits	$SOKOL/gfx.zig	/^pub const Limits = extern struct {$/;"	struct
LoadAction	$SOKOL/gfx.zig	/^pub const LoadAction = enum(i32) {$/;"	enum
LogItem	$SOKOL/app.zig	/^pub const LogItem = enum(i32) {$/;"	enum
LogItem	$SOKOL/audio.zig	/^pub const LogItem = enum(i32) {$/;"	enum
LogItem	$SOKOL/debugtext.zig	/^pub const LogItem = enum(i32) {$/;"	enum
LogItem	$SOKOL/gfx.zig	/^pub const LogItem = enum(i32) {$/;"	enum
LogItem	$SOKOL/gl.zig	/^pub const LogItem = enum(i32) {$/;"	enum
Logger	$SOKOL/app.zig	/^pub const Logger = extern struct {$/;"	struct
Logger	$SOKOL/audio.zig	/^pub const Logger = extern struct {$/;"	struct
Logger	$SOKOL/debugtext.zig	/^pub const Logger = extern struct {$/;"	struct
Logger	$SOKOL/gfx.zig	/^pub const Logger = extern struct {$/;"	struct
Logger	$SOKOL/gl.zig	/^pub const Logger = extern struct {$/;"	struct
MACOS_INVALID_NSOPENGL_PROFILE	$SOKOL/app.zig	/MACOS_INVALID_NSOPENGL_PROFILE/;"	field
MAKE_PIPELINE_FAILED	$SOKOL/gl.zig	/MAKE_PIPELINE_FAILED/;"	field
MALLOC_FAILED	$SOKOL/app.zig	/MALLOC_FAILED/;"	field
MALLOC_FAILED	$SOKOL/audio.zig	/MALLOC_FAILED/;"	field
MALLOC_FAILED	$SOKOL/debugtext.zig	/MALLOC_FAILED/;"	field
MALLOC_FAILED	$SOKOL/gfx.zig	/MALLOC_FAILED/;"	field
MALLOC_FAILED	$SOKOL/gl.zig	/MALLOC_FAILED/;"	field
MAT4	$SOKOL/gfx.zig	/MAT4/;"	field
MENU	$SOKOL/app.zig	/MENU = 348/;"	field
METAL_CREATE_BUFFER_FAILED	$SOKOL/gfx.zig	/METAL_CREATE_BUFFER_FAILED/;"	field
METAL_CREATE_DSS_FAILED	$SOKOL/gfx.zig	/METAL_CREATE_DSS_FAILED/;"	field
METAL_CREATE_RPS_FAILED	$SOKOL/gfx.zig	/METAL_CREATE_RPS_FAILED/;"	field
METAL_CREATE_RPS_OUTPUT	$SOKOL/gfx.zig	/METAL_CREATE_RPS_OUTPUT/;"	field
METAL_CREATE_SAMPLER_FAILED	$SOKOL/gfx.zig	/METAL_CREATE_SAMPLER_FAILED/;"	field
METAL_CREATE_TEXTURE_FAILED	$SOKOL/gfx.zig	/METAL_CREATE_TEXTURE_FAILED/;"	field
METAL_FRAGMENT_SHADER_ENTRY_NOT_FOUND	$SOKOL/gfx.zig	/METAL_FRAGMENT_SHADER_ENTRY_NOT_FOUND/;"	field
METAL_IOS	$SOKOL/gfx.zig	/METAL_IOS/;"	field
METAL_MACOS	$SOKOL/gfx.zig	/METAL_MACOS/;"	field
METAL_SHADER_COMPILATION_FAILED	$SOKOL/gfx.zig	/METAL_SHADER_COMPILATION_FAILED/;"	field
METAL_SHADER_COMPILATION_OUTPUT	$SOKOL/gfx.zig	/METAL_SHADER_COMPILATION_OUTPUT/;"	field
METAL_SHADER_CREATION_FAILED	$SOKOL/gfx.zig	/METAL_SHADER_CREATION_FAILED/;"	field
METAL_SIMULATOR	$SOKOL/gfx.zig	/METAL_SIMULATOR/;"	field
METAL_TEXTURE_FORMAT_NOT_SUPPORTED	$SOKOL/gfx.zig	/METAL_TEXTURE_FORMAT_NOT_SUPPORTED/;"	field
METAL_VERTEX_SHADER_ENTRY_NOT_FOUND	$SOKOL/gfx.zig	/METAL_VERTEX_SHADER_ENTRY_NOT_FOUND/;"	field
MIDDLE	$SOKOL/app.zig	/MIDDLE = 2/;"	field
MINUS	$SOKOL/app.zig	/MINUS = 45/;"	field
MIRRORED_REPEAT	$SOKOL/gfx.zig	/MIRRORED_REPEAT/;"	field
MOUSE	$SOKOL/app.zig	/MOUSE = 3/;"	field
MOUSE_DOWN	$SOKOL/app.zig	/MOUSE_DOWN/;"	field
MOUSE_ENTER	$SOKOL/app.zig	/MOUSE_ENTER/;"	field
MOUSE_LEAVE	$SOKOL/app.zig	/MOUSE_LEAVE/;"	field
MOUSE_MOVE	$SOKOL/app.zig	/MOUSE_MOVE/;"	field
MOUSE_SCROLL	$SOKOL/app.zig	/MOUSE_SCROLL/;"	field
MOUSE_UP	$SOKOL/app.zig	/MOUSE_UP/;"	field
Mat4	$SOKOL/shape.zig	/^pub const Mat4 = extern struct {$/;"	struct
MetalContextDesc	$SOKOL/gfx.zig	/^pub const MetalContextDesc = extern struct {$/;"	struct
MouseCursor	$SOKOL/app.zig	/^pub const MouseCursor = enum(i32) {$/;"	enum
Mousebutton	$SOKOL/app.zig	/^pub const Mousebutton = enum(i32) {$/;"	enum
MtlBufferInfo	$SOKOL/gfx.zig	/^pub const MtlBufferInfo = extern struct {$/;"	struct
MtlImageInfo	$SOKOL/gfx.zig	/^pub const MtlImageInfo = extern struct {$/;"	struct
MtlPipelineInfo	$SOKOL/gfx.zig	/^pub const MtlPipelineInfo = extern struct {$/;"	struct
MtlSamplerInfo	$SOKOL/gfx.zig	/^pub const MtlSamplerInfo = extern struct {$/;"	struct
MtlShaderInfo	$SOKOL/gfx.zig	/^pub const MtlShaderInfo = extern struct {$/;"	struct
NATIVE	$SOKOL/gfx.zig	/NATIVE/;"	field
NEAREST	$SOKOL/gfx.zig	/NEAREST/;"	field
NEG_X	$SOKOL/gfx.zig	/NEG_X/;"	field
NEG_Y	$SOKOL/gfx.zig	/NEG_Y/;"	field
NEG_Z	$SOKOL/gfx.zig	/NEG_Z/;"	field
NEVER	$SOKOL/gfx.zig	/NEVER/;"	field
NONE	$SOKOL/gfx.zig	/NONE = 16/;"	field
NONFILTERING	$SOKOL/gfx.zig	/NONFILTERING/;"	field
NOT_ALLOWED	$SOKOL/app.zig	/NOT_ALLOWED/;"	field
NOT_EQUAL	$SOKOL/gfx.zig	/NOT_EQUAL/;"	field
NO_CONTEXT	$SOKOL/gl.zig	/NO_CONTEXT/;"	field
NO_ERROR	$SOKOL/gl.zig	/NO_ERROR = 0/;"	field
NUM	$SOKOL/app.zig	/NUM/;"	field
NUM	$SOKOL/gfx.zig	/NUM/;"	field
NUM_LOCK	$SOKOL/app.zig	/NUM_LOCK = 282/;"	field
ONE	$SOKOL/gfx.zig	/ONE/;"	field
ONE_MINUS_BLEND_ALPHA	$SOKOL/gfx.zig	/ONE_MINUS_BLEND_ALPHA/;"	field
ONE_MINUS_BLEND_COLOR	$SOKOL/gfx.zig	/ONE_MINUS_BLEND_COLOR/;"	field
ONE_MINUS_DST_ALPHA	$SOKOL/gfx.zig	/ONE_MINUS_DST_ALPHA/;"	field
ONE_MINUS_DST_COLOR	$SOKOL/gfx.zig	/ONE_MINUS_DST_COLOR/;"	field
ONE_MINUS_SRC_ALPHA	$SOKOL/gfx.zig	/ONE_MINUS_SRC_ALPHA/;"	field
ONE_MINUS_SRC_COLOR	$SOKOL/gfx.zig	/ONE_MINUS_SRC_COLOR/;"	field
OPAQUE_BLACK	$SOKOL/gfx.zig	/OPAQUE_BLACK/;"	field
OPAQUE_WHITE	$SOKOL/gfx.zig	/OPAQUE_WHITE/;"	field
PAGE_DOWN	$SOKOL/app.zig	/PAGE_DOWN = 267/;"	field
PAGE_UP	$SOKOL/app.zig	/PAGE_UP = 266/;"	field
PASS_POOL_EXHAUSTED	$SOKOL/gfx.zig	/PASS_POOL_EXHAUSTED/;"	field
PAUSE	$SOKOL/app.zig	/PAUSE = 284/;"	field
PERIOD	$SOKOL/app.zig	/PERIOD = 46/;"	field
PER_INSTANCE	$SOKOL/gfx.zig	/PER_INSTANCE/;"	field
PER_VERTEX	$SOKOL/gfx.zig	/PER_VERTEX/;"	field
PIPELINE_POOL_EXHAUSTED	$SOKOL/gfx.zig	/PIPELINE_POOL_EXHAUSTED/;"	field
PIPELINE_POOL_EXHAUSTED	$SOKOL/gl.zig	/PIPELINE_POOL_EXHAUSTED/;"	field
POINTING_HAND	$SOKOL/app.zig	/POINTING_HAND/;"	field
POINTS	$SOKOL/gfx.zig	/POINTS/;"	field
POS_X	$SOKOL/gfx.zig	/POS_X/;"	field
POS_Y	$SOKOL/gfx.zig	/POS_Y/;"	field
POS_Z	$SOKOL/gfx.zig	/POS_Z/;"	field
PRINT_SCREEN	$SOKOL/app.zig	/PRINT_SCREEN = 283/;"	field
PVRTC_RGBA_2BPP	$SOKOL/gfx.zig	/PVRTC_RGBA_2BPP/;"	field
PVRTC_RGBA_4BPP	$SOKOL/gfx.zig	/PVRTC_RGBA_4BPP/;"	field
PVRTC_RGB_2BPP	$SOKOL/gfx.zig	/PVRTC_RGB_2BPP/;"	field
PVRTC_RGB_4BPP	$SOKOL/gfx.zig	/PVRTC_RGB_4BPP/;"	field
Pass	$SOKOL/gfx.zig	/^pub const Pass = extern struct {$/;"	struct
PassAction	$SOKOL/gfx.zig	/^pub const PassAction = extern struct {$/;"	struct
PassAttachmentDesc	$SOKOL/gfx.zig	/^pub const PassAttachmentDesc = extern struct {$/;"	struct
PassDesc	$SOKOL/gfx.zig	/^pub const PassDesc = extern struct {$/;"	struct
PassInfo	$SOKOL/gfx.zig	/^pub const PassInfo = extern struct {$/;"	struct
Pipeline	$SOKOL/gfx.zig	/^pub const Pipeline = extern struct {$/;"	struct
Pipeline	$SOKOL/gl.zig	/^pub const Pipeline = extern struct {$/;"	struct
PipelineDesc	$SOKOL/gfx.zig	/^pub const PipelineDesc = extern struct {$/;"	struct
PipelineInfo	$SOKOL/gfx.zig	/^pub const PipelineInfo = extern struct {$/;"	struct
PixelFormat	$SOKOL/gfx.zig	/^pub const PixelFormat = enum(i32) {$/;"	enum
PixelformatInfo	$SOKOL/gfx.zig	/^pub const PixelformatInfo = extern struct {$/;"	struct
Plane	$SOKOL/shape.zig	/^pub const Plane = extern struct {$/;"	struct
PrimitiveType	$SOKOL/gfx.zig	/^pub const PrimitiveType = enum(i32) {$/;"	enum
QUIT_REQUESTED	$SOKOL/app.zig	/QUIT_REQUESTED/;"	field
R16	$SOKOL/gfx.zig	/R16/;"	field
R16F	$SOKOL/gfx.zig	/R16F/;"	field
R16SI	$SOKOL/gfx.zig	/R16SI/;"	field
R16SN	$SOKOL/gfx.zig	/R16SN/;"	field
R16UI	$SOKOL/gfx.zig	/R16UI/;"	field
R32F	$SOKOL/gfx.zig	/R32F/;"	field
R32SI	$SOKOL/gfx.zig	/R32SI/;"	field
R32UI	$SOKOL/gfx.zig	/R32UI/;"	field
R8SI	$SOKOL/gfx.zig	/R8SI/;"	field
R8SN	$SOKOL/gfx.zig	/R8SN/;"	field
R8UI	$SOKOL/gfx.zig	/R8UI/;"	field
RBA	$SOKOL/gfx.zig	/RBA = 13/;"	field
REPEAT	$SOKOL/gfx.zig	/REPEAT/;"	field
REPLACE	$SOKOL/gfx.zig	/REPLACE/;"	field
RESIZED	$SOKOL/app.zig	/RESIZED/;"	field
RESIZE_ALL	$SOKOL/app.zig	/RESIZE_ALL/;"	field
RESIZE_EW	$SOKOL/app.zig	/RESIZE_EW/;"	field
RESIZE_NESW	$SOKOL/app.zig	/RESIZE_NESW/;"	field
RESIZE_NS	$SOKOL/app.zig	/RESIZE_NS/;"	field
RESIZE_NWSE	$SOKOL/app.zig	/RESIZE_NWSE/;"	field
RESTORED	$SOKOL/app.zig	/RESTORED/;"	field
RESUMED	$SOKOL/app.zig	/RESUMED/;"	field
REVERSE_SUBTRACT	$SOKOL/gfx.zig	/REVERSE_SUBTRACT/;"	field
RG11B10F	$SOKOL/gfx.zig	/RG11B10F/;"	field
RG16	$SOKOL/gfx.zig	/RG16/;"	field
RG16F	$SOKOL/gfx.zig	/RG16F/;"	field
RG16SI	$SOKOL/gfx.zig	/RG16SI/;"	field
RG16SN	$SOKOL/gfx.zig	/RG16SN/;"	field
RG16UI	$SOKOL/gfx.zig	/RG16UI/;"	field
RG32F	$SOKOL/gfx.zig	/RG32F/;"	field
RG32SI	$SOKOL/gfx.zig	/RG32SI/;"	field
RG32UI	$SOKOL/gfx.zig	/RG32UI/;"	field
RG8	$SOKOL/gfx.zig	/RG8/;"	field
RG8SI	$SOKOL/gfx.zig	/RG8SI/;"	field
RG8SN	$SOKOL/gfx.zig	/RG8SN/;"	field
RG8UI	$SOKOL/gfx.zig	/RG8UI/;"	field
RGA	$SOKOL/gfx.zig	/RGA = 11/;"	field
RGB	$SOKOL/gfx.zig	/RGB = 7/;"	field
RGB10A2	$SOKOL/gfx.zig	/RGB10A2/;"	field
RGB9E5	$SOKOL/gfx.zig	/RGB9E5/;"	field
RGBA	$SOKOL/gfx.zig	/RGBA = 15/;"	field
RGBA16	$SOKOL/gfx.zig	/RGBA16/;"	field
RGBA16F	$SOKOL/gfx.zig	/RGBA16F/;"	field
RGBA16SI	$SOKOL/gfx.zig	/RGBA16SI/;"	field
RGBA16SN	$SOKOL/gfx.zig	/RGBA16SN/;"	field
RGBA16UI	$SOKOL/gfx.zig	/RGBA16UI/;"	field
RGBA32F	$SOKOL/gfx.zig	/RGBA32F/;"	field
RGBA32SI	$SOKOL/gfx.zig	/RGBA32SI/;"	field
RGBA32UI	$SOKOL/gfx.zig	/RGBA32UI/;"	field
RGBA8	$SOKOL/gfx.zig	/RGBA8/;"	field
RGBA8SI	$SOKOL/gfx.zig	/RGBA8SI/;"	field
RGBA8SN	$SOKOL/gfx.zig	/RGBA8SN/;"	field
RGBA8UI	$SOKOL/gfx.zig	/RGBA8UI/;"	field
RIGHT	$SOKOL/app.zig	/RIGHT = 262/;"	field
RIGHT_ALT	$SOKOL/app.zig	/RIGHT_ALT = 346/;"	field
RIGHT_BRACKET	$SOKOL/app.zig	/RIGHT_BRACKET = 93/;"	field
RIGHT_CONTROL	$SOKOL/app.zig	/RIGHT_CONTROL = 345/;"	field
RIGHT_SHIFT	$SOKOL/app.zig	/RIGHT_SHIFT = 344/;"	field
RIGHT_SUPER	$SOKOL/app.zig	/RIGHT_SUPER = 347/;"	field
Range	$SOKOL/app.zig	/^pub const Range = extern struct {$/;"	struct
Range	$SOKOL/debugtext.zig	/^pub const Range = extern struct {$/;"	struct
Range	$SOKOL/gfx.zig	/^pub const Range = extern struct {$/;"	struct
Range	$SOKOL/shape.zig	/^pub const Range = extern struct {$/;"	struct
ResourceState	$SOKOL/gfx.zig	/^pub const ResourceState = enum(i32) {$/;"	enum
SAMPLER_POOL_EXHAUSTED	$SOKOL/gfx.zig	/SAMPLER_POOL_EXHAUSTED/;"	field
SCROLL_LOCK	$SOKOL/app.zig	/SCROLL_LOCK = 281/;"	field
SEMICOLON	$SOKOL/app.zig	/SEMICOLON = 59/;"	field
SHADER_POOL_EXHAUSTED	$SOKOL/gfx.zig	/SHADER_POOL_EXHAUSTED/;"	field
SHORT2	$SOKOL/gfx.zig	/SHORT2/;"	field
SHORT2N	$SOKOL/gfx.zig	/SHORT2N/;"	field
SHORT4	$SOKOL/gfx.zig	/SHORT4/;"	field
SHORT4N	$SOKOL/gfx.zig	/SHORT4N/;"	field
SINT	$SOKOL/gfx.zig	/SINT/;"	field
SLASH	$SOKOL/app.zig	/SLASH = 47/;"	field
SLES_CREATE_ENGINE_FAILED	$SOKOL/audio.zig	/SLES_CREATE_ENGINE_FAILED/;"	field
SLES_CREATE_OUTPUT_MIX_FAILED	$SOKOL/audio.zig	/SLES_CREATE_OUTPUT_MIX_FAILED/;"	field
SLES_ENGINE_CREATE_AUDIO_PLAYER_FAILED	$SOKOL/audio.zig	/SLES_ENGINE_CREATE_AUDIO_PLAYER_FAILED/;"	field
SLES_ENGINE_GET_ENGINE_INTERFACE_FAILED	$SOKOL/audio.zig	/SLES_ENGINE_GET_ENGINE_INTERFACE_FAILED/;"	field
SLES_MIXER_GET_VOLUME_INTERFACE_FAILED	$SOKOL/audio.zig	/SLES_MIXER_GET_VOLUME_INTERFACE_FAILED/;"	field
SLES_PLAYER_GET_BUFFERQUEUE_INTERFACE_FAILED	$SOKOL/audio.zig	/SLES_PLAYER_GET_BUFFERQUEUE_INTERFACE_FAILED/;"	field
SLES_PLAYER_GET_PLAY_INTERFACE_FAILED	$SOKOL/audio.zig	/SLES_PLAYER_GET_PLAY_INTERFACE_FAILED/;"	field
SLES_PLAYER_GET_VOLUME_INTERFACE_FAILED	$SOKOL/audio.zig	/SLES_PLAYER_GET_VOLUME_INTERFACE_FAILED/;"	field
SPACE	$SOKOL/app.zig	/SPACE = 32/;"	field
SRC_ALPHA	$SOKOL/gfx.zig	/SRC_ALPHA/;"	field
SRC_ALPHA_SATURATED	$SOKOL/gfx.zig	/SRC_ALPHA_SATURATED/;"	field
SRC_COLOR	$SOKOL/gfx.zig	/SRC_COLOR/;"	field
SRGB8A8	$SOKOL/gfx.zig	/SRGB8A8/;"	field
STACK_OVERFLOW	$SOKOL/gl.zig	/STACK_OVERFLOW/;"	field
STACK_UNDERFLOW	$SOKOL/gl.zig	/STACK_UNDERFLOW/;"	field
STD140	$SOKOL/gfx.zig	/STD140/;"	field
STORE	$SOKOL/gfx.zig	/STORE/;"	field
STREAM	$SOKOL/gfx.zig	/STREAM/;"	field
STYLUS	$SOKOL/app.zig	/STYLUS = 2/;"	field
SUBTRACT	$SOKOL/gfx.zig	/SUBTRACT/;"	field
SUSPENDED	$SOKOL/app.zig	/SUSPENDED/;"	field
Sampler	$SOKOL/gfx.zig	/^pub const Sampler = extern struct {$/;"	struct
SamplerDesc	$SOKOL/gfx.zig	/^pub const SamplerDesc = extern struct {$/;"	struct
SamplerInfo	$SOKOL/gfx.zig	/^pub const SamplerInfo = extern struct {$/;"	struct
SamplerType	$SOKOL/gfx.zig	/^pub const SamplerType = enum(i32) {$/;"	enum
Shader	$SOKOL/gfx.zig	/^pub const Shader = extern struct {$/;"	struct
ShaderAttrDesc	$SOKOL/gfx.zig	/^pub const ShaderAttrDesc = extern struct {$/;"	struct
ShaderDesc	$SOKOL/gfx.zig	/^pub const ShaderDesc = extern struct {$/;"	struct
ShaderImageDesc	$SOKOL/gfx.zig	/^pub const ShaderImageDesc = extern struct {$/;"	struct
ShaderImageSamplerPairDesc	$SOKOL/gfx.zig	/^pub const ShaderImageSamplerPairDesc = extern struct {$/;"	struct
ShaderInfo	$SOKOL/gfx.zig	/^pub const ShaderInfo = extern struct {$/;"	struct
ShaderSamplerDesc	$SOKOL/gfx.zig	/^pub const ShaderSamplerDesc = extern struct {$/;"	struct
ShaderStage	$SOKOL/gfx.zig	/^pub const ShaderStage = enum(i32) {$/;"	enum
ShaderStageDesc	$SOKOL/gfx.zig	/^pub const ShaderStageDesc = extern struct {$/;"	struct
ShaderUniformBlockDesc	$SOKOL/gfx.zig	/^pub const ShaderUniformBlockDesc = extern struct {$/;"	struct
ShaderUniformDesc	$SOKOL/gfx.zig	/^pub const ShaderUniformDesc = extern struct {$/;"	struct
Sizes	$SOKOL/shape.zig	/^pub const Sizes = extern struct {$/;"	struct
SizesItem	$SOKOL/shape.zig	/^pub const SizesItem = extern struct {$/;"	struct
SlotInfo	$SOKOL/gfx.zig	/^pub const SlotInfo = extern struct {$/;"	struct
Sphere	$SOKOL/shape.zig	/^pub const Sphere = extern struct {$/;"	struct
StageBindings	$SOKOL/gfx.zig	/^pub const StageBindings = extern struct {$/;"	struct
StencilAttachmentAction	$SOKOL/gfx.zig	/^pub const StencilAttachmentAction = extern struct {$/;"	struct
StencilFaceState	$SOKOL/gfx.zig	/^pub const StencilFaceState = extern struct {$/;"	struct
StencilOp	$SOKOL/gfx.zig	/^pub const StencilOp = enum(i32) {$/;"	enum
StencilState	$SOKOL/gfx.zig	/^pub const StencilState = extern struct {$/;"	struct
StoreAction	$SOKOL/gfx.zig	/^pub const StoreAction = enum(i32) {$/;"	enum
TAB	$SOKOL/app.zig	/TAB = 258/;"	field
TOUCHES_BEGAN	$SOKOL/app.zig	/TOUCHES_BEGAN/;"	field
TOUCHES_CANCELLED	$SOKOL/app.zig	/TOUCHES_CANCELLED/;"	field
TOUCHES_ENDED	$SOKOL/app.zig	/TOUCHES_ENDED/;"	field
TOUCHES_MOVED	$SOKOL/app.zig	/TOUCHES_MOVED/;"	field
TRACE_HOOKS_NOT_ENABLED	$SOKOL/gfx.zig	/TRACE_HOOKS_NOT_ENABLED/;"	field
TRANSPARENT_BLACK	$SOKOL/gfx.zig	/TRANSPARENT_BLACK/;"	field
TRIANGLES	$SOKOL/gfx.zig	/TRIANGLES/;"	field
TRIANGLE_STRIP	$SOKOL/gfx.zig	/TRIANGLE_STRIP/;"	field
Torus	$SOKOL/shape.zig	/^pub const Torus = extern struct {$/;"	struct
Touchpoint	$SOKOL/app.zig	/^pub const Touchpoint = extern struct {$/;"	struct
UBYTE4	$SOKOL/gfx.zig	/UBYTE4/;"	field
UBYTE4N	$SOKOL/gfx.zig	/UBYTE4N/;"	field
UINT	$SOKOL/gfx.zig	/UINT/;"	field
UINT10_N2	$SOKOL/gfx.zig	/UINT10_N2/;"	field
UINT16	$SOKOL/gfx.zig	/UINT16/;"	field
UINT32	$SOKOL/gfx.zig	/UINT32/;"	field
UNFILTERABLE_FLOAT	$SOKOL/gfx.zig	/UNFILTERABLE_FLOAT/;"	field
UNFOCUSED	$SOKOL/app.zig	/UNFOCUSED/;"	field
UNIFORMS_FULL	$SOKOL/gl.zig	/UNIFORMS_FULL/;"	field
UNINIT_BUFFER_ACTIVE_CONTEXT_MISMATCH	$SOKOL/gfx.zig	/UNINIT_BUFFER_ACTIVE_CONTEXT_MISMATCH/;"	field
UNINIT_BUFFER_INVALID_STATE	$SOKOL/gfx.zig	/UNINIT_BUFFER_INVALID_STATE/;"	field
UNINIT_IMAGE_ACTIVE_CONTEXT_MISMATCH	$SOKOL/gfx.zig	/UNINIT_IMAGE_ACTIVE_CONTEXT_MISMATCH/;"	field
UNINIT_IMAGE_INVALID_STATE	$SOKOL/gfx.zig	/UNINIT_IMAGE_INVALID_STATE/;"	field
UNINIT_PASS_ACTIVE_CONTEXT_MISMATCH	$SOKOL/gfx.zig	/UNINIT_PASS_ACTIVE_CONTEXT_MISMATCH/;"	field
UNINIT_PASS_INVALID_STATE	$SOKOL/gfx.zig	/UNINIT_PASS_INVALID_STATE/;"	field
UNINIT_PIPELINE_ACTIVE_CONTEXT_MISMATCH	$SOKOL/gfx.zig	/UNINIT_PIPELINE_ACTIVE_CONTEXT_MISMATCH/;"	field
UNINIT_PIPELINE_INVALID_STATE	$SOKOL/gfx.zig	/UNINIT_PIPELINE_INVALID_STATE/;"	field
UNINIT_SAMPLER_ACTIVE_CONTEXT_MISMATCH	$SOKOL/gfx.zig	/UNINIT_SAMPLER_ACTIVE_CONTEXT_MISMATCH/;"	field
UNINIT_SAMPLER_INVALID_STATE	$SOKOL/gfx.zig	/UNINIT_SAMPLER_INVALID_STATE/;"	field
UNINIT_SHADER_ACTIVE_CONTEXT_MISMATCH	$SOKOL/gfx.zig	/UNINIT_SHADER_ACTIVE_CONTEXT_MISMATCH/;"	field
UNINIT_SHADER_INVALID_STATE	$SOKOL/gfx.zig	/UNINIT_SHADER_INVALID_STATE/;"	field
UNKNOWN	$SOKOL/app.zig	/UNKNOWN = 0/;"	field
USHORT2N	$SOKOL/gfx.zig	/USHORT2N/;"	field
USHORT4N	$SOKOL/gfx.zig	/USHORT4N/;"	field
USING_AAUDIO_BACKEND	$SOKOL/audio.zig	/USING_AAUDIO_BACKEND/;"	field
USING_SLES_BACKEND	$SOKOL/audio.zig	/USING_SLES_BACKEND/;"	field
UniformLayout	$SOKOL/gfx.zig	/^pub const UniformLayout = enum(i32) {$/;"	enum
UniformType	$SOKOL/gfx.zig	/^pub const UniformType = enum(i32) {$/;"	enum
Usage	$SOKOL/gfx.zig	/^pub const Usage = enum(i32) {$/;"	enum
VALID	$SOKOL/gfx.zig	/VALID/;"	field
VALIDATE_ABND_FS_EXPECTED_DEPTH_IMAGE	$SOKOL/gfx.zig	/VALIDATE_ABND_FS_EXPECTED_DEPTH_IMAGE/;"	field
VALIDATE_ABND_FS_EXPECTED_FILTERABLE_IMAGE	$SOKOL/gfx.zig	/VALIDATE_ABND_FS_EXPECTED_FILTERABLE_IMAGE/;"	field
VALIDATE_ABND_FS_EXPECTED_IMAGE_BINDING	$SOKOL/gfx.zig	/VALIDATE_ABND_FS_EXPECTED_IMAGE_BINDING/;"	field
VALIDATE_ABND_FS_EXPECTED_NONFILTERING_SAMPLER	$SOKOL/gfx.zig	/VALIDATE_ABND_FS_EXPECTED_NONFILTERING_SAMPLER/;"	field
VALIDATE_ABND_FS_EXPECTED_SAMPLER_BINDING	$SOKOL/gfx.zig	/VALIDATE_ABND_FS_EXPECTED_SAMPLER_BINDING/;"	field
VALIDATE_ABND_FS_EXPECTED_SAMPLER_COMPARE_NEVER	$SOKOL/gfx.zig	/VALIDATE_ABND_FS_EXPECTED_SAMPLER_COMPARE_NEVER/;"	field
VALIDATE_ABND_FS_IMAGE_MSAA	$SOKOL/gfx.zig	/VALIDATE_ABND_FS_IMAGE_MSAA/;"	field
VALIDATE_ABND_FS_IMAGE_TYPE_MISMATCH	$SOKOL/gfx.zig	/VALIDATE_ABND_FS_IMAGE_TYPE_MISMATCH/;"	field
VALIDATE_ABND_FS_IMG_EXISTS	$SOKOL/gfx.zig	/VALIDATE_ABND_FS_IMG_EXISTS/;"	field
VALIDATE_ABND_FS_SMP_EXISTS	$SOKOL/gfx.zig	/VALIDATE_ABND_FS_SMP_EXISTS/;"	field
VALIDATE_ABND_FS_UNEXPECTED_IMAGE_BINDING	$SOKOL/gfx.zig	/VALIDATE_ABND_FS_UNEXPECTED_IMAGE_BINDING/;"	field
VALIDATE_ABND_FS_UNEXPECTED_SAMPLER_BINDING	$SOKOL/gfx.zig	/VALIDATE_ABND_FS_UNEXPECTED_SAMPLER_BINDING/;"	field
VALIDATE_ABND_FS_UNEXPECTED_SAMPLER_COMPARE_NEVER	$SOKOL/gfx.zig	/VALIDATE_ABND_FS_UNEXPECTED_SAMPLER_COMPARE_NEVER/;"	field
VALIDATE_ABND_IB	$SOKOL/gfx.zig	/VALIDATE_ABND_IB/;"	field
VALIDATE_ABND_IB_EXISTS	$SOKOL/gfx.zig	/VALIDATE_ABND_IB_EXISTS/;"	field
VALIDATE_ABND_IB_OVERFLOW	$SOKOL/gfx.zig	/VALIDATE_ABND_IB_OVERFLOW/;"	field
VALIDATE_ABND_IB_TYPE	$SOKOL/gfx.zig	/VALIDATE_ABND_IB_TYPE/;"	field
VALIDATE_ABND_NO_IB	$SOKOL/gfx.zig	/VALIDATE_ABND_NO_IB/;"	field
VALIDATE_ABND_PIPELINE	$SOKOL/gfx.zig	/VALIDATE_ABND_PIPELINE/;"	field
VALIDATE_ABND_PIPELINE_EXISTS	$SOKOL/gfx.zig	/VALIDATE_ABND_PIPELINE_EXISTS/;"	field
VALIDATE_ABND_PIPELINE_VALID	$SOKOL/gfx.zig	/VALIDATE_ABND_PIPELINE_VALID/;"	field
VALIDATE_ABND_VBS	$SOKOL/gfx.zig	/VALIDATE_ABND_VBS/;"	field
VALIDATE_ABND_VB_EXISTS	$SOKOL/gfx.zig	/VALIDATE_ABND_VB_EXISTS/;"	field
VALIDATE_ABND_VB_OVERFLOW	$SOKOL/gfx.zig	/VALIDATE_ABND_VB_OVERFLOW/;"	field
VALIDATE_ABND_VB_TYPE	$SOKOL/gfx.zig	/VALIDATE_ABND_VB_TYPE/;"	field
VALIDATE_ABND_VS_EXPECTED_DEPTH_IMAGE	$SOKOL/gfx.zig	/VALIDATE_ABND_VS_EXPECTED_DEPTH_IMAGE/;"	field
VALIDATE_ABND_VS_EXPECTED_FILTERABLE_IMAGE	$SOKOL/gfx.zig	/VALIDATE_ABND_VS_EXPECTED_FILTERABLE_IMAGE/;"	field
VALIDATE_ABND_VS_EXPECTED_IMAGE_BINDING	$SOKOL/gfx.zig	/VALIDATE_ABND_VS_EXPECTED_IMAGE_BINDING/;"	field
VALIDATE_ABND_VS_EXPECTED_NONFILTERING_SAMPLER	$SOKOL/gfx.zig	/VALIDATE_ABND_VS_EXPECTED_NONFILTERING_SAMPLER/;"	field
VALIDATE_ABND_VS_EXPECTED_SAMPLER_BINDING	$SOKOL/gfx.zig	/VALIDATE_ABND_VS_EXPECTED_SAMPLER_BINDING/;"	field
VALIDATE_ABND_VS_EXPECTED_SAMPLER_COMPARE_NEVER	$SOKOL/gfx.zig	/VALIDATE_ABND_VS_EXPECTED_SAMPLER_COMPARE_NEVER/;"	field
VALIDATE_ABND_VS_IMAGE_MSAA	$SOKOL/gfx.zig	/VALIDATE_ABND_VS_IMAGE_MSAA/;"	field
VALIDATE_ABND_VS_IMAGE_TYPE_MISMATCH	$SOKOL/gfx.zig	/VALIDATE_ABND_VS_IMAGE_TYPE_MISMATCH/;"	field
VALIDATE_ABND_VS_IMG_EXISTS	$SOKOL/gfx.zig	/VALIDATE_ABND_VS_IMG_EXISTS/;"	field
VALIDATE_ABND_VS_SMP_EXISTS	$SOKOL/gfx.zig	/VALIDATE_ABND_VS_SMP_EXISTS/;"	field
VALIDATE_ABND_VS_UNEXPECTED_IMAGE_BINDING	$SOKOL/gfx.zig	/VALIDATE_ABND_VS_UNEXPECTED_IMAGE_BINDING/;"	field
VALIDATE_ABND_VS_UNEXPECTED_SAMPLER_BINDING	$SOKOL/gfx.zig	/VALIDATE_ABND_VS_UNEXPECTED_SAMPLER_BINDING/;"	field
VALIDATE_ABND_VS_UNEXPECTED_SAMPLER_COMPARE_NEVER	$SOKOL/gfx.zig	/VALIDATE_ABND_VS_UNEXPECTED_SAMPLER_COMPARE_NEVER/;"	field
VALIDATE_APIP_ATT_COUNT	$SOKOL/gfx.zig	/VALIDATE_APIP_ATT_COUNT/;"	field
VALIDATE_APIP_COLOR_FORMAT	$SOKOL/gfx.zig	/VALIDATE_APIP_COLOR_FORMAT/;"	field
VALIDATE_APIP_DEPTH_FORMAT	$SOKOL/gfx.zig	/VALIDATE_APIP_DEPTH_FORMAT/;"	field
VALIDATE_APIP_PIPELINE_EXISTS	$SOKOL/gfx.zig	/VALIDATE_APIP_PIPELINE_EXISTS/;"	field
VALIDATE_APIP_PIPELINE_VALID	$SOKOL/gfx.zig	/VALIDATE_APIP_PIPELINE_VALID/;"	field
VALIDATE_APIP_PIPELINE_VALID_ID	$SOKOL/gfx.zig	/VALIDATE_APIP_PIPELINE_VALID_ID/;"	field
VALIDATE_APIP_SAMPLE_COUNT	$SOKOL/gfx.zig	/VALIDATE_APIP_SAMPLE_COUNT/;"	field
VALIDATE_APIP_SHADER_EXISTS	$SOKOL/gfx.zig	/VALIDATE_APIP_SHADER_EXISTS/;"	field
VALIDATE_APIP_SHADER_VALID	$SOKOL/gfx.zig	/VALIDATE_APIP_SHADER_VALID/;"	field
VALIDATE_APPENDBUF_SIZE	$SOKOL/gfx.zig	/VALIDATE_APPENDBUF_SIZE/;"	field
VALIDATE_APPENDBUF_UPDATE	$SOKOL/gfx.zig	/VALIDATE_APPENDBUF_UPDATE/;"	field
VALIDATE_APPENDBUF_USAGE	$SOKOL/gfx.zig	/VALIDATE_APPENDBUF_USAGE/;"	field
VALIDATE_AUB_NO_PIPELINE	$SOKOL/gfx.zig	/VALIDATE_AUB_NO_PIPELINE/;"	field
VALIDATE_AUB_NO_UB_AT_SLOT	$SOKOL/gfx.zig	/VALIDATE_AUB_NO_UB_AT_SLOT/;"	field
VALIDATE_AUB_SIZE	$SOKOL/gfx.zig	/VALIDATE_AUB_SIZE/;"	field
VALIDATE_BEGINPASS_COLOR_ATTACHMENT_IMAGE	$SOKOL/gfx.zig	/VALIDATE_BEGINPASS_COLOR_ATTACHMENT_IMAGE/;"	field
VALIDATE_BEGINPASS_DEPTHSTENCIL_ATTACHMENT_IMAGE	$SOKOL/gfx.zig	/VALIDATE_BEGINPASS_DEPTHSTENCIL_ATTACHMENT_IMAGE/;"	field
VALIDATE_BEGINPASS_PASS	$SOKOL/gfx.zig	/VALIDATE_BEGINPASS_PASS/;"	field
VALIDATE_BEGINPASS_RESOLVE_ATTACHMENT_IMAGE	$SOKOL/gfx.zig	/VALIDATE_BEGINPASS_RESOLVE_ATTACHMENT_IMAGE/;"	field
VALIDATE_BUFFERDESC_CANARY	$SOKOL/gfx.zig	/VALIDATE_BUFFERDESC_CANARY/;"	field
VALIDATE_BUFFERDESC_DATA	$SOKOL/gfx.zig	/VALIDATE_BUFFERDESC_DATA/;"	field
VALIDATE_BUFFERDESC_DATA_SIZE	$SOKOL/gfx.zig	/VALIDATE_BUFFERDESC_DATA_SIZE/;"	field
VALIDATE_BUFFERDESC_NO_DATA	$SOKOL/gfx.zig	/VALIDATE_BUFFERDESC_NO_DATA/;"	field
VALIDATE_BUFFERDESC_SIZE	$SOKOL/gfx.zig	/VALIDATE_BUFFERDESC_SIZE/;"	field
VALIDATE_IMAGEDATA_DATA_SIZE	$SOKOL/gfx.zig	/VALIDATE_IMAGEDATA_DATA_SIZE/;"	field
VALIDATE_IMAGEDATA_NODATA	$SOKOL/gfx.zig	/VALIDATE_IMAGEDATA_NODATA/;"	field
VALIDATE_IMAGEDESC_CANARY	$SOKOL/gfx.zig	/VALIDATE_IMAGEDESC_CANARY/;"	field
VALIDATE_IMAGEDESC_COMPRESSED_IMMUTABLE	$SOKOL/gfx.zig	/VALIDATE_IMAGEDESC_COMPRESSED_IMMUTABLE/;"	field
VALIDATE_IMAGEDESC_DEPTH_3D_IMAGE	$SOKOL/gfx.zig	/VALIDATE_IMAGEDESC_DEPTH_3D_IMAGE/;"	field
VALIDATE_IMAGEDESC_DYNAMIC_NO_DATA	$SOKOL/gfx.zig	/VALIDATE_IMAGEDESC_DYNAMIC_NO_DATA/;"	field
VALIDATE_IMAGEDESC_HEIGHT	$SOKOL/gfx.zig	/VALIDATE_IMAGEDESC_HEIGHT/;"	field
VALIDATE_IMAGEDESC_INJECTED_NO_DATA	$SOKOL/gfx.zig	/VALIDATE_IMAGEDESC_INJECTED_NO_DATA/;"	field
VALIDATE_IMAGEDESC_MSAA_3D_IMAGE	$SOKOL/gfx.zig	/VALIDATE_IMAGEDESC_MSAA_3D_IMAGE/;"	field
VALIDATE_IMAGEDESC_MSAA_BUT_NO_RT	$SOKOL/gfx.zig	/VALIDATE_IMAGEDESC_MSAA_BUT_NO_RT/;"	field
VALIDATE_IMAGEDESC_MSAA_NUM_MIPMAPS	$SOKOL/gfx.zig	/VALIDATE_IMAGEDESC_MSAA_NUM_MIPMAPS/;"	field
VALIDATE_IMAGEDESC_NONRT_PIXELFORMAT	$SOKOL/gfx.zig	/VALIDATE_IMAGEDESC_NONRT_PIXELFORMAT/;"	field
VALIDATE_IMAGEDESC_NO_MSAA_RT_SUPPORT	$SOKOL/gfx.zig	/VALIDATE_IMAGEDESC_NO_MSAA_RT_SUPPORT/;"	field
VALIDATE_IMAGEDESC_RT_IMMUTABLE	$SOKOL/gfx.zig	/VALIDATE_IMAGEDESC_RT_IMMUTABLE/;"	field
VALIDATE_IMAGEDESC_RT_NO_DATA	$SOKOL/gfx.zig	/VALIDATE_IMAGEDESC_RT_NO_DATA/;"	field
VALIDATE_IMAGEDESC_RT_PIXELFORMAT	$SOKOL/gfx.zig	/VALIDATE_IMAGEDESC_RT_PIXELFORMAT/;"	field
VALIDATE_IMAGEDESC_WIDTH	$SOKOL/gfx.zig	/VALIDATE_IMAGEDESC_WIDTH/;"	field
VALIDATE_PASSDESC_CANARY	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_CANARY/;"	field
VALIDATE_PASSDESC_COLOR_INV_PIXELFORMAT	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_COLOR_INV_PIXELFORMAT/;"	field
VALIDATE_PASSDESC_DEPTH_FACE	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_DEPTH_FACE/;"	field
VALIDATE_PASSDESC_DEPTH_IMAGE	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_DEPTH_IMAGE/;"	field
VALIDATE_PASSDESC_DEPTH_IMAGE_NO_RT	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_DEPTH_IMAGE_NO_RT/;"	field
VALIDATE_PASSDESC_DEPTH_IMAGE_SAMPLE_COUNT	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_DEPTH_IMAGE_SAMPLE_COUNT/;"	field
VALIDATE_PASSDESC_DEPTH_IMAGE_SIZES	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_DEPTH_IMAGE_SIZES/;"	field
VALIDATE_PASSDESC_DEPTH_INV_PIXELFORMAT	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_DEPTH_INV_PIXELFORMAT/;"	field
VALIDATE_PASSDESC_DEPTH_LAYER	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_DEPTH_LAYER/;"	field
VALIDATE_PASSDESC_DEPTH_MIPLEVEL	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_DEPTH_MIPLEVEL/;"	field
VALIDATE_PASSDESC_DEPTH_SLICE	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_DEPTH_SLICE/;"	field
VALIDATE_PASSDESC_FACE	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_FACE/;"	field
VALIDATE_PASSDESC_IMAGE	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_IMAGE/;"	field
VALIDATE_PASSDESC_IMAGE_NO_RT	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_IMAGE_NO_RT/;"	field
VALIDATE_PASSDESC_IMAGE_SAMPLE_COUNTS	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_IMAGE_SAMPLE_COUNTS/;"	field
VALIDATE_PASSDESC_IMAGE_SIZES	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_IMAGE_SIZES/;"	field
VALIDATE_PASSDESC_LAYER	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_LAYER/;"	field
VALIDATE_PASSDESC_MIPLEVEL	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_MIPLEVEL/;"	field
VALIDATE_PASSDESC_NO_ATTACHMENTS	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_NO_ATTACHMENTS/;"	field
VALIDATE_PASSDESC_NO_CONT_COLOR_ATTS	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_NO_CONT_COLOR_ATTS/;"	field
VALIDATE_PASSDESC_RESOLVE_COLOR_IMAGE_MSAA	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_RESOLVE_COLOR_IMAGE_MSAA/;"	field
VALIDATE_PASSDESC_RESOLVE_FACE	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_RESOLVE_FACE/;"	field
VALIDATE_PASSDESC_RESOLVE_IMAGE	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_RESOLVE_IMAGE/;"	field
VALIDATE_PASSDESC_RESOLVE_IMAGE_FORMAT	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_RESOLVE_IMAGE_FORMAT/;"	field
VALIDATE_PASSDESC_RESOLVE_IMAGE_NO_RT	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_RESOLVE_IMAGE_NO_RT/;"	field
VALIDATE_PASSDESC_RESOLVE_IMAGE_SIZES	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_RESOLVE_IMAGE_SIZES/;"	field
VALIDATE_PASSDESC_RESOLVE_LAYER	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_RESOLVE_LAYER/;"	field
VALIDATE_PASSDESC_RESOLVE_MIPLEVEL	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_RESOLVE_MIPLEVEL/;"	field
VALIDATE_PASSDESC_RESOLVE_SAMPLE_COUNT	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_RESOLVE_SAMPLE_COUNT/;"	field
VALIDATE_PASSDESC_RESOLVE_SLICE	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_RESOLVE_SLICE/;"	field
VALIDATE_PASSDESC_SLICE	$SOKOL/gfx.zig	/VALIDATE_PASSDESC_SLICE/;"	field
VALIDATE_PIPELINEDESC_ATTR_SEMANTICS	$SOKOL/gfx.zig	/VALIDATE_PIPELINEDESC_ATTR_SEMANTICS/;"	field
VALIDATE_PIPELINEDESC_CANARY	$SOKOL/gfx.zig	/VALIDATE_PIPELINEDESC_CANARY/;"	field
VALIDATE_PIPELINEDESC_LAYOUT_STRIDE4	$SOKOL/gfx.zig	/VALIDATE_PIPELINEDESC_LAYOUT_STRIDE4/;"	field
VALIDATE_PIPELINEDESC_NO_ATTRS	$SOKOL/gfx.zig	/VALIDATE_PIPELINEDESC_NO_ATTRS/;"	field
VALIDATE_PIPELINEDESC_SHADER	$SOKOL/gfx.zig	/VALIDATE_PIPELINEDESC_SHADER/;"	field
VALIDATE_SAMPLERDESC_ANISTROPIC_REQUIRES_LINEAR_FILTERING	$SOKOL/gfx.zig	/VALIDATE_SAMPLERDESC_ANISTROPIC_REQUIRES_LINEAR_FILTERING/;"	field
VALIDATE_SAMPLERDESC_CANARY	$SOKOL/gfx.zig	/VALIDATE_SAMPLERDESC_CANARY/;"	field
VALIDATE_SAMPLERDESC_MAGFILTER_NONE	$SOKOL/gfx.zig	/VALIDATE_SAMPLERDESC_MAGFILTER_NONE/;"	field
VALIDATE_SAMPLERDESC_MINFILTER_NONE	$SOKOL/gfx.zig	/VALIDATE_SAMPLERDESC_MINFILTER_NONE/;"	field
VALIDATE_SHADERDESC_ATTR_SEMANTICS	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_ATTR_SEMANTICS/;"	field
VALIDATE_SHADERDESC_ATTR_STRING_TOO_LONG	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_ATTR_STRING_TOO_LONG/;"	field
VALIDATE_SHADERDESC_BYTECODE	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_BYTECODE/;"	field
VALIDATE_SHADERDESC_CANARY	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_CANARY/;"	field
VALIDATE_SHADERDESC_COMPARISON_SAMPLER_REQUIRED	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_COMPARISON_SAMPLER_REQUIRED/;"	field
VALIDATE_SHADERDESC_IMAGE_NOT_REFERENCED_BY_IMAGE_SAMPLER_PAIRS	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_IMAGE_NOT_REFERENCED_BY_IMAGE_SAMPLER_PAIRS/;"	field
VALIDATE_SHADERDESC_IMAGE_SAMPLER_PAIR_HAS_IMAGE_BUT_NOT_USED	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_IMAGE_SAMPLER_PAIR_HAS_IMAGE_BUT_NOT_USED/;"	field
VALIDATE_SHADERDESC_IMAGE_SAMPLER_PAIR_HAS_NAME_BUT_NOT_USED	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_IMAGE_SAMPLER_PAIR_HAS_NAME_BUT_NOT_USED/;"	field
VALIDATE_SHADERDESC_IMAGE_SAMPLER_PAIR_HAS_SAMPLER_BUT_NOT_USED	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_IMAGE_SAMPLER_PAIR_HAS_SAMPLER_BUT_NOT_USED/;"	field
VALIDATE_SHADERDESC_IMAGE_SAMPLER_PAIR_IMAGE_SLOT_OUT_OF_RANGE	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_IMAGE_SAMPLER_PAIR_IMAGE_SLOT_OUT_OF_RANGE/;"	field
VALIDATE_SHADERDESC_IMAGE_SAMPLER_PAIR_NAME_REQUIRED_FOR_GL	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_IMAGE_SAMPLER_PAIR_NAME_REQUIRED_FOR_GL/;"	field
VALIDATE_SHADERDESC_IMAGE_SAMPLER_PAIR_SAMPLER_SLOT_OUT_OF_RANGE	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_IMAGE_SAMPLER_PAIR_SAMPLER_SLOT_OUT_OF_RANGE/;"	field
VALIDATE_SHADERDESC_NONFILTERING_SAMPLER_REQUIRED	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_NONFILTERING_SAMPLER_REQUIRED/;"	field
VALIDATE_SHADERDESC_NO_BYTECODE_SIZE	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_NO_BYTECODE_SIZE/;"	field
VALIDATE_SHADERDESC_NO_CONT_IMAGES	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_NO_CONT_IMAGES/;"	field
VALIDATE_SHADERDESC_NO_CONT_IMAGE_SAMPLER_PAIRS	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_NO_CONT_IMAGE_SAMPLER_PAIRS/;"	field
VALIDATE_SHADERDESC_NO_CONT_SAMPLERS	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_NO_CONT_SAMPLERS/;"	field
VALIDATE_SHADERDESC_NO_CONT_UBS	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_NO_CONT_UBS/;"	field
VALIDATE_SHADERDESC_NO_CONT_UB_MEMBERS	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_NO_CONT_UB_MEMBERS/;"	field
VALIDATE_SHADERDESC_NO_UB_MEMBERS	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_NO_UB_MEMBERS/;"	field
VALIDATE_SHADERDESC_SAMPLER_NOT_REFERENCED_BY_IMAGE_SAMPLER_PAIRS	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_SAMPLER_NOT_REFERENCED_BY_IMAGE_SAMPLER_PAIRS/;"	field
VALIDATE_SHADERDESC_SOURCE	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_SOURCE/;"	field
VALIDATE_SHADERDESC_SOURCE_OR_BYTECODE	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_SOURCE_OR_BYTECODE/;"	field
VALIDATE_SHADERDESC_UB_ARRAY_COUNT	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_UB_ARRAY_COUNT/;"	field
VALIDATE_SHADERDESC_UB_MEMBER_NAME	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_UB_MEMBER_NAME/;"	field
VALIDATE_SHADERDESC_UB_SIZE_MISMATCH	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_UB_SIZE_MISMATCH/;"	field
VALIDATE_SHADERDESC_UB_STD140_ARRAY_TYPE	$SOKOL/gfx.zig	/VALIDATE_SHADERDESC_UB_STD140_ARRAY_TYPE/;"	field
VALIDATE_UPDATEBUF_APPEND	$SOKOL/gfx.zig	/VALIDATE_UPDATEBUF_APPEND/;"	field
VALIDATE_UPDATEBUF_ONCE	$SOKOL/gfx.zig	/VALIDATE_UPDATEBUF_ONCE/;"	field
VALIDATE_UPDATEBUF_SIZE	$SOKOL/gfx.zig	/VALIDATE_UPDATEBUF_SIZE/;"	field
VALIDATE_UPDATEBUF_USAGE	$SOKOL/gfx.zig	/VALIDATE_UPDATEBUF_USAGE/;"	field
VALIDATE_UPDIMG_ONCE	$SOKOL/gfx.zig	/VALIDATE_UPDIMG_ONCE/;"	field
VALIDATE_UPDIMG_USAGE	$SOKOL/gfx.zig	/VALIDATE_UPDIMG_USAGE/;"	field
VALIDATION_FAILED	$SOKOL/gfx.zig	/VALIDATION_FAILED/;"	field
VERTEXBUFFER	$SOKOL/gfx.zig	/VERTEXBUFFER/;"	field
VERTICES_FULL	$SOKOL/gl.zig	/VERTICES_FULL/;"	field
Vertex	$SOKOL/shape.zig	/^pub const Vertex = extern struct {$/;"	struct
VertexAttrState	$SOKOL/gfx.zig	/^pub const VertexAttrState = extern struct {$/;"	struct
VertexBufferLayoutState	$SOKOL/gfx.zig	/^pub const VertexBufferLayoutState = extern struct {$/;"	struct
VertexFormat	$SOKOL/gfx.zig	/^pub const VertexFormat = enum(i32) {$/;"	enum
VertexLayoutState	$SOKOL/gfx.zig	/^pub const VertexLayoutState = extern struct {$/;"	struct
VertexStep	$SOKOL/gfx.zig	/^pub const VertexStep = enum(i32) {$/;"	enum
WASAPI_AUDIO_CLIENT_GET_BUFFER_SIZE_FAILED	$SOKOL/audio.zig	/WASAPI_AUDIO_CLIENT_GET_BUFFER_SIZE_FAILED/;"	field
WASAPI_AUDIO_CLIENT_GET_SERVICE_FAILED	$SOKOL/audio.zig	/WASAPI_AUDIO_CLIENT_GET_SERVICE_FAILED/;"	field
WASAPI_AUDIO_CLIENT_INITIALIZE_FAILED	$SOKOL/audio.zig	/WASAPI_AUDIO_CLIENT_INITIALIZE_FAILED/;"	field
WASAPI_AUDIO_CLIENT_SET_EVENT_HANDLE_FAILED	$SOKOL/audio.zig	/WASAPI_AUDIO_CLIENT_SET_EVENT_HANDLE_FAILED/;"	field
WASAPI_CREATE_DEVICE_ENUMERATOR_FAILED	$SOKOL/audio.zig	/WASAPI_CREATE_DEVICE_ENUMERATOR_FAILED/;"	field
WASAPI_CREATE_EVENT_FAILED	$SOKOL/audio.zig	/WASAPI_CREATE_EVENT_FAILED/;"	field
WASAPI_CREATE_THREAD_FAILED	$SOKOL/audio.zig	/WASAPI_CREATE_THREAD_FAILED/;"	field
WASAPI_DEVICE_ACTIVATE_FAILED	$SOKOL/audio.zig	/WASAPI_DEVICE_ACTIVATE_FAILED/;"	field
WASAPI_GET_DEFAULT_AUDIO_ENDPOINT_FAILED	$SOKOL/audio.zig	/WASAPI_GET_DEFAULT_AUDIO_ENDPOINT_FAILED/;"	field
WGPU	$SOKOL/gfx.zig	/WGPU/;"	field
WGPU_BINDGROUPSCACHE_SIZE_GREATER_ONE	$SOKOL/gfx.zig	/WGPU_BINDGROUPSCACHE_SIZE_GREATER_ONE/;"	field
WGPU_BINDGROUPSCACHE_SIZE_POW2	$SOKOL/gfx.zig	/WGPU_BINDGROUPSCACHE_SIZE_POW2/;"	field
WGPU_BINDGROUPS_POOL_EXHAUSTED	$SOKOL/gfx.zig	/WGPU_BINDGROUPS_POOL_EXHAUSTED/;"	field
WGPU_CREATEBINDGROUP_FAILED	$SOKOL/gfx.zig	/WGPU_CREATEBINDGROUP_FAILED/;"	field
WGPU_CREATE_BUFFER_FAILED	$SOKOL/gfx.zig	/WGPU_CREATE_BUFFER_FAILED/;"	field
WGPU_CREATE_INSTANCE_FAILED	$SOKOL/app.zig	/WGPU_CREATE_INSTANCE_FAILED/;"	field
WGPU_CREATE_PIPELINE_LAYOUT_FAILED	$SOKOL/gfx.zig	/WGPU_CREATE_PIPELINE_LAYOUT_FAILED/;"	field
WGPU_CREATE_RENDER_PIPELINE_FAILED	$SOKOL/gfx.zig	/WGPU_CREATE_RENDER_PIPELINE_FAILED/;"	field
WGPU_CREATE_SAMPLER_FAILED	$SOKOL/gfx.zig	/WGPU_CREATE_SAMPLER_FAILED/;"	field
WGPU_CREATE_SHADER_MODULE_FAILED	$SOKOL/gfx.zig	/WGPU_CREATE_SHADER_MODULE_FAILED/;"	field
WGPU_CREATE_TEXTURE_FAILED	$SOKOL/gfx.zig	/WGPU_CREATE_TEXTURE_FAILED/;"	field
WGPU_CREATE_TEXTURE_VIEW_FAILED	$SOKOL/gfx.zig	/WGPU_CREATE_TEXTURE_VIEW_FAILED/;"	field
WGPU_PASS_CREATE_TEXTURE_VIEW_FAILED	$SOKOL/gfx.zig	/WGPU_PASS_CREATE_TEXTURE_VIEW_FAILED/;"	field
WGPU_REQUEST_ADAPTER_STATUS_ERROR	$SOKOL/app.zig	/WGPU_REQUEST_ADAPTER_STATUS_ERROR/;"	field
WGPU_REQUEST_ADAPTER_STATUS_UNAVAILABLE	$SOKOL/app.zig	/WGPU_REQUEST_ADAPTER_STATUS_UNAVAILABLE/;"	field
WGPU_REQUEST_ADAPTER_STATUS_UNKNOWN	$SOKOL/app.zig	/WGPU_REQUEST_ADAPTER_STATUS_UNKNOWN/;"	field
WGPU_REQUEST_DEVICE_STATUS_ERROR	$SOKOL/app.zig	/WGPU_REQUEST_DEVICE_STATUS_ERROR/;"	field
WGPU_REQUEST_DEVICE_STATUS_UNKNOWN	$SOKOL/app.zig	/WGPU_REQUEST_DEVICE_STATUS_UNKNOWN/;"	field
WGPU_SHADER_CREATE_BINDGROUP_LAYOUT_FAILED	$SOKOL/gfx.zig	/WGPU_SHADER_CREATE_BINDGROUP_LAYOUT_FAILED/;"	field
WGPU_SHADER_TOO_MANY_IMAGES	$SOKOL/gfx.zig	/WGPU_SHADER_TOO_MANY_IMAGES/;"	field
WGPU_SHADER_TOO_MANY_SAMPLERS	$SOKOL/gfx.zig	/WGPU_SHADER_TOO_MANY_SAMPLERS/;"	field
WGPU_SWAPCHAIN_CREATE_DEPTH_STENCIL_TEXTURE_FAILED	$SOKOL/app.zig	/WGPU_SWAPCHAIN_CREATE_DEPTH_STENCIL_TEXTURE_FAILED/;"	field
WGPU_SWAPCHAIN_CREATE_DEPTH_STENCIL_VIEW_FAILED	$SOKOL/app.zig	/WGPU_SWAPCHAIN_CREATE_DEPTH_STENCIL_VIEW_FAILED/;"	field
WGPU_SWAPCHAIN_CREATE_MSAA_TEXTURE_FAILED	$SOKOL/app.zig	/WGPU_SWAPCHAIN_CREATE_MSAA_TEXTURE_FAILED/;"	field
WGPU_SWAPCHAIN_CREATE_MSAA_VIEW_FAILED	$SOKOL/app.zig	/WGPU_SWAPCHAIN_CREATE_MSAA_VIEW_FAILED/;"	field
WGPU_SWAPCHAIN_CREATE_SURFACE_FAILED	$SOKOL/app.zig	/WGPU_SWAPCHAIN_CREATE_SURFACE_FAILED/;"	field
WGPU_SWAPCHAIN_CREATE_SWAPCHAIN_FAILED	$SOKOL/app.zig	/WGPU_SWAPCHAIN_CREATE_SWAPCHAIN_FAILED/;"	field
WIN32_CREATE_DUMMY_CONTEXT_FAILED	$SOKOL/app.zig	/WIN32_CREATE_DUMMY_CONTEXT_FAILED/;"	field
WIN32_CREATE_HELPER_WINDOW_FAILED	$SOKOL/app.zig	/WIN32_CREATE_HELPER_WINDOW_FAILED/;"	field
WIN32_D3D11_CREATE_DEVICE_AND_SWAPCHAIN_WITH_DEBUG_FAILED	$SOKOL/app.zig	/WIN32_D3D11_CREATE_DEVICE_AND_SWAPCHAIN_WITH_DEBUG_FAILED/;"	field
WIN32_D3D11_GET_IDXGIADAPTER_FAILED	$SOKOL/app.zig	/WIN32_D3D11_GET_IDXGIADAPTER_FAILED/;"	field
WIN32_D3D11_GET_IDXGIFACTORY_FAILED	$SOKOL/app.zig	/WIN32_D3D11_GET_IDXGIFACTORY_FAILED/;"	field
WIN32_D3D11_QUERY_INTERFACE_IDXGIDEVICE1_FAILED	$SOKOL/app.zig	/WIN32_D3D11_QUERY_INTERFACE_IDXGIDEVICE1_FAILED/;"	field
WIN32_DUMMY_CONTEXT_MAKE_CURRENT_FAILED	$SOKOL/app.zig	/WIN32_DUMMY_CONTEXT_MAKE_CURRENT_FAILED/;"	field
WIN32_DUMMY_CONTEXT_SET_PIXELFORMAT_FAILED	$SOKOL/app.zig	/WIN32_DUMMY_CONTEXT_SET_PIXELFORMAT_FAILED/;"	field
WIN32_GET_PIXELFORMAT_ATTRIB_FAILED	$SOKOL/app.zig	/WIN32_GET_PIXELFORMAT_ATTRIB_FAILED/;"	field
WIN32_GET_RAW_INPUT_DATA_FAILED	$SOKOL/app.zig	/WIN32_GET_RAW_INPUT_DATA_FAILED/;"	field
WIN32_HELPER_WINDOW_GETDC_FAILED	$SOKOL/app.zig	/WIN32_HELPER_WINDOW_GETDC_FAILED/;"	field
WIN32_LOAD_OPENGL32_DLL_FAILED	$SOKOL/app.zig	/WIN32_LOAD_OPENGL32_DLL_FAILED/;"	field
WIN32_REGISTER_RAW_INPUT_DEVICES_FAILED_MOUSE_LOCK	$SOKOL/app.zig	/WIN32_REGISTER_RAW_INPUT_DEVICES_FAILED_MOUSE_LOCK/;"	field
WIN32_REGISTER_RAW_INPUT_DEVICES_FAILED_MOUSE_UNLOCK	$SOKOL/app.zig	/WIN32_REGISTER_RAW_INPUT_DEVICES_FAILED_MOUSE_UNLOCK/;"	field
WIN32_WGL_ARB_CREATE_CONTEXT_PROFILE_REQUIRED	$SOKOL/app.zig	/WIN32_WGL_ARB_CREATE_CONTEXT_PROFILE_REQUIRED/;"	field
WIN32_WGL_ARB_CREATE_CONTEXT_REQUIRED	$SOKOL/app.zig	/WIN32_WGL_ARB_CREATE_CONTEXT_REQUIRED/;"	field
WIN32_WGL_CREATE_CONTEXT_ATTRIBS_FAILED_OTHER	$SOKOL/app.zig	/WIN32_WGL_CREATE_CONTEXT_ATTRIBS_FAILED_OTHER/;"	field
WIN32_WGL_DESCRIBE_PIXELFORMAT_FAILED	$SOKOL/app.zig	/WIN32_WGL_DESCRIBE_PIXELFORMAT_FAILED/;"	field
WIN32_WGL_FIND_PIXELFORMAT_FAILED	$SOKOL/app.zig	/WIN32_WGL_FIND_PIXELFORMAT_FAILED/;"	field
WIN32_WGL_INCOMPATIBLE_DEVICE_CONTEXT	$SOKOL/app.zig	/WIN32_WGL_INCOMPATIBLE_DEVICE_CONTEXT/;"	field
WIN32_WGL_OPENGL_3_2_NOT_SUPPORTED	$SOKOL/app.zig	/WIN32_WGL_OPENGL_3_2_NOT_SUPPORTED/;"	field
WIN32_WGL_OPENGL_PROFILE_NOT_SUPPORTED	$SOKOL/app.zig	/WIN32_WGL_OPENGL_PROFILE_NOT_SUPPORTED/;"	field
WIN32_WGL_SET_PIXELFORMAT_FAILED	$SOKOL/app.zig	/WIN32_WGL_SET_PIXELFORMAT_FAILED/;"	field
WORLD_1	$SOKOL/app.zig	/WORLD_1 = 161/;"	field
WORLD_2	$SOKOL/app.zig	/WORLD_2 = 162/;"	field
WgpuBufferInfo	$SOKOL/gfx.zig	/^pub const WgpuBufferInfo = extern struct {$/;"	struct
WgpuContextDesc	$SOKOL/gfx.zig	/^pub const WgpuContextDesc = extern struct {$/;"	struct
WgpuImageInfo	$SOKOL/gfx.zig	/^pub const WgpuImageInfo = extern struct {$/;"	struct
WgpuPassInfo	$SOKOL/gfx.zig	/^pub const WgpuPassInfo = extern struct {$/;"	struct
WgpuPipelineInfo	$SOKOL/gfx.zig	/^pub const WgpuPipelineInfo = extern struct {$/;"	struct
WgpuSamplerInfo	$SOKOL/gfx.zig	/^pub const WgpuSamplerInfo = extern struct {$/;"	struct
WgpuShaderInfo	$SOKOL/gfx.zig	/^pub const WgpuShaderInfo = extern struct {$/;"	struct
Wrap	$SOKOL/gfx.zig	/^pub const Wrap = enum(i32) {$/;"	enum
Writer	$SOKOL/debugtext.zig	/^pub const Writer = struct {$/;"	struct
ZERO	$SOKOL/gfx.zig	/ZERO/;"	field
_2D	$SOKOL/gfx.zig	/_2D/;"	field
_3D	$SOKOL/gfx.zig	/_3D/;"	field
_end_canary	$SOKOL/gfx.zig	/_end_canary: u32 = 0/;"	field
_start_canary	$SOKOL/gfx.zig	/_start_canary: u32 = 0/;"	field
activateContext	$SOKOL/gfx.zig	/^pub fn activateContext(ctx_id: Context) void {$/;"	function
active_slot	$SOKOL/gfx.zig	/active_slot: i32 = 0/;"	field
addCommitListener	$SOKOL/gfx.zig	/^pub fn addCommitListener(listener: CommitListener) bool {$/;"	function
allocBuffer	$SOKOL/gfx.zig	/^pub fn allocBuffer() Buffer {$/;"	function
allocImage	$SOKOL/gfx.zig	/^pub fn allocImage() Image {$/;"	function
allocPass	$SOKOL/gfx.zig	/^pub fn allocPass() Pass {$/;"	function
allocPipeline	$SOKOL/gfx.zig	/^pub fn allocPipeline() Pipeline {$/;"	function
allocSampler	$SOKOL/gfx.zig	/^pub fn allocSampler() Sampler {$/;"	function
allocShader	$SOKOL/gfx.zig	/^pub fn allocShader() Shader {$/;"	function
alloc_fn	$SOKOL/app.zig	/alloc_fn: ?*const fn (usize, ?*anyopaque) callconv(.C) ?*anyopaque = null/;"	field
alloc_fn	$SOKOL/audio.zig	/alloc_fn: ?*const fn (usize, ?*anyopaque) callconv(.C) ?*anyopaque = null/;"	field
alloc_fn	$SOKOL/debugtext.zig	/alloc_fn: ?*const fn (usize, ?*anyopaque) callconv(.C) ?*anyopaque = null/;"	field
alloc_fn	$SOKOL/gfx.zig	/alloc_fn: ?*const fn (usize, ?*anyopaque) callconv(.C) ?*anyopaque = null/;"	field
alloc_fn	$SOKOL/gl.zig	/alloc_fn: ?*const fn (usize, ?*anyopaque) callconv(.C) ?*anyopaque = null/;"	field
allocator	$SOKOL/app.zig	/allocator: Allocator = .{}/;"	field
allocator	$SOKOL/audio.zig	/allocator: Allocator = .{}/;"	field
allocator	$SOKOL/debugtext.zig	/allocator: Allocator = .{}/;"	field
allocator	$SOKOL/gfx.zig	/allocator: Allocator = .{}/;"	field
allocator	$SOKOL/gl.zig	/allocator: Allocator = .{}/;"	field
alpha	$SOKOL/app.zig	/alpha: bool = false/;"	field
alpha_to_coverage_enabled	$SOKOL/gfx.zig	/alpha_to_coverage_enabled: bool = false/;"	field
androidGetNativeActivity	$SOKOL/app.zig	/^pub fn androidGetNativeActivity() ?*const anyopaque {$/;"	function
android_tooltype	$SOKOL/app.zig	/android_tooltype: AndroidTooltype = .UNKNOWN/;"	field
appendBuffer	$SOKOL/gfx.zig	/^pub fn appendBuffer(buf: Buffer, data: Range) i32 {$/;"	function
append_frame_index	$SOKOL/gfx.zig	/append_frame_index: u32 = 0/;"	field
append_overflow	$SOKOL/gfx.zig	/append_overflow: bool = false/;"	field
append_pos	$SOKOL/gfx.zig	/append_pos: i32 = 0/;"	field
applyBindings	$SOKOL/gfx.zig	/^pub fn applyBindings(bindings: Bindings) void {$/;"	function
applyPipeline	$SOKOL/gfx.zig	/^pub fn applyPipeline(pip: Pipeline) void {$/;"	function
applyScissorRect	$SOKOL/gfx.zig	/^pub fn applyScissorRect(x: i32, y: i32, width: i32, height: i32, origin_top_left: bool) void {$/;"	function
applyScissorRectf	$SOKOL/gfx.zig	/^pub fn applyScissorRectf(x: f32, y: f32, width: f32, height: f32, origin_top_left: bool) void {$/;"	function
applyUniforms	$SOKOL/gfx.zig	/^pub fn applyUniforms(stage: ShaderStage, ub_index: u32, data: Range) void {$/;"	function
applyViewport	$SOKOL/gfx.zig	/^pub fn applyViewport(x: i32, y: i32, width: i32, height: i32, origin_top_left: bool) void {$/;"	function
applyViewportf	$SOKOL/gfx.zig	/^pub fn applyViewportf(x: f32, y: f32, width: f32, height: f32, origin_top_left: bool) void {$/;"	function
array_count	$SOKOL/gfx.zig	/array_count: i32 = 0/;"	field
asDegrees	$SOKOL/gl.zig	/^pub fn asDegrees(rad: f32) f32 {$/;"	function
asRadians	$SOKOL/gl.zig	/^pub fn asRadians(deg: f32) f32 {$/;"	function
asRange	$SOKOL/debugtext.zig	/^pub fn asRange(val: anytype) Range {$/;"	function
asRange	$SOKOL/gfx.zig	/^pub fn asRange(val: anytype) Range {$/;"	function
asRange	$SOKOL/shape.zig	/^pub fn asRange(val: anytype) Range {$/;"	function
attrs	$SOKOL/gfx.zig	/attrs: [16]VertexAttrState = [_]VertexAttrState{.{}} ** 16/;"	field
back	$SOKOL/gfx.zig	/back: StencilFaceState = .{}/;"	field
base_element	$SOKOL/shape.zig	/base_element: u32 = 0/;"	field
beginDefaultPass	$SOKOL/gfx.zig	/^pub fn beginDefaultPass(pass_action: PassAction, width: i32, height: i32) void {$/;"	function
beginDefaultPassf	$SOKOL/gfx.zig	/^pub fn beginDefaultPassf(pass_action: PassAction, width: f32, height: f32) void {$/;"	function
beginLineStrip	$SOKOL/gl.zig	/^pub fn beginLineStrip() void {$/;"	function
beginLines	$SOKOL/gl.zig	/^pub fn beginLines() void {$/;"	function
beginPass	$SOKOL/gfx.zig	/^pub fn beginPass(pass: Pass, pass_action: PassAction) void {$/;"	function
beginPoints	$SOKOL/gl.zig	/^pub fn beginPoints() void {$/;"	function
beginQuads	$SOKOL/gl.zig	/^pub fn beginQuads() void {$/;"	function
beginTriangleStrip	$SOKOL/gl.zig	/^pub fn beginTriangleStrip() void {$/;"	function
beginTriangles	$SOKOL/gl.zig	/^pub fn beginTriangles() void {$/;"	function
bgl	$SOKOL/gfx.zig	/bgl: ?*const anyopaque = null/;"	field
bias	$SOKOL/gfx.zig	/bias: f32 = 0.0/;"	field
bias_clamp	$SOKOL/gfx.zig	/bias_clamp: f32 = 0.0/;"	field
bias_slope_scale	$SOKOL/gfx.zig	/bias_slope_scale: f32 = 0.0/;"	field
bindings	$SOKOL/gfx.zig	/bindings: FrameStatsWgpuBindings = .{}/;"	field
blend	$SOKOL/gfx.zig	/blend: bool = false/;"	field
blend_color	$SOKOL/gfx.zig	/blend_color: Color = .{}/;"	field
border_color	$SOKOL/gfx.zig	/border_color: BorderColor = .DEFAULT/;"	field
boxSizes	$SOKOL/shape.zig	/^pub fn boxSizes(tiles: u32) Sizes {$/;"	function
buf	$SOKOL/gfx.zig	/buf: [2]u32 = [_]u32{0} ** 2/;"	field
buffer	$SOKOL/app.zig	/buffer: Range = .{}/;"	field
buffer	$SOKOL/shape.zig	/buffer: Range = .{}/;"	field
bufferFrames	$SOKOL/audio.zig	/^pub fn bufferFrames() i32 {$/;"	function
buffer_frames	$SOKOL/audio.zig	/buffer_frames: i32 = 0/;"	field
buffer_index	$SOKOL/gfx.zig	/buffer_index: i32 = 0/;"	field
buffer_pool_size	$SOKOL/gfx.zig	/buffer_pool_size: i32 = 0/;"	field
buffers	$SOKOL/gfx.zig	/buffers: [8]VertexBufferLayoutState = [_]VertexBufferLayoutState{.{}} ** 8/;"	field
buildBox	$SOKOL/shape.zig	/^pub fn buildBox(buf: Buffer, params: Box) Buffer {$/;"	function
buildCylinder	$SOKOL/shape.zig	/^pub fn buildCylinder(buf: Buffer, params: Cylinder) Buffer {$/;"	function
buildPlane	$SOKOL/shape.zig	/^pub fn buildPlane(buf: Buffer, params: Plane) Buffer {$/;"	function
buildSphere	$SOKOL/shape.zig	/^pub fn buildSphere(buf: Buffer, params: Sphere) Buffer {$/;"	function
buildTorus	$SOKOL/shape.zig	/^pub fn buildTorus(buf: Buffer, params: Torus) Buffer {$/;"	function
bytecode	$SOKOL/gfx.zig	/bytecode: Range = .{}/;"	field
bytes_per_pixel	$SOKOL/gfx.zig	/bytes_per_pixel: i32 = 0/;"	field
c1i	$SOKOL/gl.zig	/^pub fn c1i(rgba: u32) void {$/;"	function
c3b	$SOKOL/gl.zig	/^pub fn c3b(r: u8, g: u8, b: u8) void {$/;"	function
c3f	$SOKOL/gl.zig	/^pub fn c3f(r: f32, g: f32, b: f32) void {$/;"	function
c4b	$SOKOL/gl.zig	/^pub fn c4b(r: u8, g: u8, b: u8, a: u8) void {$/;"	function
c4f	$SOKOL/gl.zig	/^pub fn c4f(r: f32, g: f32, b: f32, a: f32) void {$/;"	function
cStrToZig	$SOKOL/app.zig	/^fn cStrToZig(c_str: [*c]const u8) [:0]const u8 {$/;"	function
cStrToZig	$SOKOL/audio.zig	/^fn cStrToZig(c_str: [*c]const u8) [:0]const u8 {$/;"	function
cStrToZig	$SOKOL/debugtext.zig	/^fn cStrToZig(c_str: [*c]const u8) [:0]const u8 {$/;"	function
cStrToZig	$SOKOL/gfx.zig	/^fn cStrToZig(c_str: [*c]const u8) [:0]const u8 {$/;"	function
cStrToZig	$SOKOL/gl.zig	/^fn cStrToZig(c_str: [*c]const u8) [:0]const u8 {$/;"	function
cStrToZig	$SOKOL/log.zig	/^fn cStrToZig(c_str: [*c]const u8) [:0]const u8 {$/;"	function
cStrToZig	$SOKOL/shape.zig	/^fn cStrToZig(c_str: [*c]const u8) [:0]const u8 {$/;"	function
cStrToZig	$SOKOL/time.zig	/^fn cStrToZig(c_str: [*c]const u8) [:0]const u8 {$/;"	function
callback	$SOKOL/app.zig	/callback: ?*const fn ([*c]const Html5FetchResponse) callconv(.C) void = null/;"	field
cancelQuit	$SOKOL/app.zig	/^pub fn cancelQuit() void {$/;"	function
canvas	$SOKOL/debugtext.zig	/^pub fn canvas(w: f32, h: f32) void {$/;"	function
canvas_height	$SOKOL/debugtext.zig	/canvas_height: f32 = 0.0/;"	field
canvas_width	$SOKOL/debugtext.zig	/canvas_width: f32 = 0.0/;"	field
changed	$SOKOL/app.zig	/changed: bool = false/;"	field
channels	$SOKOL/audio.zig	/^pub fn channels() i32 {$/;"	function
char_buf_size	$SOKOL/debugtext.zig	/char_buf_size: i32 = 0/;"	field
char_code	$SOKOL/app.zig	/char_code: u32 = 0/;"	field
cleanup_cb	$SOKOL/app.zig	/cleanup_cb: ?*const fn () callconv(.C) void = null/;"	field
cleanup_userdata_cb	$SOKOL/app.zig	/cleanup_userdata_cb: ?*const fn (?*anyopaque) callconv(.C) void = null/;"	field
clear_value	$SOKOL/gfx.zig	/clear_value: u8 = 0/;"	field
clipboard_size	$SOKOL/app.zig	/clipboard_size: i32 = 0/;"	field
color	$SOKOL/shape.zig	/color: u32 = 0/;"	field
color1i	$SOKOL/debugtext.zig	/^pub fn color1i(rgba: u32) void {$/;"	function
color3b	$SOKOL/debugtext.zig	/^pub fn color3b(r: u8, g: u8, b: u8) void {$/;"	function
color3b	$SOKOL/shape.zig	/^pub fn color3b(r: u8, g: u8, b: u8) u32 {$/;"	function
color3f	$SOKOL/debugtext.zig	/^pub fn color3f(r: f32, g: f32, b: f32) void {$/;"	function
color3f	$SOKOL/shape.zig	/^pub fn color3f(r: f32, g: f32, b: f32) u32 {$/;"	function
color4b	$SOKOL/debugtext.zig	/^pub fn color4b(r: u8, g: u8, b: u8, a: u8) void {$/;"	function
color4b	$SOKOL/shape.zig	/^pub fn color4b(r: u8, g: u8, b: u8, a: u8) u32 {$/;"	function
color4f	$SOKOL/debugtext.zig	/^pub fn color4f(r: f32, g: f32, b: f32, a: f32) void {$/;"	function
color4f	$SOKOL/shape.zig	/^pub fn color4f(r: f32, g: f32, b: f32, a: f32) u32 {$/;"	function
colorFormat	$SOKOL/app.zig	/^pub fn colorFormat() i32 {$/;"	function
colorVertexAttrState	$SOKOL/shape.zig	/^pub fn colorVertexAttrState() sg.VertexAttrState {$/;"	function
color_attachments	$SOKOL/gfx.zig	/color_attachments: [4]PassAttachmentDesc = [_]PassAttachmentDesc{.{}} ** 4/;"	field
color_count	$SOKOL/gfx.zig	/color_count: i32 = 0/;"	field
color_format	$SOKOL/debugtext.zig	/color_format: sg.PixelFormat = .DEFAULT/;"	field
color_format	$SOKOL/gfx.zig	/color_format: i32 = 0/;"	field
color_format	$SOKOL/gl.zig	/color_format: sg.PixelFormat = .DEFAULT/;"	field
color_rtv	$SOKOL/gfx.zig	/color_rtv: [4]?*const anyopaque = [_]?*const anyopaque{null} ** 4/;"	field
color_view	$SOKOL/gfx.zig	/color_view: [4]?*const anyopaque = [_]?*const anyopaque{null} ** 4/;"	field
colors	$SOKOL/gfx.zig	/colors: [4]ColorTargetState = [_]ColorTargetState{.{}} ** 4/;"	field
commit	$SOKOL/gfx.zig	/^pub fn commit() void {$/;"	function
compare	$SOKOL/gfx.zig	/compare: CompareFunc = .DEFAULT/;"	field
compressed	$SOKOL/gfx.zig	/compressed: bool = false/;"	field
consumeEvent	$SOKOL/app.zig	/^pub fn consumeEvent() void {$/;"	function
context	$SOKOL/app_gfx_glue.zig	/^pub fn context() sg.ContextDesc {$/;"	function
context	$SOKOL/debugtext.zig	/context: ContextDesc = .{}/;"	field
context	$SOKOL/gfx.zig	/context: ContextDesc = .{}/;"	field
contextDraw	$SOKOL/debugtext.zig	/^pub fn contextDraw(ctx: Context) void {$/;"	function
contextDraw	$SOKOL/gl.zig	/^pub fn contextDraw(ctx: Context) void {$/;"	function
contextDrawLayer	$SOKOL/debugtext.zig	/^pub fn contextDrawLayer(ctx: Context, layer_id: i32) void {$/;"	function
contextDrawLayer	$SOKOL/gl.zig	/^pub fn contextDrawLayer(ctx: Context, layer_id: i32) void {$/;"	function
contextError	$SOKOL/gl.zig	/^pub fn contextError(ctx: Context) Error {$/;"	function
contextMakePipeline	$SOKOL/gl.zig	/^pub fn contextMakePipeline(ctx: Context, desc: sg.PipelineDesc) Pipeline {$/;"	function
context_pool_size	$SOKOL/debugtext.zig	/context_pool_size: i32 = 0/;"	field
context_pool_size	$SOKOL/gfx.zig	/context_pool_size: i32 = 0/;"	field
context_pool_size	$SOKOL/gl.zig	/context_pool_size: i32 = 0/;"	field
crlf	$SOKOL/debugtext.zig	/^pub fn crlf() void {$/;"	function
ctx_id	$SOKOL/gfx.zig	/ctx_id: u32 = 0/;"	field
cull_mode	$SOKOL/gfx.zig	/cull_mode: CullMode = .DEFAULT/;"	field
cylinderSizes	$SOKOL/shape.zig	/^pub fn cylinderSizes(slices: u32, stacks: u32) Sizes {$/;"	function
d3d11	$SOKOL/gfx.zig	/d3d11: FrameStatsD3d11 = .{}/;"	field
d3d11Device	$SOKOL/gfx.zig	/^pub fn d3d11Device() ?*const anyopaque {$/;"	function
d3d11DeviceContext	$SOKOL/gfx.zig	/^pub fn d3d11DeviceContext() ?*const anyopaque {$/;"	function
d3d11GetDepthStencilView	$SOKOL/app.zig	/^pub fn d3d11GetDepthStencilView() ?*const anyopaque {$/;"	function
d3d11GetDevice	$SOKOL/app.zig	/^pub fn d3d11GetDevice() ?*const anyopaque {$/;"	function
d3d11GetDeviceContext	$SOKOL/app.zig	/^pub fn d3d11GetDeviceContext() ?*const anyopaque {$/;"	function
d3d11GetRenderTargetView	$SOKOL/app.zig	/^pub fn d3d11GetRenderTargetView() ?*const anyopaque {$/;"	function
d3d11GetSwapChain	$SOKOL/app.zig	/^pub fn d3d11GetSwapChain() ?*const anyopaque {$/;"	function
d3d11QueryBufferInfo	$SOKOL/gfx.zig	/^pub fn d3d11QueryBufferInfo(buf: Buffer) D3d11BufferInfo {$/;"	function
d3d11QueryImageInfo	$SOKOL/gfx.zig	/^pub fn d3d11QueryImageInfo(img: Image) D3d11ImageInfo {$/;"	function
d3d11QueryPassInfo	$SOKOL/gfx.zig	/^pub fn d3d11QueryPassInfo(pass: Pass) D3d11PassInfo {$/;"	function
d3d11QueryPipelineInfo	$SOKOL/gfx.zig	/^pub fn d3d11QueryPipelineInfo(pip: Pipeline) D3d11PipelineInfo {$/;"	function
d3d11QuerySamplerInfo	$SOKOL/gfx.zig	/^pub fn d3d11QuerySamplerInfo(smp: Sampler) D3d11SamplerInfo {$/;"	function
d3d11QueryShaderInfo	$SOKOL/gfx.zig	/^pub fn d3d11QueryShaderInfo(shd: Shader) D3d11ShaderInfo {$/;"	function
d3d11_buffer	$SOKOL/gfx.zig	/d3d11_buffer: ?*const anyopaque = null/;"	field
d3d11_sampler	$SOKOL/gfx.zig	/d3d11_sampler: ?*const anyopaque = null/;"	field
d3d11_shader_resource_view	$SOKOL/gfx.zig	/d3d11_shader_resource_view: ?*const anyopaque = null/;"	field
d3d11_target	$SOKOL/gfx.zig	/d3d11_target: [*c]const u8 = null/;"	field
d3d11_texture	$SOKOL/gfx.zig	/d3d11_texture: ?*const anyopaque = null/;"	field
data	$SOKOL/app.zig	/data: Range = .{}/;"	field
data	$SOKOL/debugtext.zig	/data: Range = .{}/;"	field
data	$SOKOL/gfx.zig	/data: Range = .{}/;"	field
data_size	$SOKOL/shape.zig	/data_size: usize = 0/;"	field
deallocBuffer	$SOKOL/gfx.zig	/^pub fn deallocBuffer(buf: Buffer) void {$/;"	function
deallocImage	$SOKOL/gfx.zig	/^pub fn deallocImage(img: Image) void {$/;"	function
deallocPass	$SOKOL/gfx.zig	/^pub fn deallocPass(pass: Pass) void {$/;"	function
deallocPipeline	$SOKOL/gfx.zig	/^pub fn deallocPipeline(pip: Pipeline) void {$/;"	function
deallocSampler	$SOKOL/gfx.zig	/^pub fn deallocSampler(smp: Sampler) void {$/;"	function
deallocShader	$SOKOL/gfx.zig	/^pub fn deallocShader(shd: Shader) void {$/;"	function
defaultContext	$SOKOL/debugtext.zig	/^pub fn defaultContext() Context {$/;"	function
defaultContext	$SOKOL/gl.zig	/^pub fn defaultContext() Context {$/;"	function
default_framebuffer_cb	$SOKOL/gfx.zig	/default_framebuffer_cb: ?*const fn () callconv(.C) u32 = null/;"	field
default_framebuffer_userdata_cb	$SOKOL/gfx.zig	/default_framebuffer_userdata_cb: ?*const fn (?*anyopaque) callconv(.C) u32 = null/;"	field
defaults	$SOKOL/gl.zig	/^pub fn defaults() void {$/;"	function
depth	$SOKOL/gfx.zig	/depth: bool = false/;"	field
depth	$SOKOL/shape.zig	/depth: f32 = 0.0/;"	field
depthFormat	$SOKOL/app.zig	/^pub fn depthFormat() i32 {$/;"	function
depth_fail_op	$SOKOL/gfx.zig	/depth_fail_op: StencilOp = .DEFAULT/;"	field
depth_format	$SOKOL/debugtext.zig	/depth_format: sg.PixelFormat = .DEFAULT/;"	field
depth_format	$SOKOL/gfx.zig	/depth_format: i32 = 0/;"	field
depth_format	$SOKOL/gl.zig	/depth_format: sg.PixelFormat = .DEFAULT/;"	field
depth_stencil_attachment	$SOKOL/gfx.zig	/depth_stencil_attachment: PassAttachmentDesc = .{}/;"	field
depth_stencil_view_cb	$SOKOL/gfx.zig	/depth_stencil_view_cb: ?*const fn () callconv(.C) ?*const anyopaque = null/;"	field
depth_stencil_view_userdata_cb	$SOKOL/gfx.zig	/depth_stencil_view_userdata_cb: ?*const fn (?*anyopaque) callconv(.C) ?*const anyopaque = null/;"	field
destroyBuffer	$SOKOL/gfx.zig	/^pub fn destroyBuffer(buf: Buffer) void {$/;"	function
destroyContext	$SOKOL/debugtext.zig	/^pub fn destroyContext(ctx: Context) void {$/;"	function
destroyContext	$SOKOL/gl.zig	/^pub fn destroyContext(ctx: Context) void {$/;"	function
destroyImage	$SOKOL/gfx.zig	/^pub fn destroyImage(img: Image) void {$/;"	function
destroyPass	$SOKOL/gfx.zig	/^pub fn destroyPass(pass: Pass) void {$/;"	function
destroyPipeline	$SOKOL/gfx.zig	/^pub fn destroyPipeline(pip: Pipeline) void {$/;"	function
destroyPipeline	$SOKOL/gl.zig	/^pub fn destroyPipeline(pip: Pipeline) void {$/;"	function
destroySampler	$SOKOL/gfx.zig	/^pub fn destroySampler(smp: Sampler) void {$/;"	function
destroyShader	$SOKOL/gfx.zig	/^pub fn destroyShader(shd: Shader) void {$/;"	function
device	$SOKOL/gfx.zig	/device: ?*const anyopaque = null/;"	field
device_context	$SOKOL/gfx.zig	/device_context: ?*const anyopaque = null/;"	field
diff	$SOKOL/time.zig	/^pub fn diff(new_ticks: u64, old_ticks: u64) u64 {$/;"	function
disableFrameStats	$SOKOL/gfx.zig	/^pub fn disableFrameStats() void {$/;"	function
disableTexture	$SOKOL/gl.zig	/^pub fn disableTexture() void {$/;"	function
disable_validation	$SOKOL/gfx.zig	/disable_validation: bool = false/;"	field
discardContext	$SOKOL/gfx.zig	/^pub fn discardContext(ctx_id: Context) void {$/;"	function
dpiScale	$SOKOL/app.zig	/^pub fn dpiScale() f32 {$/;"	function
draw	$SOKOL/debugtext.zig	/^pub fn draw() void {$/;"	function
draw	$SOKOL/gfx.zig	/draw: FrameStatsD3d11Draw = .{}/;"	field
draw	$SOKOL/gl.zig	/^pub fn draw() void {$/;"	function
drawLayer	$SOKOL/debugtext.zig	/^pub fn drawLayer(layer_id: i32) void {$/;"	function
drawLayer	$SOKOL/gl.zig	/^pub fn drawLayer(layer_id: i32) void {$/;"	function
drawable_cb	$SOKOL/gfx.zig	/drawable_cb: ?*const fn () callconv(.C) ?*const anyopaque = null/;"	field
drawable_userdata_cb	$SOKOL/gfx.zig	/drawable_userdata_cb: ?*const fn (?*anyopaque) callconv(.C) ?*const anyopaque = null/;"	field
dropped_file_index	$SOKOL/app.zig	/dropped_file_index: i32 = 0/;"	field
ds_view	$SOKOL/gfx.zig	/ds_view: ?*const anyopaque = null/;"	field
dss	$SOKOL/gfx.zig	/dss: ?*const anyopaque = null/;"	field
dst_factor_alpha	$SOKOL/gfx.zig	/dst_factor_alpha: BlendFactor = .DEFAULT/;"	field
dst_factor_rgb	$SOKOL/gfx.zig	/dst_factor_rgb: BlendFactor = .DEFAULT/;"	field
dsv	$SOKOL/gfx.zig	/dsv: ?*const anyopaque = null/;"	field
eglGetContext	$SOKOL/app.zig	/^pub fn eglGetContext() ?*const anyopaque {$/;"	function
eglGetDisplay	$SOKOL/app.zig	/^pub fn eglGetDisplay() ?*const anyopaque {$/;"	function
elementRange	$SOKOL/shape.zig	/^pub fn elementRange(buf: Buffer) ElementRange {$/;"	function
enableFrameStats	$SOKOL/gfx.zig	/^pub fn enableFrameStats() void {$/;"	function
enableTexture	$SOKOL/gl.zig	/^pub fn enableTexture() void {$/;"	function
enable_clipboard	$SOKOL/app.zig	/enable_clipboard: bool = false/;"	field
enable_dragndrop	$SOKOL/app.zig	/enable_dragndrop: bool = false/;"	field
enabled	$SOKOL/gfx.zig	/enabled: bool = false/;"	field
end	$SOKOL/gl.zig	/^pub fn end() void {$/;"	function
endPass	$SOKOL/gfx.zig	/^pub fn endPass() void {$/;"	function
entry	$SOKOL/gfx.zig	/entry: [*c]const u8 = null/;"	field
error_code	$SOKOL/app.zig	/error_code: Html5FetchError = .FETCH_ERROR_NO_ERROR/;"	field
event_cb	$SOKOL/app.zig	/event_cb: ?*const fn ([*c]const Event) callconv(.C) void = null/;"	field
event_userdata_cb	$SOKOL/app.zig	/event_userdata_cb: ?*const fn ([*c]const Event, ?*anyopaque) callconv(.C) void = null/;"	field
expect	$SOKOL/audio.zig	/^pub fn expect() i32 {$/;"	function
face_winding	$SOKOL/gfx.zig	/face_winding: FaceWinding = .DEFAULT/;"	field
face_winding	$SOKOL/gl.zig	/face_winding: sg.FaceWinding = .DEFAULT/;"	field
failBuffer	$SOKOL/gfx.zig	/^pub fn failBuffer(buf: Buffer) void {$/;"	function
failImage	$SOKOL/gfx.zig	/^pub fn failImage(img: Image) void {$/;"	function
failPass	$SOKOL/gfx.zig	/^pub fn failPass(pass: Pass) void {$/;"	function
failPipeline	$SOKOL/gfx.zig	/^pub fn failPipeline(pip: Pipeline) void {$/;"	function
failSampler	$SOKOL/gfx.zig	/^pub fn failSampler(smp: Sampler) void {$/;"	function
failShader	$SOKOL/gfx.zig	/^pub fn failShader(shd: Shader) void {$/;"	function
fail_op	$SOKOL/gfx.zig	/fail_op: StencilOp = .DEFAULT/;"	field
file_index	$SOKOL/app.zig	/file_index: i32 = 0/;"	field
filter	$SOKOL/gfx.zig	/filter: bool = false/;"	field
first_char	$SOKOL/debugtext.zig	/first_char: u8 = 0/;"	field
font	$SOKOL/debugtext.zig	/^pub fn font(font_index: u32) void {$/;"	function
fontC64	$SOKOL/debugtext.zig	/^pub fn fontC64() FontDesc {$/;"	function
fontCpc	$SOKOL/debugtext.zig	/^pub fn fontCpc() FontDesc {$/;"	function
fontKc853	$SOKOL/debugtext.zig	/^pub fn fontKc853() FontDesc {$/;"	function
fontKc854	$SOKOL/debugtext.zig	/^pub fn fontKc854() FontDesc {$/;"	function
fontOric	$SOKOL/debugtext.zig	/^pub fn fontOric() FontDesc {$/;"	function
fontZ1013	$SOKOL/debugtext.zig	/^pub fn fontZ1013() FontDesc {$/;"	function
fonts	$SOKOL/debugtext.zig	/fonts: [8]FontDesc = [_]FontDesc{.{}} ** 8/;"	field
format	$SOKOL/gfx.zig	/format: VertexFormat = .INVALID/;"	field
frameCount	$SOKOL/app.zig	/^pub fn frameCount() u64 {$/;"	function
frameDuration	$SOKOL/app.zig	/^pub fn frameDuration() f64 {$/;"	function
frameStatsEnabled	$SOKOL/gfx.zig	/^pub fn frameStatsEnabled() bool {$/;"	function
frame_buffer	$SOKOL/gfx.zig	/frame_buffer: u32 = 0/;"	field
frame_cb	$SOKOL/app.zig	/frame_cb: ?*const fn () callconv(.C) void = null/;"	field
frame_count	$SOKOL/app.zig	/frame_count: u64 = 0/;"	field
frame_index	$SOKOL/gfx.zig	/frame_index: u32 = 0/;"	field
frame_userdata_cb	$SOKOL/app.zig	/frame_userdata_cb: ?*const fn (?*anyopaque) callconv(.C) void = null/;"	field
framebuffer_height	$SOKOL/app.zig	/framebuffer_height: i32 = 0/;"	field
framebuffer_width	$SOKOL/app.zig	/framebuffer_width: i32 = 0/;"	field
free_fn	$SOKOL/app.zig	/free_fn: ?*const fn (?*anyopaque, ?*anyopaque) callconv(.C) void = null/;"	field
free_fn	$SOKOL/audio.zig	/free_fn: ?*const fn (?*anyopaque, ?*anyopaque) callconv(.C) void = null/;"	field
free_fn	$SOKOL/debugtext.zig	/free_fn: ?*const fn (?*anyopaque, ?*anyopaque) callconv(.C) void = null/;"	field
free_fn	$SOKOL/gfx.zig	/free_fn: ?*const fn (?*anyopaque, ?*anyopaque) callconv(.C) void = null/;"	field
free_fn	$SOKOL/gl.zig	/free_fn: ?*const fn (?*anyopaque, ?*anyopaque) callconv(.C) void = null/;"	field
front	$SOKOL/gfx.zig	/front: StencilFaceState = .{}/;"	field
frustum	$SOKOL/gl.zig	/^pub fn frustum(l: f32, r: f32, b: f32, t: f32, n: f32, f: f32) void {$/;"	function
fs_cbufs	$SOKOL/gfx.zig	/fs_cbufs: [4]?*const anyopaque = [_]?*const anyopaque{null} ** 4/;"	field
fs_func	$SOKOL/gfx.zig	/fs_func: ?*const anyopaque = null/;"	field
fs_lib	$SOKOL/gfx.zig	/fs_lib: ?*const anyopaque = null/;"	field
fs_mod	$SOKOL/gfx.zig	/fs_mod: ?*const anyopaque = null/;"	field
fullscreen	$SOKOL/app.zig	/fullscreen: bool = false/;"	field
func	$SOKOL/app.zig	/func: ?*const fn ([*c]const u8, u32, u32, [*c]const u8, u32, [*c]const u8, ?*anyopaque) callconv(.C) void = null/;"	field
func	$SOKOL/audio.zig	/func: ?*const fn ([*c]const u8, u32, u32, [*c]const u8, u32, [*c]const u8, ?*anyopaque) callconv(.C) void = null/;"	field
func	$SOKOL/debugtext.zig	/func: ?*const fn ([*c]const u8, u32, u32, [*c]const u8, u32, [*c]const u8, ?*anyopaque) callconv(.C) void = null/;"	field
func	$SOKOL/gfx.zig	/func: ?*const fn ([*c]const u8, u32, u32, [*c]const u8, u32, [*c]const u8, ?*anyopaque) callconv(.C) void = null/;"	field
func	$SOKOL/gl.zig	/func: ?*const fn ([*c]const u8, u32, u32, [*c]const u8, u32, [*c]const u8, ?*anyopaque) callconv(.C) void = null/;"	field
func	$SOKOL/log.zig	/^pub const func = slog_func/;"	constant
getClipboardString	$SOKOL/app.zig	/^pub fn getClipboardString() [:0]const u8 {$/;"	function
getContext	$SOKOL/debugtext.zig	/^pub fn getContext() Context {$/;"	function
getContext	$SOKOL/gl.zig	/^pub fn getContext() Context {$/;"	function
getDroppedFilePath	$SOKOL/app.zig	/^pub fn getDroppedFilePath(index: i32) [:0]const u8 {$/;"	function
getError	$SOKOL/gl.zig	/^pub fn getError() Error {$/;"	function
getMouseCursor	$SOKOL/app.zig	/^pub fn getMouseCursor() MouseCursor {$/;"	function
getNumDroppedFiles	$SOKOL/app.zig	/^pub fn getNumDroppedFiles() i32 {$/;"	function
glQueryBufferInfo	$SOKOL/gfx.zig	/^pub fn glQueryBufferInfo(buf: Buffer) GlBufferInfo {$/;"	function
glQueryImageInfo	$SOKOL/gfx.zig	/^pub fn glQueryImageInfo(img: Image) GlImageInfo {$/;"	function
glQueryPassInfo	$SOKOL/gfx.zig	/^pub fn glQueryPassInfo(pass: Pass) GlPassInfo {$/;"	function
glQuerySamplerInfo	$SOKOL/gfx.zig	/^pub fn glQuerySamplerInfo(smp: Sampler) GlSamplerInfo {$/;"	function
glQueryShaderInfo	$SOKOL/gfx.zig	/^pub fn glQueryShaderInfo(shd: Shader) GlShaderInfo {$/;"	function
gl_buffers	$SOKOL/gfx.zig	/gl_buffers: [2]u32 = [_]u32{0} ** 2/;"	field
gl_major_version	$SOKOL/app.zig	/gl_major_version: i32 = 0/;"	field
gl_max_combined_texture_image_units	$SOKOL/gfx.zig	/gl_max_combined_texture_image_units: i32 = 0/;"	field
gl_max_vertex_uniform_vectors	$SOKOL/gfx.zig	/gl_max_vertex_uniform_vectors: i32 = 0/;"	field
gl_minor_version	$SOKOL/app.zig	/gl_minor_version: i32 = 0/;"	field
gl_sampler	$SOKOL/gfx.zig	/gl_sampler: u32 = 0/;"	field
gl_texture_target	$SOKOL/gfx.zig	/gl_texture_target: u32 = 0/;"	field
gl_textures	$SOKOL/gfx.zig	/gl_textures: [2]u32 = [_]u32{0} ** 2/;"	field
glsl_name	$SOKOL/gfx.zig	/glsl_name: [*c]const u8 = null/;"	field
height	$SOKOL/app.zig	/height: i32 = 0/;"	field
height	$SOKOL/gfx.zig	/height: i32 = 0/;"	field
height	$SOKOL/shape.zig	/height: f32 = 0.0/;"	field
heightf	$SOKOL/app.zig	/^pub fn heightf() f32 {$/;"	function
highDpi	$SOKOL/app.zig	/^pub fn highDpi() bool {$/;"	function
high_dpi	$SOKOL/app.zig	/high_dpi: bool = false/;"	field
home	$SOKOL/debugtext.zig	/^pub fn home() void {$/;"	function
html5AskLeaveSite	$SOKOL/app.zig	/^pub fn html5AskLeaveSite(ask: bool) void {$/;"	function
html5FetchDroppedFile	$SOKOL/app.zig	/^pub fn html5FetchDroppedFile(request: Html5FetchRequest) void {$/;"	function
html5GetDroppedFileSize	$SOKOL/app.zig	/^pub fn html5GetDroppedFileSize(index: i32) u32 {$/;"	function
html5_ask_leave_site	$SOKOL/app.zig	/html5_ask_leave_site: bool = false/;"	field
html5_bubble_char_events	$SOKOL/app.zig	/html5_bubble_char_events: bool = false/;"	field
html5_bubble_key_events	$SOKOL/app.zig	/html5_bubble_key_events: bool = false/;"	field
html5_bubble_mouse_events	$SOKOL/app.zig	/html5_bubble_mouse_events: bool = false/;"	field
html5_bubble_touch_events	$SOKOL/app.zig	/html5_bubble_touch_events: bool = false/;"	field
html5_bubble_wheel_events	$SOKOL/app.zig	/html5_bubble_wheel_events: bool = false/;"	field
html5_canvas_name	$SOKOL/app.zig	/html5_canvas_name: [*c]const u8 = null/;"	field
html5_canvas_resize	$SOKOL/app.zig	/html5_canvas_resize: bool = false/;"	field
html5_premultiplied_alpha	$SOKOL/app.zig	/html5_premultiplied_alpha: bool = false/;"	field
html5_preserve_drawing_buffer	$SOKOL/app.zig	/html5_preserve_drawing_buffer: bool = false/;"	field
icon	$SOKOL/app.zig	/icon: IconDesc = .{}/;"	field
identifier	$SOKOL/app.zig	/identifier: usize = 0/;"	field
idpool	$SOKOL/gfx.zig	/idpool: FrameStatsMetalIdpool = .{}/;"	field
image	$SOKOL/gfx.zig	/image: Image = .{}/;"	field
image_clamp_to_border	$SOKOL/gfx.zig	/image_clamp_to_border: bool = false/;"	field
image_pool_size	$SOKOL/gfx.zig	/image_pool_size: i32 = 0/;"	field
image_sampler_pairs	$SOKOL/gfx.zig	/image_sampler_pairs: [12]ShaderImageSamplerPairDesc = [_]ShaderImageSamplerPairDesc{.{}} ** 12/;"	field
image_slot	$SOKOL/gfx.zig	/image_slot: i32 = 0/;"	field
image_type	$SOKOL/gfx.zig	/image_type: ImageType = .DEFAULT/;"	field
images	$SOKOL/app.zig	/images: [8]ImageDesc = [_]ImageDesc{.{}} ** 8/;"	field
images	$SOKOL/gfx.zig	/images: [12]ShaderImageDesc = [_]ShaderImageDesc{.{}} ** 12/;"	field
indexBufferDesc	$SOKOL/shape.zig	/^pub fn indexBufferDesc(buf: Buffer) sg.BufferDesc {$/;"	function
index_buffer	$SOKOL/gfx.zig	/index_buffer: Buffer = .{}/;"	field
index_buffer_offset	$SOKOL/gfx.zig	/index_buffer_offset: i32 = 0/;"	field
index_type	$SOKOL/gfx.zig	/index_type: IndexType = .DEFAULT/;"	field
indices	$SOKOL/shape.zig	/indices: SizesItem = .{}/;"	field
initBuffer	$SOKOL/gfx.zig	/^pub fn initBuffer(buf: Buffer, desc: BufferDesc) void {$/;"	function
initImage	$SOKOL/gfx.zig	/^pub fn initImage(img: Image, desc: ImageDesc) void {$/;"	function
initPass	$SOKOL/gfx.zig	/^pub fn initPass(pass: Pass, desc: PassDesc) void {$/;"	function
initPipeline	$SOKOL/gfx.zig	/^pub fn initPipeline(pip: Pipeline, desc: PipelineDesc) void {$/;"	function
initSampler	$SOKOL/gfx.zig	/^pub fn initSampler(smg: Sampler, desc: SamplerDesc) void {$/;"	function
initShader	$SOKOL/gfx.zig	/^pub fn initShader(shd: Shader, desc: ShaderDesc) void {$/;"	function
init_cb	$SOKOL/app.zig	/init_cb: ?*const fn () callconv(.C) void = null/;"	field
init_userdata_cb	$SOKOL/app.zig	/init_userdata_cb: ?*const fn (?*anyopaque) callconv(.C) void = null/;"	field
invalid_id	$SOKOL/gfx.zig	/^pub const invalid_id = 0/;"	constant
iosGetWindow	$SOKOL/app.zig	/^pub fn iosGetWindow() ?*const anyopaque {$/;"	function
ios_keyboard_resizes_canvas	$SOKOL/app.zig	/ios_keyboard_resizes_canvas: bool = false/;"	field
isFullscreen	$SOKOL/app.zig	/^pub fn isFullscreen() bool {$/;"	function
isvalid	$SOKOL/app.zig	/^pub fn isvalid() bool {$/;"	function
isvalid	$SOKOL/audio.zig	/^pub fn isvalid() bool {$/;"	function
isvalid	$SOKOL/gfx.zig	/^pub fn isvalid() bool {$/;"	function
key_code	$SOKOL/app.zig	/key_code: Keycode = .INVALID/;"	field
key_repeat	$SOKOL/app.zig	/key_repeat: bool = false/;"	field
keyboardShown	$SOKOL/app.zig	/^pub fn keyboardShown() bool {$/;"	function
label	$SOKOL/gfx.zig	/label: [*c]const u8 = null/;"	field
laptime	$SOKOL/time.zig	/^pub fn laptime(last_time: *u64) u64 {$/;"	function
last_char	$SOKOL/debugtext.zig	/last_char: u8 = 0/;"	field
layer	$SOKOL/debugtext.zig	/^pub fn layer(layer_id: i32) void {$/;"	function
layer	$SOKOL/gl.zig	/^pub fn layer(layer_id: i32) void {$/;"	function
layout	$SOKOL/gfx.zig	/layout: VertexLayoutState = .{}/;"	field
loadDefaultPipeline	$SOKOL/gl.zig	/^pub fn loadDefaultPipeline() void {$/;"	function
loadIdentity	$SOKOL/gl.zig	/^pub fn loadIdentity() void {$/;"	function
loadMatrix	$SOKOL/gl.zig	/^pub fn loadMatrix(m: *const f32) void {$/;"	function
loadPipeline	$SOKOL/gl.zig	/^pub fn loadPipeline(pip: Pipeline) void {$/;"	function
loadTransposeMatrix	$SOKOL/gl.zig	/^pub fn loadTransposeMatrix(m: *const f32) void {$/;"	function
load_action	$SOKOL/gfx.zig	/load_action: LoadAction = .DEFAULT/;"	field
lockMouse	$SOKOL/app.zig	/^pub fn lockMouse(lock: bool) void {$/;"	function
logger	$SOKOL/app.zig	/logger: Logger = .{}/;"	field
logger	$SOKOL/audio.zig	/logger: Logger = .{}/;"	field
logger	$SOKOL/debugtext.zig	/logger: Logger = .{}/;"	field
logger	$SOKOL/gfx.zig	/logger: Logger = .{}/;"	field
logger	$SOKOL/gl.zig	/logger: Logger = .{}/;"	field
lookat	$SOKOL/gl.zig	/^pub fn lookat(eye_x: f32, eye_y: f32, eye_z: f32, center_x: f32, center_y: f32, center_z: f32, up_x: f32, up_y: f32, up_z: f32) void {$/;"	function
macosGetWindow	$SOKOL/app.zig	/^pub fn macosGetWindow() ?*const anyopaque {$/;"	function
mag_filter	$SOKOL/gfx.zig	/mag_filter: Filter = .DEFAULT/;"	field
makeBuffer	$SOKOL/gfx.zig	/^pub fn makeBuffer(desc: BufferDesc) Buffer {$/;"	function
makeContext	$SOKOL/debugtext.zig	/^pub fn makeContext(desc: ContextDesc) Context {$/;"	function
makeContext	$SOKOL/gl.zig	/^pub fn makeContext(desc: ContextDesc) Context {$/;"	function
makeImage	$SOKOL/gfx.zig	/^pub fn makeImage(desc: ImageDesc) Image {$/;"	function
makePass	$SOKOL/gfx.zig	/^pub fn makePass(desc: PassDesc) Pass {$/;"	function
makePipeline	$SOKOL/gfx.zig	/^pub fn makePipeline(desc: PipelineDesc) Pipeline {$/;"	function
makePipeline	$SOKOL/gl.zig	/^pub fn makePipeline(desc: sg.PipelineDesc) Pipeline {$/;"	function
makeSampler	$SOKOL/gfx.zig	/^pub fn makeSampler(desc: SamplerDesc) Sampler {$/;"	function
makeShader	$SOKOL/gfx.zig	/^pub fn makeShader(desc: ShaderDesc) Shader {$/;"	function
mat4	$SOKOL/shape.zig	/^pub fn mat4(m: *const f32) Mat4 {$/;"	function
mat4Transpose	$SOKOL/shape.zig	/^pub fn mat4Transpose(m: *const f32) Mat4 {$/;"	function
matrixModeModelview	$SOKOL/gl.zig	/^pub fn matrixModeModelview() void {$/;"	function
matrixModeProjection	$SOKOL/gl.zig	/^pub fn matrixModeProjection() void {$/;"	function
matrixModeTexture	$SOKOL/gl.zig	/^pub fn matrixModeTexture() void {$/;"	function
max_anisotropy	$SOKOL/gfx.zig	/max_anisotropy: u32 = 0/;"	field
max_color_attachments	$SOKOL/gfx.zig	/^pub const max_color_attachments = 4/;"	constant
max_commands	$SOKOL/debugtext.zig	/max_commands: i32 = 0/;"	field
max_commands	$SOKOL/gl.zig	/max_commands: i32 = 0/;"	field
max_commit_listeners	$SOKOL/gfx.zig	/max_commit_listeners: i32 = 0/;"	field
max_dropped_file_path_length	$SOKOL/app.zig	/max_dropped_file_path_length: i32 = 0/;"	field
max_dropped_files	$SOKOL/app.zig	/max_dropped_files: i32 = 0/;"	field
max_iconimages	$SOKOL/app.zig	/^pub const max_iconimages = 8/;"	constant
max_image_array_layers	$SOKOL/gfx.zig	/max_image_array_layers: i32 = 0/;"	field
max_image_size_2d	$SOKOL/gfx.zig	/max_image_size_2d: i32 = 0/;"	field
max_image_size_3d	$SOKOL/gfx.zig	/max_image_size_3d: i32 = 0/;"	field
max_image_size_array	$SOKOL/gfx.zig	/max_image_size_array: i32 = 0/;"	field
max_image_size_cube	$SOKOL/gfx.zig	/max_image_size_cube: i32 = 0/;"	field
max_keycodes	$SOKOL/app.zig	/^pub const max_keycodes = 512/;"	constant
max_lod	$SOKOL/gfx.zig	/max_lod: f32 = 0.0/;"	field
max_mipmaps	$SOKOL/gfx.zig	/^pub const max_mipmaps = 16/;"	constant
max_mousebuttons	$SOKOL/app.zig	/^pub const max_mousebuttons = 3/;"	constant
max_shaderstage_images	$SOKOL/gfx.zig	/^pub const max_shaderstage_images = 12/;"	constant
max_shaderstage_imagesamplerpairs	$SOKOL/gfx.zig	/^pub const max_shaderstage_imagesamplerpairs = 12/;"	constant
max_shaderstage_samplers	$SOKOL/gfx.zig	/^pub const max_shaderstage_samplers = 8/;"	constant
max_shaderstage_ubs	$SOKOL/gfx.zig	/^pub const max_shaderstage_ubs = 4/;"	constant
max_texturearray_layers	$SOKOL/gfx.zig	/^pub const max_texturearray_layers = 128/;"	constant
max_touchpoints	$SOKOL/app.zig	/^pub const max_touchpoints = 8/;"	constant
max_ub_members	$SOKOL/gfx.zig	/^pub const max_ub_members = 16/;"	constant
max_vertex_attributes	$SOKOL/gfx.zig	/^pub const max_vertex_attributes = 16/;"	constant
max_vertex_attrs	$SOKOL/gfx.zig	/max_vertex_attrs: i32 = 0/;"	field
max_vertex_buffers	$SOKOL/gfx.zig	/^pub const max_vertex_buffers = 8/;"	constant
max_vertices	$SOKOL/gl.zig	/max_vertices: i32 = 0/;"	field
merge	$SOKOL/shape.zig	/merge: bool = false/;"	field
metal	$SOKOL/gfx.zig	/metal: MetalContextDesc = .{}/;"	field
metalGetDevice	$SOKOL/app.zig	/^pub fn metalGetDevice() ?*const anyopaque {$/;"	function
metalGetDrawable	$SOKOL/app.zig	/^pub fn metalGetDrawable() ?*const anyopaque {$/;"	function
metalGetRenderpassDescriptor	$SOKOL/app.zig	/^pub fn metalGetRenderpassDescriptor() ?*const anyopaque {$/;"	function
min_filter	$SOKOL/gfx.zig	/min_filter: Filter = .DEFAULT/;"	field
min_lod	$SOKOL/gfx.zig	/min_lod: f32 = 0.0/;"	field
mip_level	$SOKOL/gfx.zig	/mip_level: i32 = 0/;"	field
mipmap_filter	$SOKOL/gfx.zig	/mipmap_filter: Filter = .DEFAULT/;"	field
modifier_alt	$SOKOL/app.zig	/^pub const modifier_alt = 4/;"	constant
modifier_ctrl	$SOKOL/app.zig	/^pub const modifier_ctrl = 2/;"	constant
modifier_lmb	$SOKOL/app.zig	/^pub const modifier_lmb = 256/;"	constant
modifier_mmb	$SOKOL/app.zig	/^pub const modifier_mmb = 1024/;"	constant
modifier_rmb	$SOKOL/app.zig	/^pub const modifier_rmb = 512/;"	constant
modifier_shift	$SOKOL/app.zig	/^pub const modifier_shift = 1/;"	constant
modifier_super	$SOKOL/app.zig	/^pub const modifier_super = 8/;"	constant
modifiers	$SOKOL/app.zig	/modifiers: u32 = 0/;"	field
mouseLocked	$SOKOL/app.zig	/^pub fn mouseLocked() bool {$/;"	function
mouseShown	$SOKOL/app.zig	/^pub fn mouseShown() bool {$/;"	function
mouse_button	$SOKOL/app.zig	/mouse_button: Mousebutton = .LEFT/;"	field
mouse_dx	$SOKOL/app.zig	/mouse_dx: f32 = 0.0/;"	field
mouse_dy	$SOKOL/app.zig	/mouse_dy: f32 = 0.0/;"	field
mouse_x	$SOKOL/app.zig	/mouse_x: f32 = 0.0/;"	field
mouse_y	$SOKOL/app.zig	/mouse_y: f32 = 0.0/;"	field
move	$SOKOL/debugtext.zig	/^pub fn move(dx: f32, dy: f32) void {$/;"	function
moveX	$SOKOL/debugtext.zig	/^pub fn moveX(dx: f32) void {$/;"	function
moveY	$SOKOL/debugtext.zig	/^pub fn moveY(dy: f32) void {$/;"	function
mrt_independent_blend_state	$SOKOL/gfx.zig	/mrt_independent_blend_state: bool = false/;"	field
mrt_independent_write_mask	$SOKOL/gfx.zig	/mrt_independent_write_mask: bool = false/;"	field
msaa	$SOKOL/gfx.zig	/msaa: bool = false/;"	field
msaa_render_buffer	$SOKOL/gfx.zig	/msaa_render_buffer: u32 = 0/;"	field
msaa_resolve_framebuffer	$SOKOL/gfx.zig	/msaa_resolve_framebuffer: [4]u32 = [_]u32{0} ** 4/;"	field
mtlDevice	$SOKOL/gfx.zig	/^pub fn mtlDevice() ?*const anyopaque {$/;"	function
mtlQueryBufferInfo	$SOKOL/gfx.zig	/^pub fn mtlQueryBufferInfo(buf: Buffer) MtlBufferInfo {$/;"	function
mtlQueryImageInfo	$SOKOL/gfx.zig	/^pub fn mtlQueryImageInfo(img: Image) MtlImageInfo {$/;"	function
mtlQueryPipelineInfo	$SOKOL/gfx.zig	/^pub fn mtlQueryPipelineInfo(pip: Pipeline) MtlPipelineInfo {$/;"	function
mtlQuerySamplerInfo	$SOKOL/gfx.zig	/^pub fn mtlQuerySamplerInfo(smp: Sampler) MtlSamplerInfo {$/;"	function
mtlQueryShaderInfo	$SOKOL/gfx.zig	/^pub fn mtlQueryShaderInfo(shd: Shader) MtlShaderInfo {$/;"	function
mtlRenderCommandEncoder	$SOKOL/gfx.zig	/^pub fn mtlRenderCommandEncoder() ?*const anyopaque {$/;"	function
mtl_buffers	$SOKOL/gfx.zig	/mtl_buffers: [2]?*const anyopaque = [_]?*const anyopaque{null} ** 2/;"	field
mtl_force_managed_storage_mode	$SOKOL/gfx.zig	/mtl_force_managed_storage_mode: bool = false/;"	field
mtl_sampler	$SOKOL/gfx.zig	/mtl_sampler: ?*const anyopaque = null/;"	field
mtl_textures	$SOKOL/gfx.zig	/mtl_textures: [2]?*const anyopaque = [_]?*const anyopaque{null} ** 2/;"	field
multMatrix	$SOKOL/gl.zig	/^pub fn multMatrix(m: *const f32) void {$/;"	function
multTransposeMatrix	$SOKOL/gl.zig	/^pub fn multTransposeMatrix(m: *const f32) void {$/;"	function
multisampled	$SOKOL/gfx.zig	/multisampled: bool = false/;"	field
name	$SOKOL/gfx.zig	/name: [*c]const u8 = null/;"	field
normal	$SOKOL/shape.zig	/normal: u32 = 0/;"	field
normalVertexAttrState	$SOKOL/shape.zig	/^pub fn normalVertexAttrState() sg.VertexAttrState {$/;"	function
now	$SOKOL/time.zig	/^pub fn now() u64 {$/;"	function
num	$SOKOL/shape.zig	/num: u32 = 0/;"	field
num_active_texture	$SOKOL/gfx.zig	/num_active_texture: u32 = 0/;"	field
num_added	$SOKOL/gfx.zig	/num_added: u32 = 0/;"	field
num_append_buffer	$SOKOL/gfx.zig	/num_append_buffer: u32 = 0/;"	field
num_apply_bindings	$SOKOL/gfx.zig	/num_apply_bindings: u32 = 0/;"	field
num_apply_pipeline	$SOKOL/gfx.zig	/num_apply_pipeline: u32 = 0/;"	field
num_apply_scissor_rect	$SOKOL/gfx.zig	/num_apply_scissor_rect: u32 = 0/;"	field
num_apply_uniforms	$SOKOL/gfx.zig	/num_apply_uniforms: u32 = 0/;"	field
num_apply_viewport	$SOKOL/gfx.zig	/num_apply_viewport: u32 = 0/;"	field
num_bind_buffer	$SOKOL/gfx.zig	/num_bind_buffer: u32 = 0/;"	field
num_bind_sampler	$SOKOL/gfx.zig	/num_bind_sampler: u32 = 0/;"	field
num_bind_texture	$SOKOL/gfx.zig	/num_bind_texture: u32 = 0/;"	field
num_bindgroup_cache_collisions	$SOKOL/gfx.zig	/num_bindgroup_cache_collisions: u32 = 0/;"	field
num_bindgroup_cache_hash_vs_key_mismatch	$SOKOL/gfx.zig	/num_bindgroup_cache_hash_vs_key_mismatch: u32 = 0/;"	field
num_bindgroup_cache_hits	$SOKOL/gfx.zig	/num_bindgroup_cache_hits: u32 = 0/;"	field
num_bindgroup_cache_misses	$SOKOL/gfx.zig	/num_bindgroup_cache_misses: u32 = 0/;"	field
num_channels	$SOKOL/audio.zig	/num_channels: i32 = 0/;"	field
num_clear_depth_stencil_view	$SOKOL/gfx.zig	/num_clear_depth_stencil_view: u32 = 0/;"	field
num_clear_render_target_view	$SOKOL/gfx.zig	/num_clear_render_target_view: u32 = 0/;"	field
num_create_bindgroup	$SOKOL/gfx.zig	/num_create_bindgroup: u32 = 0/;"	field
num_disable_vertex_attrib_array	$SOKOL/gfx.zig	/num_disable_vertex_attrib_array: u32 = 0/;"	field
num_discard_bindgroup	$SOKOL/gfx.zig	/num_discard_bindgroup: u32 = 0/;"	field
num_draw	$SOKOL/gfx.zig	/num_draw: u32 = 0/;"	field
num_draw_indexed	$SOKOL/gfx.zig	/num_draw_indexed: u32 = 0/;"	field
num_draw_indexed_instanced	$SOKOL/gfx.zig	/num_draw_indexed_instanced: u32 = 0/;"	field
num_draw_instanced	$SOKOL/gfx.zig	/num_draw_instanced: u32 = 0/;"	field
num_elements	$SOKOL/shape.zig	/num_elements: u32 = 0/;"	field
num_enable_vertex_attrib_array	$SOKOL/gfx.zig	/num_enable_vertex_attrib_array: u32 = 0/;"	field
num_garbage_collected	$SOKOL/gfx.zig	/num_garbage_collected: u32 = 0/;"	field
num_ia_set_index_buffer	$SOKOL/gfx.zig	/num_ia_set_index_buffer: u32 = 0/;"	field
num_ia_set_input_layout	$SOKOL/gfx.zig	/num_ia_set_input_layout: u32 = 0/;"	field
num_ia_set_primitive_topology	$SOKOL/gfx.zig	/num_ia_set_primitive_topology: u32 = 0/;"	field
num_ia_set_vertex_buffers	$SOKOL/gfx.zig	/num_ia_set_vertex_buffers: u32 = 0/;"	field
num_inflight_frames	$SOKOL/gfx.zig	/^pub const num_inflight_frames = 2/;"	constant
num_map	$SOKOL/gfx.zig	/num_map: u32 = 0/;"	field
num_mipmaps	$SOKOL/gfx.zig	/num_mipmaps: i32 = 0/;"	field
num_om_set_blend_state	$SOKOL/gfx.zig	/num_om_set_blend_state: u32 = 0/;"	field
num_om_set_depth_stencil_state	$SOKOL/gfx.zig	/num_om_set_depth_stencil_state: u32 = 0/;"	field
num_om_set_render_targets	$SOKOL/gfx.zig	/num_om_set_render_targets: u32 = 0/;"	field
num_packets	$SOKOL/audio.zig	/num_packets: i32 = 0/;"	field
num_passes	$SOKOL/gfx.zig	/num_passes: u32 = 0/;"	field
num_ps_set_constant_buffers	$SOKOL/gfx.zig	/num_ps_set_constant_buffers: u32 = 0/;"	field
num_ps_set_samplers	$SOKOL/gfx.zig	/num_ps_set_samplers: u32 = 0/;"	field
num_ps_set_shader	$SOKOL/gfx.zig	/num_ps_set_shader: u32 = 0/;"	field
num_ps_set_shader_resources	$SOKOL/gfx.zig	/num_ps_set_shader_resources: u32 = 0/;"	field
num_released	$SOKOL/gfx.zig	/num_released: u32 = 0/;"	field
num_render_state	$SOKOL/gfx.zig	/num_render_state: u32 = 0/;"	field
num_resolve_subresource	$SOKOL/gfx.zig	/num_resolve_subresource: u32 = 0/;"	field
num_rs_set_state	$SOKOL/gfx.zig	/num_rs_set_state: u32 = 0/;"	field
num_set_bindgroup	$SOKOL/gfx.zig	/num_set_bindgroup: u32 = 0/;"	field
num_set_blend_color	$SOKOL/gfx.zig	/num_set_blend_color: u32 = 0/;"	field
num_set_cull_mode	$SOKOL/gfx.zig	/num_set_cull_mode: u32 = 0/;"	field
num_set_depth_bias	$SOKOL/gfx.zig	/num_set_depth_bias: u32 = 0/;"	field
num_set_depth_stencil_state	$SOKOL/gfx.zig	/num_set_depth_stencil_state: u32 = 0/;"	field
num_set_fragment_buffer_offset	$SOKOL/gfx.zig	/num_set_fragment_buffer_offset: u32 = 0/;"	field
num_set_fragment_sampler_state	$SOKOL/gfx.zig	/num_set_fragment_sampler_state: u32 = 0/;"	field
num_set_fragment_texture	$SOKOL/gfx.zig	/num_set_fragment_texture: u32 = 0/;"	field
num_set_front_facing_winding	$SOKOL/gfx.zig	/num_set_front_facing_winding: u32 = 0/;"	field
num_set_index_buffer	$SOKOL/gfx.zig	/num_set_index_buffer: u32 = 0/;"	field
num_set_render_pipeline_state	$SOKOL/gfx.zig	/num_set_render_pipeline_state: u32 = 0/;"	field
num_set_stencil_reference_value	$SOKOL/gfx.zig	/num_set_stencil_reference_value: u32 = 0/;"	field
num_set_vertex_buffer	$SOKOL/gfx.zig	/num_set_vertex_buffer: u32 = 0/;"	field
num_set_vertex_buffer_offset	$SOKOL/gfx.zig	/num_set_vertex_buffer_offset: u32 = 0/;"	field
num_set_vertex_sampler_state	$SOKOL/gfx.zig	/num_set_vertex_sampler_state: u32 = 0/;"	field
num_set_vertex_texture	$SOKOL/gfx.zig	/num_set_vertex_texture: u32 = 0/;"	field
num_shader_stages	$SOKOL/gfx.zig	/^pub const num_shader_stages = 2/;"	constant
num_skip_redundant_bindgroup	$SOKOL/gfx.zig	/num_skip_redundant_bindgroup: u32 = 0/;"	field
num_skip_redundant_index_buffer	$SOKOL/gfx.zig	/num_skip_redundant_index_buffer: u32 = 0/;"	field
num_skip_redundant_vertex_buffer	$SOKOL/gfx.zig	/num_skip_redundant_vertex_buffer: u32 = 0/;"	field
num_slices	$SOKOL/gfx.zig	/num_slices: i32 = 0/;"	field
num_slots	$SOKOL/gfx.zig	/num_slots: i32 = 0/;"	field
num_touches	$SOKOL/app.zig	/num_touches: i32 = 0/;"	field
num_uniform	$SOKOL/gfx.zig	/num_uniform: u32 = 0/;"	field
num_unmap	$SOKOL/gfx.zig	/num_unmap: u32 = 0/;"	field
num_update_buffer	$SOKOL/gfx.zig	/num_update_buffer: u32 = 0/;"	field
num_update_image	$SOKOL/gfx.zig	/num_update_image: u32 = 0/;"	field
num_update_subresource	$SOKOL/gfx.zig	/num_update_subresource: u32 = 0/;"	field
num_use_program	$SOKOL/gfx.zig	/num_use_program: u32 = 0/;"	field
num_vertex_attrib_divisor	$SOKOL/gfx.zig	/num_vertex_attrib_divisor: u32 = 0/;"	field
num_vertex_attrib_pointer	$SOKOL/gfx.zig	/num_vertex_attrib_pointer: u32 = 0/;"	field
num_vs_set_constant_buffers	$SOKOL/gfx.zig	/num_vs_set_constant_buffers: u32 = 0/;"	field
num_vs_set_samplers	$SOKOL/gfx.zig	/num_vs_set_samplers: u32 = 0/;"	field
num_vs_set_shader	$SOKOL/gfx.zig	/num_vs_set_shader: u32 = 0/;"	field
num_vs_set_shader_resources	$SOKOL/gfx.zig	/num_vs_set_shader_resources: u32 = 0/;"	field
offset	$SOKOL/gfx.zig	/offset: i32 = 0/;"	field
op_alpha	$SOKOL/gfx.zig	/op_alpha: BlendOp = .DEFAULT/;"	field
op_rgb	$SOKOL/gfx.zig	/op_rgb: BlendOp = .DEFAULT/;"	field
origin	$SOKOL/debugtext.zig	/^pub fn origin(x: f32, y: f32) void {$/;"	function
origin_top_left	$SOKOL/gfx.zig	/origin_top_left: bool = false/;"	field
ortho	$SOKOL/gl.zig	/^pub fn ortho(l: f32, r: f32, b: f32, t: f32, n: f32, f: f32) void {$/;"	function
packet_frames	$SOKOL/audio.zig	/packet_frames: i32 = 0/;"	field
pass	$SOKOL/gfx.zig	/pass: FrameStatsD3d11Pass = .{}/;"	field
pass_op	$SOKOL/gfx.zig	/pass_op: StencilOp = .DEFAULT/;"	field
pass_pool_size	$SOKOL/gfx.zig	/pass_pool_size: i32 = 0/;"	field
perspective	$SOKOL/gl.zig	/^pub fn perspective(fov_y: f32, aspect: f32, z_near: f32, z_far: f32) void {$/;"	function
pip	$SOKOL/gfx.zig	/pip: ?*const anyopaque = null/;"	field
pipeline	$SOKOL/gfx.zig	/pipeline: FrameStatsMetalPipeline = .{}/;"	field
pipeline_pool_size	$SOKOL/gfx.zig	/pipeline_pool_size: i32 = 0/;"	field
pipeline_pool_size	$SOKOL/gl.zig	/pipeline_pool_size: i32 = 0/;"	field
pixel_format	$SOKOL/gfx.zig	/pixel_format: PixelFormat = .DEFAULT/;"	field
pixels	$SOKOL/app.zig	/pixels: Range = .{}/;"	field
planeSizes	$SOKOL/shape.zig	/^pub fn planeSizes(tiles: u32) Sizes {$/;"	function
pointSize	$SOKOL/gl.zig	/^pub fn pointSize(s: f32) void {$/;"	function
popDebugGroup	$SOKOL/gfx.zig	/^pub fn popDebugGroup() void {$/;"	function
popMatrix	$SOKOL/gl.zig	/^pub fn popMatrix() void {$/;"	function
popPipeline	$SOKOL/gl.zig	/^pub fn popPipeline() void {$/;"	function
pos	$SOKOL/debugtext.zig	/^pub fn pos(x: f32, y: f32) void {$/;"	function
posX	$SOKOL/debugtext.zig	/^pub fn posX(x: f32) void {$/;"	function
posY	$SOKOL/debugtext.zig	/^pub fn posY(y: f32) void {$/;"	function
pos_x	$SOKOL/app.zig	/pos_x: f32 = 0.0/;"	field
pos_y	$SOKOL/app.zig	/pos_y: f32 = 0.0/;"	field
positionVertexAttrState	$SOKOL/shape.zig	/^pub fn positionVertexAttrState() sg.VertexAttrState {$/;"	function
primitive_type	$SOKOL/gfx.zig	/primitive_type: PrimitiveType = .DEFAULT/;"	field
print	$SOKOL/debugtext.zig	/^pub fn print(comptime fmt: anytype, args: anytype) void {$/;"	function
printf_buf_size	$SOKOL/debugtext.zig	/printf_buf_size: i32 = 0/;"	field
prog	$SOKOL/gfx.zig	/prog: u32 = 0/;"	field
ptr	$SOKOL/app.zig	/ptr: ?*const anyopaque = null/;"	field
ptr	$SOKOL/debugtext.zig	/ptr: ?*const anyopaque = null/;"	field
ptr	$SOKOL/gfx.zig	/ptr: ?*const anyopaque = null/;"	field
ptr	$SOKOL/shape.zig	/ptr: ?*const anyopaque = null/;"	field
push	$SOKOL/audio.zig	/^pub fn push(frames: *const f32, num_frames: i32) i32 {$/;"	function
pushDebugGroup	$SOKOL/gfx.zig	/^pub fn pushDebugGroup(name: [:0]const u8) void {$/;"	function
pushMatrix	$SOKOL/gl.zig	/^pub fn pushMatrix() void {$/;"	function
pushPipeline	$SOKOL/gl.zig	/^pub fn pushPipeline() void {$/;"	function
putc	$SOKOL/debugtext.zig	/^pub fn putc(c: u8) void {$/;"	function
putr	$SOKOL/debugtext.zig	/^pub fn putr(str: [:0]const u8, len: i32) void {$/;"	function
puts	$SOKOL/debugtext.zig	/^pub fn puts(str: [:0]const u8) void {$/;"	function
queryBackend	$SOKOL/gfx.zig	/^pub fn queryBackend() Backend {$/;"	function
queryBufferDefaults	$SOKOL/gfx.zig	/^pub fn queryBufferDefaults(desc: BufferDesc) BufferDesc {$/;"	function
queryBufferDesc	$SOKOL/gfx.zig	/^pub fn queryBufferDesc(buf: Buffer) BufferDesc {$/;"	function
queryBufferInfo	$SOKOL/gfx.zig	/^pub fn queryBufferInfo(buf: Buffer) BufferInfo {$/;"	function
queryBufferOverflow	$SOKOL/gfx.zig	/^pub fn queryBufferOverflow(buf: Buffer) bool {$/;"	function
queryBufferState	$SOKOL/gfx.zig	/^pub fn queryBufferState(buf: Buffer) ResourceState {$/;"	function
queryBufferWillOverflow	$SOKOL/gfx.zig	/^pub fn queryBufferWillOverflow(buf: Buffer, size: usize) bool {$/;"	function
queryDesc	$SOKOL/app.zig	/^pub fn queryDesc() Desc {$/;"	function
queryDesc	$SOKOL/audio.zig	/^pub fn queryDesc() Desc {$/;"	function
queryDesc	$SOKOL/gfx.zig	/^pub fn queryDesc() Desc {$/;"	function
queryFeatures	$SOKOL/gfx.zig	/^pub fn queryFeatures() Features {$/;"	function
queryFrameStats	$SOKOL/gfx.zig	/^pub fn queryFrameStats() FrameStats {$/;"	function
queryImageDefaults	$SOKOL/gfx.zig	/^pub fn queryImageDefaults(desc: ImageDesc) ImageDesc {$/;"	function
queryImageDesc	$SOKOL/gfx.zig	/^pub fn queryImageDesc(img: Image) ImageDesc {$/;"	function
queryImageInfo	$SOKOL/gfx.zig	/^pub fn queryImageInfo(img: Image) ImageInfo {$/;"	function
queryImageState	$SOKOL/gfx.zig	/^pub fn queryImageState(img: Image) ResourceState {$/;"	function
queryLimits	$SOKOL/gfx.zig	/^pub fn queryLimits() Limits {$/;"	function
queryPassDefaults	$SOKOL/gfx.zig	/^pub fn queryPassDefaults(desc: PassDesc) PassDesc {$/;"	function
queryPassDesc	$SOKOL/gfx.zig	/^pub fn queryPassDesc(pass: Pass) PassDesc {$/;"	function
queryPassInfo	$SOKOL/gfx.zig	/^pub fn queryPassInfo(pass: Pass) PassInfo {$/;"	function
queryPassState	$SOKOL/gfx.zig	/^pub fn queryPassState(pass: Pass) ResourceState {$/;"	function
queryPipelineDefaults	$SOKOL/gfx.zig	/^pub fn queryPipelineDefaults(desc: PipelineDesc) PipelineDesc {$/;"	function
queryPipelineDesc	$SOKOL/gfx.zig	/^pub fn queryPipelineDesc(pip: Pipeline) PipelineDesc {$/;"	function
queryPipelineInfo	$SOKOL/gfx.zig	/^pub fn queryPipelineInfo(pip: Pipeline) PipelineInfo {$/;"	function
queryPipelineState	$SOKOL/gfx.zig	/^pub fn queryPipelineState(pip: Pipeline) ResourceState {$/;"	function
queryPixelformat	$SOKOL/gfx.zig	/^pub fn queryPixelformat(fmt: PixelFormat) PixelformatInfo {$/;"	function
queryRowPitch	$SOKOL/gfx.zig	/^pub fn queryRowPitch(fmt: PixelFormat, width: i32, row_align_bytes: i32) i32 {$/;"	function
querySamplerDefaults	$SOKOL/gfx.zig	/^pub fn querySamplerDefaults(desc: SamplerDesc) SamplerDesc {$/;"	function
querySamplerDesc	$SOKOL/gfx.zig	/^pub fn querySamplerDesc(smp: Sampler) SamplerDesc {$/;"	function
querySamplerInfo	$SOKOL/gfx.zig	/^pub fn querySamplerInfo(smp: Sampler) SamplerInfo {$/;"	function
querySamplerState	$SOKOL/gfx.zig	/^pub fn querySamplerState(smp: Sampler) ResourceState {$/;"	function
queryShaderDefaults	$SOKOL/gfx.zig	/^pub fn queryShaderDefaults(desc: ShaderDesc) ShaderDesc {$/;"	function
queryShaderDesc	$SOKOL/gfx.zig	/^pub fn queryShaderDesc(shd: Shader) ShaderDesc {$/;"	function
queryShaderInfo	$SOKOL/gfx.zig	/^pub fn queryShaderInfo(shd: Shader) ShaderInfo {$/;"	function
queryShaderState	$SOKOL/gfx.zig	/^pub fn queryShaderState(shd: Shader) ResourceState {$/;"	function
querySurfacePitch	$SOKOL/gfx.zig	/^pub fn querySurfacePitch(fmt: PixelFormat, width: i32, height: i32, row_align_bytes: i32) i32 {$/;"	function
quit	$SOKOL/app.zig	/^pub fn quit() void {$/;"	function
radius	$SOKOL/shape.zig	/radius: f32 = 0.0/;"	field
random_colors	$SOKOL/shape.zig	/random_colors: bool = false/;"	field
read_mask	$SOKOL/gfx.zig	/read_mask: u8 = 0/;"	field
ref	$SOKOL/gfx.zig	/ref: u8 = 0/;"	field
removeCommitListener	$SOKOL/gfx.zig	/^pub fn removeCommitListener(listener: CommitListener) bool {$/;"	function
render	$SOKOL/gfx.zig	/render: bool = false/;"	field
render_target	$SOKOL/gfx.zig	/render_target: bool = false/;"	field
render_target_view_cb	$SOKOL/gfx.zig	/render_target_view_cb: ?*const fn () callconv(.C) ?*const anyopaque = null/;"	field
render_target_view_userdata_cb	$SOKOL/gfx.zig	/render_target_view_userdata_cb: ?*const fn (?*anyopaque) callconv(.C) ?*const anyopaque = null/;"	field
render_view_cb	$SOKOL/gfx.zig	/render_view_cb: ?*const fn () callconv(.C) ?*const anyopaque = null/;"	field
render_view_userdata_cb	$SOKOL/gfx.zig	/render_view_userdata_cb: ?*const fn (?*anyopaque) callconv(.C) ?*const anyopaque = null/;"	field
renderpass_descriptor_cb	$SOKOL/gfx.zig	/renderpass_descriptor_cb: ?*const fn () callconv(.C) ?*const anyopaque = null/;"	field
renderpass_descriptor_userdata_cb	$SOKOL/gfx.zig	/renderpass_descriptor_userdata_cb: ?*const fn (?*anyopaque) callconv(.C) ?*const anyopaque = null/;"	field
requestQuit	$SOKOL/app.zig	/^pub fn requestQuit() void {$/;"	function
res	$SOKOL/gfx.zig	/res: ?*const anyopaque = null/;"	field
res_id	$SOKOL/gfx.zig	/res_id: u32 = 0/;"	field
resetStateCache	$SOKOL/gfx.zig	/^pub fn resetStateCache() void {$/;"	function
resolve_attachments	$SOKOL/gfx.zig	/resolve_attachments: [4]PassAttachmentDesc = [_]PassAttachmentDesc{.{}} ** 4/;"	field
resolve_rtv	$SOKOL/gfx.zig	/resolve_rtv: [4]?*const anyopaque = [_]?*const anyopaque{null} ** 4/;"	field
resolve_view	$SOKOL/gfx.zig	/resolve_view: [4]?*const anyopaque = [_]?*const anyopaque{null} ** 4/;"	field
resolve_view_cb	$SOKOL/gfx.zig	/resolve_view_cb: ?*const fn () callconv(.C) ?*const anyopaque = null/;"	field
resolve_view_userdata_cb	$SOKOL/gfx.zig	/resolve_view_userdata_cb: ?*const fn (?*anyopaque) callconv(.C) ?*const anyopaque = null/;"	field
ring_radius	$SOKOL/shape.zig	/ring_radius: f32 = 0.0/;"	field
rings	$SOKOL/shape.zig	/rings: u16 = 0/;"	field
rotate	$SOKOL/gl.zig	/^pub fn rotate(angle_rad: f32, x: f32, y: f32, z: f32) void {$/;"	function
roundToCommonRefreshRate	$SOKOL/time.zig	/^pub fn roundToCommonRefreshRate(frame_ticks: u64) u64 {$/;"	function
rps	$SOKOL/gfx.zig	/rps: ?*const anyopaque = null/;"	field
run	$SOKOL/app.zig	/^pub fn run(desc: Desc) void {$/;"	function
sample	$SOKOL/gfx.zig	/sample: bool = false/;"	field
sampleCount	$SOKOL/app.zig	/^pub fn sampleCount() i32 {$/;"	function
sampleRate	$SOKOL/audio.zig	/^pub fn sampleRate() i32 {$/;"	function
sample_count	$SOKOL/app.zig	/sample_count: i32 = 0/;"	field
sample_count	$SOKOL/debugtext.zig	/sample_count: i32 = 0/;"	field
sample_count	$SOKOL/gfx.zig	/sample_count: i32 = 0/;"	field
sample_count	$SOKOL/gl.zig	/sample_count: i32 = 0/;"	field
sample_rate	$SOKOL/audio.zig	/sample_rate: i32 = 0/;"	field
sample_type	$SOKOL/gfx.zig	/sample_type: ImageSampleType = .DEFAULT/;"	field
sampler_pool_size	$SOKOL/gfx.zig	/sampler_pool_size: i32 = 0/;"	field
sampler_slot	$SOKOL/gfx.zig	/sampler_slot: i32 = 0/;"	field
sampler_type	$SOKOL/gfx.zig	/sampler_type: SamplerType = .DEFAULT/;"	field
samplers	$SOKOL/gfx.zig	/samplers: [8]ShaderSamplerDesc = [_]ShaderSamplerDesc{.{}} ** 8/;"	field
scale	$SOKOL/gl.zig	/^pub fn scale(x: f32, y: f32, z: f32) void {$/;"	function
scissorRect	$SOKOL/gl.zig	/^pub fn scissorRect(x: i32, y: i32, w: i32, h: i32, origin_top_left: bool) void {$/;"	function
scissorRectf	$SOKOL/gl.zig	/^pub fn scissorRectf(x: f32, y: f32, w: f32, h: f32, origin_top_left: bool) void {$/;"	function
scroll_x	$SOKOL/app.zig	/scroll_x: f32 = 0.0/;"	field
scroll_y	$SOKOL/app.zig	/scroll_y: f32 = 0.0/;"	field
sec	$SOKOL/time.zig	/^pub fn sec(ticks: u64) f64 {$/;"	function
sem_index	$SOKOL/gfx.zig	/sem_index: i32 = 0/;"	field
sem_name	$SOKOL/gfx.zig	/sem_name: [*c]const u8 = null/;"	field
setClipboardString	$SOKOL/app.zig	/^pub fn setClipboardString(str: [:0]const u8) void {$/;"	function
setContext	$SOKOL/debugtext.zig	/^pub fn setContext(ctx: Context) void {$/;"	function
setContext	$SOKOL/gl.zig	/^pub fn setContext(ctx: Context) void {$/;"	function
setIcon	$SOKOL/app.zig	/^pub fn setIcon(icon_desc: IconDesc) void {$/;"	function
setMouseCursor	$SOKOL/app.zig	/^pub fn setMouseCursor(cursor: MouseCursor) void {$/;"	function
setWindowTitle	$SOKOL/app.zig	/^pub fn setWindowTitle(str: [:0]const u8) void {$/;"	function
setup	$SOKOL/audio.zig	/^pub fn setup(desc: Desc) void {$/;"	function
setup	$SOKOL/debugtext.zig	/^pub fn setup(desc: Desc) void {$/;"	function
setup	$SOKOL/gfx.zig	/^pub fn setup(desc: Desc) void {$/;"	function
setup	$SOKOL/gl.zig	/^pub fn setup(desc: Desc) void {$/;"	function
setup	$SOKOL/time.zig	/^pub fn setup() void {$/;"	function
setupContext	$SOKOL/gfx.zig	/^pub fn setupContext() Context {$/;"	function
shader	$SOKOL/gfx.zig	/shader: Shader = .{}/;"	field
shader_pool_size	$SOKOL/gfx.zig	/shader_pool_size: i32 = 0/;"	field
shape_offset	$SOKOL/shape.zig	/shape_offset: usize = 0/;"	field
showKeyboard	$SOKOL/app.zig	/^pub fn showKeyboard(show: bool) void {$/;"	function
showMouse	$SOKOL/app.zig	/^pub fn showMouse(show: bool) void {$/;"	function
shutdown	$SOKOL/audio.zig	/^pub fn shutdown() void {$/;"	function
shutdown	$SOKOL/debugtext.zig	/^pub fn shutdown() void {$/;"	function
shutdown	$SOKOL/gfx.zig	/^pub fn shutdown() void {$/;"	function
shutdown	$SOKOL/gl.zig	/^pub fn shutdown() void {$/;"	function
sides	$SOKOL/shape.zig	/sides: u16 = 0/;"	field
since	$SOKOL/time.zig	/^pub fn since(start_ticks: u64) u64 {$/;"	function
size	$SOKOL/app.zig	/size: usize = 0/;"	field
size	$SOKOL/debugtext.zig	/size: usize = 0/;"	field
size	$SOKOL/gfx.zig	/size: usize = 0/;"	field
size	$SOKOL/shape.zig	/size: usize = 0/;"	field
size_append_buffer	$SOKOL/gfx.zig	/size_append_buffer: u32 = 0/;"	field
size_apply_uniforms	$SOKOL/gfx.zig	/size_apply_uniforms: u32 = 0/;"	field
size_update_buffer	$SOKOL/gfx.zig	/size_update_buffer: u32 = 0/;"	field
size_update_image	$SOKOL/gfx.zig	/size_update_image: u32 = 0/;"	field
size_write_buffer	$SOKOL/gfx.zig	/size_write_buffer: u32 = 0/;"	field
slice	$SOKOL/gfx.zig	/slice: i32 = 0/;"	field
slices	$SOKOL/shape.zig	/slices: u16 = 0/;"	field
slot	$SOKOL/gfx.zig	/slot: SlotInfo = .{}/;"	field
smp	$SOKOL/gfx.zig	/smp: u32 = 0/;"	field
sokol_default	$SOKOL/app.zig	/sokol_default: bool = false/;"	field
source	$SOKOL/gfx.zig	/source: [*c]const u8 = null/;"	field
sphereSizes	$SOKOL/shape.zig	/^pub fn sphereSizes(slices: u32, stacks: u32) Sizes {$/;"	function
src_factor_alpha	$SOKOL/gfx.zig	/src_factor_alpha: BlendFactor = .DEFAULT/;"	field
src_factor_rgb	$SOKOL/gfx.zig	/src_factor_rgb: BlendFactor = .DEFAULT/;"	field
srv	$SOKOL/gfx.zig	/srv: ?*const anyopaque = null/;"	field
stacks	$SOKOL/shape.zig	/stacks: u16 = 0/;"	field
state	$SOKOL/gfx.zig	/state: ResourceState = .INITIAL/;"	field
stencil	$SOKOL/gfx.zig	/stencil: StencilState = .{}/;"	field
step_func	$SOKOL/gfx.zig	/step_func: VertexStep = .DEFAULT/;"	field
step_rate	$SOKOL/gfx.zig	/step_rate: i32 = 0/;"	field
store_action	$SOKOL/gfx.zig	/store_action: StoreAction = .DEFAULT/;"	field
stream_cb	$SOKOL/audio.zig	/stream_cb: ?*const fn ([*c]f32, i32, i32) callconv(.C) void = null/;"	field
stream_userdata_cb	$SOKOL/audio.zig	/stream_userdata_cb: ?*const fn ([*c]f32, i32, i32, ?*anyopaque) callconv(.C) void = null/;"	field
stride	$SOKOL/gfx.zig	/stride: i32 = 0/;"	field
subimage	$SOKOL/gfx.zig	/subimage: [6][16]Range = [_][16]Range{[_]Range{.{}} ** 16} ** 6/;"	field
succeeded	$SOKOL/app.zig	/succeeded: bool = false/;"	field
suspended	$SOKOL/audio.zig	/^pub fn suspended() bool {$/;"	function
swap_interval	$SOKOL/app.zig	/swap_interval: i32 = 0/;"	field
t2f	$SOKOL/gl.zig	/^pub fn t2f(u: f32, v: f32) void {$/;"	function
tab_width	$SOKOL/debugtext.zig	/tab_width: i32 = 0/;"	field
tex	$SOKOL/gfx.zig	/tex: [2]u32 = [_]u32{0} ** 2/;"	field
tex2d	$SOKOL/gfx.zig	/tex2d: ?*const anyopaque = null/;"	field
tex3d	$SOKOL/gfx.zig	/tex3d: ?*const anyopaque = null/;"	field
tex_target	$SOKOL/gfx.zig	/tex_target: u32 = 0/;"	field
texcoordVertexAttrState	$SOKOL/shape.zig	/^pub fn texcoordVertexAttrState() sg.VertexAttrState {$/;"	function
texture	$SOKOL/gl.zig	/^pub fn texture(img: sg.Image, smp: sg.Sampler) void {$/;"	function
tiles	$SOKOL/shape.zig	/tiles: u16 = 0/;"	field
toggleFullscreen	$SOKOL/app.zig	/^pub fn toggleFullscreen() void {$/;"	function
torusSizes	$SOKOL/shape.zig	/^pub fn torusSizes(sides: u32, rings: u32) Sizes {$/;"	function
touches	$SOKOL/app.zig	/touches: [8]Touchpoint = [_]Touchpoint{.{}} ** 8/;"	field
transform	$SOKOL/shape.zig	/transform: Mat4 = .{}/;"	field
translate	$SOKOL/gl.zig	/^pub fn translate(x: f32, y: f32, z: f32) void {$/;"	function
type	$SOKOL/app.zig	/type: EventType = .INVALID/;"	field
type	$SOKOL/gfx.zig	/type: UniformType = .INVALID/;"	field
type_info	$SOKOL/debugtext.zig	/const type_info = @typeInfo(@TypeOf(val))/;"	constant
type_info	$SOKOL/gfx.zig	/const type_info = @typeInfo(@TypeOf(val))/;"	constant
type_info	$SOKOL/shape.zig	/const type_info = @typeInfo(@TypeOf(val))/;"	constant
uniform_blocks	$SOKOL/gfx.zig	/uniform_blocks: [4]ShaderUniformBlockDesc = [_]ShaderUniformBlockDesc{.{}} ** 4/;"	field
uniform_buffer_size	$SOKOL/gfx.zig	/uniform_buffer_size: i32 = 0/;"	field
uniforms	$SOKOL/gfx.zig	/uniforms: [16]ShaderUniformDesc = [_]ShaderUniformDesc{.{}} ** 16/;"	field
uninitBuffer	$SOKOL/gfx.zig	/^pub fn uninitBuffer(buf: Buffer) void {$/;"	function
uninitImage	$SOKOL/gfx.zig	/^pub fn uninitImage(img: Image) void {$/;"	function
uninitPass	$SOKOL/gfx.zig	/^pub fn uninitPass(pass: Pass) void {$/;"	function
uninitPipeline	$SOKOL/gfx.zig	/^pub fn uninitPipeline(pip: Pipeline) void {$/;"	function
uninitSampler	$SOKOL/gfx.zig	/^pub fn uninitSampler(smp: Sampler) void {$/;"	function
uninitShader	$SOKOL/gfx.zig	/^pub fn uninitShader(shd: Shader) void {$/;"	function
upd_frame_index	$SOKOL/gfx.zig	/upd_frame_index: u32 = 0/;"	field
updateBuffer	$SOKOL/gfx.zig	/^pub fn updateBuffer(buf: Buffer, data: Range) void {$/;"	function
updateImage	$SOKOL/gfx.zig	/^pub fn updateImage(img: Image, data: ImageData) void {$/;"	function
update_frame_index	$SOKOL/gfx.zig	/update_frame_index: u32 = 0/;"	field
usage	$SOKOL/gfx.zig	/usage: Usage = .DEFAULT/;"	field
used	$SOKOL/gfx.zig	/used: bool = false/;"	field
user_data	$SOKOL/app.zig	/user_data: ?*anyopaque = null/;"	field
user_data	$SOKOL/audio.zig	/user_data: ?*anyopaque = null/;"	field
user_data	$SOKOL/debugtext.zig	/user_data: ?*anyopaque = null/;"	field
user_data	$SOKOL/gfx.zig	/user_data: ?*anyopaque = null/;"	field
user_data	$SOKOL/gl.zig	/user_data: ?*anyopaque = null/;"	field
userdata	$SOKOL/app.zig	/^pub fn userdata() ?*anyopaque {$/;"	function
userdata	$SOKOL/audio.zig	/^pub fn userdata() ?*anyopaque {$/;"	function
v2f	$SOKOL/gl.zig	/^pub fn v2f(x: f32, y: f32) void {$/;"	function
v2fC1i	$SOKOL/gl.zig	/^pub fn v2fC1i(x: f32, y: f32, rgba: u32) void {$/;"	function
v2fC3b	$SOKOL/gl.zig	/^pub fn v2fC3b(x: f32, y: f32, r: u8, g: u8, b: u8) void {$/;"	function
v2fC3f	$SOKOL/gl.zig	/^pub fn v2fC3f(x: f32, y: f32, r: f32, g: f32, b: f32) void {$/;"	function
v2fC4b	$SOKOL/gl.zig	/^pub fn v2fC4b(x: f32, y: f32, r: u8, g: u8, b: u8, a: u8) void {$/;"	function
v2fC4f	$SOKOL/gl.zig	/^pub fn v2fC4f(x: f32, y: f32, r: f32, g: f32, b: f32, a: f32) void {$/;"	function
v2fT2f	$SOKOL/gl.zig	/^pub fn v2fT2f(x: f32, y: f32, u: f32, v: f32) void {$/;"	function
v2fT2fC1i	$SOKOL/gl.zig	/^pub fn v2fT2fC1i(x: f32, y: f32, u: f32, v: f32, rgba: u32) void {$/;"	function
v2fT2fC3b	$SOKOL/gl.zig	/^pub fn v2fT2fC3b(x: f32, y: f32, u: f32, v: f32, r: u8, g: u8, b: u8) void {$/;"	function
v2fT2fC3f	$SOKOL/gl.zig	/^pub fn v2fT2fC3f(x: f32, y: f32, u: f32, v: f32, r: f32, g: f32, b: f32) void {$/;"	function
v2fT2fC4b	$SOKOL/gl.zig	/^pub fn v2fT2fC4b(x: f32, y: f32, u: f32, v: f32, r: u8, g: u8, b: u8, a: u8) void {$/;"	function
v2fT2fC4f	$SOKOL/gl.zig	/^pub fn v2fT2fC4f(x: f32, y: f32, u: f32, v: f32, r: f32, g: f32, b: f32, a: f32) void {$/;"	function
v3f	$SOKOL/gl.zig	/^pub fn v3f(x: f32, y: f32, z: f32) void {$/;"	function
v3fC1i	$SOKOL/gl.zig	/^pub fn v3fC1i(x: f32, y: f32, z: f32, rgba: u32) void {$/;"	function
v3fC3b	$SOKOL/gl.zig	/^pub fn v3fC3b(x: f32, y: f32, z: f32, r: u8, g: u8, b: u8) void {$/;"	function
v3fC3f	$SOKOL/gl.zig	/^pub fn v3fC3f(x: f32, y: f32, z: f32, r: f32, g: f32, b: f32) void {$/;"	function
v3fC4b	$SOKOL/gl.zig	/^pub fn v3fC4b(x: f32, y: f32, z: f32, r: u8, g: u8, b: u8, a: u8) void {$/;"	function
v3fC4f	$SOKOL/gl.zig	/^pub fn v3fC4f(x: f32, y: f32, z: f32, r: f32, g: f32, b: f32, a: f32) void {$/;"	function
v3fT2f	$SOKOL/gl.zig	/^pub fn v3fT2f(x: f32, y: f32, z: f32, u: f32, v: f32) void {$/;"	function
v3fT2fC1i	$SOKOL/gl.zig	/^pub fn v3fT2fC1i(x: f32, y: f32, z: f32, u: f32, v: f32, rgba: u32) void {$/;"	function
v3fT2fC3b	$SOKOL/gl.zig	/^pub fn v3fT2fC3b(x: f32, y: f32, z: f32, u: f32, v: f32, r: u8, g: u8, b: u8) void {$/;"	function
v3fT2fC3f	$SOKOL/gl.zig	/^pub fn v3fT2fC3f(x: f32, y: f32, z: f32, u: f32, v: f32, r: f32, g: f32, b: f32) void {$/;"	function
v3fT2fC4b	$SOKOL/gl.zig	/^pub fn v3fT2fC4b(x: f32, y: f32, z: f32, u: f32, v: f32, r: u8, g: u8, b: u8, a: u8) void {$/;"	function
v3fT2fC4f	$SOKOL/gl.zig	/^pub fn v3fT2fC4f(x: f32, y: f32, z: f32, u: f32, v: f32, r: f32, g: f32, b: f32, a: f32) void {$/;"	function
valid	$SOKOL/shape.zig	/valid: bool = false/;"	field
vertexBufferDesc	$SOKOL/shape.zig	/^pub fn vertexBufferDesc(buf: Buffer) sg.BufferDesc {$/;"	function
vertexBufferLayoutState	$SOKOL/shape.zig	/^pub fn vertexBufferLayoutState() sg.VertexBufferLayoutState {$/;"	function
vertex_buffer_offsets	$SOKOL/gfx.zig	/vertex_buffer_offsets: [8]i32 = [_]i32{0} ** 8/;"	field
vertex_buffers	$SOKOL/gfx.zig	/vertex_buffers: [8]Buffer = [_]Buffer{.{}} ** 8/;"	field
vertices	$SOKOL/shape.zig	/vertices: SizesItem = .{}/;"	field
view	$SOKOL/gfx.zig	/view: ?*const anyopaque = null/;"	field
viewport	$SOKOL/gl.zig	/^pub fn viewport(x: i32, y: i32, w: i32, h: i32, origin_top_left: bool) void {$/;"	function
viewportf	$SOKOL/gl.zig	/^pub fn viewportf(x: f32, y: f32, w: f32, h: f32, origin_top_left: bool) void {$/;"	function
vs_cbufs	$SOKOL/gfx.zig	/vs_cbufs: [4]?*const anyopaque = [_]?*const anyopaque{null} ** 4/;"	field
vs_func	$SOKOL/gfx.zig	/vs_func: ?*const anyopaque = null/;"	field
vs_lib	$SOKOL/gfx.zig	/vs_lib: ?*const anyopaque = null/;"	field
vs_mod	$SOKOL/gfx.zig	/vs_mod: ?*const anyopaque = null/;"	field
wgpu	$SOKOL/gfx.zig	/wgpu: WgpuContextDesc = .{}/;"	field
wgpuCommandEncoder	$SOKOL/gfx.zig	/^pub fn wgpuCommandEncoder() ?*const anyopaque {$/;"	function
wgpuDevice	$SOKOL/gfx.zig	/^pub fn wgpuDevice() ?*const anyopaque {$/;"	function
wgpuGetDepthStencilView	$SOKOL/app.zig	/^pub fn wgpuGetDepthStencilView() ?*const anyopaque {$/;"	function
wgpuGetDevice	$SOKOL/app.zig	/^pub fn wgpuGetDevice() ?*const anyopaque {$/;"	function
wgpuGetRenderView	$SOKOL/app.zig	/^pub fn wgpuGetRenderView() ?*const anyopaque {$/;"	function
wgpuGetResolveView	$SOKOL/app.zig	/^pub fn wgpuGetResolveView() ?*const anyopaque {$/;"	function
wgpuQueryBufferInfo	$SOKOL/gfx.zig	/^pub fn wgpuQueryBufferInfo(buf: Buffer) WgpuBufferInfo {$/;"	function
wgpuQueryImageInfo	$SOKOL/gfx.zig	/^pub fn wgpuQueryImageInfo(img: Image) WgpuImageInfo {$/;"	function
wgpuQueryPassInfo	$SOKOL/gfx.zig	/^pub fn wgpuQueryPassInfo(pass: Pass) WgpuPassInfo {$/;"	function
wgpuQueryPipelineInfo	$SOKOL/gfx.zig	/^pub fn wgpuQueryPipelineInfo(pip: Pipeline) WgpuPipelineInfo {$/;"	function
wgpuQuerySamplerInfo	$SOKOL/gfx.zig	/^pub fn wgpuQuerySamplerInfo(smp: Sampler) WgpuSamplerInfo {$/;"	function
wgpuQueryShaderInfo	$SOKOL/gfx.zig	/^pub fn wgpuQueryShaderInfo(shd: Shader) WgpuShaderInfo {$/;"	function
wgpuQueue	$SOKOL/gfx.zig	/^pub fn wgpuQueue() ?*const anyopaque {$/;"	function
wgpuRenderPassEncoder	$SOKOL/gfx.zig	/^pub fn wgpuRenderPassEncoder() ?*const anyopaque {$/;"	function
wgpu_bindgroups_cache_size	$SOKOL/gfx.zig	/wgpu_bindgroups_cache_size: i32 = 0/;"	field
wgpu_buffer	$SOKOL/gfx.zig	/wgpu_buffer: ?*const anyopaque = null/;"	field
wgpu_disable_bindgroups_cache	$SOKOL/gfx.zig	/wgpu_disable_bindgroups_cache: bool = false/;"	field
wgpu_sampler	$SOKOL/gfx.zig	/wgpu_sampler: ?*const anyopaque = null/;"	field
wgpu_texture	$SOKOL/gfx.zig	/wgpu_texture: ?*const anyopaque = null/;"	field
wgpu_texture_view	$SOKOL/gfx.zig	/wgpu_texture_view: ?*const anyopaque = null/;"	field
width	$SOKOL/app.zig	/width: i32 = 0/;"	field
width	$SOKOL/gfx.zig	/width: i32 = 0/;"	field
width	$SOKOL/shape.zig	/width: f32 = 0.0/;"	field
widthf	$SOKOL/app.zig	/^pub fn widthf() f32 {$/;"	function
win32GetHwnd	$SOKOL/app.zig	/^pub fn win32GetHwnd() ?*const anyopaque {$/;"	function
win32_console_attach	$SOKOL/app.zig	/win32_console_attach: bool = false/;"	field
win32_console_create	$SOKOL/app.zig	/win32_console_create: bool = false/;"	field
win32_console_utf8	$SOKOL/app.zig	/win32_console_utf8: bool = false/;"	field
window_height	$SOKOL/app.zig	/window_height: i32 = 0/;"	field
window_title	$SOKOL/app.zig	/window_title: [*c]const u8 = null/;"	field
window_width	$SOKOL/app.zig	/window_width: i32 = 0/;"	field
wrap_u	$SOKOL/gfx.zig	/wrap_u: Wrap = .DEFAULT/;"	field
wrap_v	$SOKOL/gfx.zig	/wrap_v: Wrap = .DEFAULT/;"	field
wrap_w	$SOKOL/gfx.zig	/wrap_w: Wrap = .DEFAULT/;"	field
writeAll	$SOKOL/debugtext.zig	/pub fn writeAll(self: Writer, bytes: []const u8) Error!void {$/;"	function
writeByteNTimes	$SOKOL/debugtext.zig	/pub fn writeByteNTimes(self: Writer, byte: u8, n: usize) Error!void {$/;"	function
writeBytesNTimes	$SOKOL/debugtext.zig	/pub fn writeBytesNTimes(self: Writer, bytes: []const u8, n: usize) Error!void {$/;"	function
write_enabled	$SOKOL/gfx.zig	/write_enabled: bool = false/;"	field
write_mask	$SOKOL/gfx.zig	/write_mask: u8 = 0/;"	field
writer	$SOKOL/debugtext.zig	/const writer: Writer = .{}/;"	constant

