ACCEPT	$C2_LIBDIR/io_uring/io_uring.c2i	/^    ACCEPT,$/;"	v
AC_BACK	$C2_LIBDIR/sdl2/sdl.c2i	/^    AC_BACK = 270,$/;"	v
AC_BOOKMARKS	$C2_LIBDIR/sdl2/sdl.c2i	/^    AC_BOOKMARKS = 274,$/;"	v
AC_FORWARD	$C2_LIBDIR/sdl2/sdl.c2i	/^    AC_FORWARD = 271,$/;"	v
AC_HOME	$C2_LIBDIR/sdl2/sdl.c2i	/^    AC_HOME = 269,$/;"	v
AC_REFRESH	$C2_LIBDIR/sdl2/sdl.c2i	/^    AC_REFRESH = 273,$/;"	v
AC_SEARCH	$C2_LIBDIR/sdl2/sdl.c2i	/^    AC_SEARCH = 268,$/;"	v
AC_STOP	$C2_LIBDIR/sdl2/sdl.c2i	/^    AC_STOP = 272,$/;"	v
AF_INET	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int AF_INET    =  2;$/;"	v
AF_NETLINK	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int AF_NETLINK = 16;$/;"	v
AF_PACKET	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int AF_PACKET  = 17;$/;"	v
AF_UNIX	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int AF_UNIX    =  PF_UNIX;$/;"	v
AGAIN	$C2_LIBDIR/sdl2/sdl.c2i	/^    AGAIN = 121,   \/**< redo *\/$/;"	v
ALLOC_FAILED	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ALLOC_FAILED                      = -0x7F00;  \/**< Memory allocation failed *\/$/;"	v
ALTERASE	$C2_LIBDIR/sdl2/sdl.c2i	/^    ALTERASE = 153, \/**< Erase-Eaze *\/$/;"	v
APOSTROPHE	$C2_LIBDIR/sdl2/sdl.c2i	/^    APOSTROPHE = 52,$/;"	v
APP1	$C2_LIBDIR/sdl2/sdl.c2i	/^    APP1 = 283,$/;"	v
APP2	$C2_LIBDIR/sdl2/sdl.c2i	/^    APP2 = 284,$/;"	v
APPLICATION	$C2_LIBDIR/sdl2/sdl.c2i	/^    APPLICATION = 101, \/**< windows contextual menu, compose *\/$/;"	v
APP_DIDENTERBACKGROUND	$C2_LIBDIR/sdl2/sdl.c2i	/^    APP_DIDENTERBACKGROUND, \/**< The application did enter the background and may not get CPU f/;"	v
APP_DIDENTERFOREGROUND	$C2_LIBDIR/sdl2/sdl.c2i	/^    APP_DIDENTERFOREGROUND, \/**< The application is now interactive$/;"	v
APP_LOWMEMORY	$C2_LIBDIR/sdl2/sdl.c2i	/^    APP_LOWMEMORY,          \/**< The application is low on memory, free memory if possible.$/;"	v
APP_TERMINATING	$C2_LIBDIR/sdl2/sdl.c2i	/^    APP_TERMINATING,        \/**< The application is being terminated by the OS$/;"	v
APP_WILLENTERBACKGROUND	$C2_LIBDIR/sdl2/sdl.c2i	/^    APP_WILLENTERBACKGROUND, \/**< The application is about to enter the background$/;"	v
APP_WILLENTERFOREGROUND	$C2_LIBDIR/sdl2/sdl.c2i	/^    APP_WILLENTERFOREGROUND, \/**< The application is about to enter the foreground$/;"	v
ASYNC_CANCEL	$C2_LIBDIR/io_uring/io_uring.c2i	/^    ASYNC_CANCEL,$/;"	v
ASYNC_IN_PROGRESS	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ASYNC_IN_PROGRESS                 = -0x6500;  \/**< The asynchronous operation is no/;"	v
AT_FDCWD	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const i32 AT_FDCWD = -2;$/;"	v
AUDIODEVICEADDED	$C2_LIBDIR/sdl2/sdl.c2i	/^    AUDIODEVICEADDED = 0x1100, \/**< A new audio device is available *\/$/;"	v
AUDIODEVICEREMOVED	$C2_LIBDIR/sdl2/sdl.c2i	/^    AUDIODEVICEREMOVED,        \/**< An audio device has been removed. *\/$/;"	v
AUDIOFASTFORWARD	$C2_LIBDIR/sdl2/sdl.c2i	/^    AUDIOFASTFORWARD = 286,$/;"	v
AUDIOMUTE	$C2_LIBDIR/sdl2/sdl.c2i	/^    AUDIOMUTE = 262,$/;"	v
AUDIONEXT	$C2_LIBDIR/sdl2/sdl.c2i	/^    AUDIONEXT = 258,$/;"	v
AUDIOPLAY	$C2_LIBDIR/sdl2/sdl.c2i	/^    AUDIOPLAY = 261,$/;"	v
AUDIOPREV	$C2_LIBDIR/sdl2/sdl.c2i	/^    AUDIOPREV = 259,$/;"	v
AUDIOREWIND	$C2_LIBDIR/sdl2/sdl.c2i	/^    AUDIOREWIND = 285,$/;"	v
AUDIOSTOP	$C2_LIBDIR/sdl2/sdl.c2i	/^    AUDIOSTOP = 260,$/;"	v
AUDIO_S16LSB	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^const u32 AUDIO_S16LSB = 0x8010;   \/\/ signed 16-bit samples$/;"	v
Accelerated	$C2_LIBDIR/sdl2/sdl.c2i	/^    Accelerated = 0x00000002,      \/**< The renderer uses hardware acceleration *\/$/;"	v
Add	$C2_LIBDIR/sdl2/sdl.c2i	/^    Add = 0x00000002,      \/\/ additive blending dstRGB = (srcRGB * srcA) + dstRGB dstA = dstA$/;"	v
Addr	$C2_LIBDIR/libc/net_if.c2i	/^type Addr struct @(cname="ifaddr") {$/;"	t
Aes_context	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Aes_context struct @(cname="mbedtls_aes_context") {$/;"	t
Alloc	$C2_LIBDIR/lua/lua.c2i	/^type Alloc fn void* (void *ud, void *ptr, c_size osize, c_size nsize) @(cname="lua_Alloc");$/;"	t
Aloss	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8 Aloss;$/;"	v
Alpha	$C2_LIBDIR/sdl2/sdl.c2i	/^    Alpha = 0x00000002,$/;"	v
Alt	$C2_LIBDIR/sdl2/sdl.c2i	/^    Alt     = Keymod.Lalt | Keymod.Ralt,$/;"	v
Amask	$C2_LIBDIR/sdl2/sdl.c2i	/^    u32 Amask;$/;"	v
Ashift	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8 Ashift;$/;"	v
Asn1_buf	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type X509_buf Asn1_buf @(cname="mbedtls_x509_buf");$/;"	v
Asn1_named_data	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type X509_name Asn1_named_data @(cname="mbedtls_x509_name");$/;"	v
Asn1_sequence	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type X509_sequence Asn1_sequence @(cname="mbedtls_x509_sequence");$/;"	v
AtExitFn	$C2_LIBDIR/libc/stdlib.c2i	/^type AtExitFn fn void();$/;"	t
AudioCallback	$C2_LIBDIR/sdl2/sdl.c2i	/^type AudioCallback fn void (void* userdata, u8* stream, c_int len) @(cname="SDL_AudioCallback");$/;"	t
AudioDeviceID	$C2_LIBDIR/sdl2/sdl.c2i	/^type AudioDeviceID u32 @(cname="SDL_AudioDeviceID");$/;"	t
AudioFormat	$C2_LIBDIR/sdl2/sdl.c2i	/^type AudioFormat u16 @(cname="SDL_AudioFormat");$/;"	t
AudioSpec	$C2_LIBDIR/sdl2/sdl.c2i	/^type AudioSpec struct @(cname="SDL_AudioSpec") {$/;"	t
B0	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B0 = 0000000;     \/* hang up *\/$/;"	v
B1000000	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B1000000 = 0010010;$/;"	v
B110	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B110   = 0000003;$/;"	v
B115200	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B115200 = 0010002;$/;"	v
B1152000	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B1152000 = 0010011;$/;"	v
B1200	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B1200  = 0000011;$/;"	v
B134	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B134   = 0000004;$/;"	v
B150	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B150   = 0000005;$/;"	v
B1500000	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B1500000 = 0010012;$/;"	v
B1800	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B1800  = 0000012;$/;"	v
B19200	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B19200 = 0000016;$/;"	v
B200	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B200   = 0000006;$/;"	v
B2000000	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B2000000 = 0010013;$/;"	v
B230400	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B230400 = 0010003;$/;"	v
B2400	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B2400  = 0000013;$/;"	v
B2500000	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B2500000 = 0010014;$/;"	v
B300	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B300   = 0000007;$/;"	v
B3000000	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B3000000 = 0010015;$/;"	v
B3500000	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B3500000 = 0010016;$/;"	v
B38400	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B38400 = 0000017;$/;"	v
B4000000	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B4000000 = 0010017;$/;"	v
B460800	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B460800 = 0010004;$/;"	v
B4800	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B4800  = 0000014;$/;"	v
B50	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B50    = 0000001;$/;"	v
B500000	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B500000 = 0010005;$/;"	v
B57600	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B57600 = 0010001;$/;"	v
B576000	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B576000 = 0010006;$/;"	v
B600	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B600   = 0000010;$/;"	v
B75	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B75    = 0000002;$/;"	v
B921600	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B921600 = 0010007;$/;"	v
B9600	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint B9600  = 0000015;$/;"	v
BACKSLASH	$C2_LIBDIR/sdl2/sdl.c2i	/^    BACKSLASH = 49, \/**< Located at the lower left of the return$/;"	v
BACKSPACE	$C2_LIBDIR/sdl2/sdl.c2i	/^    BACKSPACE = 42,$/;"	v
BAD_CONFIG	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int BAD_CONFIG                        = -0x5E80;  \/**< Invalid value in SSL config *\/$/;"	v
BAD_HS_CERTIFICATE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int BAD_HS_CERTIFICATE                = -0x7A00;  \/**< Processing of the Certificate ha/;"	v
BAD_HS_CERTIFICATE_REQUEST	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int BAD_HS_CERTIFICATE_REQUEST        = -0x7A80;  \/**< Processing of the CertificateReq/;"	v
BAD_HS_CERTIFICATE_VERIFY	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int BAD_HS_CERTIFICATE_VERIFY         = -0x7D80;  \/**< Processing of the CertificateVer/;"	v
BAD_HS_CHANGE_CIPHER_SPEC	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int BAD_HS_CHANGE_CIPHER_SPEC         = -0x7E00;  \/**< Processing of the ChangeCipherSp/;"	v
BAD_HS_CLIENT_HELLO	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int BAD_HS_CLIENT_HELLO               = -0x7900;  \/**< Processing of the ClientHello ha/;"	v
BAD_HS_CLIENT_KEY_EXCHANGE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int BAD_HS_CLIENT_KEY_EXCHANGE        = -0x7C00;  \/**< Processing of the ClientKeyExcha/;"	v
BAD_HS_CLIENT_KEY_EXCHANGE_CS	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int BAD_HS_CLIENT_KEY_EXCHANGE_CS     = -0x7D00;  \/**< Processing of the ClientKeyExcha/;"	v
BAD_HS_CLIENT_KEY_EXCHANGE_RP	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int BAD_HS_CLIENT_KEY_EXCHANGE_RP     = -0x7C80;  \/**< Processing of the ClientKeyExcha/;"	v
BAD_HS_FINISHED	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int BAD_HS_FINISHED                   = -0x7E80;  \/**< Processing of the Finished hands/;"	v
BAD_HS_NEW_SESSION_TICKET	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int BAD_HS_NEW_SESSION_TICKET         = -0x6E00;  \/**< Processing of the NewSessionTick/;"	v
BAD_HS_PROTOCOL_VERSION	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int BAD_HS_PROTOCOL_VERSION           = -0x6E80;  \/**< Handshake protocol not within mi/;"	v
BAD_HS_SERVER_HELLO	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int BAD_HS_SERVER_HELLO               = -0x7980;  \/**< Processing of the ServerHello ha/;"	v
BAD_HS_SERVER_HELLO_DONE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int BAD_HS_SERVER_HELLO_DONE          = -0x7B80;  \/**< Processing of the ServerHelloDon/;"	v
BAD_HS_SERVER_KEY_EXCHANGE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int BAD_HS_SERVER_KEY_EXCHANGE        = -0x7B00;  \/**< Processing of the ServerKeyExcha/;"	v
BAD_INPUT_DATA	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int BAD_INPUT_DATA                    = -0x7100;  \/**< Bad input parameters to function/;"	v
BOTHER	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint BOTHER = 0010000;$/;"	v
BRIGHTNESSDOWN	$C2_LIBDIR/sdl2/sdl.c2i	/^    BRIGHTNESSDOWN = 275,$/;"	v
BRIGHTNESSUP	$C2_LIBDIR/sdl2/sdl.c2i	/^    BRIGHTNESSUP = 276,$/;"	v
BRKINT	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint BRKINT  = 0000002;$/;"	v
BS0	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint BS0   = 0000000;$/;"	v
BS1	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint BS1   = 0020000;$/;"	v
BSDLY	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint BSDLY   = 0020000;$/;"	v
BUFFER_TOO_SMALL	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int BUFFER_TOO_SMALL                  = -0x6A00;  \/**< A buffer is too small to receive/;"	v
Best	$C2_LIBDIR/sdl2/sdl.c2i	/^    Best,    \/\/ anisotropic filtering$/;"	v
BitsPerPixel	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8 BitsPerPixel;$/;"	v
Blend	$C2_LIBDIR/sdl2/sdl.c2i	/^    Blend = 0x00000001,    \/\/ alpha blending dstRGB = (srcRGB * srcA) + (dstRGB * (1-srcA)) ds/;"	v
BlendMode	$C2_LIBDIR/sdl2/sdl.c2i	/^type BlendMode enum u32 {$/;"	t
Bloss	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8 Bloss;$/;"	v
Bmask	$C2_LIBDIR/sdl2/sdl.c2i	/^    u32 Bmask;$/;"	v
Bshift	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8 Bshift;$/;"	v
Bytes	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^                                     hold 32 extra Bytes, which can be used for$/;"	v
BytesPerPixel	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8 BytesPerPixel;$/;"	v
CALCULATOR	$C2_LIBDIR/sdl2/sdl.c2i	/^    CALCULATOR = 266,$/;"	v
CANCEL	$C2_LIBDIR/sdl2/sdl.c2i	/^    CANCEL = 155,$/;"	v
CAPSLOCK	$C2_LIBDIR/sdl2/sdl.c2i	/^    CAPSLOCK = 57,$/;"	v
CA_CHAIN_REQUIRED	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int CA_CHAIN_REQUIRED                 = -0x7680;  \/**< No CA Chain is set, but required/;"	v
CAddr	$C2_LIBDIR/libc/net_if.c2i	/^type CAddr char* @(cname="__caddr_t");$/;"	t
CBAUD	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint CBAUD   = 0010017;$/;"	v
CBAUDEX	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint CBAUDEX = 0010000;$/;"	v
CC	$C2_LIBDIR/libc/ctermios.c2i	/^type CC c_uchar;$/;"	t
CERTIFICATE_REQUIRED	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int CERTIFICATE_REQUIRED              = -0x7580;  \/**< The own certificate is not set, /;"	v
CERTIFICATE_TOO_LARGE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int CERTIFICATE_TOO_LARGE             = -0x7500;  \/**< Our own certificate(s) is\/are t/;"	v
CFunction	$C2_LIBDIR/lua/lua.c2i	/^type CFunction fn i32 (State *L) @(cname="lua_CFunction");$/;"	t
CHANNEL_POST	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^const i32 CHANNEL_POST = -2; \/\/ MIX_CHANNEL_POST$/;"	v
CIBAUD	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint CIBAUD    = 002003600000;  \/* input baud rate *\/$/;"	v
CLEAR	$C2_LIBDIR/sdl2/sdl.c2i	/^    CLEAR = 156,$/;"	v
CLEARAGAIN	$C2_LIBDIR/sdl2/sdl.c2i	/^    CLEARAGAIN = 162,$/;"	v
CLIENT_RECONNECT	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int CLIENT_RECONNECT                  = -0x6780;  \/**< The client initiated a reconnect/;"	v
CLIPBOARDUPDATE	$C2_LIBDIR/sdl2/sdl.c2i	/^    CLIPBOARDUPDATE = 0x900, \/**< The clipboard changed *\/$/;"	v
CLOCAL	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint CLOCAL  = 0004000;$/;"	v
CLOSE	$C2_LIBDIR/io_uring/io_uring.c2i	/^    CLOSE,$/;"	v
CLOSE	$C2_LIBDIR/sdl2/sdl.c2i	/^    CLOSE,          \/**< The window manager requests that the window be closed *\/$/;"	v
CMSPAR	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint CMSPAR    = 010000000000;  \/* mark or space (stick) parity *\/$/;"	v
COMMA	$C2_LIBDIR/sdl2/sdl.c2i	/^    COMMA = 54,$/;"	v
COMPRESSION_FAILED	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int COMPRESSION_FAILED                = -0x6F00;  \/**< Processing of the compression \//;"	v
COMPUTER	$C2_LIBDIR/sdl2/sdl.c2i	/^    COMPUTER = 267,$/;"	v
CONNECT	$C2_LIBDIR/io_uring/io_uring.c2i	/^    CONNECT,$/;"	v
CONN_EOF	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int CONN_EOF                          = -0x7280;  \/**< The connection indicated an EOF./;"	v
CONTINUE_PROCESSING	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int CONTINUE_PROCESSING               = -0x6580;  \/**< Internal-only message signaling /;"	v
CONTROLLERAXISMOTION	$C2_LIBDIR/sdl2/sdl.c2i	/^    CONTROLLERAXISMOTION  = 0x650, \/**< Game controller axis motion *\/$/;"	v
CONTROLLERBUTTONDOWN	$C2_LIBDIR/sdl2/sdl.c2i	/^    CONTROLLERBUTTONDOWN,          \/**< Game controller button pressed *\/$/;"	v
CONTROLLERBUTTONUP	$C2_LIBDIR/sdl2/sdl.c2i	/^    CONTROLLERBUTTONUP,            \/**< Game controller button released *\/$/;"	v
CONTROLLERDEVICEADDED	$C2_LIBDIR/sdl2/sdl.c2i	/^    CONTROLLERDEVICEADDED,         \/**< A new Game controller has been inserted into the system/;"	v
CONTROLLERDEVICEREMAPPED	$C2_LIBDIR/sdl2/sdl.c2i	/^    CONTROLLERDEVICEREMAPPED,      \/**< The controller mapping was updated *\/$/;"	v
CONTROLLERDEVICEREMOVED	$C2_LIBDIR/sdl2/sdl.c2i	/^    CONTROLLERDEVICEREMOVED,       \/**< An opened Game controller has been removed *\/$/;"	v
CONTROLLERSENSORUPDATE	$C2_LIBDIR/sdl2/sdl.c2i	/^    CONTROLLERSENSORUPDATE,        \/**< Game controller sensor was updated *\/$/;"	v
CONTROLLERTOUCHPADDOWN	$C2_LIBDIR/sdl2/sdl.c2i	/^    CONTROLLERTOUCHPADDOWN,        \/**< Game controller touchpad was touched *\/$/;"	v
CONTROLLERTOUCHPADMOTION	$C2_LIBDIR/sdl2/sdl.c2i	/^    CONTROLLERTOUCHPADMOTION,      \/**< Game controller touchpad finger was moved *\/$/;"	v
CONTROLLERTOUCHPADUP	$C2_LIBDIR/sdl2/sdl.c2i	/^    CONTROLLERTOUCHPADUP,          \/**< Game controller touchpad finger was lifted *\/$/;"	v
COPY	$C2_LIBDIR/sdl2/sdl.c2i	/^    COPY = 124,$/;"	v
COUNTER_WRAPPING	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int COUNTER_WRAPPING                  = -0x6B80;  \/**< A counter would wrap (eg, too ma/;"	v
CQE_F_BUFFER	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u32 CQE_F_BUFFER = (1 << 0);$/;"	v
CQE_F_MORE	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u32 CQE_F_MORE   = (1 << 1);$/;"	v
CR0	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint CR0   = 0000000;$/;"	v
CR1	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint CR1   = 0001000;$/;"	v
CR2	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint CR2   = 0002000;$/;"	v
CR3	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint CR3   = 0003000;$/;"	v
CRDLY	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint CRDLY   = 0003000;$/;"	v
CREAD	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint CREAD   = 0000200;$/;"	v
CRSEL	$C2_LIBDIR/sdl2/sdl.c2i	/^    CRSEL = 163,$/;"	v
CRTSCTS	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint CRTSCTS   = 020000000000;  \/* flow control *\/$/;"	v
CRYPTO_IN_PROGRESS	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int CRYPTO_IN_PROGRESS                = -0x7000;  \/**< A cryptographic operation is in /;"	v
CS5	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint CS5   = 0000000;$/;"	v
CS6	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint CS6   = 0000020;$/;"	v
CS7	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint CS7   = 0000040;$/;"	v
CS8	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint CS8   = 0000060;$/;"	v
CSIZE	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint CSIZE   = 0000060;$/;"	v
CSTOPB	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint CSTOPB  = 0000100;$/;"	v
CURRENCYSUBUNIT	$C2_LIBDIR/sdl2/sdl.c2i	/^    CURRENCYSUBUNIT = 181,$/;"	v
CURRENCYUNIT	$C2_LIBDIR/sdl2/sdl.c2i	/^    CURRENCYUNIT = 180,$/;"	v
CUT	$C2_LIBDIR/sdl2/sdl.c2i	/^    CUT = 123,$/;"	v
Caps	$C2_LIBDIR/sdl2/sdl.c2i	/^    Caps    = 0x2000,$/;"	v
Cfg_dbg_f	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Cfg_dbg_f fn void(void *, c_int, const char *, c_int, const char *);$/;"	t
Cfg_get_cache_f	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Cfg_get_cache_f fn c_int(void *, Ssl_session*);$/;"	t
Cfg_rng_f	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Cfg_rng_f fn c_int(void *, c_uchar*, c_size);$/;"	t
Cfg_set_cache_f	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Cfg_set_cache_f fn c_int(void *, const Ssl_session*);$/;"	t
Cfg_sni_f	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Cfg_sni_f fn c_int(void *, Ssl_context *, const c_uchar *, c_size);$/;"	t
Color	$C2_LIBDIR/sdl2/sdl.c2i	/^type Color struct @(cname="SDL_Color") {$/;"	t
Cond	$C2_LIBDIR/pthread/pthread.c2i	/^type Cond union @(cname="pthread_cond_t") {$/;"	t
CondAttr	$C2_LIBDIR/pthread/pthread.c2i	/^type CondAttr union @(cname="pthread_condattr_t") {$/;"	t
Conf	$C2_LIBDIR/libc/net_if.c2i	/^type Conf struct @(cname="ifconf") {$/;"	t
Cq	$C2_LIBDIR/io_uring/io_uring.c2i	/^type Cq struct @(cname="io_uring_cq") {$/;"	t
Cqe	$C2_LIBDIR/io_uring/io_uring.c2i	/^type Cqe struct @(cname="io_uring_cqe") {$/;"	t
CqringOffsets	$C2_LIBDIR/io_uring/io_uring.c2i	/^type CqringOffsets struct @(cname="io_cqring_offsets") {$/;"	t
Ctr_drbg_context	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ctr_drbg_context struct @(cname="mbedtls_ctr_drbg_context") {$/;"	t
Ctrl	$C2_LIBDIR/sdl2/sdl.c2i	/^    Ctrl    = Keymod.Lctrl | Keymod.Rctrl,$/;"	v
Ctx_cookie_check_f	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ctx_cookie_check_f fn c_int(void *, const c_uchar *, c_size, const c_uchar *, c_size);$/;"	t
Ctx_cookie_write_f	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ctx_cookie_write_f fn c_int(void *, c_uchar **, c_uchar *, const c_uchar *, c_size );$/;"	t
Ctx_export_keys_ext_f	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ctx_export_keys_ext_f fn c_int(void *, const c_uchar *,$/;"	t
Ctx_export_keys_f	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ctx_export_keys_f fn c_int(void *, const c_uchar *, const c_uchar *, c_size, c_size, c_size/;"	t
Ctx_psk_f	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ctx_psk_f fn c_int(void *, Ssl_context *, const c_uchar *, c_size);$/;"	t
Ctx_ticket_parse_f	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ctx_ticket_parse_f fn c_int(void *, Ssl_session *, c_uchar *, c_size);$/;"	t
Ctx_ticket_write_f	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ctx_ticket_write_f fn c_int(void *, const Ssl_session *, c_uchar *, const c_uchar *, c_size/;"	t
Ctx_vrfy_f	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ctx_vrfy_f fn c_int (void*, X509_crt *, c_int, c_uint*);$/;"	t
CurrentBeginThread	$C2_LIBDIR/sdl2/sdl.c2i	/^type CurrentBeginThread fn usize (void*, c_uint, c_uint, CurrentBeginThreadArg func,$/;"	t
CurrentBeginThreadArg	$C2_LIBDIR/sdl2/sdl.c2i	/^type CurrentBeginThreadArg fn c_uint (void*);$/;"	t
CurrentEndThread	$C2_LIBDIR/sdl2/sdl.c2i	/^type CurrentEndThread fn void (c_uint code);$/;"	t
DECIMALSEPARATOR	$C2_LIBDIR/sdl2/sdl.c2i	/^    DECIMALSEPARATOR = 179,$/;"	v
DELETE	$C2_LIBDIR/sdl2/sdl.c2i	/^    DELETE = 76,$/;"	v
DIR	$C2_LIBDIR/libc/libc_dirent.c2i	/^type DIR struct @(opaque);$/;"	t
DISPLAYEVENT	$C2_LIBDIR/sdl2/sdl.c2i	/^    DISPLAYEVENT   = 0x150,  \/**< Display state change *\/$/;"	v
DISPLAYSWITCH	$C2_LIBDIR/sdl2/sdl.c2i	/^    DISPLAYSWITCH = 277, \/**< display mirroring\/dual display$/;"	v
DOLLARGESTURE	$C2_LIBDIR/sdl2/sdl.c2i	/^    DOLLARGESTURE   = 0x800,$/;"	v
DOLLARRECORD	$C2_LIBDIR/sdl2/sdl.c2i	/^    DOLLARRECORD,$/;"	v
DOWN	$C2_LIBDIR/sdl2/sdl.c2i	/^    DOWN = 81,$/;"	v
DROPBEGIN	$C2_LIBDIR/sdl2/sdl.c2i	/^    DROPBEGIN,                \/**< A new set of drops is beginning (NULL filename) *\/$/;"	v
DROPCOMPLETE	$C2_LIBDIR/sdl2/sdl.c2i	/^    DROPCOMPLETE,             \/**< Current set of drops is now complete (NULL filename) *\/$/;"	v
DROPFILE	$C2_LIBDIR/sdl2/sdl.c2i	/^    DROPFILE        = 0x1000, \/**< The system requests a file open *\/$/;"	v
DROPTEXT	$C2_LIBDIR/sdl2/sdl.c2i	/^    DROPTEXT,                 \/**< text\/plain drag-and-drop event *\/$/;"	v
DT_BLK	$C2_LIBDIR/libc/libc_dirent.c2i	/^const c_uint DT_BLK = 6;$/;"	v
DT_CHR	$C2_LIBDIR/libc/libc_dirent.c2i	/^const c_uint DT_CHR = 2;$/;"	v
DT_DIR	$C2_LIBDIR/libc/libc_dirent.c2i	/^const c_uint DT_DIR = 4;$/;"	v
DT_FIFO	$C2_LIBDIR/libc/libc_dirent.c2i	/^const c_uint DT_FIFO = 1;$/;"	v
DT_LNK	$C2_LIBDIR/libc/libc_dirent.c2i	/^const c_uint DT_LNK = 10;$/;"	v
DT_REG	$C2_LIBDIR/libc/libc_dirent.c2i	/^const c_uint DT_REG = 8;$/;"	v
DT_SOCK	$C2_LIBDIR/libc/libc_dirent.c2i	/^const c_uint DT_SOCK = 12;$/;"	v
DT_UNKNOWN	$C2_LIBDIR/libc/libc_dirent.c2i	/^const c_uint DT_UNKNOWN = 0;$/;"	v
DT_WHT	$C2_LIBDIR/libc/libc_dirent.c2i	/^const c_uint DT_WHT = 14; \/\/ not in OpenBSD$/;"	v
Dbg_fn	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Dbg_fn fn void(void*, c_int, const char *, c_int, const char *);$/;"	t
Dirent	$C2_LIBDIR/libc/libc_dirent.c2i	/^type Dirent struct @(cname="dirent") {$/;"	t
DirentCompareFn	$C2_LIBDIR/libc/libc_dirent.c2i	/^type DirentCompareFn fn i32(const Dirent**, const Dirent**);$/;"	t
Div_t	$C2_LIBDIR/libc/stdlib.c2i	/^type Div_t struct @(cname="div_t") {$/;"	t
Drand48_data	$C2_LIBDIR/libc/stdlib.c2i	/^type Drand48_data struct @(opaque, cname="drand48_data");$/;"	t
E2BIG	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 E2BIG        = 7;  \/* Argument list too long *\/$/;"	v
EACCES	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EACCES      = 13;  \/* Permission denied *\/$/;"	v
EAGAIN	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EAGAIN      = 11;  \/* Try again *\/$/;"	v
EALREADY	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EALREADY    = 114; \/* Operation already in progress *\/$/;"	v
EARLY_MESSAGE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int EARLY_MESSAGE                     = -0x6480;  \/**< Internal-only message signaling /;"	v
EBADF	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EBADF        = 9;  \/* Bad file number *\/$/;"	v
EBUSY	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EBUSY       = 16;  \/* Device or resource busy *\/$/;"	v
ECHILD	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 ECHILD      = 10;  \/* No child processes *\/$/;"	v
ECHO	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint ECHO    = 0000010;$/;"	v
ECHOCTL	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint ECHOCTL = 0001000;$/;"	v
ECHOE	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint ECHOE   = 0000020;$/;"	v
ECHOK	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint ECHOK   = 0000040;$/;"	v
ECHOKE	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint ECHOKE  = 0004000;$/;"	v
ECHONL	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint ECHONL  = 0000100;$/;"	v
ECHOPRT	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint ECHOPRT = 0002000;$/;"	v
EDOM	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EDOM        = 33;  \/* Math argument out of domain of func *\/$/;"	v
EEXIST	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EEXIST      = 17;  \/* File exists *\/$/;"	v
EFAULT	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EFAULT      = 14;  \/* Bad address *\/$/;"	v
EFBIG	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EFBIG       = 27;  \/* File too large *\/$/;"	v
EINPROGRESS	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EINPROGRESS = 115; \/* Operation now in progress *\/$/;"	v
EINTR	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EINTR        = 4;  \/* Interrupted system call *\/$/;"	v
EINVAL	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EINVAL      = 22;  \/* Invalid argument *\/$/;"	v
EIO	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EIO          = 5;  \/* I\/O error *\/$/;"	v
EISDIR	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EISDIR      = 21;  \/* Is a directory *\/$/;"	v
EJECT	$C2_LIBDIR/sdl2/sdl.c2i	/^    EJECT = 281,$/;"	v
EMFILE	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EMFILE      = 24;  \/* Too many open files *\/$/;"	v
EMLINK	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EMLINK      = 31;  \/* Too many links *\/$/;"	v
ENAMETOOLONG	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 ENAMETOOLONG = 36;  \/* File name too long *\/$/;"	v
END	$C2_LIBDIR/sdl2/sdl.c2i	/^    END = 77,$/;"	v
ENFILE	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 ENFILE      = 23;  \/* File table overflow *\/$/;"	v
ENODEV	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 ENODEV      = 19;  \/* No such device *\/$/;"	v
ENOENT	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 ENOENT       = 2;  \/* No such file or directory *\/$/;"	v
ENOEXEC	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 ENOEXEC      = 8;  \/* Exec format error *\/$/;"	v
ENOMEM	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 ENOMEM      = 12;  \/* Out of memory *\/$/;"	v
ENOSPC	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 ENOSPC      = 28;  \/* No space left on device *\/$/;"	v
ENOTBLK	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 ENOTBLK     = 15;  \/* Block device required *\/$/;"	v
ENOTDIR	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 ENOTDIR     = 20;  \/* Not a directory *\/$/;"	v
ENOTTY	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 ENOTTY      = 25;  \/* Not a typewriter *\/$/;"	v
ENTER	$C2_LIBDIR/sdl2/sdl.c2i	/^    ENTER,          \/**< Window has gained mouse focus *\/$/;"	v
ENTROPY_MAX_SOURCES	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ENTROPY_MAX_SOURCES = 20;$/;"	v
ENXIO	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 ENXIO        = 6;  \/* No such device or address *\/$/;"	v
EOF	$C2_LIBDIR/libc/stdio.c2i	/^const i8 EOF = -1;$/;"	v
EPERM	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EPERM        = 1;  \/* Operation not permitted *\/$/;"	v
EPIPE	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EPIPE       = 32;  \/* Broken pipe *\/$/;"	v
EPOLL_CTL	$C2_LIBDIR/io_uring/io_uring.c2i	/^    EPOLL_CTL,$/;"	v
EQUALS	$C2_LIBDIR/sdl2/sdl.c2i	/^    EQUALS = 46,$/;"	v
ERANGE	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 ERANGE      = 34;  \/* Math result not representable *\/$/;"	v
EROFS	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EROFS       = 30;  \/* Read-only file system *\/$/;"	v
ERR_X509_ALLOC_FAILED	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_ALLOC_FAILED                     = -0x2880;$/;"	v
ERR_X509_BAD_INPUT_DATA	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_BAD_INPUT_DATA                   = -0x2800;$/;"	v
ERR_X509_BUFFER_TOO_SMALL	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_BUFFER_TOO_SMALL                 = -0x2980;$/;"	v
ERR_X509_CERT_UNKNOWN_FORMAT	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_CERT_UNKNOWN_FORMAT              = -0x2780;$/;"	v
ERR_X509_CERT_VERIFY_FAILED	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_CERT_VERIFY_FAILED               = -0x2700;$/;"	v
ERR_X509_FATAL_ERROR	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_FATAL_ERROR                      = -0x3000;$/;"	v
ERR_X509_FEATURE_UNAVAILABLE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_FEATURE_UNAVAILABLE              = -0x2080;$/;"	v
ERR_X509_FILE_IO_ERROR	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_FILE_IO_ERROR                    = -0x2900;$/;"	v
ERR_X509_INVALID_ALG	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_INVALID_ALG                      = -0x2300;$/;"	v
ERR_X509_INVALID_DATE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_INVALID_DATE                     = -0x2400;$/;"	v
ERR_X509_INVALID_EXTENSIONS	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_INVALID_EXTENSIONS               = -0x2500;$/;"	v
ERR_X509_INVALID_FORMAT	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_INVALID_FORMAT                   = -0x2180;$/;"	v
ERR_X509_INVALID_NAME	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_INVALID_NAME                     = -0x2380;$/;"	v
ERR_X509_INVALID_SERIAL	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_INVALID_SERIAL                   = -0x2280;$/;"	v
ERR_X509_INVALID_SIGNATURE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_INVALID_SIGNATURE                = -0x2480;$/;"	v
ERR_X509_INVALID_VERSION	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_INVALID_VERSION                  = -0x2200;$/;"	v
ERR_X509_SIG_MISMATCH	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_SIG_MISMATCH                     = -0x2680;$/;"	v
ERR_X509_UNKNOWN_OID	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_UNKNOWN_OID                      = -0x2100;$/;"	v
ERR_X509_UNKNOWN_SIG_ALG	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_UNKNOWN_SIG_ALG                  = -0x2600;$/;"	v
ERR_X509_UNKNOWN_VERSION	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_UNKNOWN_VERSION                  = -0x2580;$/;"	v
ESCAPE	$C2_LIBDIR/sdl2/sdl.c2i	/^    ESCAPE = 41,$/;"	v
ESPIPE	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 ESPIPE      = 29;  \/* Illegal seek *\/$/;"	v
ESRCH	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 ESRCH        = 3;  \/* No such process *\/$/;"	v
ESTALE	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 ESTALE      = 116; \/* Stale file handle *\/$/;"	v
ETH_ALEN	$C2_LIBDIR/libc/linux_ifether.c2i	/^const u32 ETH_ALEN = 6;$/;"	v
ETXTBSY	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 ETXTBSY     = 26;  \/* Text file busy *\/$/;"	v
EXDEV	$C2_LIBDIR/libc/c_errno.c2i	/^const i32 EXDEV       = 18;  \/* Cross-device link *\/$/;"	v
EXECUTE	$C2_LIBDIR/sdl2/sdl.c2i	/^    EXECUTE = 116,$/;"	v
EXIT_FAILURE	$C2_LIBDIR/libc/stdlib.c2i	/^const i8 EXIT_FAILURE = 1;$/;"	v
EXIT_SUCCESS	$C2_LIBDIR/libc/stdlib.c2i	/^const i8 EXIT_SUCCESS = 0;$/;"	v
EXPOSED	$C2_LIBDIR/sdl2/sdl.c2i	/^    EXPOSED,        \/**< Window has been exposed and should be$/;"	v
EXSEL	$C2_LIBDIR/sdl2/sdl.c2i	/^    EXSEL = 164,$/;"	v
EXTA	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint EXTA = B19200;$/;"	v
EXTB	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint EXTB = B38400;$/;"	v
EXTPROC	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint EXTPROC = 0200000;$/;"	v
Ecp_group_id	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ecp_group_id enum u8 @(cname="mbedtls_ecp_group_id") {$/;"	t
Entropy_cb_f	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Entropy_cb_f fn c_int(void*, c_uchar*, c_size);$/;"	t
Entropy_context	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Entropy_context struct @(cname="mbedtls_entropy_context") {$/;"	t
Entropy_f_source_ptr	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Entropy_f_source_ptr fn c_int(void* data, c_uchar* output, c_size len, c_size* olen);$/;"	t
Entropy_seed_f	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Entropy_seed_f fn c_int(void *, c_uchar *, c_size);$/;"	t
Entropy_source_state	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Entropy_source_state struct @(cname="mbedtls_entropy_source_state") {$/;"	t
Event	$C2_LIBDIR/sdl2/sdl.c2i	/^type Event union @(cname="SDL_Event") {$/;"	t
EventType	$C2_LIBDIR/sdl2/sdl.c2i	/^type EventType enum u16 @(cname="SDL_EventType") {$/;"	t
F1	$C2_LIBDIR/sdl2/sdl.c2i	/^    F1 = 58,$/;"	v
F10	$C2_LIBDIR/sdl2/sdl.c2i	/^    F10 = 67,$/;"	v
F11	$C2_LIBDIR/sdl2/sdl.c2i	/^    F11 = 68,$/;"	v
F12	$C2_LIBDIR/sdl2/sdl.c2i	/^    F12 = 69,$/;"	v
F13	$C2_LIBDIR/sdl2/sdl.c2i	/^    F13 = 104,$/;"	v
F14	$C2_LIBDIR/sdl2/sdl.c2i	/^    F14 = 105,$/;"	v
F15	$C2_LIBDIR/sdl2/sdl.c2i	/^    F15 = 106,$/;"	v
F16	$C2_LIBDIR/sdl2/sdl.c2i	/^    F16 = 107,$/;"	v
F17	$C2_LIBDIR/sdl2/sdl.c2i	/^    F17 = 108,$/;"	v
F18	$C2_LIBDIR/sdl2/sdl.c2i	/^    F18 = 109,$/;"	v
F19	$C2_LIBDIR/sdl2/sdl.c2i	/^    F19 = 110,$/;"	v
F2	$C2_LIBDIR/sdl2/sdl.c2i	/^    F2 = 59,$/;"	v
F20	$C2_LIBDIR/sdl2/sdl.c2i	/^    F20 = 111,$/;"	v
F21	$C2_LIBDIR/sdl2/sdl.c2i	/^    F21 = 112,$/;"	v
F22	$C2_LIBDIR/sdl2/sdl.c2i	/^    F22 = 113,$/;"	v
F23	$C2_LIBDIR/sdl2/sdl.c2i	/^    F23 = 114,$/;"	v
F24	$C2_LIBDIR/sdl2/sdl.c2i	/^    F24 = 115,$/;"	v
F3	$C2_LIBDIR/sdl2/sdl.c2i	/^    F3 = 60,$/;"	v
F4	$C2_LIBDIR/sdl2/sdl.c2i	/^    F4 = 61,$/;"	v
F5	$C2_LIBDIR/sdl2/sdl.c2i	/^    F5 = 62,$/;"	v
F6	$C2_LIBDIR/sdl2/sdl.c2i	/^    F6 = 63,$/;"	v
F7	$C2_LIBDIR/sdl2/sdl.c2i	/^    F7 = 64,$/;"	v
F8	$C2_LIBDIR/sdl2/sdl.c2i	/^    F8 = 65,$/;"	v
F9	$C2_LIBDIR/sdl2/sdl.c2i	/^    F9 = 66,$/;"	v
FADVISE	$C2_LIBDIR/io_uring/io_uring.c2i	/^    FADVISE,$/;"	v
FALLOCATE	$C2_LIBDIR/io_uring/io_uring.c2i	/^    FALLOCATE,$/;"	v
FATAL_ALERT_MESSAGE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int FATAL_ALERT_MESSAGE               = -0x7780;  \/**< A fatal alert message was receiv/;"	v
FD_CLOEXEC	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 FD_CLOEXEC = 1;$/;"	v
FEATURE_UNAVAILABLE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int FEATURE_UNAVAILABLE               = -0x7080;  \/**< The requested feature is not ava/;"	v
FF0	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint FF0   = 0000000;$/;"	v
FF1	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint FF1   = 0100000;$/;"	v
FFDLY	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint FFDLY   = 0100000;$/;"	v
FILE	$C2_LIBDIR/libc/stdio.c2i	/^type FILE struct {$/;"	t
FILES_UPDATE	$C2_LIBDIR/io_uring/io_uring.c2i	/^    FILES_UPDATE,$/;"	v
FIND	$C2_LIBDIR/sdl2/sdl.c2i	/^    FIND = 126,$/;"	v
FINGERDOWN	$C2_LIBDIR/sdl2/sdl.c2i	/^    FINGERDOWN      = 0x700,$/;"	v
FINGERMOTION	$C2_LIBDIR/sdl2/sdl.c2i	/^    FINGERMOTION,$/;"	v
FINGERUP	$C2_LIBDIR/sdl2/sdl.c2i	/^    FINGERUP,$/;"	v
FIRSTEVENT	$C2_LIBDIR/sdl2/sdl.c2i	/^    FIRSTEVENT     = 0,     \/**< Unused (do not remove) *\/$/;"	v
FLUSHO	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint FLUSHO  = 0010000;$/;"	v
FOCUS_GAINED	$C2_LIBDIR/sdl2/sdl.c2i	/^    FOCUS_GAINED,   \/**< Window has gained keyboard focus *\/$/;"	v
FOCUS_LOST	$C2_LIBDIR/sdl2/sdl.c2i	/^    FOCUS_LOST,     \/**< Window has lost keyboard focus *\/$/;"	v
FP32_	$C2_LIBDIR/math/math.c2i	/^type FP32_ union { f32 f; u32 u; }$/;"	t
FP64_	$C2_LIBDIR/math/math.c2i	/^type FP64_ union { f64 d; u64 u; }$/;"	t
FP_INFINITE	$C2_LIBDIR/math/math.c2i	/^const c_int FP_INFINITE   = 2;$/;"	v
FP_NAN	$C2_LIBDIR/math/math.c2i	/^const c_int FP_NAN        = 1;$/;"	v
FP_NORMAL	$C2_LIBDIR/math/math.c2i	/^const c_int FP_NORMAL     = 4;$/;"	v
FP_SUBNORMAL	$C2_LIBDIR/math/math.c2i	/^const c_int FP_SUBNORMAL  = 5;$/;"	v
FP_ZERO	$C2_LIBDIR/math/math.c2i	/^const c_int FP_ZERO       = 3;$/;"	v
FSYNC	$C2_LIBDIR/io_uring/io_uring.c2i	/^    FSYNC,$/;"	v
F_DUPFD	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 F_DUPFD = 0;$/;"	v
F_GETFD	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 F_GETFD = 1;$/;"	v
F_GETFL	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 F_GETFL = 3;$/;"	v
F_OK	$C2_LIBDIR/libc/unistd.c2i	/^const u8 F_OK = 0;$/;"	v
F_SETFD	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 F_SETFD = 2;$/;"	v
F_SETFL	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 F_SETFL = 4;$/;"	v
FilterFn	$C2_LIBDIR/libc/libc_dirent.c2i	/^type FilterFn fn i32(const Dirent*);$/;"	t
Flag	$C2_LIBDIR/libc/ctermios.c2i	/^type Flag c_uint;$/;"	t
Flag	$C2_LIBDIR/libc/net_if.c2i	/^type Flag enum u32 @(cname="ifflag") {$/;"	t
Font	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^type Font struct @(cname="TTF_FONT", opaque);$/;"	t
GRAVE	$C2_LIBDIR/sdl2/sdl.c2i	/^    GRAVE = 53, \/**< Located in the top left corner (on both ANSI$/;"	v
German	$C2_LIBDIR/sdl2/sdl.c2i	/^                              *   SIGN in a Swiss German, German, or French Mac$/;"	v
Gloss	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8 Gloss;$/;"	v
Gmask	$C2_LIBDIR/sdl2/sdl.c2i	/^    u32 Gmask;$/;"	v
Gshift	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8 Gshift;$/;"	v
Gui	$C2_LIBDIR/sdl2/sdl.c2i	/^    Gui     = Keymod.Lgui | Keymod.Rgui,$/;"	v
HELLO_VERIFY_REQUIRED	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int HELLO_VERIFY_REQUIRED             = -0x6A80;  \/**< DTLS client must retry for hello/;"	v
HELP	$C2_LIBDIR/sdl2/sdl.c2i	/^    HELP = 117,$/;"	v
HIDDEN	$C2_LIBDIR/sdl2/sdl.c2i	/^    HIDDEN,         \/**< Window has been hidden *\/$/;"	v
HINTING_LIGHT	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^const u32 HINTING_LIGHT           = 1;$/;"	v
HINTING_LIGHT_SUBPIXEL	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^const u32 HINTING_LIGHT_SUBPIXEL  = 4;$/;"	v
HINTING_MONO	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^const u32 HINTING_MONO            = 2;$/;"	v
HINTING_NONE	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^const u32 HINTING_NONE            = 3;$/;"	v
HINTING_NORMAL	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^const u32 HINTING_NORMAL          = 0;$/;"	v
HIT_TEST	$C2_LIBDIR/sdl2/sdl.c2i	/^    HIT_TEST,       \/**< Window had a hit test that wasn't SDL_HITTEST_NORMAL. *\/$/;"	v
HOME	$C2_LIBDIR/sdl2/sdl.c2i	/^    HOME = 74,$/;"	v
HUGE_VAL	$C2_LIBDIR/math/math.c2i	/^const c_double HUGE_VAL   = 1e500;$/;"	v
HUGE_VALF	$C2_LIBDIR/math/math.c2i	/^const c_float HUGE_VALF   = 1e500; \/\/FIXME: should use cast<f32>(1e50);$/;"	v
HUPCL	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint HUPCL   = 0002000;$/;"	v
HW_ACCEL_FAILED	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int HW_ACCEL_FAILED                   = -0x7F80;  \/**< Hardware acceleration function r/;"	v
HW_ACCEL_FALLTHROUGH	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int HW_ACCEL_FALLTHROUGH              = -0x6F80;  \/**< Hardware acceleration function s/;"	v
Hdr	$C2_LIBDIR/libc/linux_ifether.c2i	/^type Hdr struct @(cname="ethhdr", packed) {$/;"	t
Horizontal	$C2_LIBDIR/sdl2/sdl.c2i	/^    Horizontal = 0x00000001,$/;"	v
ICANON	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint ICANON  = 0000002;$/;"	v
ICCPROF_CHANGED	$C2_LIBDIR/sdl2/sdl.c2i	/^    ICCPROF_CHANGED,\/**< The ICC profile of the window's display has changed. *\/$/;"	v
ICRNL	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint ICRNL   = 0000400;$/;"	v
IEXTEN	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint IEXTEN  = 0100000;$/;"	v
IFF_BROADCAST	$C2_LIBDIR/libc/net_if.c2i	/^    IFF_BROADCAST = 0x2,$/;"	v
IFF_DEBUG	$C2_LIBDIR/libc/net_if.c2i	/^    IFF_DEBUG = 0x4,$/;"	v
IFF_LOOPBACK	$C2_LIBDIR/libc/net_if.c2i	/^    IFF_LOOPBACK = 0x8,$/;"	v
IFF_NOARP	$C2_LIBDIR/libc/net_if.c2i	/^    IFF_NOARP = 0x80,$/;"	v
IFF_PROMISC	$C2_LIBDIR/libc/net_if.c2i	/^    IFF_PROMISC = 0x100,$/;"	v
IFF_RUNNING	$C2_LIBDIR/libc/net_if.c2i	/^    IFF_RUNNING = 0x40,$/;"	v
IFF_UP	$C2_LIBDIR/libc/net_if.c2i	/^    IFF_UP = 0x1,$/;"	v
IFNAMSIZ	$C2_LIBDIR/libc/net_if.c2i	/^const u32 IFNAMSIZ = 16;$/;"	v
IGNBRK	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint IGNBRK  = 0000001;$/;"	v
IGNCR	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint IGNCR   = 0000200;$/;"	v
IGNPAR	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint IGNPAR  = 0000004;$/;"	v
IMAXBEL	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint IMAXBEL = 0020000;$/;"	v
INADDR_ANY	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 INADDR_ANY       = 0x00000000;$/;"	v
INADDR_BROADCAST	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 INADDR_BROADCAST = 0xffffffff;$/;"	v
INADDR_NONE	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 INADDR_NONE      = 0xffffffff;$/;"	v
INFINITY	$C2_LIBDIR/math/math.c2i	/^const c_double INFINITY   = 1.0 \/ 0.0;$/;"	v
INIT_AUDIO	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_int INIT_AUDIO          = 0x00000010;$/;"	v
INIT_EVENTS	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_int INIT_EVENTS         = 0x00004000;$/;"	v
INIT_EVERYTHING	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_int INIT_EVERYTHING =$/;"	v
INIT_GAMECONTROLLER	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_int INIT_GAMECONTROLLER = 0x00002000;  \/**< INIT_GAMECONTROLLER implies INIT_JOYSTICK */;"	v
INIT_HAPTIC	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_int INIT_HAPTIC         = 0x00001000;$/;"	v
INIT_JOYSTICK	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_int INIT_JOYSTICK       = 0x00000200;  \/**< INIT_JOYSTICK implies INIT_EVENTS *\/$/;"	v
INIT_JPG	$C2_LIBDIR/sdl2_image/sdl_image.c2i	/^const c_uint INIT_JPG  = 0x00000001;$/;"	v
INIT_NOPARACHUTE	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_int INIT_NOPARACHUTE    = 0x00100000;  \/**< compatibility; this flag is ignored. *\/$/;"	v
INIT_PNG	$C2_LIBDIR/sdl2_image/sdl_image.c2i	/^const c_uint INIT_PNG  = 0x00000002;$/;"	v
INIT_SENSOR	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_int INIT_SENSOR         = 0x00008000;$/;"	v
INIT_TIF	$C2_LIBDIR/sdl2_image/sdl_image.c2i	/^const c_uint INIT_TIF  = 0x00000004;$/;"	v
INIT_TIMER	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_int INIT_TIMER          = 0x00000001;$/;"	v
INIT_VIDEO	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_int INIT_VIDEO          = 0x00000020;  \/**< INIT_VIDEO implies INIT_EVENTS *\/$/;"	v
INIT_WEBP	$C2_LIBDIR/sdl2_image/sdl_image.c2i	/^const c_uint INIT_WEBP = 0x00000008;$/;"	v
INLCR	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint INLCR   = 0000100;$/;"	v
INPCK	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint INPCK   = 0000020;$/;"	v
INSERT	$C2_LIBDIR/sdl2/sdl.c2i	/^    INSERT = 73, \/**< insert on PC, help on some Mac keyboards (but$/;"	v
INTERNAL_ERROR	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int INTERNAL_ERROR                    = -0x6C00;  \/**< Internal error (eg, unexpected f/;"	v
INTERNATIONAL1	$C2_LIBDIR/sdl2/sdl.c2i	/^    INTERNATIONAL1 = 135, \/**< used on Asian keyboards, see$/;"	v
INTERNATIONAL2	$C2_LIBDIR/sdl2/sdl.c2i	/^    INTERNATIONAL2 = 136,$/;"	v
INTERNATIONAL3	$C2_LIBDIR/sdl2/sdl.c2i	/^    INTERNATIONAL3 = 137, \/**< Yen *\/$/;"	v
INTERNATIONAL4	$C2_LIBDIR/sdl2/sdl.c2i	/^    INTERNATIONAL4 = 138,$/;"	v
INTERNATIONAL5	$C2_LIBDIR/sdl2/sdl.c2i	/^    INTERNATIONAL5 = 139,$/;"	v
INTERNATIONAL6	$C2_LIBDIR/sdl2/sdl.c2i	/^    INTERNATIONAL6 = 140,$/;"	v
INTERNATIONAL7	$C2_LIBDIR/sdl2/sdl.c2i	/^    INTERNATIONAL7 = 141,$/;"	v
INTERNATIONAL8	$C2_LIBDIR/sdl2/sdl.c2i	/^    INTERNATIONAL8 = 142,$/;"	v
INTERNATIONAL9	$C2_LIBDIR/sdl2/sdl.c2i	/^    INTERNATIONAL9 = 143,$/;"	v
INVALID_MAC	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int INVALID_MAC                       = -0x7180;  \/**< Verification of the message MAC /;"	v
INVALID_RECORD	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int INVALID_RECORD                    = -0x7200;  \/**< An invalid SSL record was receiv/;"	v
INVALID_VERIFY_HASH	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int INVALID_VERIFY_HASH               = -0x6600;  \/**< Couldn't set the hash for verify/;"	v
IO_marker	$C2_LIBDIR/libc/stdio.c2i	/^type IO_marker struct @(cname="_IO_marker") {$/;"	t
IPPROTO_IP	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int IPPROTO_IP  =  0;$/;"	v
IPPROTO_TCP	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int IPPROTO_TCP =  6;$/;"	v
IPPROTO_UDP	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int IPPROTO_UDP = 22;$/;"	v
IP_ADD_MEMBERSHIP	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 IP_ADD_MEMBERSHIP       = 35;$/;"	v
IP_ADD_SOURCE_MEMBERSHIP	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 IP_ADD_SOURCE_MEMBERSHIP  = 39;$/;"	v
IP_BLOCK_SOURCE	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 IP_BLOCK_SOURCE         = 38;$/;"	v
IP_DROP_MEMBERSHIP	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 IP_DROP_MEMBERSHIP      = 36;$/;"	v
IP_DROP_SOURCE_MEMBERSHIP	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 IP_DROP_SOURCE_MEMBERSHIP = 40;$/;"	v
IP_LOCAL_PORT_RANGE	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 IP_LOCAL_PORT_RANGE     = 51;$/;"	v
IP_MSFILTER	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 IP_MSFILTER             = 41;$/;"	v
IP_MULTICAST_ALL	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 IP_MULTICAST_ALL        = 49;$/;"	v
IP_MULTICAST_IF	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 IP_MULTICAST_IF         = 32;$/;"	v
IP_MULTICAST_LOOP	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 IP_MULTICAST_LOOP       = 34;$/;"	v
IP_MULTICAST_TTL	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 IP_MULTICAST_TTL        = 33;$/;"	v
IP_PROTOCOL	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 IP_PROTOCOL             = 52;$/;"	v
IP_UNBLOCK_SOURCE	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 IP_UNBLOCK_SOURCE       = 37;$/;"	v
IP_UNICAST_IF	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 IP_UNICAST_IF           = 50;$/;"	v
ISIG	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint ISIG    = 0000001;$/;"	v
ISTRIP	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint ISTRIP  = 0000040;$/;"	v
IUCLC	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint IUCLC   = 0001000;$/;"	v
IUTF8	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint IUTF8   = 0040000;$/;"	v
IXANY	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint IXANY   = 0004000;$/;"	v
IXOFF	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint IXOFF   = 0010000;$/;"	v
IXON	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint IXON    = 0002000;$/;"	v
Ifaddrs	$C2_LIBDIR/libc/ifaddrs.c2i	/^type Ifaddrs struct {$/;"	t
InAddr	$C2_LIBDIR/libc/sys_socket.c2i	/^type InAddr u32 @(cname="in_addr_t");$/;"	t
InPort	$C2_LIBDIR/libc/sys_socket.c2i	/^type InPort u16 @(cname="in_port_t");$/;"	t
In_addr	$C2_LIBDIR/libc/sys_socket.c2i	/^type In_addr struct @(cname="in_addr") {$/;"	t
Integer	$C2_LIBDIR/lua/lua.c2i	/^type Integer c_int @(cname="lua_integer");$/;"	t
Invalid	$C2_LIBDIR/sdl2/sdl.c2i	/^    Invalid = 0x7FFFFFFF,$/;"	v
Iovec	$C2_LIBDIR/libc/uio.c2i	/^type Iovec struct {$/;"	t
Ip_Mreq	$C2_LIBDIR/libc/sys_socket.c2i	/^type Ip_Mreq struct @(cname="ip_mreq") {$/;"	t
JOYAXISMOTION	$C2_LIBDIR/sdl2/sdl.c2i	/^    JOYAXISMOTION  = 0x600, \/**< Joystick axis motion *\/$/;"	v
JOYBALLMOTION	$C2_LIBDIR/sdl2/sdl.c2i	/^    JOYBALLMOTION,          \/**< Joystick trackball motion *\/$/;"	v
JOYBUTTONDOWN	$C2_LIBDIR/sdl2/sdl.c2i	/^    JOYBUTTONDOWN,          \/**< Joystick button pressed *\/$/;"	v
JOYBUTTONUP	$C2_LIBDIR/sdl2/sdl.c2i	/^    JOYBUTTONUP,            \/**< Joystick button released *\/$/;"	v
JOYDEVICEADDED	$C2_LIBDIR/sdl2/sdl.c2i	/^    JOYDEVICEADDED,         \/**< A new joystick has been inserted into the system *\/$/;"	v
JOYDEVICEREMOVED	$C2_LIBDIR/sdl2/sdl.c2i	/^    JOYDEVICEREMOVED,       \/**< An opened joystick has been removed *\/$/;"	v
JOYHATMOTION	$C2_LIBDIR/sdl2/sdl.c2i	/^    JOYHATMOTION,           \/**< Joystick hat position change *\/$/;"	v
JmpBuf	$C2_LIBDIR/libc/csetjmp.c2i	/^type JmpBuf JmpBufTag* @(cname="jmp_buf");$/;"	t
JmpBufTag	$C2_LIBDIR/libc/csetjmp.c2i	/^type JmpBufTag struct @(cname="__jmp_buf_tag", aligned=8) {$/;"	t
KBDILLUMDOWN	$C2_LIBDIR/sdl2/sdl.c2i	/^    KBDILLUMDOWN = 279,$/;"	v
KBDILLUMTOGGLE	$C2_LIBDIR/sdl2/sdl.c2i	/^    KBDILLUMTOGGLE = 278,$/;"	v
KBDILLUMUP	$C2_LIBDIR/sdl2/sdl.c2i	/^    KBDILLUMUP = 280,$/;"	v
KContext	$C2_LIBDIR/lua/lua.c2i	/^type KContext LUA_KCONTEXT @(cname="lua_KContext");$/;"	t
KEYDOWN	$C2_LIBDIR/sdl2/sdl.c2i	/^    KEYDOWN        = 0x300, \/**< Key pressed *\/$/;"	v
KEYMAPCHANGED	$C2_LIBDIR/sdl2/sdl.c2i	/^    KEYMAPCHANGED,          \/**< Keymap changed due to a system event such as an$/;"	v
KEYUP	$C2_LIBDIR/sdl2/sdl.c2i	/^    KEYUP,                  \/**< Key released *\/$/;"	v
KFunction	$C2_LIBDIR/lua/lua.c2i	/^type KFunction fn c_int (State *L, c_int status, KContext ctx) @(cname="lua_KFunction");$/;"	t
KP_0	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_0 = 98,$/;"	v
KP_00	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_00 = 176,$/;"	v
KP_000	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_000 = 177,$/;"	v
KP_1	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_1 = 89,$/;"	v
KP_2	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_2 = 90,$/;"	v
KP_3	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_3 = 91,$/;"	v
KP_4	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_4 = 92,$/;"	v
KP_5	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_5 = 93,$/;"	v
KP_6	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_6 = 94,$/;"	v
KP_7	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_7 = 95,$/;"	v
KP_8	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_8 = 96,$/;"	v
KP_9	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_9 = 97,$/;"	v
KP_A	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_A = 188,$/;"	v
KP_AMPERSAND	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_AMPERSAND = 199,$/;"	v
KP_AT	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_AT = 206,$/;"	v
KP_B	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_B = 189,$/;"	v
KP_BACKSPACE	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_BACKSPACE = 187,$/;"	v
KP_BINARY	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_BINARY = 218,$/;"	v
KP_C	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_C = 190,$/;"	v
KP_CLEAR	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_CLEAR = 216,$/;"	v
KP_CLEARENTRY	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_CLEARENTRY = 217,$/;"	v
KP_COLON	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_COLON = 203,$/;"	v
KP_COMMA	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_COMMA = 133,$/;"	v
KP_D	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_D = 191,$/;"	v
KP_DBLAMPERSAND	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_DBLAMPERSAND = 200,$/;"	v
KP_DBLVERTICALBAR	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_DBLVERTICALBAR = 202,$/;"	v
KP_DECIMAL	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_DECIMAL = 220,$/;"	v
KP_DIVIDE	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_DIVIDE = 84,$/;"	v
KP_E	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_E = 192,$/;"	v
KP_ENTER	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_ENTER = 88,$/;"	v
KP_EQUALS	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_EQUALS = 103,$/;"	v
KP_EQUALSAS400	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_EQUALSAS400 = 134,$/;"	v
KP_EXCLAM	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_EXCLAM = 207,$/;"	v
KP_F	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_F = 193,$/;"	v
KP_GREATER	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_GREATER = 198,$/;"	v
KP_HASH	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_HASH = 204,$/;"	v
KP_HEXADECIMAL	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_HEXADECIMAL = 221,$/;"	v
KP_LEFTBRACE	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_LEFTBRACE = 184,$/;"	v
KP_LEFTPAREN	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_LEFTPAREN = 182,$/;"	v
KP_LESS	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_LESS = 197,$/;"	v
KP_MEMADD	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_MEMADD = 211,$/;"	v
KP_MEMCLEAR	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_MEMCLEAR = 210,$/;"	v
KP_MEMDIVIDE	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_MEMDIVIDE = 214,$/;"	v
KP_MEMMULTIPLY	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_MEMMULTIPLY = 213,$/;"	v
KP_MEMRECALL	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_MEMRECALL = 209,$/;"	v
KP_MEMSTORE	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_MEMSTORE = 208,$/;"	v
KP_MEMSUBTRACT	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_MEMSUBTRACT = 212,$/;"	v
KP_MINUS	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_MINUS = 86,$/;"	v
KP_MULTIPLY	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_MULTIPLY = 85,$/;"	v
KP_OCTAL	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_OCTAL = 219,$/;"	v
KP_PERCENT	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_PERCENT = 196,$/;"	v
KP_PERIOD	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_PERIOD = 99,$/;"	v
KP_PLUS	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_PLUS = 87,$/;"	v
KP_PLUSMINUS	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_PLUSMINUS = 215,$/;"	v
KP_POWER	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_POWER = 195,$/;"	v
KP_RIGHTBRACE	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_RIGHTBRACE = 185,$/;"	v
KP_RIGHTPAREN	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_RIGHTPAREN = 183,$/;"	v
KP_SPACE	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_SPACE = 205,$/;"	v
KP_TAB	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_TAB = 186,$/;"	v
KP_VERTICALBAR	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_VERTICALBAR = 201,$/;"	v
KP_XOR	$C2_LIBDIR/sdl2/sdl.c2i	/^    KP_XOR = 194,$/;"	v
K_0	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_0 = '0',$/;"	v
K_1	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_1 = '1',$/;"	v
K_2	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_2 = '2',$/;"	v
K_3	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_3 = '3',$/;"	v
K_4	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_4 = '4',$/;"	v
K_5	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_5 = '5',$/;"	v
K_6	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_6 = '6',$/;"	v
K_7	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_7 = '7',$/;"	v
K_8	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_8 = '8',$/;"	v
K_9	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_9 = '9',$/;"	v
K_AMPERSAND	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_AMPERSAND = '&',$/;"	v
K_ASTERISK	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_ASTERISK = '*',$/;"	v
K_AT	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_AT = '@',$/;"	v
K_BACKQUOTE	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_BACKQUOTE = '`',$/;"	v
K_BACKSLASH	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_BACKSLASH = '\\\\',$/;"	v
K_BACKSPACE	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_BACKSPACE = '\\b',$/;"	v
K_CAPSLOCK	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_CAPSLOCK  = (1<<30) | 57,$/;"	v
K_CARET	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_CARET = '^',$/;"	v
K_COLON	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_COLON = ':',$/;"	v
K_COMMA	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_COMMA = ',',$/;"	v
K_DELETE	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_DELETE    = (1<<30) | 76,$/;"	v
K_DOLLAR	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_DOLLAR = '$',$/;"	v
K_DOWN	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_DOWN      = (1<<30) | 81,$/;"	v
K_END	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_END       = (1<<30) | 77,$/;"	v
K_EQUALS	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_EQUALS = '=',$/;"	v
K_ESCAPE	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_ESCAPE = 27,$/;"	v
K_EXCLAIM	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_EXCLAIM = '!',$/;"	v
K_F1	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_F1        = (1<<30) | 58,$/;"	v
K_F10	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_F10       = (1<<30) | 67,$/;"	v
K_F11	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_F11       = (1<<30) | 68,$/;"	v
K_F12	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_F12       = (1<<30) | 69,$/;"	v
K_F2	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_F2        = (1<<30) | 59,$/;"	v
K_F3	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_F3        = (1<<30) | 60,$/;"	v
K_F4	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_F4        = (1<<30) | 61,$/;"	v
K_F5	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_F5        = (1<<30) | 62,$/;"	v
K_F6	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_F6        = (1<<30) | 63,$/;"	v
K_F7	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_F7        = (1<<30) | 64,$/;"	v
K_F8	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_F8        = (1<<30) | 65,$/;"	v
K_F9	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_F9        = (1<<30) | 66,$/;"	v
K_GREATER	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_GREATER = '>',$/;"	v
K_HASH	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_HASH = '#',$/;"	v
K_HOME	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_HOME      = (1<<30) | 74,$/;"	v
K_INSERT	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_INSERT    = (1<<30) | 73,$/;"	v
K_LALT	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_LALT      = (1<<30) | 226,$/;"	v
K_LCTRL	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_LCTRL     = (1<<30) | 224,$/;"	v
K_LEFT	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_LEFT      = (1<<30) | 80,$/;"	v
K_LEFTBRACKET	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_LEFTBRACKET = '[',$/;"	v
K_LEFTPAREN	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_LEFTPAREN = '(',$/;"	v
K_LESS	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_LESS = '<',$/;"	v
K_LGUI	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_LGUI      = (1<<30) | 227,   \/\/ Windows, Command(apple)$/;"	v
K_LSHIFT	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_LSHIFT    = (1<<30) | 225,$/;"	v
K_MINUS	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_MINUS = '-',$/;"	v
K_PAGEDOWN	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_PAGEDOWN  = (1<<30) | 78,$/;"	v
K_PAGEUP	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_PAGEUP    = (1<<30) | 75,$/;"	v
K_PAUSE	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_PAUSE     = (1<<30) | 72,$/;"	v
K_PERCENT	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_PERCENT = '%',$/;"	v
K_PERIOD	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_PERIOD = '.',$/;"	v
K_PLUS	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_PLUS = '+',$/;"	v
K_PRINTSCREEN	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_PRINTSCREEN = (1<<30) | 70,$/;"	v
K_QUESTION	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_QUESTION = '?',$/;"	v
K_QUOTE	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_QUOTE = '\\'',$/;"	v
K_QUOTEDBL	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_QUOTEDBL = '"',$/;"	v
K_RALT	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_RALT      = (1<<30) | 230,$/;"	v
K_RCTRL	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_RCTRL     = (1<<30) | 228,$/;"	v
K_RETURN	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_RETURN = '\\r',$/;"	v
K_RGUI	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_RGUI      = (1<<30) | 231,   \/\/ Windows, Command(apple)$/;"	v
K_RIGHT	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_RIGHT     = (1<<30) | 79,$/;"	v
K_RIGHTBRACKET	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_RIGHTBRACKET = ']',$/;"	v
K_RIGHTPAREN	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_RIGHTPAREN = ')',$/;"	v
K_RSHIFT	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_RSHIFT    = (1<<30) | 229,$/;"	v
K_SCROLLLOCK	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_SCROLLLOCK = (1<<30) | 71,$/;"	v
K_SEMICOLON	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_SEMICOLON = ';',$/;"	v
K_SLASH	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_SLASH = '\/',$/;"	v
K_SPACE	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_SPACE = ' ',$/;"	v
K_TAB	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_TAB = '\\t',$/;"	v
K_UNDERSCORE	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_UNDERSCORE = '_',$/;"	v
K_UNKNOWN	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_UNKNOWN = 0,$/;"	v
K_UP	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_UP        = (1<<30) | 82,$/;"	v
K_a	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_a = 'a',$/;"	v
K_b	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_b = 'b',$/;"	v
K_c	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_c = 'c',$/;"	v
K_d	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_d = 'd',$/;"	v
K_e	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_e = 'e',$/;"	v
K_f	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_f = 'f',$/;"	v
K_g	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_g = 'g',$/;"	v
K_h	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_h = 'h',$/;"	v
K_i	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_i = 'i',$/;"	v
K_j	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_j = 'j',$/;"	v
K_k	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_k = 'k',$/;"	v
K_l	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_l = 'l',$/;"	v
K_m	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_m = 'm',$/;"	v
K_n	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_n = 'n',$/;"	v
K_o	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_o = 'o',$/;"	v
K_p	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_p = 'p',$/;"	v
K_q	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_q = 'q',$/;"	v
K_r	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_r = 'r',$/;"	v
K_s	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_s = 's',$/;"	v
K_t	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_t = 't',$/;"	v
K_u	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_u = 'u',$/;"	v
K_v	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_v = 'v',$/;"	v
K_w	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_w = 'w',$/;"	v
K_x	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_x = 'x',$/;"	v
K_y	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_y = 'y',$/;"	v
K_z	$C2_LIBDIR/sdl2/sdl.c2i	/^    K_z = 'z',$/;"	v
Kernel_rwf_t	$C2_LIBDIR/io_uring/io_uring.c2i	/^type Kernel_rwf_t c_int;$/;"	t
Key	$C2_LIBDIR/sdl2/sdl.c2i	/^type Key enum i32 {$/;"	t
KeyboardEvent	$C2_LIBDIR/sdl2/sdl.c2i	/^type KeyboardEvent struct {$/;"	t
Keycode	$C2_LIBDIR/sdl2/sdl.c2i	/^type Keycode i32;$/;"	t
Keymod	$C2_LIBDIR/sdl2/sdl.c2i	/^type Keymod enum u32 {$/;"	t
Keysym	$C2_LIBDIR/sdl2/sdl.c2i	/^type Keysym struct {$/;"	t
LALT	$C2_LIBDIR/sdl2/sdl.c2i	/^    LALT = 226, \/**< alt, option *\/$/;"	v
LANG1	$C2_LIBDIR/sdl2/sdl.c2i	/^    LANG1 = 144, \/**< Hangul\/English toggle *\/$/;"	v
LANG2	$C2_LIBDIR/sdl2/sdl.c2i	/^    LANG2 = 145, \/**< Hanja conversion *\/$/;"	v
LANG3	$C2_LIBDIR/sdl2/sdl.c2i	/^    LANG3 = 146, \/**< Katakana *\/$/;"	v
LANG4	$C2_LIBDIR/sdl2/sdl.c2i	/^    LANG4 = 147, \/**< Hiragana *\/$/;"	v
LANG5	$C2_LIBDIR/sdl2/sdl.c2i	/^    LANG5 = 148, \/**< Zenkaku\/Hankaku *\/$/;"	v
LANG6	$C2_LIBDIR/sdl2/sdl.c2i	/^    LANG6 = 149, \/**< reserved *\/$/;"	v
LANG7	$C2_LIBDIR/sdl2/sdl.c2i	/^    LANG7 = 150, \/**< reserved *\/$/;"	v
LANG8	$C2_LIBDIR/sdl2/sdl.c2i	/^    LANG8 = 151, \/**< reserved *\/$/;"	v
LANG9	$C2_LIBDIR/sdl2/sdl.c2i	/^    LANG9 = 152, \/**< reserved *\/$/;"	v
LASTEVENT	$C2_LIBDIR/sdl2/sdl.c2i	/^    LASTEVENT    = 0xFFFF$/;"	v
LCTRL	$C2_LIBDIR/sdl2/sdl.c2i	/^    LCTRL = 224,$/;"	v
LEAVE	$C2_LIBDIR/sdl2/sdl.c2i	/^    LEAVE,          \/**< Window has lost mouse focus *\/$/;"	v
LEFT	$C2_LIBDIR/sdl2/sdl.c2i	/^    LEFT = 80,$/;"	v
LEFTBRACKET	$C2_LIBDIR/sdl2/sdl.c2i	/^    LEFTBRACKET = 47,$/;"	v
LGUI	$C2_LIBDIR/sdl2/sdl.c2i	/^    LGUI = 227, \/**< windows, command (apple), meta *\/$/;"	v
LINKAT	$C2_LIBDIR/io_uring/io_uring.c2i	/^    LINKAT,$/;"	v
LINK_TIMEOUT	$C2_LIBDIR/io_uring/io_uring.c2i	/^    LINK_TIMEOUT,$/;"	v
LINK_TIMEOUT_UPDATE	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u32 LINK_TIMEOUT_UPDATE = (1 << 4);$/;"	v
LOCALECHANGED	$C2_LIBDIR/sdl2/sdl.c2i	/^    LOCALECHANGED,  \/**< The user's locale preferences have changed. *\/$/;"	v
LSHIFT	$C2_LIBDIR/sdl2/sdl.c2i	/^    LSHIFT = 225,$/;"	v
LUAI_MAXSTACK	$C2_LIBDIR/lua/lua.c2i	/^const c_uint LUAI_MAXSTACK = 1000000;$/;"	v
LUA_BITLIBNAME	$C2_LIBDIR/lua/lua_lib.c2i	/^const char[] LUA_BITLIBNAME = "bit32";$/;"	v
LUA_COLIBNAME	$C2_LIBDIR/lua/lua_lib.c2i	/^const char[] LUA_COLIBNAME = "coroutine";$/;"	v
LUA_DBLIBNAME	$C2_LIBDIR/lua/lua_lib.c2i	/^const char[] LUA_DBLIBNAME = "debug";$/;"	v
LUA_ERRERR	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_ERRERR      = 6;$/;"	v
LUA_ERRGCMM	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_ERRGCMM     = 5;$/;"	v
LUA_ERRMEM	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_ERRMEM      = 4;$/;"	v
LUA_ERRRUN	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_ERRRUN      = 2;$/;"	v
LUA_ERRSYNTAX	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_ERRSYNTAX   = 3;$/;"	v
LUA_GCCOLLECT	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_GCCOLLECT    = 2;$/;"	v
LUA_GCCOUNT	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_GCCOUNT      = 3;$/;"	v
LUA_GCCOUNTB	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_GCCOUNTB     = 4;$/;"	v
LUA_GCISRUNNING	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_GCISRUNNING  = 9;$/;"	v
LUA_GCRESTART	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_GCRESTART    = 1;$/;"	v
LUA_GCSETPAUSE	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_GCSETPAUSE   = 6;$/;"	v
LUA_GCSETSTEPMUL	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_GCSETSTEPMUL = 7;$/;"	v
LUA_GCSTEP	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_GCSTEP       = 5;$/;"	v
LUA_GCSTOP	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_GCSTOP       = 0;$/;"	v
LUA_INTEGER	$C2_LIBDIR/lua/lua.c2i	/^type LUA_INTEGER c_int;$/;"	t
LUA_IOLIBNAME	$C2_LIBDIR/lua/lua_lib.c2i	/^const char[] LUA_IOLIBNAME = "io";$/;"	v
LUA_KCONTEXT	$C2_LIBDIR/lua/lua.c2i	/^type LUA_KCONTEXT c_longlong;$/;"	t
LUA_LOADLIBNAME	$C2_LIBDIR/lua/lua_lib.c2i	/^const char[] LUA_LOADLIBNAME = "package";$/;"	v
LUA_MATHLIBNAME	$C2_LIBDIR/lua/lua_lib.c2i	/^const char[] LUA_MATHLIBNAME = "math";$/;"	v
LUA_MINSTACK	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_MINSTACK        = 20;$/;"	v
LUA_MULTRET	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_MULTRET = -1;$/;"	v
LUA_NUMBER	$C2_LIBDIR/lua/lua.c2i	/^type Number LUA_NUMBER @(cname="lua_Number");$/;"	v
LUA_NUMTAGS	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_NUMTAGS         = 9;$/;"	v
LUA_OK	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_OK          = 0;$/;"	v
LUA_OPADD	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_OPADD      = 0;    \/\/ ORDER TM, ORDER OP$/;"	v
LUA_OPBAND	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_OPBAND     = 7;$/;"	v
LUA_OPBNOT	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_OPBNOT     = 13;$/;"	v
LUA_OPBOR	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_OPBOR      = 8;$/;"	v
LUA_OPBXOR	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_OPBXOR     = 9;$/;"	v
LUA_OPDIV	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_OPDIV      = 5;$/;"	v
LUA_OPEQ	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_OPEQ   = 0;$/;"	v
LUA_OPIDIV	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_OPIDIV     = 6;$/;"	v
LUA_OPLE	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_OPLE   = 0;$/;"	v
LUA_OPLT	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_OPLT   = 0;$/;"	v
LUA_OPMOD	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_OPMOD      = 3;$/;"	v
LUA_OPMUL	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_OPMUL      = 2;$/;"	v
LUA_OPPOW	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_OPPOW      = 4;$/;"	v
LUA_OPSHL	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_OPSHL      = 10;$/;"	v
LUA_OPSHR	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_OPSHR      = 11;$/;"	v
LUA_OPSUB	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_OPSUB      = 1;$/;"	v
LUA_OPUNM	$C2_LIBDIR/lua/lua.c2i	/^const u8 LUA_OPUNM      = 12;$/;"	v
LUA_OSLIBNAME	$C2_LIBDIR/lua/lua_lib.c2i	/^const char[] LUA_OSLIBNAME = "os";$/;"	v
LUA_REGISTRYINDEX	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_REGISTRYINDEX = -LUAI_MAXSTACK - 1000;$/;"	v
LUA_RIDX_GLOBALS	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_RIDX_GLOBALS    = 2;$/;"	v
LUA_RIDX_LAST	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_RIDX_LAST       = LUA_RIDX_GLOBALS;$/;"	v
LUA_RIDX_MAINTHREAD	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_RIDX_MAINTHREAD = 1;$/;"	v
LUA_SIGNATURE	$C2_LIBDIR/lua/lua.c2i	/^const char[] LUA_SIGNATURE = "\\x1bLua";$/;"	v
LUA_STRINGLIBNAME	$C2_LIBDIR/lua/lua_lib.c2i	/^const char[] LUA_STRINGLIBNAME = "string";$/;"	v
LUA_TABLIBNAME	$C2_LIBDIR/lua/lua_lib.c2i	/^const char[] LUA_TABLIBNAME = "table";$/;"	v
LUA_TBOOLEAN	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_TBOOLEAN        = 1;$/;"	v
LUA_TFUNCTION	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_TFUNCTION       = 6;$/;"	v
LUA_TLIGHTUSERDATA	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_TLIGHTUSERDATA  = 2;$/;"	v
LUA_TNIL	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_TNIL            = 0;$/;"	v
LUA_TNONE	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_TNONE           = -1;$/;"	v
LUA_TNUMBER	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_TNUMBER         = 3;$/;"	v
LUA_TSTRING	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_TSTRING         = 4;$/;"	v
LUA_TTABLE	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_TTABLE          = 5;$/;"	v
LUA_TTHREAD	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_TTHREAD         = 8;$/;"	v
LUA_TUSERDATA	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_TUSERDATA       = 7;$/;"	v
LUA_UNSIGNED	$C2_LIBDIR/lua/lua.c2i	/^type Unsigned LUA_UNSIGNED @(cname="lua_Unsigned");$/;"	v
LUA_UTF8LIBNAME	$C2_LIBDIR/lua/lua_lib.c2i	/^const char[] LUA_UTF8LIBNAME = "utf8";$/;"	v
LUA_YIELD	$C2_LIBDIR/lua/lua.c2i	/^const c_int LUA_YIELD       = 1;$/;"	v
Lalt	$C2_LIBDIR/sdl2/sdl.c2i	/^    Lalt    = 0x0100,$/;"	v
Lctrl	$C2_LIBDIR/sdl2/sdl.c2i	/^    Lctrl   = 0x0040,$/;"	v
Ldiv_t	$C2_LIBDIR/libc/stdlib.c2i	/^type Ldiv_t struct @(cname="Ldiv_t") {$/;"	t
Lgui	$C2_LIBDIR/sdl2/sdl.c2i	/^    Lgui    = 0x0400,$/;"	v
Linear	$C2_LIBDIR/sdl2/sdl.c2i	/^    Linear,  \/\/ linear filtering$/;"	v
Lshift	$C2_LIBDIR/sdl2/sdl.c2i	/^    Lshift  = 0x0001,$/;"	v
MADVISE	$C2_LIBDIR/io_uring/io_uring.c2i	/^    MADVISE,$/;"	v
MAIL	$C2_LIBDIR/sdl2/sdl.c2i	/^    MAIL = 265,$/;"	v
MAP_ANONYMOUS	$C2_LIBDIR/libc/sys_mman.c2i	/^const u32 MAP_ANONYMOUS = 0x20;$/;"	v
MAP_FAILED	$C2_LIBDIR/libc/sys_mman.c2i	/^const usize MAP_FAILED = (void*)(usize)(-1);$/;"	v
MAP_FIXED	$C2_LIBDIR/libc/sys_mman.c2i	/^const u32 MAP_FIXED     = 0x10;$/;"	v
MAP_POPULATE	$C2_LIBDIR/libc/sys_mman.c2i	/^const u32 MAP_POPULATE  = 0x8000;$/;"	v
MAP_PRIVATE	$C2_LIBDIR/libc/sys_mman.c2i	/^const u32 MAP_PRIVATE   = 0x02;$/;"	v
MAP_SHARED	$C2_LIBDIR/libc/sys_mman.c2i	/^const u32 MAP_SHARED    = 0x01;$/;"	v
MAXIMIZED	$C2_LIBDIR/sdl2/sdl.c2i	/^    MAXIMIZED,      \/**< Window has been maximized *\/$/;"	v
MBEDTLS_ECP_DP_BP256R1	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_ECP_DP_BP256R1,        \/*!< Domain parameters for 256-bit Brainpool curve. *\/$/;"	v
MBEDTLS_ECP_DP_BP384R1	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_ECP_DP_BP384R1,        \/*!< Domain parameters for 384-bit Brainpool curve. *\/$/;"	v
MBEDTLS_ECP_DP_BP512R1	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_ECP_DP_BP512R1,        \/*!< Domain parameters for 512-bit Brainpool curve. *\/$/;"	v
MBEDTLS_ECP_DP_CURVE25519	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_ECP_DP_CURVE25519,     \/*!< Domain parameters for Curve25519. *\/$/;"	v
MBEDTLS_ECP_DP_CURVE448	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_ECP_DP_CURVE448,       \/*!< Domain parameters for Curve448. *\/$/;"	v
MBEDTLS_ECP_DP_NONE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_ECP_DP_NONE = 0,       \/*!< Curve not defined. *\/$/;"	v
MBEDTLS_ECP_DP_SECP192K1	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_ECP_DP_SECP192K1,      \/*!< Domain parameters for 192-bit "Koblitz" curve. *\/$/;"	v
MBEDTLS_ECP_DP_SECP192R1	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_ECP_DP_SECP192R1,      \/*!< Domain parameters for the 192-bit curve defined by FIPS/;"	v
MBEDTLS_ECP_DP_SECP224K1	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_ECP_DP_SECP224K1,      \/*!< Domain parameters for 224-bit "Koblitz" curve. *\/$/;"	v
MBEDTLS_ECP_DP_SECP224R1	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_ECP_DP_SECP224R1,      \/*!< Domain parameters for the 224-bit curve defined by FIPS/;"	v
MBEDTLS_ECP_DP_SECP256K1	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_ECP_DP_SECP256K1,      \/*!< Domain parameters for 256-bit "Koblitz" curve. *\/$/;"	v
MBEDTLS_ECP_DP_SECP256R1	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_ECP_DP_SECP256R1,      \/*!< Domain parameters for the 256-bit curve defined by FIPS/;"	v
MBEDTLS_ECP_DP_SECP384R1	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_ECP_DP_SECP384R1,      \/*!< Domain parameters for the 384-bit curve defined by FIPS/;"	v
MBEDTLS_ECP_DP_SECP521R1	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_ECP_DP_SECP521R1,      \/*!< Domain parameters for the 521-bit curve defined by FIPS/;"	v
MBEDTLS_MD_MD2	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_MD_MD2,       \/**< The MD2 message digest. *\/$/;"	v
MBEDTLS_MD_MD4	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_MD_MD4,       \/**< The MD4 message digest. *\/$/;"	v
MBEDTLS_MD_MD5	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_MD_MD5,       \/**< The MD5 message digest. *\/$/;"	v
MBEDTLS_MD_NONE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_MD_NONE=0,    \/**< None. *\/$/;"	v
MBEDTLS_MD_RIPEMD160	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_MD_RIPEMD160, \/**< The RIPEMD-160 message digest. *\/$/;"	v
MBEDTLS_MD_SHA1	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_MD_SHA1,      \/**< The SHA-1 message digest. *\/$/;"	v
MBEDTLS_MD_SHA224	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_MD_SHA224,    \/**< The SHA-224 message digest. *\/$/;"	v
MBEDTLS_MD_SHA256	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_MD_SHA256,    \/**< The SHA-256 message digest. *\/$/;"	v
MBEDTLS_MD_SHA384	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_MD_SHA384,    \/**< The SHA-384 message digest. *\/$/;"	v
MBEDTLS_MD_SHA512	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_MD_SHA512,    \/**< The SHA-512 message digest. *\/$/;"	v
MBEDTLS_PK_ECDSA	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_PK_ECDSA,$/;"	v
MBEDTLS_PK_ECKEY	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_PK_ECKEY,$/;"	v
MBEDTLS_PK_ECKEY_DH	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_PK_ECKEY_DH,$/;"	v
MBEDTLS_PK_NONE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_PK_NONE=0,$/;"	v
MBEDTLS_PK_OPAQUE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_PK_OPAQUE,$/;"	v
MBEDTLS_PK_RSA	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_PK_RSA,$/;"	v
MBEDTLS_PK_RSASSA_PSS	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_PK_RSASSA_PSS,$/;"	v
MBEDTLS_PK_RSA_ALT	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    MBEDTLS_PK_RSA_ALT,$/;"	v
MCAST_BLOCK_SOURCE	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 MCAST_BLOCK_SOURCE      = 43;$/;"	v
MCAST_JOIN_GROUP	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 MCAST_JOIN_GROUP        = 42;$/;"	v
MCAST_JOIN_SOURCE_GROUP	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 MCAST_JOIN_SOURCE_GROUP = 46;$/;"	v
MCAST_LEAVE_GROUP	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 MCAST_LEAVE_GROUP       = 45;$/;"	v
MCAST_LEAVE_SOURCE_GROUP	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 MCAST_LEAVE_SOURCE_GROUP = 47;$/;"	v
MCAST_MSFILTER	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 MCAST_MSFILTER          = 48;$/;"	v
MCAST_UNBLOCK_SOURCE	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 MCAST_UNBLOCK_SOURCE    = 44;$/;"	v
MEDIASELECT	$C2_LIBDIR/sdl2/sdl.c2i	/^    MEDIASELECT = 263,$/;"	v
MENU	$C2_LIBDIR/sdl2/sdl.c2i	/^    MENU = 118,$/;"	v
MINIMIZED	$C2_LIBDIR/sdl2/sdl.c2i	/^    MINIMIZED,      \/**< Window has been minimized *\/$/;"	v
MINUS	$C2_LIBDIR/sdl2/sdl.c2i	/^    MINUS = 45,$/;"	v
MIX_DEFAULT_FORMAT	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^const u32 MIX_DEFAULT_FORMAT = AUDIO_S16LSB;$/;"	v
MKDIRAT	$C2_LIBDIR/io_uring/io_uring.c2i	/^    MKDIRAT,$/;"	v
MODE	$C2_LIBDIR/sdl2/sdl.c2i	/^    MODE = 257,    \/**< I'm not sure if this is really not covered$/;"	v
MOUSEBUTTONDOWN	$C2_LIBDIR/sdl2/sdl.c2i	/^    MOUSEBUTTONDOWN,        \/**< Mouse button pressed *\/$/;"	v
MOUSEBUTTONUP	$C2_LIBDIR/sdl2/sdl.c2i	/^    MOUSEBUTTONUP,          \/**< Mouse button released *\/$/;"	v
MOUSEMOTION	$C2_LIBDIR/sdl2/sdl.c2i	/^    MOUSEMOTION    = 0x400, \/**< Mouse moved *\/$/;"	v
MOUSEWHEEL	$C2_LIBDIR/sdl2/sdl.c2i	/^    MOUSEWHEEL,             \/**< Mouse wheel motion *\/$/;"	v
MOVED	$C2_LIBDIR/sdl2/sdl.c2i	/^    MOVED,          \/**< Window has been moved to data1, data2$/;"	v
MULTIGESTURE	$C2_LIBDIR/sdl2/sdl.c2i	/^    MULTIGESTURE,$/;"	v
MUTE	$C2_LIBDIR/sdl2/sdl.c2i	/^    MUTE = 127,$/;"	v
M_1_PI	$C2_LIBDIR/math/math.c2i	/^const c_double M_1_PI      = 0.318309886183790671537767526745028724;  \/* 1\/pi *\/$/;"	v
M_2_PI	$C2_LIBDIR/math/math.c2i	/^const c_double M_2_PI      = 0.636619772367581343075535053490057448;  \/* 2\/pi *\/$/;"	v
M_2_SQRTPI	$C2_LIBDIR/math/math.c2i	/^const c_double M_2_SQRTPI  = 1.12837916709551257389615890312154517;   \/* 2\/sqrt(pi) *\/$/;"	v
M_E	$C2_LIBDIR/math/math.c2i	/^const c_double M_E         = 2.71828182845904523536028747135266250;   \/* e *\/$/;"	v
M_LN10	$C2_LIBDIR/math/math.c2i	/^const c_double M_LN10      = 2.30258509299404568401799145468436421;   \/* loge(10) *\/$/;"	v
M_LN2	$C2_LIBDIR/math/math.c2i	/^const c_double M_LN2       = 0.693147180559945309417232121458176568;  \/* loge(2) *\/$/;"	v
M_LOG10E	$C2_LIBDIR/math/math.c2i	/^const c_double M_LOG10E    = 0.434294481903251827651128918916605082;  \/* log10(e) *\/$/;"	v
M_LOG2E	$C2_LIBDIR/math/math.c2i	/^const c_double M_LOG2E     = 1.44269504088896340735992468100189214;   \/* log2(e) *\/$/;"	v
M_PI	$C2_LIBDIR/math/math.c2i	/^const c_double M_PI        = 3.14159265358979323846264338327950288;   \/* pi *\/$/;"	v
M_PI_2	$C2_LIBDIR/math/math.c2i	/^const c_double M_PI_2      = 1.57079632679489661923132169163975144;   \/* pi\/2 *\/$/;"	v
M_PI_4	$C2_LIBDIR/math/math.c2i	/^const c_double M_PI_4      = 0.785398163397448309615660845819875721;  \/* pi\/4 *\/$/;"	v
M_SQRT1_2	$C2_LIBDIR/math/math.c2i	/^const c_double M_SQRT1_2   = 0.707106781186547524400844362104849039;  \/* 1\/sqrt(2) *\/$/;"	v
M_SQRT2	$C2_LIBDIR/math/math.c2i	/^const c_double M_SQRT2     = 1.41421356237309504880168872420969808;   \/* sqrt(2) *\/$/;"	v
Map	$C2_LIBDIR/libc/net_if.c2i	/^type Map struct @(cname="ifmap") {$/;"	t
Md_type_t	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Md_type_t enum u8 @(cname="mbedtls_md_type_t") {$/;"	t
Mix_Chunk	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^type Mix_Chunk struct {$/;"	t
Mix_CloseAudio	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^fn void Mix_CloseAudio() @(cname="Mix_CloseAudio");$/;"	f
Mix_FadeInMusic	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_FadeInMusic(Mix_Music* music, c_int loops, c_int ms) @(cname="Mix_FadeInMusic");$/;"	f
Mix_FadeOutChannel	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_FadeOutChannel(c_int which, c_int ms) @(cname="Mix_FadeOutChannel");$/;"	f
Mix_FadeOutMusic	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_FadeOutMusic(c_int ms) @(cname="Mix_FadeOutMusic");$/;"	f
Mix_FreeChunk	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^fn void Mix_FreeChunk(Mix_Chunk* chunk) @(cname="Mix_FreeChunk");$/;"	f
Mix_FreeMusic	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^fn void Mix_FreeMusic(Mix_Music* music) @(cname="Mix_FreeMusic");$/;"	f
Mix_HaltChannel	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_HaltChannel(c_int channel) @(cname="Mix_HaltChannel");$/;"	f
Mix_HaltMusic	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_HaltMusic() @(cname="Mix_HaltMusic");$/;"	f
Mix_LoadMUS	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^fn Mix_Music* Mix_LoadMUS(const char* file) @(cname="Mix_LoadMUS");$/;"	f
Mix_LoadWAV_RW	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^fn Mix_Chunk* Mix_LoadWAV_RW(sdl.RWops* src, c_int freesrc) @(cname="Mix_LoadWAV_RW");$/;"	f
Mix_Music	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^type Mix_Music  struct @(opaque, cname="Mix_Music");$/;"	t
Mix_OpenAudio	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_OpenAudio(c_int frequency, u16 format, c_int channels, c_int chunksize); \/\/@(cnam/;"	f
Mix_PlayChannelTimed	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_PlayChannelTimed(c_int channel, Mix_Chunk* chunk, c_int loops, c_int ticks);$/;"	f
Mix_PlayMusic	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_PlayMusic(Mix_Music* music, c_int loops) @(cname="Mix_PlayMusic");$/;"	f
Mix_SetDistance	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_SetDistance(c_int channel, u8 distance) @(cname="Mix_SetDistance");$/;"	f
Mix_SetPanning	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_SetPanning(c_int channel, u8 left, u8 right) @(cname="Mix_SetPanning");$/;"	f
Mix_SetPosition	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_SetPosition(c_int channel, i16 angle, u8 distance) @(cname="Mix_SetPosition");$/;"	f
Mod	$C2_LIBDIR/sdl2/sdl.c2i	/^    Mod = 0x00000004,      \/\/ color modulate dstRGB = srcRGB * dstRGB dstA = dstA$/;"	v
Mode	$C2_LIBDIR/libc/sys_stat.c2i	/^type Mode c_uint;$/;"	t
Mode	$C2_LIBDIR/sdl2/sdl.c2i	/^    Mode    = 0x4000,$/;"	v
MouseButtonEvent	$C2_LIBDIR/sdl2/sdl.c2i	/^type MouseButtonEvent struct {$/;"	t
MouseMotionEvent	$C2_LIBDIR/sdl2/sdl.c2i	/^type MouseMotionEvent struct {$/;"	t
MouseWheelEvent	$C2_LIBDIR/sdl2/sdl.c2i	/^type MouseWheelEvent struct {$/;"	t
Mpi	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Mpi struct @(cname="mbedtls_mpi") {$/;"	t
Mpi_uint	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Mpi_uint c_ulonglong;$/;"	t
Mul	$C2_LIBDIR/sdl2/sdl.c2i	/^    Mul = 0x00000008,      \/\/ color multiply dstRGB = (srcRGB * dstRGB) + (dstRGB * (1-srcA)) /;"	v
Mutex	$C2_LIBDIR/pthread/pthread.c2i	/^type Mutex union @(cname="pthread_mutex_t") {$/;"	t
MutexAttr	$C2_LIBDIR/pthread/pthread.c2i	/^type MutexAttr union @(cname="pthread_mutexattr_t") {$/;"	t
NAME_LEN	$C2_LIBDIR/libc/sys_utsname.c2i	/^const u32 NAME_LEN = 65;$/;"	v
NAN	$C2_LIBDIR/math/math.c2i	/^const c_double NAN        = 0.0 \/ 0.0;$/;"	v
NCCS	$C2_LIBDIR/libc/ctermios.c2i	/^const u32 NCCS = 32;$/;"	v
NET_POLL_READ	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int NET_POLL_READ  = 1; \/**< Used in \\c mbedtls_net_poll to check for pending data  *\/$/;"	v
NET_POLL_WRITE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int NET_POLL_WRITE = 2; \/**< Used in \\c mbedtls_net_poll to check if write possible *\/$/;"	v
NET_PROTO_TCP	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int NET_PROTO_TCP  = 0; \/**< The TCP transport protocol *\/$/;"	v
NET_PROTO_UDP	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int NET_PROTO_UDP  = 1; \/**< The UDP transport protocol *\/$/;"	v
NL0	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint NL0   = 0000000;$/;"	v
NL1	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint NL1   = 0000400;$/;"	v
NLDLY	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint NLDLY   = 0000400;$/;"	v
NOFLSH	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint NOFLSH  = 0000200;$/;"	v
NONE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    NONE,   \/\/MBEDTLS_SSL_TLS_PRF_NONE,$/;"	v
NONE	$C2_LIBDIR/sdl2/sdl.c2i	/^    NONE,           \/**< Never used *\/$/;"	v
NONUSBACKSLASH	$C2_LIBDIR/sdl2/sdl.c2i	/^    NONUSBACKSLASH = 100, \/**< This is the additional key that ISO$/;"	v
NONUSHASH	$C2_LIBDIR/sdl2/sdl.c2i	/^    NONUSHASH = 50, \/**< ISO USB keyboards actually use this code$/;"	v
NON_FATAL	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int NON_FATAL                         = -0x6680;  \/**< The alert message received indic/;"	v
NOP	$C2_LIBDIR/io_uring/io_uring.c2i	/^    NOP,$/;"	v
NO_CIPHER_CHOSEN	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int NO_CIPHER_CHOSEN                  = -0x7380;  \/**< The server has no ciphersuites i/;"	v
NO_CLIENT_CERTIFICATE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int NO_CLIENT_CERTIFICATE             = -0x7480;  \/**< No client certification received/;"	v
NO_RNG	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int NO_RNG                            = -0x7400;  \/**< No RNG was provided to the SSL m/;"	v
NO_USABLE_CIPHERSUITE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int NO_USABLE_CIPHERSUITE             = -0x6980;  \/**< None of the common ciphersuites /;"	v
NUMLOCKCLEAR	$C2_LIBDIR/sdl2/sdl.c2i	/^    NUMLOCKCLEAR = 83, \/**< num lock on PC, clear on Mac keyboards$/;"	v
NUM_0	$C2_LIBDIR/sdl2/sdl.c2i	/^    NUM_0 = 39,$/;"	v
NUM_1	$C2_LIBDIR/sdl2/sdl.c2i	/^    NUM_1 = 30,$/;"	v
NUM_2	$C2_LIBDIR/sdl2/sdl.c2i	/^    NUM_2 = 31,$/;"	v
NUM_3	$C2_LIBDIR/sdl2/sdl.c2i	/^    NUM_3 = 32,$/;"	v
NUM_4	$C2_LIBDIR/sdl2/sdl.c2i	/^    NUM_4 = 33,$/;"	v
NUM_5	$C2_LIBDIR/sdl2/sdl.c2i	/^    NUM_5 = 34,$/;"	v
NUM_6	$C2_LIBDIR/sdl2/sdl.c2i	/^    NUM_6 = 35,$/;"	v
NUM_7	$C2_LIBDIR/sdl2/sdl.c2i	/^    NUM_7 = 36,$/;"	v
NUM_8	$C2_LIBDIR/sdl2/sdl.c2i	/^    NUM_8 = 37,$/;"	v
NUM_9	$C2_LIBDIR/sdl2/sdl.c2i	/^    NUM_9 = 38,$/;"	v
NUM_SCANCODES	$C2_LIBDIR/sdl2/sdl.c2i	/^    NUM_SCANCODES = 512 \/**< not a key, just marks the number of scancodes$/;"	v
Name	$C2_LIBDIR/libc/sys_utsname.c2i	/^type Name struct @(cname="utsname") {$/;"	t
Nearest	$C2_LIBDIR/sdl2/sdl.c2i	/^    Nearest, \/\/ nearest pixel sampling$/;"	v
Net_context	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Net_context struct @(cname="mbedtls_net_context") {$/;"	t
None	$C2_LIBDIR/sdl2/sdl.c2i	/^    None = 0x00000000,     \/\/ no blending dstRGBA = srcRGBA$/;"	v
Num	$C2_LIBDIR/sdl2/sdl.c2i	/^    Num     = 0x1000,$/;"	v
Number	$C2_LIBDIR/lua/lua.c2i	/^type Number LUA_NUMBER @(cname="lua_Number");$/;"	t
OCRNL	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint OCRNL   = 0000010;$/;"	v
OFDEL	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint OFDEL   = 0000200;$/;"	v
OFF_CQ_RING	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u64 OFF_CQ_RING = 0x8000000;$/;"	v
OFF_SQES	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u64 OFF_SQES    = 0x10000000;$/;"	v
OFF_SQ_RING	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u64 OFF_SQ_RING = 0;$/;"	v
OFILL	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint OFILL   = 0000100;$/;"	v
OLCUC	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint OLCUC   = 0000002;$/;"	v
ONLCR	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint ONLCR   = 0000004;$/;"	v
ONLRET	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint ONLRET  = 0000040;$/;"	v
ONOCR	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint ONOCR   = 0000020;$/;"	v
OPENAT	$C2_LIBDIR/io_uring/io_uring.c2i	/^    OPENAT,$/;"	v
OPENAT2	$C2_LIBDIR/io_uring/io_uring.c2i	/^    OPENAT2,$/;"	v
OPER	$C2_LIBDIR/sdl2/sdl.c2i	/^    OPER = 161,$/;"	v
OPOST	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint OPOST   = 0000001;$/;"	v
OUT	$C2_LIBDIR/sdl2/sdl.c2i	/^    OUT = 160,$/;"	v
O_APPEND	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 O_APPEND    =    02000;$/;"	v
O_BINARY	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 O_BINARY    =        0;$/;"	v
O_CLOEXEC	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 O_CLOEXEC   = 04000000;$/;"	v
O_CREAT	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 O_CREAT     =    01000;$/;"	v
O_DIRECT	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 O_DIRECT    =  0200000;$/;"	v
O_DIRECTORY	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 O_DIRECTORY = 04000000;$/;"	v
O_EXCL	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 O_EXCL      =    04000;$/;"	v
O_LARGEFILE	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 O_LARGEFILE =  0100000;$/;"	v
O_NOATIME	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 O_NOATIME   = 01000000;$/;"	v
O_NOCTTY	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 O_NOCTTY    =  0400000;$/;"	v
O_NOFOLLOW	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 O_NOFOLLOW =   0400000;$/;"	v
O_NONBLOCK	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 O_NONBLOCK  =    04000;$/;"	v
O_PATH	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 O_PATH      =020000000;$/;"	v
O_RDONLY	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 O_RDONLY    =        0;$/;"	v
O_RDWR	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 O_RDWR      =       02;$/;"	v
O_SYNC	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 O_SYNC      = 04010000;$/;"	v
O_TMPFILE	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 O_TMPFILE   =020000000;$/;"	v
O_TRUNC	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 O_TRUNC     =    02000;$/;"	v
O_WRONLY	$C2_LIBDIR/libc/libc_fcntl.c2i	/^const u32 O_WRONLY    =       01;$/;"	v
Offset	$C2_LIBDIR/libc/stdio.c2i	/^type Offset u64 @(cname="off_t");$/;"	t
Offset	$C2_LIBDIR/libc/sys_mman.c2i	/^type Offset u64 @(cname="off_t");$/;"	t
Offset	$C2_LIBDIR/libc/sys_sendfile.c2i	/^type Offset u64 @(cname="off_t");$/;"	t
OnExitFn	$C2_LIBDIR/libc/stdlib.c2i	/^type OnExitFn fn void(i32, void*);$/;"	t
Op	$C2_LIBDIR/io_uring/io_uring.c2i	/^type Op enum u8 {$/;"	t
PAGEDOWN	$C2_LIBDIR/sdl2/sdl.c2i	/^    PAGEDOWN = 78,$/;"	v
PAGEUP	$C2_LIBDIR/sdl2/sdl.c2i	/^    PAGEUP = 75,$/;"	v
PARENB	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint PARENB  = 0000400;$/;"	v
PARMRK	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint PARMRK  = 0000010;$/;"	v
PARODD	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint PARODD  = 0001000;$/;"	v
PASTE	$C2_LIBDIR/sdl2/sdl.c2i	/^    PASTE = 125,$/;"	v
PAUSE	$C2_LIBDIR/sdl2/sdl.c2i	/^    PAUSE = 72,$/;"	v
PEER_CLOSE_NOTIFY	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int PEER_CLOSE_NOTIFY                 = -0x7880;  \/**< The peer notified us that the co/;"	v
PEER_VERIFY_FAILED	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int PEER_VERIFY_FAILED                = -0x7800;  \/**< Verification of our peer failed./;"	v
PENDIN	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint PENDIN  = 0040000;$/;"	v
PERIOD	$C2_LIBDIR/sdl2/sdl.c2i	/^    PERIOD = 55,$/;"	v
PF_UNIX	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int PF_UNIX     =  1;$/;"	v
PIXELFORMAT_RGBA8888	$C2_LIBDIR/sdl2/sdl.c2i	/^const u32 PIXELFORMAT_RGBA8888 = 0x16462004;$/;"	v
PK_TYPE_MISMATCH	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int PK_TYPE_MISMATCH                  = -0x6D00;  \/**< Public key type mismatch (eg, as/;"	v
POLLERR	$C2_LIBDIR/libc/libc_poll.c2i	/^const u32 POLLERR  = 0x08;$/;"	v
POLLHUP	$C2_LIBDIR/libc/libc_poll.c2i	/^const u32 POLLHUP  = 0x10;$/;"	v
POLLIN	$C2_LIBDIR/libc/libc_poll.c2i	/^const u32 POLLIN   = 0x01;$/;"	v
POLLNVAL	$C2_LIBDIR/libc/libc_poll.c2i	/^const u32 POLLNVAL = 0x20;$/;"	v
POLLOUT	$C2_LIBDIR/libc/libc_poll.c2i	/^const u32 POLLOUT  = 0x04;$/;"	v
POLLSENTINEL	$C2_LIBDIR/sdl2/sdl.c2i	/^    POLLSENTINEL = 0x7F00, \/**< Signals the end of an event poll cycle *\/$/;"	v
POLL_ADD	$C2_LIBDIR/io_uring/io_uring.c2i	/^    POLL_ADD,$/;"	v
POLL_REMOVE	$C2_LIBDIR/io_uring/io_uring.c2i	/^    POLL_REMOVE,$/;"	v
POWER	$C2_LIBDIR/sdl2/sdl.c2i	/^    POWER = 102, \/**< The USB document says this is a status flag,$/;"	v
PRINTSCREEN	$C2_LIBDIR/sdl2/sdl.c2i	/^    PRINTSCREEN = 70,$/;"	v
PRIOR	$C2_LIBDIR/sdl2/sdl.c2i	/^    PRIOR = 157,$/;"	v
PRIVATE_KEY_REQUIRED	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int PRIVATE_KEY_REQUIRED              = -0x7600;  \/**< The own private key or pre-share/;"	v
PROT_EXEC	$C2_LIBDIR/libc/sys_mman.c2i	/^const u32 PROT_EXEC  = 0x4;$/;"	v
PROT_NONE	$C2_LIBDIR/libc/sys_mman.c2i	/^const u32 PROT_NONE  = 0x0;$/;"	v
PROT_READ	$C2_LIBDIR/libc/sys_mman.c2i	/^const u32 PROT_READ  = 0x1;$/;"	v
PROT_WRITE	$C2_LIBDIR/libc/sys_mman.c2i	/^const u32 PROT_WRITE = 0x2;$/;"	v
PROVIDE_BUFFERS	$C2_LIBDIR/io_uring/io_uring.c2i	/^    PROVIDE_BUFFERS,$/;"	v
Palette	$C2_LIBDIR/sdl2/sdl.c2i	/^type Palette struct @(cname="SDL_Palette") {$/;"	t
Params	$C2_LIBDIR/io_uring/io_uring.c2i	/^type Params struct @(cname="io_uring_params") {$/;"	t
Pid	$C2_LIBDIR/libc/unistd.c2i	/^type Pid c_int @(cname="pid_t");$/;"	t
PixelFormat	$C2_LIBDIR/sdl2/sdl.c2i	/^type PixelFormat struct @(cname="SDL_PixelFormat") {$/;"	t
Pk_context	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Pk_context struct @(cname="mbedtls_pk_context") {$/;"	t
Pk_info_t	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Pk_info_t struct @(opaque, cname="mbedtls_pk_info_t");$/;"	t
Pk_type_t	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Pk_type_t enum u8 @(cname="mbedtls_pk_type_t") {$/;"	t
Point	$C2_LIBDIR/sdl2/sdl.c2i	/^type Point struct @(cname="SDL_Point") {$/;"	t
Pollfd	$C2_LIBDIR/libc/libc_poll.c2i	/^type Pollfd struct @(cname="pollfd") {$/;"	t
PresentVSync	$C2_LIBDIR/sdl2/sdl.c2i	/^    PresentVSync = 0x00000004,     \/**< Present is synchronized with the refresh rate *\/$/;"	v
Pthread	$C2_LIBDIR/pthread/pthread.c2i	/^type Pthread c_ulong @(cname="pthread_t");$/;"	t
PthreadAttr	$C2_LIBDIR/pthread/pthread.c2i	/^type PthreadAttr struct @(cname="pthread_attr_t") {$/;"	t
QUIT	$C2_LIBDIR/sdl2/sdl.c2i	/^    QUIT           = 0x100, \/**< User-requested quit *\/$/;"	v
RALT	$C2_LIBDIR/sdl2/sdl.c2i	/^    RALT = 230, \/**< alt gr, option *\/$/;"	v
RAND_MAX	$C2_LIBDIR/libc/stdlib.c2i	/^const c_int RAND_MAX = 2147483647;      \/\/ same as Int32_max$/;"	v
RCTRL	$C2_LIBDIR/sdl2/sdl.c2i	/^    RCTRL = 228,$/;"	v
READ	$C2_LIBDIR/io_uring/io_uring.c2i	/^    READ,$/;"	v
READV	$C2_LIBDIR/io_uring/io_uring.c2i	/^    READV,$/;"	v
READ_FIXED	$C2_LIBDIR/io_uring/io_uring.c2i	/^    READ_FIXED,$/;"	v
RECV	$C2_LIBDIR/io_uring/io_uring.c2i	/^    RECV,$/;"	v
RECVMSG	$C2_LIBDIR/io_uring/io_uring.c2i	/^    RECVMSG,$/;"	v
REG_ASSERT	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_ASSERT = 15;$/;"	v
REG_ATOI	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_ATOI = 255;$/;"	v
REG_BACKR	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_BACKR = 02000;$/;"	v
REG_BADBR	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_BADBR = 10;$/;"	v
REG_BADPAT	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_BADPAT =  2;$/;"	v
REG_BADRPT	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_BADRPT = 13;$/;"	v
REG_BASIC	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_BASIC = 0000;$/;"	v
REG_DUMP	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_DUMP = 0200;$/;"	v
REG_EBRACE	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_EBRACE =  9;$/;"	v
REG_EBRACK	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_EBRACK =  7;$/;"	v
REG_ECOLLATE	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_ECOLLATE =  3;$/;"	v
REG_ECTYPE	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_ECTYPE =  4;$/;"	v
REG_EESCAPE	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_EESCAPE =  5;$/;"	v
REG_EMPTY	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_EMPTY = 14;$/;"	v
REG_ENOSYS	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_ENOSYS = -1;$/;"	v
REG_EPAREN	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_EPAREN =  8;$/;"	v
REG_ERANGE	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_ERANGE = 11;$/;"	v
REG_ESPACE	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_ESPACE = 12;$/;"	v
REG_ESUBREG	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_ESUBREG =  6;$/;"	v
REG_EXTENDED	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_EXTENDED = 0001;$/;"	v
REG_ICASE	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_ICASE = 0002;$/;"	v
REG_ILLSEQ	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_ILLSEQ = 17;$/;"	v
REG_INVARG	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_INVARG = 16;$/;"	v
REG_ITOA	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_ITOA = 0400;$/;"	v
REG_LARGE	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_LARGE = 01000;$/;"	v
REG_NEWLINE	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_NEWLINE = 0010;$/;"	v
REG_NOERROR	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_NOERROR =  0;$/;"	v
REG_NOMATCH	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_NOMATCH =  1;$/;"	v
REG_NOSPEC	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_NOSPEC = 0020;$/;"	v
REG_NOSUB	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_NOSUB = 0004;$/;"	v
REG_NOTBOL	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_NOTBOL = 00001;$/;"	v
REG_NOTEOL	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_NOTEOL = 00002;$/;"	v
REG_PEND	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_PEND = 0040;$/;"	v
REG_STARTEND	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_STARTEND = 00004;$/;"	v
REG_TRACE	$C2_LIBDIR/libc/regex.c2i	/^const c_int REG_TRACE = 00400;$/;"	v
REMOVE_BUFFERS	$C2_LIBDIR/io_uring/io_uring.c2i	/^    REMOVE_BUFFERS,$/;"	v
RENAMEAT	$C2_LIBDIR/io_uring/io_uring.c2i	/^    RENAMEAT,$/;"	v
RENDER_DEVICE_RESET	$C2_LIBDIR/sdl2/sdl.c2i	/^    RENDER_DEVICE_RESET, \/**< The device has been reset and all textures need to be recreated */;"	v
RENDER_TARGETS_RESET	$C2_LIBDIR/sdl2/sdl.c2i	/^    RENDER_TARGETS_RESET = 0x2000, \/**< The render targets have been reset and their contents n/;"	v
RESIZED	$C2_LIBDIR/sdl2/sdl.c2i	/^    RESIZED,        \/**< Window has been resized to data1xdata2 *\/$/;"	v
RESTORED	$C2_LIBDIR/sdl2/sdl.c2i	/^    RESTORED,       \/**< Window has been restored to normal size$/;"	v
RETURN	$C2_LIBDIR/sdl2/sdl.c2i	/^    RETURN = 40,$/;"	v
RETURN2	$C2_LIBDIR/sdl2/sdl.c2i	/^    RETURN2 = 158,$/;"	v
RGUI	$C2_LIBDIR/sdl2/sdl.c2i	/^    RGUI = 231, \/**< windows, command (apple), meta *\/$/;"	v
RIGHT	$C2_LIBDIR/sdl2/sdl.c2i	/^    RIGHT = 79,$/;"	v
RIGHTBRACKET	$C2_LIBDIR/sdl2/sdl.c2i	/^    RIGHTBRACKET = 48,$/;"	v
RSHIFT	$C2_LIBDIR/sdl2/sdl.c2i	/^    RSHIFT = 229,$/;"	v
RTLD_BINDING_MASK	$C2_LIBDIR/dl/dlfcn.c2i	/^const u32 RTLD_BINDING_MASK = 0x00003; \/* Mask of binding time value.  *\/$/;"	v
RTLD_DEEPBIND	$C2_LIBDIR/dl/dlfcn.c2i	/^const u32 RTLD_DEEPBIND     = 0x00008; \/* Use deep binding.  *\/$/;"	v
RTLD_DEFAULT	$C2_LIBDIR/dl/dlfcn.c2i	/^const usize RTLD_DEFAULT   = (void*)(usize)(0);$/;"	v
RTLD_GLOBAL	$C2_LIBDIR/dl/dlfcn.c2i	/^const u32 RTLD_GLOBAL       = 0x00100;$/;"	v
RTLD_LAZY	$C2_LIBDIR/dl/dlfcn.c2i	/^const u32 RTLD_LAZY         = 0x00001; \/* Lazy function call binding.  *\/$/;"	v
RTLD_LOCAL	$C2_LIBDIR/dl/dlfcn.c2i	/^const u32 RTLD_LOCAL = 0;$/;"	v
RTLD_MAIN_ONLY	$C2_LIBDIR/dl/dlfcn.c2i	/^const usize RTLD_MAIN_ONLY = (void*)(usize)(-5);$/;"	v
RTLD_NEXT	$C2_LIBDIR/dl/dlfcn.c2i	/^const usize RTLD_NEXT      = (void*)(usize)(-1);$/;"	v
RTLD_NODELETE	$C2_LIBDIR/dl/dlfcn.c2i	/^const u32 RTLD_NODELETE   = 0x01000;$/;"	v
RTLD_NOLOAD	$C2_LIBDIR/dl/dlfcn.c2i	/^const u32 RTLD_NOLOAD       = 0x00004; \/* Do not load the object.  *\/$/;"	v
RTLD_NOW	$C2_LIBDIR/dl/dlfcn.c2i	/^const u32 RTLD_NOW          = 0x00002; \/* Immediate function call binding.  *\/$/;"	v
RTLD_SELF	$C2_LIBDIR/dl/dlfcn.c2i	/^const usize RTLD_SELF      = (void*)(usize)(-3);	\/* Search the caller itself. *\/$/;"	v
RWops	$C2_LIBDIR/sdl2/sdl.c2i	/^type RWops struct @(opaque, cname="SDL_RWops");$/;"	t
R_OK	$C2_LIBDIR/libc/unistd.c2i	/^const u8 R_OK = 4;$/;"	v
Ralt	$C2_LIBDIR/sdl2/sdl.c2i	/^    Ralt    = 0x0200,$/;"	v
Random_data	$C2_LIBDIR/libc/stdlib.c2i	/^type Random_data struct @(opaque, cname="random_data");$/;"	t
Rctrl	$C2_LIBDIR/sdl2/sdl.c2i	/^    Rctrl   = 0x0080,$/;"	v
Reader	$C2_LIBDIR/lua/lua.c2i	/^type Reader fn const c_char* (State *L, void *ud, c_size *sz) @(cname="lua_Reader");$/;"	t
Rect	$C2_LIBDIR/sdl2/sdl.c2i	/^type Rect struct @(cname="SDL_Rect") {$/;"	t
RegOff	$C2_LIBDIR/libc/regex.c2i	/^type RegOff c_int @(cname="regoff_t");$/;"	t
Regex_t	$C2_LIBDIR/libc/regex.c2i	/^type Regex_t struct @(cname="regex_t") {$/;"	t
Regmatch_t	$C2_LIBDIR/libc/regex.c2i	/^type Regmatch_t struct @(cname="regmatch_t") {$/;"	t
RenderFlags	$C2_LIBDIR/sdl2/sdl.c2i	/^type RenderFlags enum u32 {$/;"	t
Renderer	$C2_LIBDIR/sdl2/sdl.c2i	/^type Renderer struct @(opaque, cname="SDL_Renderer");$/;"	t
RendererFlip	$C2_LIBDIR/sdl2/sdl.c2i	/^type RendererFlip enum u8 {$/;"	t
Req	$C2_LIBDIR/libc/net_if.c2i	/^type Req struct @(cname="ifreq") {$/;"	t
Rgui	$C2_LIBDIR/sdl2/sdl.c2i	/^    Rgui    = 0x0800,$/;"	v
Ring	$C2_LIBDIR/io_uring/io_uring.c2i	/^type Ring struct @(cname="io_uring") {$/;"	t
Rloss	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8 Rloss;$/;"	v
Rmask	$C2_LIBDIR/sdl2/sdl.c2i	/^    u32 Rmask;$/;"	v
Rng_fn	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Rng_fn fn c_int(void *, c_uchar *, c_size);$/;"	t
Rshift	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8 Rshift;$/;"	v
SA_NOCLDSTOP	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SA_NOCLDSTOP = 1;$/;"	v
SA_RESTART	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SA_RESTART   = 2;$/;"	v
SCROLLLOCK	$C2_LIBDIR/sdl2/sdl.c2i	/^    SCROLLLOCK = 71,$/;"	v
SDL_DISABLE	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_int SDL_DISABLE =  0;$/;"	v
SDL_ENABLE	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_int SDL_ENABLE  =  1;$/;"	v
SDL_IGNORE	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_int SDL_IGNORE  =  0;$/;"	v
SDL_QUERY	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_int SDL_QUERY   = -1;$/;"	v
SDL_TextEditingEvent	$C2_LIBDIR/sdl2/sdl.c2i	/^       SDL_TextEditingEvent, the largest structure for 32-bit and 64-bit$/;"	v
SEEK_CUR	$C2_LIBDIR/libc/stdio.c2i	/^const u8 SEEK_CUR = 1;   \/\/ Seek from current position.$/;"	v
SEEK_DATA	$C2_LIBDIR/libc/stdio.c2i	/^const u8 SEEK_DATA = 3;  \/\/ Seek to next data.$/;"	v
SEEK_END	$C2_LIBDIR/libc/stdio.c2i	/^const u8 SEEK_END = 2;   \/\/ Seek from end of file.$/;"	v
SEEK_HOLE	$C2_LIBDIR/libc/stdio.c2i	/^const u8 SEEK_HOLE = 4;  \/\/ Seek to next hole.$/;"	v
SEEK_SET	$C2_LIBDIR/libc/stdio.c2i	/^const u8 SEEK_SET = 0;   \/\/ Seek from beginning of file.$/;"	v
SELECT	$C2_LIBDIR/sdl2/sdl.c2i	/^    SELECT = 119,$/;"	v
SEMICOLON	$C2_LIBDIR/sdl2/sdl.c2i	/^    SEMICOLON = 51,$/;"	v
SEND	$C2_LIBDIR/io_uring/io_uring.c2i	/^    SEND,$/;"	v
SENDMSG	$C2_LIBDIR/io_uring/io_uring.c2i	/^    SENDMSG,$/;"	v
SENSORUPDATE	$C2_LIBDIR/sdl2/sdl.c2i	/^    SENSORUPDATE = 0x1200,     \/**< A sensor was updated *\/$/;"	v
SEPARATOR	$C2_LIBDIR/sdl2/sdl.c2i	/^    SEPARATOR = 159,$/;"	v
SESSION_TICKET_EXPIRED	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int SESSION_TICKET_EXPIRED            = -0x6D80;  \/**< Session ticket has expired. *\/$/;"	v
SETUP_ATTACH_WQ	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u32 SETUP_ATTACH_WQ  = (1 << 5);   \/* attach to existing wq *\/$/;"	v
SETUP_CLAMP	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u32 SETUP_CLAMP      = (1 << 4);   \/* clamp SQ\/CQ ring sizes *\/$/;"	v
SETUP_CQSIZE	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u32 SETUP_CQSIZE     = (1 << 3);   \/* app defines CQ size *\/$/;"	v
SETUP_IOPOLL	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u32 SETUP_IOPOLL     = (1 << 0);   \/* io_context is polled *\/$/;"	v
SETUP_R_DISABLED	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u32 SETUP_R_DISABLED = (1 << 6);   \/* start with ring disabled *\/$/;"	v
SETUP_SQPOLL	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u32 SETUP_SQPOLL     = (1 << 1);   \/* SQ poll thread *\/$/;"	v
SETUP_SQ_AFF	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u32 SETUP_SQ_AFF     = (1 << 2);   \/* sq_thread_cpu is valid *\/$/;"	v
SHA256	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    SHA256, \/\/MBEDTLS_SSL_TLS_PRF_SHA256$/;"	v
SHA384	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    SHA384, \/\/MBEDTLS_SSL_TLS_PRF_SHA384,$/;"	v
SHOWN	$C2_LIBDIR/sdl2/sdl.c2i	/^    SHOWN,          \/**< Window has been shown *\/$/;"	v
SHUTDOWN	$C2_LIBDIR/io_uring/io_uring.c2i	/^    SHUTDOWN,$/;"	v
SIGABRT	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGABRT     = 6;$/;"	v
SIGALRM	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGALRM     = 14;$/;"	v
SIGBUS	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGBUS      = 7;$/;"	v
SIGCHLD	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGCHLD     = 17;$/;"	v
SIGCLD	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGCLD      = SIGCHLD;$/;"	v
SIGCONT	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGCONT     = 18;$/;"	v
SIGFPE	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGFPE      = 8;$/;"	v
SIGHUP	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGHUP      = 1;$/;"	v
SIGILL	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGILL      = 4;$/;"	v
SIGINT	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGINT      = 2;$/;"	v
SIGIO	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGIO       = 29;$/;"	v
SIGIOT	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGIOT      = 6;$/;"	v
SIGKILL	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGKILL     = 9;$/;"	v
SIGPIPE	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGPIPE     = 13;$/;"	v
SIGPOLL	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGPOLL     = SIGIO;$/;"	v
SIGPROF	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGPROF     = 27;$/;"	v
SIGPWR	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGPWR      = 30;$/;"	v
SIGQUIT	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGQUIT     = 3;$/;"	v
SIGSEGV	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGSEGV     = 11;$/;"	v
SIGSET_NWORDS	$C2_LIBDIR/libc/csignal.c2i	/^const u32 SIGSET_NWORDS = (1024 \/ (8 * sizeof (u64)));$/;"	v
SIGSTKFLT	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGSTKFLT   = 16;$/;"	v
SIGSTOP	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGSTOP     = 19;$/;"	v
SIGSYS	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGSYS      = 31;$/;"	v
SIGTERM	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGTERM     = 15;$/;"	v
SIGTRAP	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGTRAP     = 5;$/;"	v
SIGTSTP	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGTSTP     = 20;$/;"	v
SIGTTIN	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGTTIN     = 21;$/;"	v
SIGTTOU	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGTTOU     = 22;$/;"	v
SIGUNUSED	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGUNUSED   = 31;$/;"	v
SIGURG	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGURG      = 23;$/;"	v
SIGUSR1	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGUSR1     = 10;$/;"	v
SIGUSR2	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGUSR2     = 12;$/;"	v
SIGVTALRM	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGVTALRM   = 26;$/;"	v
SIGWINCH	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGWINCH    = 28;$/;"	v
SIGXCPU	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGXCPU     = 24;$/;"	v
SIGXFSZ	$C2_LIBDIR/libc/csignal.c2i	/^const c_int SIGXFSZ     = 25;$/;"	v
SIG_BLOCK	$C2_LIBDIR/libc/csignal.c2i	/^const u32 SIG_BLOCK = 1; \/* set of signals to block *\/$/;"	v
SIG_SETMASK	$C2_LIBDIR/libc/csignal.c2i	/^const u32 SIG_SETMASK = 0;   \/* set mask with sigprocmask() *\/$/;"	v
SIG_UNBLOCK	$C2_LIBDIR/libc/csignal.c2i	/^const u32 SIG_UNBLOCK = 2;   \/* set of signals to, well, unblock *\/$/;"	v
SIOCADDDLCI	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCADDDLCI	= 0x8980;		\/* Create new DLCI device	*\/$/;"	v
SIOCADDMULTI	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCADDMULTI	= 0x8931;		\/* Multicast address lists	*\/$/;"	v
SIOCADDRT	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCADDRT	= 0x890B;		\/* add routing table entry	*\/$/;"	v
SIOCBONDCHANGEACTIVE	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCBONDCHANGEACTIVE   = 0x8995;   \/* update to a new active slave *\/$/;"	v
SIOCBONDENSLAVE	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCBONDENSLAVE	= 0x8990;		\/* enslave a device to the bond *\/$/;"	v
SIOCBONDINFOQUERY	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCBONDINFOQUERY      = 0x8994;	\/* rtn info about bond state    *\/$/;"	v
SIOCBONDRELEASE	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCBONDRELEASE = 0x8991;		\/* release a slave from the bond*\/$/;"	v
SIOCBONDSETHWADDR	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCBONDSETHWADDR      = 0x8992;	\/* set the hw addr of the bond  *\/$/;"	v
SIOCBONDSLAVEINFOQUERY	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCBONDSLAVEINFOQUERY = 0x8993;   \/* rtn info about slave state   *\/$/;"	v
SIOCBRADDBR	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCBRADDBR     = 0x89a0;		\/* create new bridge device     *\/$/;"	v
SIOCBRADDIF	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCBRADDIF	= 0x89a2;		\/* add interface to bridge      *\/$/;"	v
SIOCBRDELBR	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCBRDELBR     = 0x89a1;		\/* remove bridge device         *\/$/;"	v
SIOCBRDELIF	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCBRDELIF	= 0x89a3;		\/* remove interface from bridge *\/$/;"	v
SIOCDARP	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCDARP	= 0x8953;		\/* delete ARP table entry	*\/$/;"	v
SIOCDELDLCI	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCDELDLCI	= 0x8981;		\/* Delete DLCI device		*\/$/;"	v
SIOCDELMULTI	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCDELMULTI	= 0x8932;$/;"	v
SIOCDELRT	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCDELRT	= 0x890C;		\/* delete routing table entry	*\/$/;"	v
SIOCDEVPRIVATE	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCDEVPRIVATE	= 0x89F0;	\/* to 89FF *\/$/;"	v
SIOCDIFADDR	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCDIFADDR	= 0x8936;		\/* delete PA address		*\/$/;"	v
SIOCDRARP	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCDRARP	= 0x8960;		\/* delete RARP table entry	*\/$/;"	v
SIOCETHTOOL	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCETHTOOL	= 0x8946;		\/* Ethtool interface		*\/$/;"	v
SIOCGARP	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGARP	= 0x8954;		\/* get ARP table entry		*\/$/;"	v
SIOCGHWTSTAMP	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGHWTSTAMP	= 0x89b1;		\/* get config			*\/$/;"	v
SIOCGIFADDR	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFADDR	= 0x8915;		\/* get PA address		*\/$/;"	v
SIOCGIFBR	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFBR	= 0x8940;		\/* Bridging support		*\/$/;"	v
SIOCGIFBRDADDR	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFBRDADDR	= 0x8919;		\/* get broadcast PA address	*\/$/;"	v
SIOCGIFCONF	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFCONF	= 0x8912;		\/* get iface list		*\/$/;"	v
SIOCGIFCOUNT	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFCOUNT	= 0x8938;		\/* get number of devices *\/$/;"	v
SIOCGIFDSTADDR	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFDSTADDR	= 0x8917;		\/* get remote PA address	*\/$/;"	v
SIOCGIFENCAP	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFENCAP	= 0x8925;		\/* get\/set encapsulations       *\/$/;"	v
SIOCGIFFLAGS	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFFLAGS	= 0x8913;		\/* get flags			*\/$/;"	v
SIOCGIFHWADDR	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFHWADDR	= 0x8927;		\/* Get hardware address		*\/$/;"	v
SIOCGIFINDEX	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFINDEX	= 0x8933;		\/* name -> if_index mapping	*\/$/;"	v
SIOCGIFMAP	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFMAP	= 0x8970;		\/* Get device parameters	*\/$/;"	v
SIOCGIFMEM	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFMEM	= 0x891f;		\/* get memory address (BSD)	*\/$/;"	v
SIOCGIFMETRIC	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFMETRIC	= 0x891d;		\/* get metric			*\/$/;"	v
SIOCGIFMTU	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFMTU	= 0x8921;		\/* get MTU size			*\/$/;"	v
SIOCGIFNAME	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFNAME	= 0x8910;		\/* get iface name		*\/$/;"	v
SIOCGIFNETMASK	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFNETMASK	= 0x891b;		\/* get network PA mask		*\/$/;"	v
SIOCGIFPFLAGS	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFPFLAGS	= 0x8935;$/;"	v
SIOCGIFSLAVE	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFSLAVE	= 0x8929;		\/* Driver slaving support	*\/$/;"	v
SIOCGIFTXQLEN	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFTXQLEN	= 0x8942;		\/* Get the tx queue length	*\/$/;"	v
SIOCGIFVLAN	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGIFVLAN	= 0x8982;		\/* 802.1Q VLAN support		*\/$/;"	v
SIOCGMIIPHY	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGMIIPHY	= 0x8947;		\/* Get address of MII PHY in use. *\/$/;"	v
SIOCGMIIREG	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGMIIREG	= 0x8948;		\/* Read MII PHY register.	*\/$/;"	v
SIOCGRARP	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGRARP	= 0x8961;		\/* get RARP table entry		*\/$/;"	v
SIOCGSKNS	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCGSKNS	= 0x894C;		\/* get socket network namespace *\/$/;"	v
SIOCOUTQNSD	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCOUTQNSD	= 0x894B;		\/* output queue size (not sent only) *\/$/;"	v
SIOCPROTOPRIVATE	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCPROTOPRIVATE = 0x89E0; \/* to 89EF *\/$/;"	v
SIOCRTMSG	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCRTMSG	= 0x890D;		\/* unused			*\/$/;"	v
SIOCSARP	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSARP	= 0x8955;		\/* set ARP table entry		*\/$/;"	v
SIOCSHWTSTAMP	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSHWTSTAMP	= 0x89b0;		\/* set and get config		*\/$/;"	v
SIOCSIFADDR	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSIFADDR	= 0x8916;		\/* set PA address		*\/$/;"	v
SIOCSIFBR	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSIFBR	= 0x8941;		\/* Set bridging options 	*\/$/;"	v
SIOCSIFBRDADDR	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSIFBRDADDR	= 0x891a;		\/* set broadcast PA address	*\/$/;"	v
SIOCSIFDSTADDR	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSIFDSTADDR	= 0x8918;		\/* set remote PA address	*\/$/;"	v
SIOCSIFENCAP	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSIFENCAP	= 0x8926;$/;"	v
SIOCSIFFLAGS	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSIFFLAGS	= 0x8914;		\/* set flags			*\/$/;"	v
SIOCSIFHWADDR	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSIFHWADDR	= 0x8924;		\/* set hardware address 	*\/$/;"	v
SIOCSIFHWBROADCAST	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSIFHWBROADCAST	= 0x8937;	\/* set hardware broadcast addr	*\/$/;"	v
SIOCSIFLINK	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSIFLINK	= 0x8911;		\/* set iface channel		*\/$/;"	v
SIOCSIFMAP	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSIFMAP	= 0x8971;		\/* Set device parameters	*\/$/;"	v
SIOCSIFMEM	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSIFMEM	= 0x8920;		\/* set memory address (BSD)	*\/$/;"	v
SIOCSIFMETRIC	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSIFMETRIC	= 0x891e;		\/* set metric			*\/$/;"	v
SIOCSIFMTU	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSIFMTU	= 0x8922;		\/* set MTU size			*\/$/;"	v
SIOCSIFNAME	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSIFNAME	= 0x8923;		\/* set interface name *\/$/;"	v
SIOCSIFNETMASK	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSIFNETMASK	= 0x891c;		\/* set network PA mask		*\/$/;"	v
SIOCSIFPFLAGS	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSIFPFLAGS	= 0x8934;		\/* set\/get extended flags set	*\/$/;"	v
SIOCSIFSLAVE	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSIFSLAVE	= 0x8930;$/;"	v
SIOCSIFTXQLEN	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSIFTXQLEN	= 0x8943;		\/* Set the tx queue length 	*\/$/;"	v
SIOCSIFVLAN	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSIFVLAN	= 0x8983;		\/* Set 802.1Q VLAN options 	*\/$/;"	v
SIOCSMIIREG	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSMIIREG	= 0x8949;		\/* Write MII PHY register.	*\/$/;"	v
SIOCSRARP	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCSRARP	= 0x8962;		\/* set RARP table entry		*\/$/;"	v
SIOCWANDEV	$C2_LIBDIR/libc/linux_sockios.c2i	/^const u32 SIOCWANDEV	= 0x894A;		\/* get\/set netdev parameters	*\/$/;"	v
SIZEOF_ATTR_T	$C2_LIBDIR/pthread/pthread.c2i	/^const u32 SIZEOF_ATTR_T = 8;$/;"	v
SIZEOF_CONDATTR_T	$C2_LIBDIR/pthread/pthread.c2i	/^const u32 SIZEOF_CONDATTR_T = 8;$/;"	v
SIZEOF_COND_T	$C2_LIBDIR/pthread/pthread.c2i	/^const u32 SIZEOF_COND_T = 8;$/;"	v
SIZEOF_MUTEXATTR_T	$C2_LIBDIR/pthread/pthread.c2i	/^const u32 SIZEOF_MUTEXATTR_T = 8;$/;"	v
SIZEOF_MUTEX_T	$C2_LIBDIR/pthread/pthread.c2i	/^const u32 SIZEOF_MUTEX_T = 8;$/;"	v
SIZE_CHANGED	$C2_LIBDIR/sdl2/sdl.c2i	/^    SIZE_CHANGED,   \/**< The window size has changed, either as$/;"	v
SLASH	$C2_LIBDIR/sdl2/sdl.c2i	/^    SLASH = 56,$/;"	v
SLEEP	$C2_LIBDIR/sdl2/sdl.c2i	/^    SLEEP = 282,$/;"	v
SOCK_CLOEXEC	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 SOCK_CLOEXEC   = 02000000;  \/* Atomically set close-on-exec flag for the new descript/;"	v
SOCK_DCCP	$C2_LIBDIR/libc/sys_socket.c2i	/^  SOCK_DCCP      = 6,   \/* Datagram Congestion Control Protocol.  *\/$/;"	v
SOCK_DGRAM	$C2_LIBDIR/libc/sys_socket.c2i	/^  SOCK_DGRAM     = 2,   \/* Connectionless, unreliable datagrams of fixed maximum length.  *\/$/;"	v
SOCK_NONBLOCK	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 SOCK_NONBLOCK  = 00004000;  \/* Atomically mark descriptor(s) as non-blocking.  *\/$/;"	v
SOCK_PACKET	$C2_LIBDIR/libc/sys_socket.c2i	/^  SOCK_PACKET    = 10,  \/* Linux specific way of getting packets at the dev level.  For writing/;"	v
SOCK_RAW	$C2_LIBDIR/libc/sys_socket.c2i	/^  SOCK_RAW       = 3,   \/* Raw protocol interface.  *\/$/;"	v
SOCK_RDM	$C2_LIBDIR/libc/sys_socket.c2i	/^  SOCK_RDM       = 4,   \/* Reliably-delivered messages.  *\/$/;"	v
SOCK_SEQPACKET	$C2_LIBDIR/libc/sys_socket.c2i	/^  SOCK_SEQPACKET = 5,   \/* Sequenced, reliable, connection-based, datagrams of fixed maximum le/;"	v
SOCK_STREAM	$C2_LIBDIR/libc/sys_socket.c2i	/^  SOCK_STREAM    = 1,   \/* Sequenced, reliable, connection-based byte streams.  *\/$/;"	v
SOL_SOCKET	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int SOL_SOCKET = 1;$/;"	v
SOL_TCP	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int SOL_TCP = 6;$/;"	v
SO_BROADCAST	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int SO_BROADCAST = 6;$/;"	v
SO_BSDCOMPAT	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int SO_BSDCOMPAT = 14;$/;"	v
SO_DEBUG	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int SO_DEBUG     = 1;$/;"	v
SO_DEBUG	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int SO_DEBUG     = 1;$/;"	v
SO_DONTROUTE	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int SO_DONTROUTE = 5;$/;"	v
SO_ERROR	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int SO_ERROR     = 4;$/;"	v
SO_KEEPALIVE	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int SO_KEEPALIVE = 9;$/;"	v
SO_LINGER	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int SO_LINGER    = 13;$/;"	v
SO_NO_CHECK	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int SO_NO_CHECK  = 11;$/;"	v
SO_OOBINLINE	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int SO_OOBINLINE = 10;$/;"	v
SO_PRIORITY	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int SO_PRIORITY  = 12;$/;"	v
SO_RCVBUF	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int SO_RCVBUF    = 8;$/;"	v
SO_REUSEADDR	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int SO_REUSEADDR = 2;$/;"	v
SO_REUSEPORT	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int SO_REUSEPORT = 15;$/;"	v
SO_SNDBUF	$C2_LIBDIR/libc/sys_socket.c2i	/^const c_int SO_SNDBUF    = 7;$/;"	v
SPACE	$C2_LIBDIR/sdl2/sdl.c2i	/^    SPACE = 44,$/;"	v
SPLICE	$C2_LIBDIR/io_uring/io_uring.c2i	/^    SPLICE,$/;"	v
SQ_CQ_OVERFLOW	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u32 SQ_CQ_OVERFLOW = (1 << 1); \/* CQ ring is overflown *\/$/;"	v
SQ_NEED_WAKEUP	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u32 SQ_NEED_WAKEUP = (1 << 0); \/* needs io_uring_enter wakeup *\/$/;"	v
SSL3	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    SSL3,   \/\/ MBEDTLS_SSL_TLS_PRF_SSL3,$/;"	v
SSL_IS_CLIENT	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int SSL_IS_CLIENT = 0;$/;"	v
SSL_IS_SERVER	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int SSL_IS_SERVER = 1;$/;"	v
SSL_MAX_FRAG_LEN_1024	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int SSL_MAX_FRAG_LEN_1024         = 2;   \/*!< MaxFragmentLength 2^10     *\/$/;"	v
SSL_MAX_FRAG_LEN_2048	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int SSL_MAX_FRAG_LEN_2048         = 3;   \/*!< MaxFragmentLength 2^11     *\/$/;"	v
SSL_MAX_FRAG_LEN_4096	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int SSL_MAX_FRAG_LEN_4096         = 4;   \/*!< MaxFragmentLength 2^12     *\/$/;"	v
SSL_MAX_FRAG_LEN_512	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int SSL_MAX_FRAG_LEN_512          = 1;   \/*!< MaxFragmentLength 2^9      *\/$/;"	v
SSL_MAX_FRAG_LEN_INVALID	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int SSL_MAX_FRAG_LEN_INVALID      = 5;   \/*!< first invalid value        *\/$/;"	v
SSL_MAX_FRAG_LEN_NONE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int SSL_MAX_FRAG_LEN_NONE         = 0;   \/*!< don't use this extension   *\/$/;"	v
SSL_PRESET_DEFAULT	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int SSL_PRESET_DEFAULT = 0;$/;"	v
SSL_PRESET_SUITEB	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int SSL_PRESET_SUITEB  = 2;$/;"	v
SSL_RENEGOTIATION_DISABLED	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int SSL_RENEGOTIATION_DISABLED    = 0;$/;"	v
SSL_RENEGOTIATION_ENABLED	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int SSL_RENEGOTIATION_ENABLED     = 1;$/;"	v
SSL_SESSION_TICKETS_DISABLED	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int SSL_SESSION_TICKETS_DISABLED   = 0;$/;"	v
SSL_SESSION_TICKETS_ENABLED	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int SSL_SESSION_TICKETS_ENABLED    = 1;$/;"	v
SSL_TRANSPORT_DATAGRAM	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int SSL_TRANSPORT_DATAGRAM =1;$/;"	v
SSL_TRANSPORT_STREAM	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int SSL_TRANSPORT_STREAM  = 0;$/;"	v
SSL_VERIFY_DATA_MAX_LEN	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int SSL_VERIFY_DATA_MAX_LEN = 12;$/;"	v
STATX	$C2_LIBDIR/io_uring/io_uring.c2i	/^    STATX,$/;"	v
STDERR_FILENO	$C2_LIBDIR/libc/unistd.c2i	/^const c_int STDERR_FILENO = 2;$/;"	v
STDIN_FILENO	$C2_LIBDIR/libc/unistd.c2i	/^const c_int STDIN_FILENO  = 0;$/;"	v
STDOUT_FILENO	$C2_LIBDIR/libc/unistd.c2i	/^const c_int STDOUT_FILENO = 1;$/;"	v
STOP	$C2_LIBDIR/sdl2/sdl.c2i	/^    STOP = 120,$/;"	v
STYLE_BOLD	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^const u32 STYLE_BOLD          = 0x01;$/;"	v
STYLE_ITALIC	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^const u32 STYLE_ITALIC        = 0x02;$/;"	v
STYLE_NORMAL	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^const u32 STYLE_NORMAL        = 0x00;$/;"	v
STYLE_STRIKETHROUGH	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^const u32 STYLE_STRIKETHROUGH = 0x08;$/;"	v
STYLE_UNDERLINE	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^const u32 STYLE_UNDERLINE     = 0x04;$/;"	v
SYMLINKAT	$C2_LIBDIR/io_uring/io_uring.c2i	/^    SYMLINKAT,$/;"	v
SYNC_FILE_RANGE	$C2_LIBDIR/io_uring/io_uring.c2i	/^    SYNC_FILE_RANGE,$/;"	v
SYSREQ	$C2_LIBDIR/sdl2/sdl.c2i	/^    SYSREQ = 154,$/;"	v
SYSWMEVENT	$C2_LIBDIR/sdl2/sdl.c2i	/^    SYSWMEVENT,             \/**< System specific event *\/$/;"	v
S_IFBLK	$C2_LIBDIR/libc/sys_stat.c2i	/^const u32 S_IFBLK  = 0060000;$/;"	v
S_IFCHR	$C2_LIBDIR/libc/sys_stat.c2i	/^const u32 S_IFCHR  = 0020000;$/;"	v
S_IFDIR	$C2_LIBDIR/libc/sys_stat.c2i	/^const u32 S_IFDIR  = 0040000;$/;"	v
S_IFIFO	$C2_LIBDIR/libc/sys_stat.c2i	/^const u32 S_IFIFO  = 0010000;$/;"	v
S_IFLNK	$C2_LIBDIR/libc/sys_stat.c2i	/^const u32 S_IFLNK  = 0120000;$/;"	v
S_IFMT	$C2_LIBDIR/libc/sys_stat.c2i	/^const u32 S_IFMT =  00170000;$/;"	v
S_IFREG	$C2_LIBDIR/libc/sys_stat.c2i	/^const u32 S_IFREG  = 0100000;$/;"	v
S_IFSOCK	$C2_LIBDIR/libc/sys_stat.c2i	/^const u32 S_IFSOCK = 0140000;$/;"	v
S_ISGID	$C2_LIBDIR/libc/sys_stat.c2i	/^const u32 S_ISGID  = 0002000;$/;"	v
S_ISUID	$C2_LIBDIR/libc/sys_stat.c2i	/^const u32 S_ISUID  = 0004000;$/;"	v
S_ISVTX	$C2_LIBDIR/libc/sys_stat.c2i	/^const u32 S_ISVTX  = 0001000;$/;"	v
SaFamily	$C2_LIBDIR/libc/sys_socket.c2i	/^type SaFamily u16 @(cname="sa_family_t");$/;"	t
Sbuf__	$C2_LIBDIR/libc/stdio.c2i	/^type Sbuf__ struct {$/;"	t
ScaleMode	$C2_LIBDIR/sdl2/sdl.c2i	/^type ScaleMode enum u8 {$/;"	t
Scancode	$C2_LIBDIR/sdl2/sdl.c2i	/^type Scancode enum u16 {$/;"	t
Scroll	$C2_LIBDIR/sdl2/sdl.c2i	/^    Scroll  = 0x8000,$/;"	v
Sha512_context	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Sha512_context struct @(cname="mbedtls_sha512_context") {$/;"	t
Shift	$C2_LIBDIR/sdl2/sdl.c2i	/^    Shift   = Keymod.Lshift | Keymod.Rshift,$/;"	v
SigActionAction	$C2_LIBDIR/libc/csignal.c2i	/^type SigActionAction fn void(i32, Siginfo_t*, void*);$/;"	t
SigActionRestorer	$C2_LIBDIR/libc/csignal.c2i	/^type SigActionRestorer fn void();$/;"	t
Sigaction	$C2_LIBDIR/libc/csignal.c2i	/^type Sigaction struct {$/;"	t
SigactionHandler	$C2_LIBDIR/libc/csignal.c2i	/^type SigactionHandler fn void(i32);$/;"	t
Siginfo	$C2_LIBDIR/libc/sys_signalfd.c2i	/^type Siginfo struct {$/;"	t
Siginfo_t	$C2_LIBDIR/libc/csignal.c2i	/^type Siginfo_t struct @(cname="siginfo_t") {$/;"	t
Sigset	$C2_LIBDIR/libc/csignal.c2i	/^type Sigset struct {$/;"	t
Sockaddr	$C2_LIBDIR/libc/sys_socket.c2i	/^type Sockaddr struct @(cname="sockaddr") {$/;"	t
Sockaddr_in	$C2_LIBDIR/libc/sys_socket.c2i	/^type Sockaddr_in struct @(cname="sockaddr_in") {$/;"	t
Sockaddr_ll	$C2_LIBDIR/libc/sys_socket.c2i	/^type Sockaddr_ll struct @(cname="sockaddr_ll") {$/;"	t
Sockaddr_un	$C2_LIBDIR/libc/sys_socket.c2i	/^type Sockaddr_un struct @(cname="sockaddr_un") {$/;"	t
SocketType	$C2_LIBDIR/libc/sys_socket.c2i	/^type SocketType enum u32 @(cname="__socket_type") {$/;"	t
Software	$C2_LIBDIR/sdl2/sdl.c2i	/^    Software = 0x00000001,         \/**< The renderer is a software fallback *\/$/;"	v
Speed	$C2_LIBDIR/libc/ctermios.c2i	/^type Speed c_uint;$/;"	t
Sq	$C2_LIBDIR/io_uring/io_uring.c2i	/^type Sq struct @(cname="io_uring_sq") {$/;"	t
Sqe	$C2_LIBDIR/io_uring/io_uring.c2i	/^type Sqe struct @(cname="io_uring_sqe") {$/;"	t
SqringOffsets	$C2_LIBDIR/io_uring/io_uring.c2i	/^type SqringOffsets struct @(cname="io_sqring_offsets") {$/;"	t
Ssl_config	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ssl_config struct @(cname="mbedtls_ssl_config") {$/;"	t
Ssl_context	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ssl_context struct @(cname="mbedtls_ssl_context") {$/;"	t
Ssl_get_timer_t	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ssl_get_timer_t fn c_int (void* ctx) @(cname="mbedtls_ssl_get_timer_t");$/;"	t
Ssl_handshake_params	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ssl_handshake_params struct @(opaque, cname="mbedtls_ssl_handshake_params");$/;"	t
Ssl_key_cert	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ssl_key_cert struct @(opaque, cname="mbedtls_ssl_key_cert");$/;"	t
Ssl_recv_t	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ssl_recv_t fn c_int(void *ctx, c_uchar *buf, c_size len) @(cname="mbedtls_ssl_recv_t");$/;"	t
Ssl_recv_timeout_t	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ssl_recv_timeout_t fn c_int(void *ctx, c_uchar *buf, c_size len, c_uint timeout) @(cname="m/;"	t
Ssl_send_t	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ssl_send_t fn c_int(void *ctx, const c_char *buf, c_size len) @(cname="mbedtls_ssl_send_t")/;"	t
Ssl_session	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ssl_session struct @(cname="mbedtls_ssl_session") {$/;"	t
Ssl_set_timer_t	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ssl_set_timer_t fn void (void* ctx, c_uint int_ms, c_uint fin_ms) @(cname="mbedtls_ssl_set_/;"	t
Ssl_transform	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Ssl_transform struct @(opaque, cname="mbedtls_ssl_transform");$/;"	t
Stat	$C2_LIBDIR/libc/sys_stat.c2i	/^type Stat struct @(cname="stat", no_typedef) {$/;"	t
State	$C2_LIBDIR/lua/lua.c2i	/^type State struct @(cname="lua_State") { }$/;"	t
Static	$C2_LIBDIR/sdl2/sdl.c2i	/^    Static,$/;"	v
StdlibCompareFn	$C2_LIBDIR/libc/stdlib.c2i	/^type StdlibCompareFn fn i32(const void*, const void*) @(cname="__compar_fn_t");$/;"	t
Streaming	$C2_LIBDIR/sdl2/sdl.c2i	/^    Streaming,$/;"	v
SuSeconds	$C2_LIBDIR/libc/sys_time.c2i	/^type SuSeconds c_long @(cname="suseconds_t");$/;"	t
Surface	$C2_LIBDIR/sdl2/sdl.c2i	/^type Surface struct @(cname="SDL_Surface") {$/;"	t
TAB	$C2_LIBDIR/sdl2/sdl.c2i	/^    TAB = 43,$/;"	v
TAB0	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint TAB0  = 0000000;$/;"	v
TAB1	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint TAB1  = 0004000;$/;"	v
TAB2	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint TAB2  = 0010000;$/;"	v
TAB3	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint TAB3  = 0014000;$/;"	v
TABDLY	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint TABDLY  = 0014000;$/;"	v
TAKE_FOCUS	$C2_LIBDIR/sdl2/sdl.c2i	/^    TAKE_FOCUS,     \/**< Window is being offered a focus (should SetWindowInputFocus() on itsel/;"	v
TCGETA	$C2_LIBDIR/libc/sys_ioctl.c2i	/^const c_uint TCGETA      = 0x5405;$/;"	v
TCGETS	$C2_LIBDIR/libc/sys_ioctl.c2i	/^const c_uint TCGETS      = 0x5401;$/;"	v
TCP_CC_INFO	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_CC_INFO              = 26; \/* Get Congestion Control (optional) info.  *\/$/;"	v
TCP_CONGESTION	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_CONGESTION           = 13; \/* Congestion control algorithm.  *\/$/;"	v
TCP_COOKIE_TRANSACTIONS	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_COOKIE_TRANSACTIONS  = 15; \/* TCP Cookie Transactions *\/$/;"	v
TCP_CORK	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_CORK                 =  3;  \/* Control sending of partial frames  *\/$/;"	v
TCP_DEFER_ACCEPT	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_DEFER_ACCEPT         =  9;  \/* Wake up listener only when data arrive *\/$/;"	v
TCP_FASTOPEN	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_FASTOPEN             = 23; \/* Enable FastOpen on listeners *\/$/;"	v
TCP_FASTOPEN_CONNECT	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_FASTOPEN_CONNECT     = 30; \/* Attempt FastOpen with connect.  *\/$/;"	v
TCP_FASTOPEN_KEY	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_FASTOPEN_KEY         = 33; \/* Set the key for Fast Open (cookie).  *\/$/;"	v
TCP_FASTOPEN_NO_COOKIE	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_FASTOPEN_NO_COOKIE   = 34; \/* Enable TFO without a TFO cookie.  *\/$/;"	v
TCP_INFO	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_INFO                 = 11; \/* Information about this connection. *\/$/;"	v
TCP_INQ	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_INQ                  = 36; \/* Notify bytes available to read as a cmsg on read./;"	v
TCP_KEEPCNT	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_KEEPCNT              =  6;  \/* Number of keepalives before death *\/$/;"	v
TCP_KEEPIDLE	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_KEEPIDLE             =  4;  \/* Start keeplives after this period *\/$/;"	v
TCP_KEEPINTVL	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_KEEPINTVL            =  5;  \/* Interval between keepalives *\/$/;"	v
TCP_LINGER2	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_LINGER2              =  8;  \/* Life time of orphaned FIN-WAIT-2 state *\/$/;"	v
TCP_MAXSEG	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_MAXSEG               =  2;  \/* Set maximum segment size  *\/$/;"	v
TCP_MD5SIG	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_MD5SIG               = 14; \/* TCP MD5 Signature (RFC2385) *\/$/;"	v
TCP_MD5SIG_EXT	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_MD5SIG_EXT           = 32; \/* TCP MD5 Signature with extensions.  *\/$/;"	v
TCP_NODELAY	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_NODELAY              =  1;  \/* Don't delay send to coalesce packets  *\/$/;"	v
TCP_NOTSENT_LOWAT	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_NOTSENT_LOWAT        = 25; \/* Limit number of unsent bytes in write queue.  *\/$/;"	v
TCP_QUEUE_SEQ	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_QUEUE_SEQ            = 21; \/* Set sequence number of repaired queue. *\/$/;"	v
TCP_QUICKACK	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_QUICKACK             = 12; \/* Bock\/reenable quick ACKs.  *\/$/;"	v
TCP_REPAIR	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_REPAIR               = 19; \/* TCP sock is under repair right now *\/$/;"	v
TCP_REPAIR_OPTIONS	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_REPAIR_OPTIONS       = 22; \/* Repair TCP connection options *\/$/;"	v
TCP_REPAIR_QUEUE	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_REPAIR_QUEUE         = 20; \/* Set TCP queue to repair *\/$/;"	v
TCP_REPAIR_WINDOW	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_REPAIR_WINDOW        = 29; \/* Get\/set window parameters.  *\/$/;"	v
TCP_SAVED_SYN	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_SAVED_SYN            = 28; \/* Get SYN headers recorded for connection.  *\/$/;"	v
TCP_SAVE_SYN	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_SAVE_SYN             = 27; \/* Record SYN headers for new connections.  *\/$/;"	v
TCP_SYNCNT	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_SYNCNT               =  7;  \/* Number of SYN retransmits *\/$/;"	v
TCP_THIN_DUPACK	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_THIN_DUPACK          = 17; \/* Fast retrans. after 1 dupack *\/$/;"	v
TCP_THIN_LINEAR_TIMEOUTS	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_THIN_LINEAR_TIMEOUTS = 16; \/* Use linear timeouts for thin streams*\/$/;"	v
TCP_TIMESTAMP	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_TIMESTAMP            = 24; \/* TCP time stamp *\/$/;"	v
TCP_TX_DELAY	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_TX_DELAY             = 37; \/* Delay outgoing packets by XX usec.  *\/$/;"	v
TCP_ULP	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_ULP                  = 31; \/* Attach a ULP to a TCP connection.  *\/$/;"	v
TCP_USER_TIMEOUT	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_USER_TIMEOUT         = 18; \/* How long for loss retry before timeout *\/$/;"	v
TCP_WINDOW_CLAMP	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_WINDOW_CLAMP         = 10; \/* Bound advertised window *\/$/;"	v
TCP_ZEROCOPY_RECEIVE	$C2_LIBDIR/libc/netinet_tcp.c2i	/^const c_int TCP_ZEROCOPY_RECEIVE     = 35;$/;"	v
TCSETA	$C2_LIBDIR/libc/sys_ioctl.c2i	/^const c_uint TCSETA      = 0x5406;$/;"	v
TCSETS	$C2_LIBDIR/libc/sys_ioctl.c2i	/^const c_uint TCSETS      = 0x5402;$/;"	v
TCSETSF	$C2_LIBDIR/libc/sys_ioctl.c2i	/^const c_uint TCSETSF     = 0x5404;$/;"	v
TCSETSW	$C2_LIBDIR/libc/sys_ioctl.c2i	/^const c_uint TCSETSW     = 0x5403;$/;"	v
TEE	$C2_LIBDIR/io_uring/io_uring.c2i	/^    TEE,$/;"	v
TEXTEDITING	$C2_LIBDIR/sdl2/sdl.c2i	/^    TEXTEDITING,            \/**< Keyboard text editing (composition) *\/$/;"	v
TEXTINPUT	$C2_LIBDIR/sdl2/sdl.c2i	/^    TEXTINPUT,              \/**< Keyboard text input *\/$/;"	v
THOUSANDSSEPARATOR	$C2_LIBDIR/sdl2/sdl.c2i	/^    THOUSANDSSEPARATOR = 178,$/;"	v
TIMEOUT	$C2_LIBDIR/io_uring/io_uring.c2i	/^    TIMEOUT,$/;"	v
TIMEOUT	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int TIMEOUT                           = -0x6800;  \/**< The operation timed out. *\/$/;"	v
TIMEOUT_ABS	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u32 TIMEOUT_ABS         = (1 << 0);$/;"	v
TIMEOUT_BOOTTIME	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u32 TIMEOUT_BOOTTIME    = (1 << 2);$/;"	v
TIMEOUT_CLOCK_MASK	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u32 TIMEOUT_CLOCK_MASK  = TIMEOUT_BOOTTIME | TIMEOUT_REALTIME;$/;"	v
TIMEOUT_REALTIME	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u32 TIMEOUT_REALTIME    = (1 << 3);$/;"	v
TIMEOUT_REMOVE	$C2_LIBDIR/io_uring/io_uring.c2i	/^    TIMEOUT_REMOVE,$/;"	v
TIMEOUT_UPDATE	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u32 TIMEOUT_UPDATE      = (1 << 1);$/;"	v
TIMEOUT_UPDATE_MASK	$C2_LIBDIR/io_uring/io_uring.c2i	/^const u32 TIMEOUT_UPDATE_MASK = TIMEOUT_UPDATE | LINK_TIMEOUT_UPDATE;$/;"	v
TLS1	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    TLS1,   \/\/ MBEDTLS_SSL_TLS_PRF_TLS1,$/;"	v
TOSTOP	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint TOSTOP  = 0000400;$/;"	v
Target	$C2_LIBDIR/sdl2/sdl.c2i	/^    Target,$/;"	v
TargetTexture	$C2_LIBDIR/sdl2/sdl.c2i	/^    TargetTexture = 0x00000008,    \/**< The renderer supports rendering to texture *\/$/;"	v
Termios	$C2_LIBDIR/libc/ctermios.c2i	/^type Termios struct @(cname="termios") {$/;"	t
TextEditingEvent	$C2_LIBDIR/sdl2/sdl.c2i	/^type TextEditingEvent struct {$/;"	t
TextEditingEvent_Text_Size	$C2_LIBDIR/sdl2/sdl.c2i	/^const u32 TextEditingEvent_Text_Size = 32;$/;"	v
TextInputEvent	$C2_LIBDIR/sdl2/sdl.c2i	/^type TextInputEvent struct {$/;"	t
TextInputEvent_Text_Size	$C2_LIBDIR/sdl2/sdl.c2i	/^const u32 TextInputEvent_Text_Size = 32;$/;"	v
Texture	$C2_LIBDIR/sdl2/sdl.c2i	/^type Texture struct @(opaque, cname="SDL_Texture");$/;"	t
TextureAccess	$C2_LIBDIR/sdl2/sdl.c2i	/^type TextureAccess enum u8 {$/;"	t
TextureModulate	$C2_LIBDIR/sdl2/sdl.c2i	/^type TextureModulate enum u8 {$/;"	t
Thread	$C2_LIBDIR/sdl2/sdl.c2i	/^type Thread struct @(cname="SDL_Thread", opaque);$/;"	t
ThreadFunc	$C2_LIBDIR/pthread/pthread.c2i	/^type ThreadFunc fn void*(void*) @(cname="pthread_threadfunc");$/;"	t
ThreadFunction	$C2_LIBDIR/sdl2/sdl.c2i	/^type ThreadFunction fn c_int (void* data);$/;"	t
Time	$C2_LIBDIR/libc/libc_time.c2i	/^type Time c_long @(cname="time_t");$/;"	t
Time	$C2_LIBDIR/libc/sys_time.c2i	/^type Time c_long @(cname="time_t");$/;"	t
Time_t	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Time_t c_long;$/;"	t
TimerCallback	$C2_LIBDIR/sdl2/sdl.c2i	/^type TimerCallback fn u32 (u32 interval, void* param);$/;"	t
TimerID	$C2_LIBDIR/sdl2/sdl.c2i	/^type TimerID c_int;$/;"	t
Timespec	$C2_LIBDIR/libc/linux_types.c2i	/^type Timespec struct {$/;"	t
Timespec	$C2_LIBDIR/libc/sys_stat.c2i	/^type Timespec struct @(cname="timespec", no_typedef) {$/;"	t
Timeval	$C2_LIBDIR/libc/sys_time.c2i	/^type Timeval struct @(cname="timeval") {$/;"	t
Timezone	$C2_LIBDIR/libc/sys_time.c2i	/^type Timezone struct @(cname="timezone") {$/;"	t
Timing_delay_context	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Timing_delay_context struct @(cname="mbedtls_timing_delay_context") {$/;"	t
Timing_hr_time	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Timing_hr_time struct @(cname="mbedtls_timing_hr_time") {$/;"	t
Tls_prf_types	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Tls_prf_types enum u8 {$/;"	t
Tm	$C2_LIBDIR/libc/libc_time.c2i	/^type Tm struct {$/;"	t
UNDO	$C2_LIBDIR/sdl2/sdl.c2i	/^    UNDO = 122,$/;"	v
UNEXPECTED_CID	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int UNEXPECTED_CID                    = -0x6000;  \/**< An encrypted DTLS-frame with an /;"	v
UNEXPECTED_MESSAGE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int UNEXPECTED_MESSAGE                = -0x7700;  \/**< An unexpected message was receiv/;"	v
UNEXPECTED_RECORD	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int UNEXPECTED_RECORD                 = -0x6700;  \/**< Record header looks valid but is/;"	v
UNIX_PATH_MAX	$C2_LIBDIR/libc/sys_socket.c2i	/^const u32 UNIX_PATH_MAX = 108;$/;"	v
UNKNOWN	$C2_LIBDIR/sdl2/sdl.c2i	/^    UNKNOWN = 0,$/;"	v
UNKNOWN_CIPHER	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int UNKNOWN_CIPHER                    = -0x7300;  \/**< An unknown cipher was received. /;"	v
UNKNOWN_IDENTITY	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int UNKNOWN_IDENTITY                  = -0x6C80;  \/**< Unknown identity received (eg, P/;"	v
UNLINKAT	$C2_LIBDIR/io_uring/io_uring.c2i	/^    UNLINKAT,$/;"	v
UP	$C2_LIBDIR/sdl2/sdl.c2i	/^    UP = 82,$/;"	v
USEREVENT	$C2_LIBDIR/sdl2/sdl.c2i	/^    USEREVENT    = 0x8000,$/;"	v
Unsigned	$C2_LIBDIR/lua/lua.c2i	/^type Unsigned LUA_UNSIGNED @(cname="lua_Unsigned");$/;"	t
VDISCARD	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VDISCARD = 13;$/;"	v
VEOF	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VEOF = 4;$/;"	v
VEOL	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VEOL = 11;$/;"	v
VEOL2	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VEOL2 = 16;$/;"	v
VERASE	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VERASE = 2;$/;"	v
VERSION_MISMATCH	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int VERSION_MISMATCH                  = -0x5F00;  \/**< An operation failed due to an un/;"	v
VINTR	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VINTR = 0;$/;"	v
VKILL	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VKILL = 3;$/;"	v
VLNEXT	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VLNEXT = 15;$/;"	v
VMIN	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VMIN = 6;$/;"	v
VOLUMEDOWN	$C2_LIBDIR/sdl2/sdl.c2i	/^    VOLUMEDOWN = 129,$/;"	v
VOLUMEUP	$C2_LIBDIR/sdl2/sdl.c2i	/^    VOLUMEUP = 128,$/;"	v
VQUIT	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VQUIT = 1;$/;"	v
VREPRINT	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VREPRINT = 12;$/;"	v
VSTART	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VSTART = 8;$/;"	v
VSTOP	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VSTOP = 9;$/;"	v
VSUSP	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VSUSP = 10;$/;"	v
VSWTC	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VSWTC = 7;$/;"	v
VT0	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VT0   = 0000000;$/;"	v
VT1	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VT1   = 0040000;$/;"	v
VTDLY	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VTDLY   = 0040000;$/;"	v
VTIME	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VTIME = 5;$/;"	v
VWERASE	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint VWERASE = 14;$/;"	v
Verify_fn	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Verify_fn fn c_int(void*, X509_crt *, c_int, c_uint*);$/;"	t
Vertical	$C2_LIBDIR/sdl2/sdl.c2i	/^    Vertical   = 0x00000002$/;"	v
WAITING_SERVER_HELLO_RENEGO	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int WAITING_SERVER_HELLO_RENEGO       = -0x6B00;  \/**< Unexpected message at ServerHell/;"	v
WANT_READ	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int WANT_READ                         = -0x6900;  \/**< No data of requested type curren/;"	v
WANT_WRITE	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^const c_int WANT_WRITE                        = -0x6880;  \/**< Connection requires a write call/;"	v
WINDOWEVENT	$C2_LIBDIR/sdl2/sdl.c2i	/^    WINDOWEVENT    = 0x200, \/**< Window state change *\/$/;"	v
WINDOWPOS_CENTERED	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_int WINDOWPOS_CENTERED       = WINDOWPOS_CENTERED_MASK | 0;$/;"	v
WINDOWPOS_CENTERED_MASK	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_int WINDOWPOS_CENTERED_MASK  = 0x2FFF0000;$/;"	v
WINDOWPOS_UNDEFINED	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_int WINDOWPOS_UNDEFINED      = WINDOWPOS_UNDEFINED_MASK | 0;$/;"	v
WINDOWPOS_UNDEFINED_MASK	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_int WINDOWPOS_UNDEFINED_MASK = 0x1FFF0000;$/;"	v
WINDOW_ALLOW_HIGHDPI	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_ALLOW_HIGHDPI = 0x00002000;      \/**< window should be created in high-DPI /;"	v
WINDOW_ALWAYS_ON_TOP	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_ALWAYS_ON_TOP    = 0x00008000;   \/**< window should always be above others /;"	v
WINDOW_BORDERLESS	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_BORDERLESS = 0x00000010;         \/**< no window decoration *\/$/;"	v
WINDOW_FOREIGN	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_FOREIGN = 0x00000800;            \/**< window not created by SDL *\/$/;"	v
WINDOW_FULLSCREEN	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_FULLSCREEN = 0x00000001;         \/**< fullscreen window *\/$/;"	v
WINDOW_FULLSCREEN_DESKTOP	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_FULLSCREEN_DESKTOP = ( WINDOW_FULLSCREEN | 0x00001000 );$/;"	v
WINDOW_HIDDEN	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_HIDDEN = 0x00000008;             \/**< window is not visible *\/$/;"	v
WINDOW_INPUT_FOCUS	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_INPUT_FOCUS = 0x00000200;        \/**< window has input focus *\/$/;"	v
WINDOW_INPUT_GRABBED	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_INPUT_GRABBED = WINDOW_MOUSE_GRABBED; \/**< equivalent to WINDOW_MOUSE_GRABB/;"	v
WINDOW_KEYBOARD_GRABBED	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_KEYBOARD_GRABBED = 0x00100000;   \/**< window has grabbed keyboard input *\/$/;"	v
WINDOW_MAXIMIZED	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_MAXIMIZED = 0x00000080;          \/**< window is maximized *\/$/;"	v
WINDOW_METAL	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_METAL            = 0x20000000;   \/**< window usable for Metal view *\/$/;"	v
WINDOW_MINIMIZED	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_MINIMIZED = 0x00000040;          \/**< window is minimized *\/$/;"	v
WINDOW_MOUSE_CAPTURE	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_MOUSE_CAPTURE    = 0x00004000;   \/**< window has mouse captured (unrelated /;"	v
WINDOW_MOUSE_FOCUS	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_MOUSE_FOCUS = 0x00000400;        \/**< window has mouse focus *\/$/;"	v
WINDOW_MOUSE_GRABBED	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_MOUSE_GRABBED = 0x00000100;      \/**< window has grabbed mouse input *\/$/;"	v
WINDOW_OPENGL	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_OPENGL = 0x00000002;             \/**< window usable with OpenGL context *\/$/;"	v
WINDOW_POPUP_MENU	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_POPUP_MENU       = 0x00080000;   \/**< window should be treated as a popup m/;"	v
WINDOW_RESIZABLE	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_RESIZABLE = 0x00000020;          \/**< window can be resized *\/$/;"	v
WINDOW_SHOWN	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_SHOWN = 0x00000004;              \/**< window is visible *\/$/;"	v
WINDOW_SKIP_TASKBAR	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_SKIP_TASKBAR     = 0x00010000;   \/**< window should not be added to the tas/;"	v
WINDOW_TOOLTIP	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_TOOLTIP          = 0x00040000;   \/**< window should be treated as a tooltip/;"	v
WINDOW_UTILITY	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_UTILITY          = 0x00020000;   \/**< window should be treated as a utility/;"	v
WINDOW_VULKAN	$C2_LIBDIR/sdl2/sdl.c2i	/^const c_uint WINDOW_VULKAN           = 0x10000000;   \/**< window usable for Vulkan surface *\/$/;"	v
WRAPPED_ALIGN_CENTER	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^const u32 WRAPPED_ALIGN_CENTER    = 1;$/;"	v
WRAPPED_ALIGN_LEFT	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^const u32 WRAPPED_ALIGN_LEFT      = 0;$/;"	v
WRAPPED_ALIGN_RIGHT	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^const u32 WRAPPED_ALIGN_RIGHT     = 2;$/;"	v
WRITE	$C2_LIBDIR/io_uring/io_uring.c2i	/^    WRITE,$/;"	v
WRITEV	$C2_LIBDIR/io_uring/io_uring.c2i	/^    WRITEV,$/;"	v
WRITE_FIXED	$C2_LIBDIR/io_uring/io_uring.c2i	/^    WRITE_FIXED,$/;"	v
WWW	$C2_LIBDIR/sdl2/sdl.c2i	/^    WWW = 264,$/;"	v
W_OK	$C2_LIBDIR/libc/unistd.c2i	/^const u8 W_OK = 2;$/;"	v
Window	$C2_LIBDIR/sdl2/sdl.c2i	/^type Window struct @(opaque, cname="SDL_Window");$/;"	t
WindowEvent	$C2_LIBDIR/sdl2/sdl.c2i	/^type WindowEvent struct {$/;"	t
WindowEventId	$C2_LIBDIR/sdl2/sdl.c2i	/^type WindowEventId enum u8 {$/;"	t
Writer	$C2_LIBDIR/lua/lua.c2i	/^type Writer fn void* (State *L, const void *p, c_size sz, void *ud) @(cname="lua_Writer");$/;"	t
X509_buf	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type X509_buf Asn1_buf @(cname="mbedtls_x509_buf");$/;"	t
X509_crl	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type X509_crl struct @(cname="mbedtls_x509_crl") {$/;"	t
X509_crl_entry	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type X509_crl_entry struct @(cname="mbedtls_x509_crl_entry") {$/;"	t
X509_crt	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type X509_crt struct @(cname="mbedtls_x509_crt") {$/;"	t
X509_crt_profile	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type X509_crt_profile struct @(cname="mbedtls_x509_crt_profile") {$/;"	t
X509_name	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type X509_name Asn1_named_data @(cname="mbedtls_x509_name");$/;"	t
X509_sequence	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type X509_sequence Asn1_sequence @(cname="mbedtls_x509_sequence");$/;"	t
X509_time	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type X509_time struct @(cname="mbedtls_x509_time") {$/;"	t
XCASE	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint XCASE   = 0000004;$/;"	v
XTABS	$C2_LIBDIR/libc/ctermios.c2i	/^const c_uint XTABS = 0014000;$/;"	v
X_OK	$C2_LIBDIR/libc/unistd.c2i	/^const u8 X_OK = 1;$/;"	v
_Exit	$C2_LIBDIR/libc/stdlib.c2i	/^fn void _Exit(c_int __status) @(noreturn);$/;"	f
_IOFBF	$C2_LIBDIR/libc/stdio.c2i	/^const u8 _IOFBF = 0; \/\/ fully buffered$/;"	v
_IOLBF	$C2_LIBDIR/libc/stdio.c2i	/^const u8 _IOLBF = 1; \/\/ line buffering$/;"	v
_IONBF	$C2_LIBDIR/libc/stdio.c2i	/^const u8 _IONBF = 2; \/\/ no buffering$/;"	v
_SC_ADVISORY_INFO	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_ADVISORY_INFO = 65;$/;"	v
_SC_AIO_LISTIO_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_AIO_LISTIO_MAX = 42;$/;"	v
_SC_AIO_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_AIO_MAX = 43;$/;"	v
_SC_AIO_PRIO_DELTA_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_AIO_PRIO_DELTA_MAX = 44;$/;"	v
_SC_ARG_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_ARG_MAX = 1;$/;"	v
_SC_ASYNCHRONOUS_IO	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_ASYNCHRONOUS_IO = 45;$/;"	v
_SC_ATEXIT_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_ATEXIT_MAX = 87;$/;"	v
_SC_AVPHYS_PAGES	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_AVPHYS_PAGES = 86;$/;"	v
_SC_BARRIERS	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_BARRIERS = 66;$/;"	v
_SC_BC_BASE_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_BC_BASE_MAX = 9;$/;"	v
_SC_BC_DIM_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_BC_DIM_MAX = 37;$/;"	v
_SC_BC_SCALE_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_BC_SCALE_MAX = 38;$/;"	v
_SC_BC_STRING_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_BC_STRING_MAX = 39;$/;"	v
_SC_CHILD_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_CHILD_MAX = 2;$/;"	v
_SC_CLK_TCK	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_CLK_TCK = 3;$/;"	v
_SC_CLOCK_SELECTION	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_CLOCK_SELECTION = 67;$/;"	v
_SC_COLL_WEIGHTS_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_COLL_WEIGHTS_MAX = 40;$/;"	v
_SC_CPUTIME	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_CPUTIME = 68;$/;"	v
_SC_DELAYTIMER_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_DELAYTIMER_MAX = 50;$/;"	v
_SC_EXPR_NEST_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_EXPR_NEST_MAX = 42;$/;"	v
_SC_FSYNC	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_FSYNC = 38;$/;"	v
_SC_GETGR_R_SIZE_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_GETGR_R_SIZE_MAX = 70;$/;"	v
_SC_GETPW_R_SIZE_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_GETPW_R_SIZE_MAX = 71;$/;"	v
_SC_HOST_NAME_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_HOST_NAME_MAX = 72;$/;"	v
_SC_IOV_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_IOV_MAX = 60;$/;"	v
_SC_IPV6	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_IPV6 = 52;$/;"	v
_SC_JOB_CONTROL	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_JOB_CONTROL = 7;$/;"	v
_SC_LINE_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_LINE_MAX = 43;$/;"	v
_SC_LOGIN_NAME_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_LOGIN_NAME_MAX = 73;$/;"	v
_SC_MAPPED_FILES	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_MAPPED_FILES = 53;$/;"	v
_SC_MEMLOCK	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_MEMLOCK = 54;$/;"	v
_SC_MEMLOCK_RANGE	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_MEMLOCK_RANGE = 55;$/;"	v
_SC_MEMORY_PROTECTION	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_MEMORY_PROTECTION = 56;$/;"	v
_SC_MESSAGE_PASSING	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_MESSAGE_PASSING = 57;$/;"	v
_SC_MONOTONIC_CLOCK	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_MONOTONIC_CLOCK = 74;$/;"	v
_SC_MQ_OPEN_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_MQ_OPEN_MAX = 58;$/;"	v
_SC_MQ_PRIO_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_MQ_PRIO_MAX = 75;$/;"	v
_SC_NGROUPS_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_NGROUPS_MAX = 4;$/;"	v
_SC_NPROCESSORS_CONF	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_NPROCESSORS_CONF = 83;$/;"	v
_SC_NPROCESSORS_ONLN	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_NPROCESSORS_ONLN = 84;$/;"	v
_SC_OPEN_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_OPEN_MAX = 5;$/;"	v
_SC_PAGESIZE	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_PAGESIZE = 47;$/;"	v
_SC_PAGE_SIZE	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_PAGE_SIZE = 47;$/;"	v
_SC_PHYS_PAGES	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_PHYS_PAGES = 85;$/;"	v
_SC_PRIORITIZED_IO	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_PRIORITIZED_IO = 60;$/;"	v
_SC_RAW_SOCKETS	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_RAW_SOCKETS = 62;$/;"	v
_SC_READER_WRITER_LOCKS	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_READER_WRITER_LOCKS = 76;$/;"	v
_SC_REALTIME_SIGNALS	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_REALTIME_SIGNALS = 9;$/;"	v
_SC_REGEXP	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_REGEXP = 77;$/;"	v
_SC_RE_DUP_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_RE_DUP_MAX = 44;$/;"	v
_SC_RTSIG_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_RTSIG_MAX = 66;$/;"	v
_SC_SAVED_IDS	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_SAVED_IDS = 8;$/;"	v
_SC_SEMAPHORES	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_SEMAPHORES = 67;$/;"	v
_SC_SEM_NSEMS_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_SEM_NSEMS_MAX = 49;$/;"	v
_SC_SEM_VALUE_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_SEM_VALUE_MAX = 50;$/;"	v
_SC_SHARED_MEMORY_OBJECTS	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_SHARED_MEMORY_OBJECTS = 68;$/;"	v
_SC_SHELL	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_SHELL = 78;$/;"	v
_SC_SIGQUEUE_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_SIGQUEUE_MAX = 70;$/;"	v
_SC_SPAWN	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_SPAWN = 79;$/;"	v
_SC_SPIN_LOCKS	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_SPIN_LOCKS = 80;$/;"	v
_SC_SPORADIC_SERVER	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_SPORADIC_SERVER = 81;$/;"	v
_SC_SS_REPL_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_SS_REPL_MAX = 74;$/;"	v
_SC_SYMLOOP_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_SYMLOOP_MAX = 76;$/;"	v
_SC_SYNCHRONIZED_IO	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_SYNCHRONIZED_IO = 75;$/;"	v
_SC_THREADS	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_THREADS = 96;$/;"	v
_SC_THREAD_ATTR_STACKADDR	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_THREAD_ATTR_STACKADDR = 82;$/;"	v
_SC_THREAD_ATTR_STACKSIZE	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_THREAD_ATTR_STACKSIZE = 83;$/;"	v
_SC_THREAD_CPUTIME	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_THREAD_CPUTIME = 84;$/;"	v
_SC_THREAD_KEYS_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_THREAD_KEYS_MAX = 86;$/;"	v
_SC_THREAD_PRIORITY_SCHEDULING	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_THREAD_PRIORITY_SCHEDULING = 89;$/;"	v
_SC_THREAD_PRIO_INHERIT	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_THREAD_PRIO_INHERIT = 87;$/;"	v
_SC_THREAD_PRIO_PROTECT	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_THREAD_PRIO_PROTECT = 88;$/;"	v
_SC_THREAD_PROCESS_SHARED	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_THREAD_PROCESS_SHARED = 90;$/;"	v
_SC_THREAD_SAFE_FUNCTIONS	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_THREAD_SAFE_FUNCTIONS = 91;$/;"	v
_SC_THREAD_SPORADIC_SERVER	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_THREAD_SPORADIC_SERVER = 92;$/;"	v
_SC_THREAD_STACK_MIN	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_THREAD_STACK_MIN = 93;$/;"	v
_SC_THREAD_THREADS_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_THREAD_THREADS_MAX = 94;$/;"	v
_SC_TIMEOUTS	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_TIMEOUTS = 95;$/;"	v
_SC_TIMERS	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_TIMERS = 94;$/;"	v
_SC_TIMER_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_TIMER_MAX = 93;$/;"	v
_SC_TRACE	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_TRACE = 97;$/;"	v
_SC_TRACE_EVENT_FILTER	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_TRACE_EVENT_FILTER = 98;$/;"	v
_SC_TRACE_EVENT_NAME_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_TRACE_EVENT_NAME_MAX = 97;$/;"	v
_SC_TRACE_INHERIT	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_TRACE_INHERIT = 99;$/;"	v
_SC_TRACE_LOG	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_TRACE_LOG = 99;$/;"	v
_SC_TRACE_NAME_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_TRACE_NAME_MAX = 243;$/;"	v
_SC_TRACE_SYS_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_TRACE_SYS_MAX = 244;$/;"	v
_SC_TRACE_USER_EVENT_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_TRACE_USER_EVENT_MAX = 245;$/;"	v
_SC_TTY_NAME_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_TTY_NAME_MAX = 72;$/;"	v
_SC_TYPED_MEMORY_OBJECTS	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_TYPED_MEMORY_OBJECTS = 165;$/;"	v
_SC_TZNAME_MAX	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_TZNAME_MAX = 6;$/;"	v
_SC_V7_ILP32_OFF32	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_V7_ILP32_OFF32 = 237;$/;"	v
_SC_VERSION	$C2_LIBDIR/libc/unistd.c2i	/^const u32 _SC_VERSION = 8;$/;"	v
__align	$C2_LIBDIR/pthread/pthread.c2i	/^    c_long __align;$/;"	v
__attr	$C2_LIBDIR/pthread/pthread.c2i	/^                          const PthreadAttr* __attr,$/;"	v
__d_padding	$C2_LIBDIR/libc/libc_dirent.c2i	/^    u8[4] __d_padding;$/;"	v
__errno	$C2_LIBDIR/libc/c_errno.c2i	/^fn c_int* __errno();$/;"	f
__errno_location	$C2_LIBDIR/libc/c_errno.c2i	/^fn c_int* __errno_location();$/;"	f
__error	$C2_LIBDIR/libc/c_errno.c2i	/^fn c_int* __error();$/;"	f
__getdelim	$C2_LIBDIR/libc/stdio.c2i	/^fn c_ssize __getdelim(c_char** __lineptr, c_size* __n, c_int __delimiter, FILE* __stream);$/;"	f
__pad	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  u8[28] __pad;$/;"	v
__pad2	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u64[2]   __pad2;$/;"	v
__pad2	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  u16 __pad2;$/;"	v
__size	$C2_LIBDIR/pthread/pthread.c2i	/^    char[SIZEOF_ATTR_T]  __size; \/\/ NOTE: 32 on 32-bit$/;"	v
__start_routine	$C2_LIBDIR/pthread/pthread.c2i	/^                          ThreadFunc __start_routine,$/;"	v
__val	$C2_LIBDIR/libc/csignal.c2i	/^    u64[SIGSET_NWORDS] __val;$/;"	v
__xuname	$C2_LIBDIR/libc/sys_utsname.c2i	/^fn c_int __xuname(c_int len, void *);       \/* Variable record size. *\/$/;"	f
_bf	$C2_LIBDIR/libc/stdio.c2i	/^    Sbuf__ _bf;$/;"	v
_blksize	$C2_LIBDIR/libc/stdio.c2i	/^    c_int _blksize;$/;"	v
_exit	$C2_LIBDIR/libc/stdlib.c2i	/^fn void _exit(c_int __status) @(noreturn);$/;"	f
_ext	$C2_LIBDIR/libc/stdio.c2i	/^    Sbuf__ _ext;$/;"	v
_file	$C2_LIBDIR/libc/stdio.c2i	/^    c_short _file;$/;"	v
_flags	$C2_LIBDIR/libc/stdio.c2i	/^    c_short _flags;$/;"	v
_lb	$C2_LIBDIR/libc/stdio.c2i	/^    Sbuf__ _lb;$/;"	v
_lbfsize	$C2_LIBDIR/libc/stdio.c2i	/^    c_int _lbfsize;$/;"	v
_nbuf	$C2_LIBDIR/libc/stdio.c2i	/^    u8[1] _nbuf;$/;"	v
_offset	$C2_LIBDIR/libc/stdio.c2i	/^    i64 _offset;$/;"	v
_pos	$C2_LIBDIR/libc/stdio.c2i	/^    i32 _pos;$/;"	v
_r	$C2_LIBDIR/libc/stdio.c2i	/^    c_int _r;$/;"	v
_setjmp	$C2_LIBDIR/libc/csetjmp.c2i	/^fn i32 _setjmp(JmpBuf __env);$/;"	f
_size	$C2_LIBDIR/libc/stdio.c2i	/^    c_int _size;$/;"	v
_ubuf	$C2_LIBDIR/libc/stdio.c2i	/^    u8[3] _ubuf;$/;"	v
_ur	$C2_LIBDIR/libc/stdio.c2i	/^    c_int _ur;$/;"	v
_w	$C2_LIBDIR/libc/stdio.c2i	/^    c_int _w;$/;"	v
a64l	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_long a64l(const c_char* s);$/;"	f
abort	$C2_LIBDIR/libc/stdlib.c2i	/^fn void abort() @(noreturn);$/;"	f
above	$C2_LIBDIR/sdl2/sdl.c2i	/^                                 *   by any of the above, but since there's a$/;"	v
abs	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int abs(c_int __x);$/;"	f
absindex	$C2_LIBDIR/lua/lua.c2i	/^fn c_int absindex(State* L, c_int idx) @(cname="lua_absindex");$/;"	f
abuf	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^    u8* abuf;$/;"	v
accept	$C2_LIBDIR/libc/sys_socket.c2i	/^fn c_int accept(c_int sockfd, Sockaddr *addr, u32 *addrlen);$/;"	f
accept4	$C2_LIBDIR/libc/sys_socket.c2i	/^fn c_int accept4(c_int sockfd, Sockaddr* addr, u32* addrlen, c_int flags);$/;"	f
accept_flags	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u32       accept_flags;$/;"	v
accumulator	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Sha512_context  accumulator;$/;"	v
accumulator_started	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int accumulator_started;$/;"	v
acos	$C2_LIBDIR/math/math.c2i	/^fn c_double acos(c_double);$/;"	f
acosf	$C2_LIBDIR/math/math.c2i	/^fn c_float acosf(c_float);$/;"	f
acosh	$C2_LIBDIR/math/math.c2i	/^fn c_double acosh(c_double);$/;"	f
acoshf	$C2_LIBDIR/math/math.c2i	/^fn c_float acoshf(c_float);$/;"	f
addTimer	$C2_LIBDIR/sdl2/sdl.c2i	/^fn TimerID addTimer(u32 interval, TimerCallback callback, void* param) @(cname="SDL_AddTimer");$/;"	f
addr	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u64   addr;   \/* pointer to buffer or iovecs *\/$/;"	v
addr2	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u64   addr2;$/;"	v
addrlen	$C2_LIBDIR/io_uring/io_uring.c2i	/^                        u32* addrlen,$/;"	v
adevice	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_AudioDeviceEvent adevice;           \/**< Audio device event data *\/$/;"	v
aes_ctx	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Aes_context aes_ctx;        \/*!< The AES context. *\/$/;"	v
alen	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^    u32 alen;$/;"	v
align	$C2_LIBDIR/pthread/pthread.c2i	/^    c_long align;$/;"	v
aligned_alloc	$C2_LIBDIR/libc/stdlib.c2i	/^fn void* aligned_alloc(c_int __alignment, c_size __size);$/;"	f
allocated	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^    c_int allocated;$/;"	v
allowed_curves	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uint allowed_curves;    \/**< Elliptic curves for ECDSA  *\/$/;"	v
allowed_mds	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uint allowed_mds;       \/**< MDs for signatures         *\/$/;"	v
allowed_pks	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uint allowed_pks;       \/**< PK algs for signatures     *\/$/;"	v
alphasort	$C2_LIBDIR/libc/libc_dirent.c2i	/^fn c_int alphasort(const Dirent**, const Dirent**);$/;"	f
angle	$C2_LIBDIR/sdl2/sdl.c2i	/^                         const f64 angle,$/;"	v
appropriately	$C2_LIBDIR/io_uring/io_uring.c2i	/^ *               from fd_in starting from the file offset and it is adjust appropriately;$/;"	v
arg	$C2_LIBDIR/sdl2/sdl.c2i	/^    void* arg, c_uint, c_uint* threadID);$/;"	v
arith	$C2_LIBDIR/lua/lua.c2i	/^fn void arith(State *L, c_int op) @(cname="lua_arith");$/;"	f
array	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32* array;$/;"	v
asctime	$C2_LIBDIR/libc/libc_time.c2i	/^fn c_char* asctime(const Tm* tm);$/;"	f
asctime_r	$C2_LIBDIR/libc/libc_time.c2i	/^fn c_char* asctime_r(const Tm* tm, c_char* buf);$/;"	f
asin	$C2_LIBDIR/math/math.c2i	/^fn c_double asin(c_double);$/;"	f
asinf	$C2_LIBDIR/math/math.c2i	/^fn c_float asinf(c_float);$/;"	f
asinh	$C2_LIBDIR/math/math.c2i	/^fn c_double asinh(c_double);$/;"	f
asinhf	$C2_LIBDIR/math/math.c2i	/^fn c_float asinhf(c_float);$/;"	f
asprintf	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int asprintf(c_char**, const c_char* @(printf_format), ...);$/;"	f
at_quick_exit	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int at_quick_exit(AtExitFn __func);$/;"	f
atan	$C2_LIBDIR/math/math.c2i	/^fn c_double atan(c_double);$/;"	f
atan2	$C2_LIBDIR/math/math.c2i	/^fn c_double atan2(c_double, c_double);$/;"	f
atan2f	$C2_LIBDIR/math/math.c2i	/^fn c_float atan2f(c_float, c_float);$/;"	f
atanf	$C2_LIBDIR/math/math.c2i	/^fn c_float atanf(c_float);$/;"	f
atanh	$C2_LIBDIR/math/math.c2i	/^fn c_double atanh(c_double);$/;"	f
atanhf	$C2_LIBDIR/math/math.c2i	/^fn c_float atanhf(c_float);$/;"	f
atexit	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int atexit(AtExitFn __func);$/;"	f
atof	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_double atof(const c_char* nptr);$/;"	f
atoi	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int atoi(const c_char* nptr);$/;"	f
atol	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_long atol(const c_char* nptr);$/;"	f
atoll	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_longlong atoll(const c_char* nptr);$/;"	f
atpanic	$C2_LIBDIR/lua/lua.c2i	/^fn CFunction atpanic(State *L, CFunction panicf) @(cname="lua_atpanic");$/;"	f
badmac_limit	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uint badmac_limit;      \/*!< limit of records with a bad MAC    *\/$/;"	v
badmac_seen	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uint badmac_seen;       \/*!< records with a bad MAC received    *\/$/;"	v
barrier	$C2_LIBDIR/io_uring/io_uring.c2i	/^	 * Without a barrier, we could miss an update and think the SQ wasn't ready.$/;"	v
base_addr	$C2_LIBDIR/libc/net_if.c2i	/^    c_ushort base_addr;$/;"	v
basename	$C2_LIBDIR/libc/libgen.c2i	/^fn c_char* basename(c_char* path);$/;"	f
bcmp	$C2_LIBDIR/libc/strings.c2i	/^fn c_int bcmp(const void* s1, const void* s2, c_size n);$/;"	f
beginThread	$C2_LIBDIR/sdl2/sdl.c2i	/^                          CurrentBeginThread beginThread, CurrentEndThread endThread)$/;"	v
bgid	$C2_LIBDIR/io_uring/io_uring.c2i	/^						 int bgid, int bid)$/;"	v
bind	$C2_LIBDIR/libc/sys_socket.c2i	/^fn c_int bind(c_int sockfd, const Sockaddr* addr, u32 addrlen);$/;"	f
bsearch	$C2_LIBDIR/libc/stdlib.c2i	/^fn void* bsearch(const void* __key, const void* __base, c_size __nmemb, c_size __size, StdlibCom/;"	f
buf	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uint[68] buf;           \/*!< Unaligned data buffer. This buffer can$/;"	v
buf_group	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u16   buf_group;$/;"	v
buf_index	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u16   buf_index;$/;"	v
buffer	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uchar[128] buffer;        \/*!< The data block being processed. *\/$/;"	v
button	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8 button;       \/**< The mouse button index *\/$/;"	v
bytes	$C2_LIBDIR/sdl2/sdl.c2i	/^       On architectures where pointers are 16 bytes, this needs rounding up to$/;"	v
c2	$C2_LIBDIR/c2/c2.c2i	/^module c2;$/;"	v
c2_filenames	$C2_LIBDIR/c2/c2_trace_tables.c2i	/^const char*[] c2_filenames;$/;"	v
c2_func_data	$C2_LIBDIR/c2/c2_trace_tables.c2i	/^c2_func_t[] c2_func_data;$/;"	v
c2_func_t	$C2_LIBDIR/c2/c2_trace_tables.c2i	/^type c2_func_t struct {$/;"	t
c2_test	$C2_LIBDIR/c2/c2_test.c2i	/^module c2_test;$/;"	v
c2_trace_counts	$C2_LIBDIR/c2/c2_trace_tables.c2i	/^u32[] c2_trace_counts;$/;"	v
c2_trace_data	$C2_LIBDIR/c2/c2_trace_tables.c2i	/^c2_trace_t[] c2_trace_data;$/;"	v
c2_trace_length	$C2_LIBDIR/c2/c2_trace_tables.c2i	/^u32 c2_trace_length;$/;"	v
c2_trace_t	$C2_LIBDIR/c2/c2_trace_tables.c2i	/^type c2_trace_t struct {$/;"	t
c2_trace_tables	$C2_LIBDIR/c2/c2_trace_tables.c2i	/^module c2_trace_tables;$/;"	v
c_cc	$C2_LIBDIR/libc/ctermios.c2i	/^    CC[NCCS] c_cc;        \/* control characters *\/$/;"	v
c_cflag	$C2_LIBDIR/libc/ctermios.c2i	/^    Flag c_cflag;       \/* control mode flags *\/$/;"	v
c_char	$C2_LIBDIR/c2/c2.c2i	/^type c_char char;$/;"	t
c_double	$C2_LIBDIR/c2/c2.c2i	/^type c_double f64;$/;"	t
c_double	$C2_LIBDIR/lua/lua.c2i	/^type LUA_NUMBER c_double;$/;"	v
c_errno	$C2_LIBDIR/libc/c_errno.c2i	/^module c_errno;$/;"	v
c_float	$C2_LIBDIR/c2/c2.c2i	/^type c_float f32;$/;"	t
c_iflag	$C2_LIBDIR/libc/ctermios.c2i	/^    Flag c_iflag;       \/* input mode flags *\/$/;"	v
c_int	$C2_LIBDIR/c2/c2.c2i	/^type c_int i32;$/;"	t
c_int	$C2_LIBDIR/io_uring/io_uring.c2i	/^type Kernel_rwf_t c_int;$/;"	v
c_int	$C2_LIBDIR/libc/regex.c2i	/^type RegOff c_int @(cname="regoff_t");$/;"	v
c_int	$C2_LIBDIR/libc/sys_time.c2i	/^type SuSeconds c_int @(cname="suseconds_t");$/;"	v
c_int	$C2_LIBDIR/libc/unistd.c2i	/^type Pid c_int @(cname="pid_t");$/;"	v
c_int	$C2_LIBDIR/lua/lua.c2i	/^type LUA_INTEGER c_int;$/;"	v
c_int	$C2_LIBDIR/sdl2/sdl.c2i	/^type TimerID c_int;$/;"	v
c_ispeed	$C2_LIBDIR/libc/ctermios.c2i	/^    Speed c_ispeed;       \/* input speed *\/$/;"	v
c_lflag	$C2_LIBDIR/libc/ctermios.c2i	/^    Flag c_lflag;       \/* local mode flags *\/$/;"	v
c_line	$C2_LIBDIR/libc/ctermios.c2i	/^    CC c_line;            \/* line discipline *\/$/;"	v
c_long	$C2_LIBDIR/c2/c2.c2i	/^type c_long i64;$/;"	t
c_long	$C2_LIBDIR/libc/libc_time.c2i	/^type Time c_long @(cname="time_t");$/;"	v
c_long	$C2_LIBDIR/libc/sys_time.c2i	/^type Time c_long @(cname="time_t");$/;"	v
c_long	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Time_t c_long;$/;"	v
c_longlong	$C2_LIBDIR/c2/c2.c2i	/^type c_longlong i64;$/;"	t
c_longlong	$C2_LIBDIR/lua/lua.c2i	/^type LUA_KCONTEXT c_longlong;$/;"	v
c_oflag	$C2_LIBDIR/libc/ctermios.c2i	/^    Flag c_oflag;       \/* output mode flags *\/$/;"	v
c_ospeed	$C2_LIBDIR/libc/ctermios.c2i	/^    Speed c_ospeed;       \/* output speed *\/$/;"	v
c_short	$C2_LIBDIR/c2/c2.c2i	/^type c_short i16;$/;"	t
c_size	$C2_LIBDIR/c2/c2.c2i	/^type c_size u64;$/;"	t
c_ssize	$C2_LIBDIR/c2/c2.c2i	/^type c_ssize i64;$/;"	t
c_uchar	$C2_LIBDIR/c2/c2.c2i	/^type c_uchar u8;$/;"	t
c_uchar	$C2_LIBDIR/libc/ctermios.c2i	/^type CC c_uchar;$/;"	v
c_uint	$C2_LIBDIR/c2/c2.c2i	/^type c_uint u32;$/;"	t
c_uint	$C2_LIBDIR/libc/ctermios.c2i	/^type Speed c_uint;$/;"	v
c_uint	$C2_LIBDIR/libc/sys_stat.c2i	/^type Mode c_uint;$/;"	v
c_uint	$C2_LIBDIR/lua/lua.c2i	/^type LUA_UNSIGNED c_uint;$/;"	v
c_ulong	$C2_LIBDIR/c2/c2.c2i	/^type c_ulong u64;$/;"	t
c_ulong	$C2_LIBDIR/pthread/pthread.c2i	/^type Pthread c_ulong @(cname="pthread_t");$/;"	v
c_ulonglong	$C2_LIBDIR/c2/c2.c2i	/^type c_ulonglong u64;$/;"	t
c_ulonglong	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Mpi_uint c_ulonglong;$/;"	v
c_ushort	$C2_LIBDIR/c2/c2.c2i	/^type c_ushort u16;$/;"	t
ca_istrue	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int ca_istrue;              \/**< Optional Basic Constraint extension value: 1 if this cer/;"	v
callback	$C2_LIBDIR/sdl2/sdl.c2i	/^    AudioCallback callback; \/**< Callback that feeds the audio device (NULL to use SDL_QueueAud/;"	v
callee_idx	$C2_LIBDIR/c2/c2_trace_tables.c2i	/^    u16 callee_idx;$/;"	v
caller_idx	$C2_LIBDIR/c2/c2_trace_tables.c2i	/^    u16 caller_idx;$/;"	v
callk	$C2_LIBDIR/lua/lua.c2i	/^fn void callk(State *L, c_int nargs, c_int nresults,$/;"	f
calloc	$C2_LIBDIR/libc/stdlib.c2i	/^fn void* calloc(c_size count, c_size size);$/;"	f
cancel_flags	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u32       cancel_flags;$/;"	v
caxis	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_ControllerAxisEvent caxis;          \/**< Game Controller axis event data *\/$/;"	v
cbreak	$C2_LIBDIR/curses/curses.c2i	/^fn void cbreak();$/;"	f
cbrt	$C2_LIBDIR/math/math.c2i	/^fn c_double cbrt(c_double);$/;"	f
cbrtf	$C2_LIBDIR/math/math.c2i	/^fn c_float cbrtf(c_float);$/;"	f
cbutton	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_ControllerButtonEvent cbutton;      \/**< Game Controller button event data *\/$/;"	v
cdevice	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_ControllerDeviceEvent cdevice;      \/**< Game Controller device event data *\/$/;"	v
ceil	$C2_LIBDIR/math/math.c2i	/^fn c_double ceil(c_double);$/;"	f
ceilf	$C2_LIBDIR/math/math.c2i	/^fn c_float ceilf(c_float);$/;"	f
center	$C2_LIBDIR/sdl2/sdl.c2i	/^                         const Point* center,$/;"	v
certificate_policies	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_sequence certificate_policies; \/**< Optional list of certificate policies (Only anyPol/;"	v
channels	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8 channels;             \/**< Number of channels: 1 mono, 2 stereo *\/$/;"	v
char	$C2_LIBDIR/c2/c2.c2i	/^type c_char char;$/;"	v
char	$C2_LIBDIR/c2/char.c2i	/^module char;$/;"	v
chdir	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int chdir(const c_char* path);$/;"	f
checkstack	$C2_LIBDIR/lua/lua.c2i	/^fn c_int checkstack(State* L, c_int n) @(cname="lua_checkstack");$/;"	f
chmod	$C2_LIBDIR/libc/sys_stat.c2i	/^fn c_int chmod(const char* file, Mode mode);$/;"	f
ciphersuite	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int ciphersuite;            \/*!< chosen ciphersuite *\/$/;"	v
ciphersuite_list	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    const c_int*[4] ciphersuite_list; \/*!< allowed ciphersuites per version   *\/$/;"	v
clear	$C2_LIBDIR/curses/curses.c2i	/^fn void clear();$/;"	f
clearComposition	$C2_LIBDIR/sdl2/sdl.c2i	/^fn void clearComposition() @(cname="SDL_ClearComposition");$/;"	f
clearenv	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int clearenv();$/;"	f
clearerr	$C2_LIBDIR/libc/stdio.c2i	/^fn void clearerr(FILE* __stream);$/;"	f
clearerr_unlocked	$C2_LIBDIR/libc/stdio.c2i	/^fn void clearerr_unlocked(FILE* __stream);$/;"	f
cli_id_len	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_size          cli_id_len;     \/*!<  length of cli_id                  *\/$/;"	v
clicks	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8 clicks;       \/**< 1 for single-click, 2 for double-click, etc. *\/$/;"	v
client_auth	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int client_auth;                    \/*!<  flag for client auth.   *\/$/;"	v
close	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int close(c_int fd);$/;"	f
close	$C2_LIBDIR/lua/lua.c2i	/^fn void close(State *L) @(cname="lua_close");$/;"	f
closeAudioDevice	$C2_LIBDIR/sdl2/sdl.c2i	/^fn void closeAudioDevice(AudioDeviceID dev) @(cname="SDL_CloseAudioDevice");$/;"	f
closedir	$C2_LIBDIR/libc/libc_dirent.c2i	/^fn c_int closedir(DIR* dirp);$/;"	f
colors	$C2_LIBDIR/sdl2/sdl.c2i	/^    Color* colors;$/;"	v
column	$C2_LIBDIR/c2/c2_trace_tables.c2i	/^    u8 column;$/;"	v
common	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_CommonEvent common;                 \/**< Common event data *\/$/;"	v
compare	$C2_LIBDIR/lua/lua.c2i	/^fn c_int compare(State *L, c_int idx1, c_int idx2, c_int op) @(cname="lua_compare");$/;"	f
completion	$C2_LIBDIR/io_uring/io_uring.c2i	/^ * Return an IO completion, waiting for it if necessary. Returns 0 with$/;"	v
compression	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int compression;            \/*!< chosen compression *\/$/;"	v
concat	$C2_LIBDIR/lua/lua.c2i	/^fn void concat(State *L, c_int n) @(cname="lua_concat");$/;"	f
configured	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^                              *   have been configured, this has value NULL. *\/$/;"	v
connect	$C2_LIBDIR/libc/sys_socket.c2i	/^fn c_int connect(c_int sockfd, const Sockaddr* addr, u32 addrlen);$/;"	f
copy	$C2_LIBDIR/lua/lua.c2i	/^fn void copy(State* L, c_int fromidx, c_int toidx) @(cname="lua_copy");$/;"	f
copysign	$C2_LIBDIR/math/math.c2i	/^fn c_double copysign(c_double, c_double);$/;"	f
copysignf	$C2_LIBDIR/math/math.c2i	/^fn c_float copysignf(c_float, c_float);$/;"	f
cos	$C2_LIBDIR/math/math.c2i	/^fn c_double cos(c_double);$/;"	f
cosf	$C2_LIBDIR/math/math.c2i	/^fn c_float cosf(c_float);$/;"	f
cosh	$C2_LIBDIR/math/math.c2i	/^fn c_double cosh(c_double);$/;"	f
coshf	$C2_LIBDIR/math/math.c2i	/^fn c_float coshf(c_float);$/;"	f
count	$C2_LIBDIR/c2/c2_trace_tables.c2i	/^    u32 count;$/;"	v
count	$C2_LIBDIR/io_uring/io_uring.c2i	/^					 u32 count, u32 flags) @(cname="io_uring_prep_timeout")$/;"	v
counter	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uchar[16] counter;  \/*!< The counter (V). *\/$/;"	v
cq	$C2_LIBDIR/io_uring/io_uring.c2i	/^    Cq cq;$/;"	v
cq_entries	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32 cq_entries;$/;"	v
cq_off	$C2_LIBDIR/io_uring/io_uring.c2i	/^    CqringOffsets cq_off;$/;"	v
cqes	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32 cqes;$/;"	v
create	$C2_LIBDIR/pthread/pthread.c2i	/^fn c_int create(Pthread* __newthread,$/;"	f
createRGBSurface	$C2_LIBDIR/sdl2/sdl.c2i	/^fn Surface* createRGBSurface(u32 flags, c_int width, c_int height, c_int depth,$/;"	f
createTexture	$C2_LIBDIR/sdl2/sdl.c2i	/^fn Texture* createTexture(Renderer* renderer, u32 format, c_int access, c_int w, c_int h) @(cnam/;"	f
createTextureFromSurface	$C2_LIBDIR/sdl2/sdl.c2i	/^fn Texture* createTextureFromSurface(Renderer* renderer, Surface* surface) @(cname="SDL_CreateTe/;"	f
createThread	$C2_LIBDIR/sdl2/sdl.c2i	/^fn Thread* createThread(ThreadFunction func, const char* name, void* data,$/;"	f
createWindow	$C2_LIBDIR/sdl2/sdl.c2i	/^fn Window* createWindow(const char* title, c_int x, c_int y, c_int w, c_int h, u32 flags) @(cnam/;"	f
createtable	$C2_LIBDIR/lua/lua.c2i	/^fn void  createtable(State *L, c_int narr, c_int nrec) @(cname="lua_createtable");$/;"	f
crl_ext	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_buf crl_ext;$/;"	v
csensor	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_ControllerSensorEvent csensor;      \/**< Game Controller sensor event data *\/$/;"	v
csetjmp	$C2_LIBDIR/libc/csetjmp.c2i	/^module csetjmp;$/;"	v
csignal	$C2_LIBDIR/io_uring/io_uring.c2i	/^import csignal;$/;"	v
csignal	$C2_LIBDIR/libc/csignal.c2i	/^module csignal;$/;"	v
csignal	$C2_LIBDIR/libc/sys_signalfd.c2i	/^import csignal;$/;"	v
ctermid	$C2_LIBDIR/libc/stdio.c2i	/^fn c_char* ctermid(c_char* __s);$/;"	f
ctermid_r	$C2_LIBDIR/libc/stdio.c2i	/^fn c_char* ctermid_r(c_char*);$/;"	f
ctermios	$C2_LIBDIR/libc/ctermios.c2i	/^module ctermios;$/;"	v
ctime	$C2_LIBDIR/libc/libc_time.c2i	/^fn c_char* ctime(const Time* timep);$/;"	f
ctime_r	$C2_LIBDIR/libc/libc_time.c2i	/^fn c_char* ctime_r(const Time* timep, char* buf);$/;"	f
ctouchpad	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_ControllerTouchpadEvent ctouchpad;  \/**< Game Controller touchpad event data *\/$/;"	v
ctr_drbg_init	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void ctr_drbg_init( Ctr_drbg_context *ctx ) @(cname="mbedtls_ctr_drbg_init");$/;"	f
ctr_drbg_random	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int ctr_drbg_random( void *p_rng, c_uchar *output, c_size output_len) @(cname="mbedtls_ctr_/;"	f
ctr_drbg_seed	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int ctr_drbg_seed( Ctr_drbg_context *ctx,$/;"	f
ctx	$C2_LIBDIR/lua/lua.c2i	/^                    KContext ctx, KFunction k) @(cname="lua_callk");$/;"	v
ctype	$C2_LIBDIR/libc/ctype.c2i	/^module ctype;$/;"	v
cur_out_ctr	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uchar[8] cur_out_ctr; \/*!<  Outgoing record sequence  number. *\/$/;"	v
curses	$C2_LIBDIR/curses/curses.c2i	/^module curses;$/;"	v
d_ino	$C2_LIBDIR/libc/libc_dirent.c2i	/^   c_ulonglong  d_ino;$/;"	v
d_name	$C2_LIBDIR/libc/libc_dirent.c2i	/^   char[256]    d_name;$/;"	v
d_namlen	$C2_LIBDIR/libc/libc_dirent.c2i	/^    u8 d_namlen;$/;"	v
d_off	$C2_LIBDIR/libc/libc_dirent.c2i	/^   c_longlong   d_off;$/;"	v
d_pad0	$C2_LIBDIR/libc/libc_dirent.c2i	/^    u8 d_pad0;$/;"	v
d_pad1	$C2_LIBDIR/libc/libc_dirent.c2i	/^    u16 d_pad1;$/;"	v
d_reclen	$C2_LIBDIR/libc/libc_dirent.c2i	/^   c_ushort     d_reclen;$/;"	v
d_seekoff	$C2_LIBDIR/libc/libc_dirent.c2i	/^    c_ulonglong d_seekoff;$/;"	v
d_type	$C2_LIBDIR/libc/libc_dirent.c2i	/^   u8           d_type;$/;"	v
data	$C2_LIBDIR/libc/csetjmp.c2i	/^    char[200] data;$/;"	v
data	$C2_LIBDIR/libc/csignal.c2i	/^    char[128] data; \/\/ for 64-bit$/;"	v
data1	$C2_LIBDIR/sdl2/sdl.c2i	/^    i32 data1;       \/**< event dependent data *\/$/;"	v
data2	$C2_LIBDIR/sdl2/sdl.c2i	/^    i32 data2;       \/**< event dependent data *\/$/;"	v
day	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int day;         \/**< Date. *\/$/;"	v
delay	$C2_LIBDIR/sdl2/sdl.c2i	/^fn void delay(u32 ms) @(cname="SDL_Delay");$/;"	f
desired	$C2_LIBDIR/sdl2/sdl.c2i	/^                                   const AudioSpec* desired,$/;"	v
dfd	$C2_LIBDIR/io_uring/io_uring.c2i	/^					       int dfd, const char *path,$/;"	v
dgesture	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_DollarGestureEvent dgesture;        \/**< Gesture event data *\/$/;"	v
dhm_G	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Mpi dhm_G;              \/*!< generator for DHM                  *\/$/;"	v
dhm_P	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Mpi dhm_P;              \/*!< prime modulus for DHM              *\/$/;"	v
dhm_min_bitlen	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uint dhm_min_bitlen;    \/*!< min. bit length of the DHM prime   *\/$/;"	v
differently	$C2_LIBDIR/sdl2/sdl.c2i	/^                                  *   codes and your OS treats them differently,$/;"	v
direction	$C2_LIBDIR/sdl2/sdl.c2i	/^    u32 direction;   \/**< Set to one of the SDL_MOUSEWHEEL_* defines. When FLIPPED the values i/;"	v
dirname	$C2_LIBDIR/libc/libgen.c2i	/^fn c_char* dirname(c_char* path);$/;"	f
disable_datagram_packing	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uchar disable_datagram_packing;  \/*!< Disable packing multiple records$/;"	v
display	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_DisplayEvent display;               \/**< Display event data *\/$/;"	v
div	$C2_LIBDIR/libc/stdlib.c2i	/^fn Div_t div(c_int __numer, c_int __denom);$/;"	f
dlclose	$C2_LIBDIR/dl/dlfcn.c2i	/^fn c_int dlclose(void* handle);$/;"	f
dlerror	$C2_LIBDIR/dl/dlfcn.c2i	/^fn char* dlerror();$/;"	f
dlfcn	$C2_LIBDIR/dl/dlfcn.c2i	/^module dlfcn;$/;"	v
dlopen	$C2_LIBDIR/dl/dlfcn.c2i	/^fn void* dlopen(const c_char* file, c_int mode);$/;"	f
dlsym	$C2_LIBDIR/dl/dlfcn.c2i	/^fn void* dlsym(void* handle, const c_char* name);$/;"	f
dma	$C2_LIBDIR/libc/net_if.c2i	/^    c_uchar dma;$/;"	v
domainname	$C2_LIBDIR/libc/sys_utsname.c2i	/^    char[NAME_LEN] domainname;$/;"	v
dprintf	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int dprintf(c_int __fd, const c_char* __fmt @(printf_format), ...);$/;"	f
drand48	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_double drand48();$/;"	f
drand48_r	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int drand48_r(Drand48_data* __buffer, c_double* __result);$/;"	f
drop	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_DropEvent drop;                     \/**< Drag and drop event data *\/$/;"	v
dropped	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32 dropped;$/;"	v
dst	$C2_LIBDIR/sdl2/sdl.c2i	/^                       Surface* dst, Rect* dstrect)$/;"	v
dump	$C2_LIBDIR/lua/lua.c2i	/^fn c_int dump(State *L, Writer writer, void *data, c_int strip) @(cname="lua_dump");$/;"	f
dup	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int dup(c_int oldfd);$/;"	f
dup2	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int dup2(c_int oldfd, c_int newfd);$/;"	f
dup3	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int dup3(c_int oldfd, c_int newfd, c_int flags);$/;"	f
ecvt	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_char* ecvt(c_double __value, c_int __ndigit, c_int* __decpt, c_int* __sign);$/;"	f
ecvt_r	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int ecvt_r(c_double __value, c_int __ndigit, c_int* __decpt, c_int* __sign, c_char* __buf, /;"	f
edit	$C2_LIBDIR/sdl2/sdl.c2i	/^    TextEditingEvent edit;                  \/**< Text editing event data *\/$/;"	v
enabled	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^                                     resistance is enabled, that is$/;"	v
encrypt_then_mac	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int encrypt_then_mac;       \/*!< flag for EtM activation                *\/$/;"	v
endwin	$C2_LIBDIR/curses/curses.c2i	/^fn void endwin();$/;"	f
entropy_func	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int entropy_func(void* data, c_uchar* output, c_size len) @(cname="mbedtls_entropy_func");$/;"	f
entropy_init	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void entropy_init( Entropy_context *ctx ) @(cname="mbedtls_entropy_init");$/;"	f
entropy_len	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_size entropy_len;         \/*!< The amount of entropy grabbed on each$/;"	v
entry	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_crl_entry entry;   \/**< The CRL entries containing the certificate revocation times fo/;"	v
entry_ext	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_buf entry_ext;$/;"	v
epoll_event	$C2_LIBDIR/io_uring/io_uring.c2i	/^struct epoll_event;$/;"	v
erand48	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_double erand48(u16* __xsubi);$/;"	f
erand48_r	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int erand48_r(u16* __xsubi, Drand48_data* __buffer, c_double* __result);$/;"	f
erf	$C2_LIBDIR/math/math.c2i	/^fn c_double erf(c_double);$/;"	f
erfc	$C2_LIBDIR/math/math.c2i	/^fn c_double erfc(c_double);$/;"	f
erfcf	$C2_LIBDIR/math/math.c2i	/^fn c_float erfcf(c_float);$/;"	f
erff	$C2_LIBDIR/math/math.c2i	/^fn c_float erff(c_float);$/;"	f
errno	$C2_LIBDIR/libc/c_errno.c2i	/^c_int errno @(cname="(*__error())", cdef="int* __error(void)");$/;"	v
errno2	$C2_LIBDIR/libc/c_errno.c2i	/^fn c_int* errno2() @(cname="__error");$/;"	f
error	$C2_LIBDIR/lua/lua.c2i	/^fn c_int error(State *L) @(cname="lua_error");$/;"	f
event	$C2_LIBDIR/sdl2/sdl.c2i	/^    WindowEventId event;        \/**< ::SDL_WindowEventID *\/$/;"	v
events	$C2_LIBDIR/libc/libc_poll.c2i	/^    i16 events;$/;"	v
example	$C2_LIBDIR/io_uring/io_uring.c2i	/^ * example, if it is not available). The caller is responsible for freeing it$/;"	v
execl	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int execl(const char *pathname, const char *arg, ...);$/;"	f
execle	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int execle(const char *pathname, const char *arg, ...);$/;"	f
execlp	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int execlp(const char *file, const char *arg, ...);$/;"	f
execv	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int execv(const char *pathname, char** argv); \/\/ actually char* const argv[]$/;"	f
execvp	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int execvp(const char *file, char** argv);    \/\/ actually char* const argv[]$/;"	f
execvpe	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int execvpe(const char *file, char** argv, const char** envp); \/\/ actually char* const en/;"	f
exit	$C2_LIBDIR/libc/stdlib.c2i	/^fn void exit(c_int __status) @(noreturn);$/;"	f
exp	$C2_LIBDIR/math/math.c2i	/^fn c_double exp(c_double);$/;"	f
exp2	$C2_LIBDIR/math/math.c2i	/^fn c_double exp2(c_double);$/;"	f
exp2f	$C2_LIBDIR/math/math.c2i	/^fn c_float exp2f(c_float);$/;"	f
expf	$C2_LIBDIR/math/math.c2i	/^fn c_float expf(c_float);$/;"	f
expm1	$C2_LIBDIR/math/math.c2i	/^fn c_double expm1(c_double);$/;"	f
expm1f	$C2_LIBDIR/math/math.c2i	/^fn c_float expm1f(c_float);$/;"	f
ext_key_usage	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_sequence ext_key_usage; \/**< Optional list of extended key usage OIDs. *\/$/;"	v
ext_types	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int ext_types;              \/**< Bit string containing detected and parsed extensions *\/$/;"	v
f32	$C2_LIBDIR/c2/c2.c2i	/^type c_float f32;$/;"	v
f32	$C2_LIBDIR/c2/f32.c2i	/^module f32;$/;"	v
f64	$C2_LIBDIR/c2/c2.c2i	/^type c_double f64;$/;"	v
f64	$C2_LIBDIR/c2/f64.c2i	/^module f64;$/;"	v
f_cookie_check	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Ctx_cookie_check_f f_cookie_check;$/;"	v
f_cookie_write	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Ctx_cookie_write_f f_cookie_write;$/;"	v
f_dbg	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Cfg_dbg_f f_dbg;$/;"	v
f_entropy	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Entropy_cb_f f_entropy;        \/*!< The entropy callback function. *\/$/;"	v
f_export_keys	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Ctx_export_keys_f f_export_keys;$/;"	v
f_export_keys_ext	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^     Ctx_export_keys_ext_f f_export_keys_ext;$/;"	v
f_get_cache	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Cfg_get_cache_f f_get_cache;$/;"	v
f_psk	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Ctx_psk_f f_psk;$/;"	v
f_recv_timeout	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Ssl_recv_timeout_t f_recv_timeout; \/*!< Callback for network receive with timeout *\/$/;"	v
f_rng	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Cfg_rng_f f_rng;$/;"	v
f_set_cache	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Cfg_set_cache_f f_set_cache;$/;"	v
f_sni	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Cfg_sni_f f_sni;$/;"	v
f_source	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Entropy_f_source_ptr    f_source;   \/**< The entropy source callback *\/$/;"	v
f_ticket_parse	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Ctx_ticket_parse_f f_ticket_parse;$/;"	v
f_ticket_write	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Ctx_ticket_write_f f_ticket_write;$/;"	v
f_vrfy	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Ctx_vrfy_f f_vrfy;$/;"	v
fabs	$C2_LIBDIR/math/math.c2i	/^fn c_double fabs(c_double);$/;"	f
fabsf	$C2_LIBDIR/math/math.c2i	/^fn c_float fabsf(c_float);$/;"	f
fact	$C2_LIBDIR/io_uring/io_uring.c2i	/^ * In fact, the implementation of sendfile in kernel uses splice internally.$/;"	v
fadvise_advice	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u32       fadvise_advice;$/;"	v
fchdir	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int fchdir(c_int fd);$/;"	f
fchmod	$C2_LIBDIR/libc/sys_stat.c2i	/^fn c_int fchmod(c_int fd, Mode mode);$/;"	f
fchmodat	$C2_LIBDIR/libc/sys_stat.c2i	/^fn c_int fchmodat(c_int dirfd, const char* pathname, Mode mode, c_int flag);$/;"	f
fclose	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int fclose(FILE* __stream);$/;"	f
fcntl	$C2_LIBDIR/libc/libc_fcntl.c2i	/^fn c_int fcntl(i32 __fd, c_int __cmd, ...);$/;"	f
fcvt	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_char* fcvt(c_double __value, c_int __ndigit, c_int* __decpt, c_int* __sign);$/;"	f
fcvt_r	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int fcvt_r(c_double __value, c_int __ndigit, c_int* __decpt, c_int* __sign, c_char* __buf, /;"	f
fd	$C2_LIBDIR/io_uring/io_uring.c2i	/^    i32   fd;     \/* file descriptor to do IO on *\/$/;"	v
fd	$C2_LIBDIR/libc/libc_poll.c2i	/^    c_int fd;$/;"	v
fd	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int fd;             \/**< The underlying file descriptor                 *\/$/;"	v
fd_in	$C2_LIBDIR/io_uring/io_uring.c2i	/^				     int fd_in, int fd_out,$/;"	v
fd_out	$C2_LIBDIR/io_uring/io_uring.c2i	/^					int fd_out, int64_t off_out,$/;"	v
fdim	$C2_LIBDIR/math/math.c2i	/^fn c_double fdim(c_double, c_double);$/;"	f
fdimf	$C2_LIBDIR/math/math.c2i	/^fn c_float fdimf(c_float, c_float);$/;"	f
fdopen	$C2_LIBDIR/libc/stdio.c2i	/^fn FILE* fdopen(c_int __fd, const c_char* __modes);$/;"	f
fdopendir	$C2_LIBDIR/libc/libc_dirent.c2i	/^fn DIR* fdopendir(c_int fd);$/;"	f
features	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32 features;$/;"	v
feof	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int feof(FILE* __stream);$/;"	f
feof_unlocked	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int feof_unlocked(FILE* __stream);$/;"	f
ferror	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int ferror(FILE* __stream);$/;"	f
ferror_unlocked	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int ferror_unlocked(FILE* __stream);$/;"	f
fflush	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int fflush(FILE* __stream);$/;"	f
fflush_unlocked	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int fflush_unlocked(FILE* __stream);$/;"	f
ffs	$C2_LIBDIR/libc/strings.c2i	/^fn c_int ffs(c_int value);$/;"	f
fgetc	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int fgetc(FILE* __stream);$/;"	f
fgetc_unlocked	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int fgetc_unlocked(FILE* __stream);$/;"	f
fgetln	$C2_LIBDIR/libc/stdio.c2i	/^fn c_char* fgetln(FILE*, c_size*);$/;"	f
fgets	$C2_LIBDIR/libc/stdio.c2i	/^fn c_char* fgets(c_char* __s, c_int __n, FILE* __stream);$/;"	f
file_index	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u32   file_index;$/;"	v
filename_idx	$C2_LIBDIR/c2/c2_trace_tables.c2i	/^    u8 filename_idx;$/;"	v
fileno	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int fileno(FILE* __stream);$/;"	f
filter	$C2_LIBDIR/libc/libc_dirent.c2i	/^                   FilterFn filter, DirentCompareFn compar);$/;"	v
fin_ms	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    u32              fin_ms;$/;"	v
first	$C2_LIBDIR/io_uring/io_uring.c2i	/^ * first, then splice to the final destination.$/;"	v
firstcolor	$C2_LIBDIR/sdl2/sdl.c2i	/^                            c_int firstcolor, c_int ncolors)$/;"	v
flags	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u8    flags;      \/* IOSQE_ flags *\/$/;"	v
flags	$C2_LIBDIR/sdl2/sdl.c2i	/^    u32 flags;$/;"	v
flockfile	$C2_LIBDIR/libc/stdio.c2i	/^fn void flockfile(FILE* __stream);$/;"	f
floor	$C2_LIBDIR/math/math.c2i	/^fn c_double floor(c_double);$/;"	f
floorf	$C2_LIBDIR/math/math.c2i	/^fn c_float floorf(c_float);$/;"	f
fma	$C2_LIBDIR/math/math.c2i	/^fn c_double fma(c_double, c_double, c_double);$/;"	f
fmaf	$C2_LIBDIR/math/math.c2i	/^fn c_float fmaf(c_float, c_float, c_float);$/;"	f
fmax	$C2_LIBDIR/math/math.c2i	/^fn c_double fmax(c_double, c_double);$/;"	f
fmaxf	$C2_LIBDIR/math/math.c2i	/^fn c_float fmaxf(c_float, c_float);$/;"	f
fmemopen	$C2_LIBDIR/libc/stdio.c2i	/^fn FILE* fmemopen(void* __s, c_size __len, const c_char* __modes);$/;"	f
fmin	$C2_LIBDIR/math/math.c2i	/^fn c_double fmin(c_double, c_double);$/;"	f
fminf	$C2_LIBDIR/math/math.c2i	/^fn c_float fminf(c_float, c_float);$/;"	f
fmod	$C2_LIBDIR/math/math.c2i	/^fn c_double fmod(c_double, c_double);$/;"	f
fmodf	$C2_LIBDIR/math/math.c2i	/^fn c_float fmodf(c_float, c_float);$/;"	f
fmtcheck	$C2_LIBDIR/libc/stdio.c2i	/^fn const c_char* fmtcheck(const c_char*, const c_char*);$/;"	f
fopen	$C2_LIBDIR/libc/stdio.c2i	/^fn FILE* fopen(const c_char* __filename, const c_char* __modes);$/;"	f
fork	$C2_LIBDIR/libc/unistd.c2i	/^fn Pid fork();$/;"	f
format	$C2_LIBDIR/sdl2/sdl.c2i	/^    u32 format;$/;"	v
fpclassify	$C2_LIBDIR/math/math.c2i	/^fn c_int fpclassify(c_double) @(cname="__fpclassifyd");$/;"	f
fpclassifyf	$C2_LIBDIR/math/math.c2i	/^fn c_int fpclassifyf(c_float) @(cname="__fpclassifyf");$/;"	f
fprintf	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int fprintf(FILE* __stream, const c_char* __format @(printf_format), ...);$/;"	f
fpurge	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int fpurge(FILE *);$/;"	f
fputc	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int fputc(c_int __c, FILE* __stream);$/;"	f
fputc_unlocked	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int fputc_unlocked(c_int __c, FILE* __stream);$/;"	f
fputs	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int fputs(const c_char* __s, FILE* __stream);$/;"	f
fread	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int fread(void* __ptr, c_size __size, c_size __n, FILE* __stream);$/;"	f
fread_unlocked	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int fread_unlocked(void* __ptr, c_size __size, c_size __n, FILE* __stream);$/;"	f
free	$C2_LIBDIR/libc/stdlib.c2i	/^fn void free(void* ptr);$/;"	f
free	$C2_LIBDIR/sdl2/sdl.c2i	/^fn void free(void* mem) @(cname="SDL_free");$/;"	f
freopen	$C2_LIBDIR/libc/stdio.c2i	/^fn FILE* freopen(const c_char* __filename, const c_char* __modes, FILE* __stream);$/;"	f
freq	$C2_LIBDIR/sdl2/sdl.c2i	/^    c_int freq;                   \/**< DSP frequency -- samples per second *\/$/;"	v
frexp	$C2_LIBDIR/math/math.c2i	/^fn c_double frexp(c_double, c_int *);$/;"	f
frexpf	$C2_LIBDIR/math/math.c2i	/^fn c_float frexpf(c_float, c_int *);$/;"	f
fscanf	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int fscanf(FILE* __stream, const c_char* __format, ...);$/;"	f
fseek	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int fseek(FILE* __stream, c_long __off, c_int __whence);$/;"	f
fseeko	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int fseeko(FILE* __stream, Offset __off, c_int __whence);$/;"	f
fstat	$C2_LIBDIR/libc/sys_stat.c2i	/^fn c_int fstat(c_int fd, Stat* buf);$/;"	f
fsync	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int fsync(c_int fd);$/;"	f
fsync_flags	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u32       fsync_flags;$/;"	v
ftell	$C2_LIBDIR/libc/stdio.c2i	/^fn c_long ftell(FILE* __stream);$/;"	f
ftello	$C2_LIBDIR/libc/stdio.c2i	/^fn Offset ftello(FILE* __stream);$/;"	f
ftrylockfile	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int ftrylockfile(FILE* __stream);$/;"	f
funlockfile	$C2_LIBDIR/libc/stdio.c2i	/^fn void funlockfile(FILE* __stream);$/;"	f
fwrite	$C2_LIBDIR/libc/stdio.c2i	/^fn c_size fwrite(const void* __ptr, c_size __size, c_size __n, FILE* __s);$/;"	f
fwrite_unlocked	$C2_LIBDIR/libc/stdio.c2i	/^fn c_size fwrite_unlocked(const void* __ptr, c_size __size, c_size __n, FILE* __stream);$/;"	f
gc	$C2_LIBDIR/lua/lua.c2i	/^fn c_int gc(State *L, c_int what, c_int data) @(cname="lua_gc");$/;"	f
gcvt	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_char* gcvt(c_double __value, c_int __ndigit, c_char* __buf);$/;"	f
get	$C2_LIBDIR/libc/ifaddrs.c2i	/^fn c_int get(Ifaddrs** __ifap) @(cname="getifaddrs");$/;"	f
getClipboardText	$C2_LIBDIR/sdl2/sdl.c2i	/^fn char* getClipboardText() @(cname="SDL_GetClipboardText");$/;"	f
getError	$C2_LIBDIR/sdl2/sdl.c2i	/^fn const char* getError() @(cname="SDL_GetError");$/;"	f
getKeyBoardState	$C2_LIBDIR/sdl2/sdl.c2i	/^fn const u8* getKeyBoardState(c_int* numkeys) @(cname="SDL_GetKeyboardState");$/;"	f
getKeyFromScancode	$C2_LIBDIR/sdl2/sdl.c2i	/^fn Keycode getKeyFromScancode(Scancode scancode) @(cname="SDL_GetKeyFromScancode");$/;"	f
getKeyName	$C2_LIBDIR/sdl2/sdl.c2i	/^fn const char* getKeyName(Keycode key) @(cname="SDL_GetKeyName");$/;"	f
getKeycodeFromName	$C2_LIBDIR/sdl2/sdl.c2i	/^fn Keycode getKeycodeFromName(const char* name) @(cname="SDL_GetKeyFromName");$/;"	f
getModState	$C2_LIBDIR/sdl2/sdl.c2i	/^fn Keymod getModState() @(cname="SDL_GetModState");$/;"	f
getScanCodeFromKey	$C2_LIBDIR/sdl2/sdl.c2i	/^fn Scancode getScanCodeFromKey(Keycode key) @(cname="SDL_GetScancodeFromKey");$/;"	f
getScancodeFromName	$C2_LIBDIR/sdl2/sdl.c2i	/^fn Scancode getScancodeFromName(const char* name) @(cname="SDL_GetScancodeFromName");$/;"	f
getScancodeName	$C2_LIBDIR/sdl2/sdl.c2i	/^fn const char* getScancodeName(Scancode scancode) @(cname="SDL_GetScancodeName");$/;"	f
getTicks	$C2_LIBDIR/sdl2/sdl.c2i	/^fn u32 getTicks() @(cname="SDL_GetTicks");$/;"	f
getTicks64	$C2_LIBDIR/sdl2/sdl.c2i	/^fn u64 getTicks64() @(cname="SDL_GetTicks64");$/;"	f
getallocf	$C2_LIBDIR/lua/lua.c2i	/^fn Alloc getallocf(State *L, void **ud) @(cname="lua_getallocf");$/;"	f
getc	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int getc(FILE* __stream);$/;"	f
getc_unlocked	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int getc_unlocked(FILE* __stream);$/;"	f
getch	$C2_LIBDIR/curses/curses.c2i	/^fn void getch();$/;"	f
getchar	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int getchar();$/;"	f
getchar_unlocked	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int getchar_unlocked();$/;"	f
getcwd	$C2_LIBDIR/libc/unistd.c2i	/^fn c_char* getcwd(char* buf, c_size size);$/;"	f
getdelim	$C2_LIBDIR/libc/stdio.c2i	/^fn c_ssize getdelim(c_char** __lineptr, c_size* __n, c_int __delimiter, FILE* __stream);$/;"	f
getenv	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_char* getenv(const c_char* __name);$/;"	f
getfield	$C2_LIBDIR/lua/lua.c2i	/^fn c_int getfield(State *L, c_int idx, const c_char *k) @(cname="lua_getfield");$/;"	f
getglobal	$C2_LIBDIR/lua/lua.c2i	/^fn c_int getglobal(State *L, const c_char *name) @(cname="lua_getglobal");$/;"	f
geti	$C2_LIBDIR/lua/lua.c2i	/^fn c_int geti(State *L, c_int idx, Integer n) @(cname="lua_geti");$/;"	f
getline	$C2_LIBDIR/libc/stdio.c2i	/^fn c_ssize getline(c_char** __lineptr, c_size* __n, FILE* __stream);$/;"	f
getloadavg	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int getloadavg(c_double* __loadavg, c_int __nelem);$/;"	f
getmetatable	$C2_LIBDIR/lua/lua.c2i	/^fn c_int getmetatable(State *L, c_int objindex) @(cname="lua_getmetatable");$/;"	f
getopt	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int getopt(i32 argc, char** argv, const char* optstring);$/;"	f
getsockopt	$C2_LIBDIR/libc/sys_socket.c2i	/^fn c_int getsockopt(c_int sockfd, c_int level, c_int optname, void* optval, u32* optlen);$/;"	f
getsubopt	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int getsubopt(c_char** __optionp, c_char** __tokens, c_char** __valuep);$/;"	f
gettable	$C2_LIBDIR/lua/lua.c2i	/^fn c_int gettable(State *L, c_int idx) @(cname="lua_gettable");$/;"	f
gettimeofday	$C2_LIBDIR/libc/sys_time.c2i	/^fn c_int gettimeofday(Timeval* tv, Timezone* tz);$/;"	f
gettop	$C2_LIBDIR/lua/lua.c2i	/^fn c_int gettop(State* L) @(cname="lua_gettop");$/;"	f
getumask	$C2_LIBDIR/libc/sys_stat.c2i	/^fn Mode getumask();$/;"	f
getuservalue	$C2_LIBDIR/lua/lua.c2i	/^fn c_int getuservalue(State *L, c_int idx) @(cname="lua_getuservalue");$/;"	f
getw	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int getw(FILE* __stream);$/;"	f
gmtime	$C2_LIBDIR/libc/libc_time.c2i	/^fn Time* gmtime(const Time* timep);$/;"	f
gmtime_r	$C2_LIBDIR/libc/libc_time.c2i	/^fn Time* gmtime_r(const Time* timep, Tm* result);$/;"	f
h_dest	$C2_LIBDIR/libc/linux_ifether.c2i	/^    c_uchar[ETH_ALEN] h_dest;$/;"	v
h_proto	$C2_LIBDIR/libc/linux_ifether.c2i	/^    c_ushort h_proto;    \/\/ Big-Endian$/;"	v
h_source	$C2_LIBDIR/libc/linux_ifether.c2i	/^    c_uchar[ETH_ALEN] h_source;$/;"	v
hardlink_flags	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u32       hardlink_flags;$/;"	v
hasClipboardText	$C2_LIBDIR/sdl2/sdl.c2i	/^fn bool hasClipboardText() @(cname="SDL_HasClipboardText");$/;"	f
hasScreenKeyboardSupport	$C2_LIBDIR/sdl2/sdl.c2i	/^fn bool hasScreenKeyboardSupport() @(cname="SDL_HasScreenKeyboardSupport");$/;"	f
head	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32 head;$/;"	v
hour	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int hour;$/;"	v
hs_timeout_max	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uint hs_timeout_max;        \/*!< maximum value of the handshake$/;"	v
hs_timeout_min	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uint hs_timeout_min;        \/*!< initial value of the handshake$/;"	v
htonl	$C2_LIBDIR/libc/sys_socket.c2i	/^fn u32 htonl(u32 hostlong);$/;"	f
htons	$C2_LIBDIR/libc/sys_socket.c2i	/^fn u16 htons(u16 hostshort);$/;"	f
hypot	$C2_LIBDIR/math/math.c2i	/^fn c_double hypot(c_double, c_double);$/;"	f
hypotf	$C2_LIBDIR/math/math.c2i	/^fn c_float hypotf(c_float, c_float);$/;"	f
i16	$C2_LIBDIR/c2/c2.c2i	/^type c_short i16;$/;"	v
i16	$C2_LIBDIR/c2/i16.c2i	/^module i16;$/;"	v
i32	$C2_LIBDIR/c2/c2.c2i	/^type c_ssize i32;$/;"	v
i32	$C2_LIBDIR/c2/i32.c2i	/^module i32;$/;"	v
i32	$C2_LIBDIR/sdl2/sdl.c2i	/^type Keycode i32;$/;"	v
i64	$C2_LIBDIR/c2/c2.c2i	/^type c_ssize i64;$/;"	v
i64	$C2_LIBDIR/c2/i64.c2i	/^module i64;$/;"	v
i8	$C2_LIBDIR/c2/i8.c2i	/^module i8;$/;"	v
id	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uchar[32] id;       \/*!< session identifier *\/$/;"	v
id_len	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_size id_len;              \/*!< session id length  *\/$/;"	v
ifa_data	$C2_LIBDIR/libc/ifaddrs.c2i	/^  void* ifa_data;       \/* Address-specific data (may be unused).  *\/$/;"	v
ifa_flags	$C2_LIBDIR/libc/ifaddrs.c2i	/^  u32   ifa_flags;      \/* Flags as from SIOCGIFFLAGS ioctl.  *\/$/;"	v
ifa_ifp	$C2_LIBDIR/libc/net_if.c2i	/^    void* ifa_ifp; \/\/ TODO struct iface* ifa_ifp;$/;"	v
ifa_name	$C2_LIBDIR/libc/ifaddrs.c2i	/^  char* ifa_name;       \/* Name of this network interface.  *\/$/;"	v
ifa_next	$C2_LIBDIR/libc/ifaddrs.c2i	/^  Ifaddrs* ifa_next;    \/* Pointer to the next structure.  *\/$/;"	v
ifa_next	$C2_LIBDIR/libc/net_if.c2i	/^    Addr* ifa_next;$/;"	v
ifaddrs	$C2_LIBDIR/libc/ifaddrs.c2i	/^module ifaddrs;$/;"	v
ifc_len	$C2_LIBDIR/libc/net_if.c2i	/^    c_int ifc_len;$/;"	v
ifcu_buf	$C2_LIBDIR/libc/net_if.c2i	/^        CAddr ifcu_buf;$/;"	v
ifcu_req	$C2_LIBDIR/libc/net_if.c2i	/^        Req* ifcu_req;$/;"	v
ifrn_name	$C2_LIBDIR/libc/net_if.c2i	/^        char[IFNAMSIZ] ifrn_name;$/;"	v
ifru_data	$C2_LIBDIR/libc/net_if.c2i	/^        CAddr ifru_data;$/;"	v
ifru_flags	$C2_LIBDIR/libc/net_if.c2i	/^        c_short ifru_flags;$/;"	v
ifru_ivalue	$C2_LIBDIR/libc/net_if.c2i	/^        c_int ifru_ivalue;$/;"	v
ifru_map	$C2_LIBDIR/libc/net_if.c2i	/^        Map ifru_map;$/;"	v
ifru_mtu	$C2_LIBDIR/libc/net_if.c2i	/^        c_int ifru_mtu;$/;"	v
ifru_newname	$C2_LIBDIR/libc/net_if.c2i	/^        char[IFNAMSIZ] ifru_newname;$/;"	v
ifru_slave	$C2_LIBDIR/libc/net_if.c2i	/^        char[IFNAMSIZ] ifru_slave;$/;"	v
ilogb	$C2_LIBDIR/math/math.c2i	/^fn c_int ilogb(c_double);$/;"	f
ilogbf	$C2_LIBDIR/math/math.c2i	/^fn c_int ilogbf(c_float);$/;"	f
imr_interface	$C2_LIBDIR/libc/sys_socket.c2i	/^    In_addr imr_interface;$/;"	v
imr_multiaddr	$C2_LIBDIR/libc/sys_socket.c2i	/^    In_addr imr_multiaddr;$/;"	v
in_epoch	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_ushort in_epoch;          \/*!< DTLS epoch for incoming records  *\/$/;"	v
in_hslen	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_size in_hslen;            \/*!< current handshake message length,$/;"	v
in_left	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_size in_left;             \/*!< amount of data read so far       *\/$/;"	v
in_msglen	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_size in_msglen;           \/*!< record header: message length    *\/$/;"	v
in_msgtype	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int in_msgtype;             \/*!< record header: message type      *\/$/;"	v
in_window	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_ulonglong in_window;         \/*!< bitmask for replay detection     *\/$/;"	v
in_window_top	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_ulonglong in_window_top;     \/*!< last validated record seq_num    *\/$/;"	v
index	$C2_LIBDIR/libc/strings.c2i	/^fn c_char* index(const c_char* s, c_int c);$/;"	f
inet_addr	$C2_LIBDIR/libc/sys_socket.c2i	/^fn InAddr inet_addr(const c_char* cp);$/;"	f
inet_ntoa	$C2_LIBDIR/libc/sys_socket.c2i	/^fn char* inet_ntoa(In_addr in);$/;"	f
inf	$C2_LIBDIR/c2/f32.c2i	/^const f32 inf = 1.0 \/ 0.0;$/;"	v
inf	$C2_LIBDIR/c2/f64.c2i	/^const f64 inf = 1.0 \/ 0.0;$/;"	v
init	$C2_LIBDIR/sdl2/sdl.c2i	/^fn c_int init(u32 flags) @(cname="SDL_Init");$/;"	f
init	$C2_LIBDIR/sdl2_image/sdl_image.c2i	/^fn c_int init(c_int flags) @(cname="IMG_Init");$/;"	f
init	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^fn c_int init() @(cname="TTF_Init");$/;"	f
initscr	$C2_LIBDIR/curses/curses.c2i	/^fn void initscr();$/;"	f
initstate	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_char* initstate(c_uint __seed, c_char* __statebuf, c_size __statelen);$/;"	f
initstate_r	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int initstate_r(c_uint __seed, c_char* __statebuf, c_size __statelen, Random_data* __buf);$/;"	f
int_ms	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    u32              int_ms;$/;"	v
io_uring	$C2_LIBDIR/io_uring/io_uring.c2i	/^module io_uring;$/;"	v
io_uring_sq_ready	$C2_LIBDIR/io_uring/io_uring.c2i	/^fn u32 io_uring_sq_ready(const Ring* ring)$/;"	f
ioctl	$C2_LIBDIR/libc/sys_ioctl.c2i	/^fn c_int ioctl(c_int __fd, c_ulong __request, ...);$/;"	f
ioprio	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u16   ioprio;     \/* ioprio for the request *\/$/;"	v
iov_len	$C2_LIBDIR/libc/uio.c2i	/^    usize iov_len; \/* Length of data.  *\/$/;"	v
irq	$C2_LIBDIR/libc/net_if.c2i	/^    c_uchar irq;$/;"	v
is384	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int is384;                  \/*!< Determines which function to use:$/;"	v
isScreenKeyboardShown	$C2_LIBDIR/sdl2/sdl.c2i	/^fn bool isScreenKeyboardShown(Window* window) @(cname="SDL_IsScreenKeyboardShown");$/;"	f
isTextInputActive	$C2_LIBDIR/sdl2/sdl.c2i	/^fn bool isTextInputActive() @(cname="SDL_IsTextInputActive");$/;"	f
isTextInputShown	$C2_LIBDIR/sdl2/sdl.c2i	/^fn bool isTextInputShown() @(cname="SDL_IsTextInputShown");$/;"	f
isalnum	$C2_LIBDIR/libc/ctype.c2i	/^fn c_int isalnum(c_int c) @(pure);$/;"	f
isalpha	$C2_LIBDIR/libc/ctype.c2i	/^fn c_int isalpha(c_int c) @(pure);$/;"	f
isascii	$C2_LIBDIR/libc/ctype.c2i	/^fn c_int isascii(c_int c) @(pure);$/;"	f
isatty	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int isatty(c_int fd);$/;"	f
isblank	$C2_LIBDIR/libc/ctype.c2i	/^fn c_int isblank(c_int c) @(pure);$/;"	f
iscapture	$C2_LIBDIR/sdl2/sdl.c2i	/^                                   c_int iscapture,$/;"	v
iscfunction	$C2_LIBDIR/lua/lua.c2i	/^fn c_int iscfunction(State *L, c_int idx) @(cname="lua_iscfunction");$/;"	f
iscntrl	$C2_LIBDIR/libc/ctype.c2i	/^fn c_int iscntrl(c_int c) @(pure);$/;"	f
isdigit	$C2_LIBDIR/libc/ctype.c2i	/^fn c_int isdigit(c_int c) @(pure);$/;"	f
isfinite	$C2_LIBDIR/math/math.c2i	/^fn c_int isfinite(c_double) @(cname="__isfinited");$/;"	f
isfinitef	$C2_LIBDIR/math/math.c2i	/^fn c_int isfinitef(c_float) @(cname="__isfinitef");$/;"	f
isgraph	$C2_LIBDIR/libc/ctype.c2i	/^fn c_int isgraph(c_int c) @(pure);$/;"	f
isinf	$C2_LIBDIR/math/math.c2i	/^fn c_int isinf(c_double) @(cname="__isinfd");$/;"	f
isinff	$C2_LIBDIR/math/math.c2i	/^fn c_int isinff(c_float) @(cname="__isinff");$/;"	f
isinteger	$C2_LIBDIR/lua/lua.c2i	/^fn c_int isinteger(State *L, c_int idx) @(cname="lua_isinteger");$/;"	f
isize	$C2_LIBDIR/c2/isize.c2i	/^module isize;$/;"	v
islower	$C2_LIBDIR/libc/ctype.c2i	/^fn c_int islower(c_int c) @(pure);$/;"	f
isnan	$C2_LIBDIR/math/math.c2i	/^fn c_int isnan(c_double x) { return x != x; }$/;"	f
isnanf	$C2_LIBDIR/math/math.c2i	/^fn c_int isnanf(c_float x) { return x != x; }$/;"	f
isnormal	$C2_LIBDIR/math/math.c2i	/^fn c_int isnormal(c_double) @(cname="__isnormald");$/;"	f
isnormalf	$C2_LIBDIR/math/math.c2i	/^fn c_int isnormalf(c_float) @(cname="__isnormalf");$/;"	f
isnumber	$C2_LIBDIR/lua/lua.c2i	/^fn c_int isnumber(State *L, c_int idx) @(cname="lua_isnumber");$/;"	f
isprint	$C2_LIBDIR/libc/ctype.c2i	/^fn c_int isprint(c_int c) @(pure);$/;"	f
ispunct	$C2_LIBDIR/libc/ctype.c2i	/^fn c_int ispunct(c_int c) @(pure);$/;"	f
isspace	$C2_LIBDIR/libc/ctype.c2i	/^fn c_int isspace(c_int c) @(pure);$/;"	f
isstring	$C2_LIBDIR/lua/lua.c2i	/^fn c_int isstring(State *L, c_int idx) @(cname="lua_isstring");$/;"	f
issuer	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_name issuer;       \/**< The parsed issuer data (named information object). *\/$/;"	v
issuer_id	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_buf issuer_id;         \/**< Optional X.509 v2\/v3 issuer unique identifier. *\/$/;"	v
issuer_raw	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_buf issuer_raw;    \/**< The raw issuer data (DER). *\/$/;"	v
isupper	$C2_LIBDIR/libc/ctype.c2i	/^fn c_int isupper(c_int c) @(pure);$/;"	f
isuserdata	$C2_LIBDIR/lua/lua.c2i	/^fn c_int isuserdata(State *L, c_int idx) @(cname="lua_isuserdata");$/;"	f
isxdigit	$C2_LIBDIR/libc/ctype.c2i	/^fn c_int isxdigit(c_int c) @(pure);$/;"	f
isyieldable	$C2_LIBDIR/lua/lua.c2i	/^fn c_int isyieldable(State *L) @(cname="lua_isyieldable");$/;"	f
jaxis	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_JoyAxisEvent jaxis;                 \/**< Joystick axis event data *\/$/;"	v
jball	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_JoyBallEvent jball;                 \/**< Joystick ball event data *\/$/;"	v
jbutton	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_JoyButtonEvent jbutton;             \/**< Joystick button event data *\/$/;"	v
jdevice	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_JoyDeviceEvent jdevice;             \/**< Joystick device change event data *\/$/;"	v
jhat	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_JoyHatEvent jhat;                   \/**< Joystick hat event data *\/$/;"	v
join	$C2_LIBDIR/pthread/pthread.c2i	/^fn c_int join(Pthread thread, void** value_ptr) @(cname="pthread_join");$/;"	f
jrand48	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_long jrand48(u16* __xsubi);$/;"	f
jrand48_r	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int jrand48_r(u16* __xsubi, Drand48_data* __buffer, c_long* __result);$/;"	f
kdropped	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32* kdropped;$/;"	v
keep_current_message	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int keep_current_message;   \/*!< drop or reuse current message$/;"	v
key	$C2_LIBDIR/sdl2/sdl.c2i	/^    KeyboardEvent key;                      \/**< Keyboard event data *\/$/;"	v
key_usage	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uint key_usage;     \/**< Optional key usage extension value: See the values in x509.h *\/$/;"	v
keyboards	$C2_LIBDIR/sdl2/sdl.c2i	/^                              *   layouts on ISO keyboards, SECTION SIGN and$/;"	v
keysym	$C2_LIBDIR/sdl2/sdl.c2i	/^    Keysym keysym;  \/**< The key that was pressed or released *\/$/;"	v
kflags	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32* kflags;$/;"	v
khead	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32* khead;$/;"	v
kill	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int kill(Pid pid, c_int signal);$/;"	f
koverflow	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32* koverflow;$/;"	v
kring_entries	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32* kring_entries;$/;"	v
kring_mask	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32* kring_mask;$/;"	v
ktail	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32* ktail;$/;"	v
l64a	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_char* l64a(c_long n);$/;"	f
labs	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_long labs(c_long __x);$/;"	f
layout	$C2_LIBDIR/sdl2/sdl.c2i	/^                              *   and NOT SIGN in a UK Windows layout, SECTION$/;"	v
lcong48	$C2_LIBDIR/libc/stdlib.c2i	/^fn void lcong48(u16* __param);$/;"	f
lcong48_r	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int lcong48_r(u16* __param, Drand48_data* __buffer);$/;"	f
ldexp	$C2_LIBDIR/math/math.c2i	/^fn c_double ldexp(c_double, c_int);$/;"	f
ldexpf	$C2_LIBDIR/math/math.c2i	/^fn c_float ldexpf(c_float, c_int);$/;"	f
ldiv	$C2_LIBDIR/libc/stdlib.c2i	/^fn Ldiv_t ldiv(c_long __numer, c_long __denom);$/;"	f
len	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32   len;        \/* buffer size or number of iovecs *\/$/;"	v
len	$C2_LIBDIR/lua/lua.c2i	/^fn void len(State *L, c_int idx) @(cname="lua_len");$/;"	f
len	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_size len;             \/**< ASN1 length, in octets. *\/$/;"	v
length	$C2_LIBDIR/io_uring/io_uring.c2i	/^					 off_t length, int advice)$/;"	v
length	$C2_LIBDIR/sdl2/sdl.c2i	/^    i32 length;                              \/**< The length of selected editing text *\/$/;"	v
lgamma	$C2_LIBDIR/math/math.c2i	/^fn c_double lgamma(c_double);$/;"	f
lgammaf	$C2_LIBDIR/math/math.c2i	/^fn c_float lgammaf(c_float);$/;"	f
libc_dirent	$C2_LIBDIR/libc/libc_dirent.c2i	/^module libc_dirent;$/;"	v
libc_fcntl	$C2_LIBDIR/libc/libc_fcntl.c2i	/^module libc_fcntl;$/;"	v
libc_poll	$C2_LIBDIR/libc/libc_poll.c2i	/^module libc_poll;$/;"	v
libc_time	$C2_LIBDIR/libc/libc_time.c2i	/^module libc_time;$/;"	v
libgen	$C2_LIBDIR/libc/libgen.c2i	/^module libgen;$/;"	v
line	$C2_LIBDIR/c2/c2_trace_tables.c2i	/^    u16 line;$/;"	v
linux_ifether	$C2_LIBDIR/libc/linux_ifether.c2i	/^module linux_ifether;$/;"	v
linux_sockios	$C2_LIBDIR/libc/linux_sockios.c2i	/^module linux_sockios;$/;"	v
linux_types	$C2_LIBDIR/io_uring/io_uring.c2i	/^import linux_types;$/;"	v
linux_types	$C2_LIBDIR/libc/linux_types.c2i	/^module linux_types;$/;"	v
listen	$C2_LIBDIR/libc/sys_socket.c2i	/^fn c_int listen(c_int sockfd, c_int backlog);$/;"	f
llrint	$C2_LIBDIR/math/math.c2i	/^fn c_longlong llrint(c_double);$/;"	f
llrintf	$C2_LIBDIR/math/math.c2i	/^fn c_longlong llrintf(c_float);$/;"	f
llround	$C2_LIBDIR/math/math.c2i	/^fn c_longlong llround(c_double);$/;"	f
llroundf	$C2_LIBDIR/math/math.c2i	/^fn c_longlong llroundf(c_float);$/;"	f
load	$C2_LIBDIR/lua/lua.c2i	/^fn c_int load(State *L, Reader reader, void *dt,$/;"	f
load	$C2_LIBDIR/sdl2_image/sdl_image.c2i	/^fn sdl.Surface* load(const char* file) @(cname="IMG_Load");$/;"	f
loadBMP_RW	$C2_LIBDIR/sdl2/sdl.c2i	/^fn Surface* loadBMP_RW(RWops* src, c_int freesrc) @(cname="SDL_LoadBMP_RW");$/;"	f
local	$C2_LIBDIR/curses/curses.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/dl/dlfcn.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/io_uring/io_uring.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/c_errno.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/csetjmp.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/csignal.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/ctermios.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/ctype.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/ifaddrs.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/libc_dirent.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/libc_fcntl.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/libc_poll.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/libc_time.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/libgen.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/linux_ifether.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/linux_sockios.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/linux_types.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/net_if.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/netinet_tcp.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/regex.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/stdarg.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/stdio.c2i	/^import stdarg local;$/;"	v
local	$C2_LIBDIR/libc/stdlib.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/string.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/strings.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/sys_ioctl.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/sys_mman.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/sys_sendfile.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/sys_signalfd.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/sys_socket.c2i	/^import unistd local;$/;"	v
local	$C2_LIBDIR/libc/sys_stat.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/sys_time.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/sys_utsname.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/uio.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/libc/unistd.c2i	/^import libc_fcntl local;$/;"	v
local	$C2_LIBDIR/lua/lua.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/lua/lua_auxlib.c2i	/^import lua local;$/;"	v
local	$C2_LIBDIR/lua/lua_lib.c2i	/^import lua local;$/;"	v
local	$C2_LIBDIR/math/math.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/pthread/pthread.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/sdl2/sdl.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/sdl2_image/sdl_image.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^import c2 local;$/;"	v
local	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^import c2 local;$/;"	v
localtime	$C2_LIBDIR/libc/libc_time.c2i	/^fn Tm* localtime(const Time* timep);$/;"	f
localtime_r	$C2_LIBDIR/libc/libc_time.c2i	/^fn Tm* localtime_r(const Time* timep, Tm* result);$/;"	f
locked	$C2_LIBDIR/sdl2/sdl.c2i	/^    c_int locked;$/;"	v
log	$C2_LIBDIR/math/math.c2i	/^fn c_double log(c_double);$/;"	f
log	$C2_LIBDIR/sdl2/sdl.c2i	/^fn void log(const char* fmt @(printf_format), ...) @(cname="SDL_Log");$/;"	f
log10	$C2_LIBDIR/math/math.c2i	/^fn c_double log10(c_double);$/;"	f
log10f	$C2_LIBDIR/math/math.c2i	/^fn c_float log10f(c_float);$/;"	f
log1p	$C2_LIBDIR/math/math.c2i	/^fn c_double log1p(c_double);$/;"	f
log1pf	$C2_LIBDIR/math/math.c2i	/^fn c_float log1pf(c_float);$/;"	f
log2	$C2_LIBDIR/math/math.c2i	/^fn c_double log2(c_double);$/;"	f
log2f	$C2_LIBDIR/math/math.c2i	/^fn c_float log2f(c_float);$/;"	f
logb	$C2_LIBDIR/math/math.c2i	/^fn c_double logb(c_double);$/;"	f
logbf	$C2_LIBDIR/math/math.c2i	/^fn c_float logbf(c_float);$/;"	f
logf	$C2_LIBDIR/math/math.c2i	/^fn c_float logf(c_float);$/;"	f
longjmp	$C2_LIBDIR/libc/csetjmp.c2i	/^fn void longjmp(JmpBuf __env, i32 __val) @(noreturn);$/;"	f
lrand48	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_long lrand48();$/;"	f
lrand48_r	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int lrand48_r(Drand48_data* __buffer, c_long* __result);$/;"	f
lrint	$C2_LIBDIR/math/math.c2i	/^fn c_long lrint(c_double);$/;"	f
lrintf	$C2_LIBDIR/math/math.c2i	/^fn c_long lrintf(c_float);$/;"	f
lround	$C2_LIBDIR/math/math.c2i	/^fn c_long lround(c_double);$/;"	f
lroundf	$C2_LIBDIR/math/math.c2i	/^fn c_long lroundf(c_float);$/;"	f
lseek	$C2_LIBDIR/libc/unistd.c2i	/^fn c_ulong lseek (i32 fd, c_ulong offset, i32 whence);$/;"	f
lstat	$C2_LIBDIR/libc/sys_stat.c2i	/^fn c_int lstat(const c_char* pathname, Stat* buf);$/;"	f
lua	$C2_LIBDIR/lua/lua.c2i	/^module lua;$/;"	v
luaL_loadfilex	$C2_LIBDIR/lua/lua_auxlib.c2i	/^fn c_int luaL_loadfilex(State *L, const c_char* filename, const c_char* mode);$/;"	f
luaL_newstate	$C2_LIBDIR/lua/lua_auxlib.c2i	/^fn State* luaL_newstate();$/;"	f
luaL_openlibs	$C2_LIBDIR/lua/lua_lib.c2i	/^fn void luaL_openlibs(State* L);$/;"	f
luaL_requiref	$C2_LIBDIR/lua/lua_auxlib.c2i	/^fn void luaL_requiref(State *L, const c_char* modname,$/;"	f
lua_auxlib	$C2_LIBDIR/lua/lua_auxlib.c2i	/^module lua_auxlib;$/;"	v
lua_ident	$C2_LIBDIR/lua/lua.c2i	/^const char* lua_ident;$/;"	v
lua_lib	$C2_LIBDIR/lua/lua_lib.c2i	/^module lua_lib;$/;"	v
lua_type	$C2_LIBDIR/lua/lua.c2i	/^fn c_int lua_type(State *L, c_int idx) @(cname="lua_type");$/;"	f
luaopen_base	$C2_LIBDIR/lua/lua_lib.c2i	/^fn i32 luaopen_base(State *L);$/;"	f
luaopen_bit32	$C2_LIBDIR/lua/lua_lib.c2i	/^fn i32 luaopen_bit32(State *L);$/;"	f
luaopen_coroutine	$C2_LIBDIR/lua/lua_lib.c2i	/^fn i32 luaopen_coroutine(State *L);$/;"	f
luaopen_debug	$C2_LIBDIR/lua/lua_lib.c2i	/^fn i32 luaopen_debug(State *L);$/;"	f
luaopen_io	$C2_LIBDIR/lua/lua_lib.c2i	/^fn i32 luaopen_io(State *L);$/;"	f
luaopen_math	$C2_LIBDIR/lua/lua_lib.c2i	/^fn i32 luaopen_math(State *L);$/;"	f
luaopen_os	$C2_LIBDIR/lua/lua_lib.c2i	/^fn i32 luaopen_os(State *L);$/;"	f
luaopen_package	$C2_LIBDIR/lua/lua_lib.c2i	/^fn i32 luaopen_package(State *L);$/;"	f
luaopen_string	$C2_LIBDIR/lua/lua_lib.c2i	/^fn i32 luaopen_string(State *L);$/;"	f
luaopen_table	$C2_LIBDIR/lua/lua_lib.c2i	/^fn i32 luaopen_table(State *L);$/;"	f
luaopen_utf8	$C2_LIBDIR/lua/lua_lib.c2i	/^fn i32 luaopen_utf8(State *L);$/;"	f
machine	$C2_LIBDIR/libc/sys_utsname.c2i	/^    char[NAME_LEN] machine;$/;"	v
major_ver	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int major_ver;              \/*!< equal to  MBEDTLS_SSL_MAJOR_VERSION_3    *\/$/;"	v
malloc	$C2_LIBDIR/libc/stdlib.c2i	/^fn void* malloc(c_size size);$/;"	f
master	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uchar[48] master;   \/*!< the master secret  *\/$/;"	v
math	$C2_LIBDIR/math/math.c2i	/^module math;$/;"	v
max	$C2_LIBDIR/c2/char.c2i	/^const char max = 255;$/;"	v
max	$C2_LIBDIR/c2/f32.c2i	/^const f32 max = 0x1.fffffep127;$/;"	v
max	$C2_LIBDIR/c2/f64.c2i	/^const f64 max = 0x1.fffffffffffffp1023;$/;"	v
max	$C2_LIBDIR/c2/i16.c2i	/^const i16 max = 32767;$/;"	v
max	$C2_LIBDIR/c2/i32.c2i	/^const i32 max = 2147483647;$/;"	v
max	$C2_LIBDIR/c2/i64.c2i	/^const i64 max = 9223372036854775807;$/;"	v
max	$C2_LIBDIR/c2/i8.c2i	/^const i8 max = 127;$/;"	v
max	$C2_LIBDIR/c2/isize.c2i	/^const isize max = 9223372036854775807;$/;"	v
max	$C2_LIBDIR/c2/u16.c2i	/^const u16 max = 65535;$/;"	v
max	$C2_LIBDIR/c2/u32.c2i	/^const u32 max = 4294967295;$/;"	v
max	$C2_LIBDIR/c2/u64.c2i	/^const u64 max = 18446744073709551615;$/;"	v
max	$C2_LIBDIR/c2/u8.c2i	/^const u8 max = 255;$/;"	v
max	$C2_LIBDIR/c2/usize.c2i	/^const usize max = 4294967295;$/;"	v
max_i16	$C2_LIBDIR/c2/c2.c2i	/^const i16 max_i16 = 32767;$/;"	v
max_i32	$C2_LIBDIR/c2/c2.c2i	/^const i32 max_i32 = 2147483647;$/;"	v
max_i64	$C2_LIBDIR/c2/c2.c2i	/^const i64 max_i64 = 9223372036854775807;$/;"	v
max_i8	$C2_LIBDIR/c2/c2.c2i	/^const i8 max_i8 = 127;$/;"	v
max_isize	$C2_LIBDIR/c2/c2.c2i	/^const isize max_isize = 9223372036854775807;$/;"	v
max_major_ver	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uchar max_major_ver;    \/*!< max. major version used            *\/$/;"	v
max_minor_ver	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uchar max_minor_ver;    \/*!< max. minor version used            *\/$/;"	v
max_pathlen	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int max_pathlen;            \/**< Optional Basic Constraint extension value: The maximum p/;"	v
max_u16	$C2_LIBDIR/c2/c2.c2i	/^const u16 max_u16 = 65535;$/;"	v
max_u32	$C2_LIBDIR/c2/c2.c2i	/^const u32 max_u32 = 4294967295;$/;"	v
max_u64	$C2_LIBDIR/c2/c2.c2i	/^const u64 max_u64 = 18446744073709551615;$/;"	v
max_u8	$C2_LIBDIR/c2/c2.c2i	/^const u8 max_u8 = 255;$/;"	v
max_usize	$C2_LIBDIR/c2/c2.c2i	/^const usize max_usize = 4294967295;$/;"	v
mbedtls	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^module mbedtls;$/;"	v
mblen	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int mblen(const c_char* __s, c_size __n);$/;"	f
mbstowcs	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int mbstowcs(c_int* __pwcs, const c_char* __s, c_size __n);$/;"	f
mbtowc	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int mbtowc(c_int* __pwc, const c_char* __s, c_size __n);$/;"	f
mem_end	$C2_LIBDIR/libc/net_if.c2i	/^    c_ulong mem_end;$/;"	v
mem_start	$C2_LIBDIR/libc/net_if.c2i	/^    c_ulong mem_start;$/;"	v
memccpy	$C2_LIBDIR/libc/string.c2i	/^fn void* memccpy(void* dest, const void* src, c_int c, c_size n);$/;"	f
memchr	$C2_LIBDIR/libc/string.c2i	/^fn void* memchr(const void* s, c_int c, c_size n);$/;"	f
memcmp	$C2_LIBDIR/libc/string.c2i	/^fn c_int memcmp(const void* s1, const void* s2, c_size n);$/;"	f
memcpy	$C2_LIBDIR/libc/string.c2i	/^fn void* memcpy(void* dest, const void* src, c_size n);$/;"	f
memmem	$C2_LIBDIR/libc/string.c2i	/^fn void* memmem(const void* s1, c_size size1, const void* s2, c_size size2);$/;"	f
memmove	$C2_LIBDIR/libc/string.c2i	/^fn void* memmove(void* dest, const void* src, c_size n);$/;"	f
mempcpy	$C2_LIBDIR/libc/string.c2i	/^fn void* mempcpy(void* dest, const void* src, c_size n);$/;"	f
memrchr	$C2_LIBDIR/libc/string.c2i	/^fn void* memrchr(const void* s, c_int c, c_size n);$/;"	f
memset	$C2_LIBDIR/libc/string.c2i	/^fn void* memset(void* s, c_int c, c_size n);$/;"	f
memset	$C2_LIBDIR/sdl2/sdl.c2i	/^fn void memset(void* dst, c_int c, usize len) @(cname="SDL_memset");$/;"	f
memset_explicit	$C2_LIBDIR/libc/string.c2i	/^fn void* memset_explicit(void* s, c_int c, c_size n);$/;"	f
mfl_code	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uchar mfl_code;     \/*!< MaxFragmentLength negotiated by peer *\/$/;"	v
mgesture	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_MultiGestureEvent mgesture;         \/**< Gesture event data *\/$/;"	v
min	$C2_LIBDIR/c2/char.c2i	/^const char min = 0;$/;"	v
min	$C2_LIBDIR/c2/f32.c2i	/^const f32 min = -0x1.fffffep127;$/;"	v
min	$C2_LIBDIR/c2/f64.c2i	/^const f64 min = -0x1.fffffffffffffp1023;$/;"	v
min	$C2_LIBDIR/c2/i16.c2i	/^const i16 min = -32768;$/;"	v
min	$C2_LIBDIR/c2/i32.c2i	/^const i32 min = -2147483647-1;$/;"	v
min	$C2_LIBDIR/c2/i64.c2i	/^const i64 min = -9223372036854775807-1;$/;"	v
min	$C2_LIBDIR/c2/i8.c2i	/^const i8 min = -128;$/;"	v
min	$C2_LIBDIR/c2/isize.c2i	/^const isize min = -9223372036854775807-1;$/;"	v
min	$C2_LIBDIR/c2/u16.c2i	/^const u16 min = 0;$/;"	v
min	$C2_LIBDIR/c2/u32.c2i	/^const u32 min = 0;$/;"	v
min	$C2_LIBDIR/c2/u64.c2i	/^const u64 min = 0;$/;"	v
min	$C2_LIBDIR/c2/u8.c2i	/^const u8 min = 0;$/;"	v
min	$C2_LIBDIR/c2/usize.c2i	/^const usize min = 0;$/;"	v
min	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int min;$/;"	v
min_i16	$C2_LIBDIR/c2/c2.c2i	/^const i16 min_i16 = -32768;$/;"	v
min_i32	$C2_LIBDIR/c2/c2.c2i	/^const i32 min_i32 = -2147483647-1;$/;"	v
min_i64	$C2_LIBDIR/c2/c2.c2i	/^const i64 min_i64 = -9223372036854775807-1;$/;"	v
min_i8	$C2_LIBDIR/c2/c2.c2i	/^const i8 min_i8 = -128;$/;"	v
min_isize	$C2_LIBDIR/c2/c2.c2i	/^const isize min_isize = -9223372036854775807-1;$/;"	v
min_major_ver	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uchar min_major_ver;    \/*!< min. major version used            *\/$/;"	v
min_minor_ver	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uchar min_minor_ver;    \/*!< min. minor version used            *\/$/;"	v
min_u16	$C2_LIBDIR/c2/c2.c2i	/^const u16 min_u16 = 0;$/;"	v
min_u32	$C2_LIBDIR/c2/c2.c2i	/^const u32 min_u32 = 0;$/;"	v
min_u64	$C2_LIBDIR/c2/c2.c2i	/^const u64 min_u64 = 0;$/;"	v
min_u8	$C2_LIBDIR/c2/c2.c2i	/^const u8 min_u8 = 0;$/;"	v
min_usize	$C2_LIBDIR/c2/c2.c2i	/^const usize min_usize = 0;$/;"	v
minor_ver	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int minor_ver;              \/*!< either 0 (SSL3) or 1 (TLS1.0)    *\/$/;"	v
mkdir	$C2_LIBDIR/libc/sys_stat.c2i	/^fn c_int mkdir(const char* __file, c_uint mode);$/;"	f
mkdtemp	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_char* mkdtemp(c_char* __template);$/;"	f
mkstemp	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int mkstemp(c_char* __template);$/;"	f
mkstemps	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int mkstemps(c_char* __template, c_int __suffixlen);$/;"	f
mktemp	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_char* mktemp(c_char* __template);$/;"	f
mktime	$C2_LIBDIR/libc/libc_time.c2i	/^fn Time mktime(Tm* tm);$/;"	f
mlock_size	$C2_LIBDIR/io_uring/io_uring.c2i	/^fn isize mlock_size(u32 entries, u32 flags) @(cname="io_uring_mlock_size");$/;"	f
mlock_size_params	$C2_LIBDIR/io_uring/io_uring.c2i	/^fn isize mlock_size_params(u32 entries, Params *p) @(cname="io_uring_mlock_size_params");$/;"	f
mmap	$C2_LIBDIR/libc/sys_mman.c2i	/^fn void* mmap(void* addr, c_size length, c_int prot, c_int flags, c_int fd, Offset offset);$/;"	f
mod	$C2_LIBDIR/sdl2/sdl.c2i	/^    u16 mod;                 \/**< current key modifiers *\/$/;"	v
mode	$C2_LIBDIR/io_uring/io_uring.c2i	/^					   int mode, off_t offset, off_t len)$/;"	v
modf	$C2_LIBDIR/math/math.c2i	/^fn c_double modf(c_double, c_double *);$/;"	f
modff	$C2_LIBDIR/math/math.c2i	/^fn c_float modff(c_float, c_float *);$/;"	f
mon	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int mon;$/;"	v
motion	$C2_LIBDIR/sdl2/sdl.c2i	/^    MouseMotionEvent motion;                \/**< Mouse motion event data *\/$/;"	v
mouseX	$C2_LIBDIR/sdl2/sdl.c2i	/^    i32 mouseX;      \/**< X coordinate, relative to window (added in 2.26.0) *\/$/;"	v
mouseY	$C2_LIBDIR/sdl2/sdl.c2i	/^    i32 mouseY;      \/**< Y coordinate, relative to window (added in 2.26.0) *\/$/;"	v
mrand48	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_long mrand48();$/;"	f
mrand48_r	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int mrand48_r(Drand48_data* __buffer, c_long* __result);$/;"	f
msg_flags	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u32       msg_flags;$/;"	v
mtu	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_ushort mtu;               \/*!< path mtu, used to fragment outgoing messages *\/$/;"	v
munmap	$C2_LIBDIR/libc/sys_mman.c2i	/^fn c_int munmap(void* addr, c_size length);$/;"	f
mvaddch	$C2_LIBDIR/curses/curses.c2i	/^fn c_int mvaddch(c_int y, c_int x, const c_char ch);$/;"	f
nan	$C2_LIBDIR/c2/f32.c2i	/^const f32 nan = 0.0 \/ 0.0;$/;"	v
nan	$C2_LIBDIR/c2/f64.c2i	/^const f64 nan = 0.0 \/ 0.0;$/;"	v
nan	$C2_LIBDIR/math/math.c2i	/^fn c_double nan(const char *);$/;"	f
nanf	$C2_LIBDIR/math/math.c2i	/^fn c_float nanf(const char *);$/;"	f
nb_zero	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int nb_zero;                \/*!< # of 0-length encrypted messages *\/$/;"	v
nbytes	$C2_LIBDIR/io_uring/io_uring.c2i	/^				     unsigned int nbytes,$/;"	v
ncolors	$C2_LIBDIR/sdl2/sdl.c2i	/^    c_int ncolors;$/;"	v
nearbyint	$C2_LIBDIR/math/math.c2i	/^fn c_double nearbyint(c_double);$/;"	f
nearbyintf	$C2_LIBDIR/math/math.c2i	/^fn c_float nearbyintf(c_float);$/;"	f
net_connect	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int net_connect( Net_context *ctx, const char *host, const char *port, c_int proto ) @(cnam/;"	f
net_if	$C2_LIBDIR/libc/net_if.c2i	/^module net_if;$/;"	v
net_init	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void net_init( Net_context *ctx ) @(cname="mbedtls_net_init");$/;"	f
net_recv	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int net_recv(void *ctx, c_uchar *buf, c_size len) @(cname="mbedtls_net_recv");$/;"	f
net_recv_timeout	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int net_recv_timeout( void *ctx, c_uchar *buf, c_size len, c_uint timeout) @(cname="mbedtls/;"	f
net_send	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int net_send(void *ctx, const c_uchar *buf, c_size len) @(cname="mbedtls_net_send");$/;"	f
net_set_block	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int net_set_block( Net_context *ctx) @(cname="mbedtls_net_set_block");$/;"	f
net_set_nonblock	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int net_set_nonblock( Net_context *ctx) @(cname="net_set_nonblock");$/;"	f
netinet_tcp	$C2_LIBDIR/libc/netinet_tcp.c2i	/^module netinet_tcp;$/;"	v
new_sockfd	$C2_LIBDIR/libc/sys_socket.c2i	/^    return new_sockfd;$/;"	v
newstate	$C2_LIBDIR/lua/lua.c2i	/^fn State* newstate(Alloc f, void *ud) @(cname="lua_newstate");$/;"	f
newthread	$C2_LIBDIR/lua/lua.c2i	/^fn State* newthread(State *L) @(cname="lua_newthread");$/;"	f
next	$C2_LIBDIR/libc/stdio.c2i	/^    IO_marker* next;$/;"	v
next	$C2_LIBDIR/lua/lua.c2i	/^fn c_int next(State *L, c_int idx) @(cname="lua_next");$/;"	f
next_merged	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uchar next_merged;      \/**< Merge next item into the current one? *\/$/;"	v
next_record_offset	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_size next_record_offset;  \/*!< offset of the next record in datagram$/;"	v
next_update	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_time next_update;$/;"	v
nextafter	$C2_LIBDIR/math/math.c2i	/^fn c_double nextafter(c_double, c_double);$/;"	f
nextafterf	$C2_LIBDIR/math/math.c2i	/^fn c_float nextafterf(c_float, c_float);$/;"	f
nodename	$C2_LIBDIR/libc/sys_utsname.c2i	/^    char[NAME_LEN] nodename;$/;"	v
noecho	$C2_LIBDIR/curses/curses.c2i	/^fn void noecho();$/;"	f
nr	$C2_LIBDIR/io_uring/io_uring.c2i	/^						int nr, int bgid)$/;"	v
nr	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int nr;                     \/*!< The number of rounds. *\/$/;"	v
nrand48	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_long nrand48(u16* __xsubi);$/;"	f
nrand48_r	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int nrand48_r(u16* __xsubi, Drand48_data* __buffer, c_long* __result);$/;"	f
ns_cert_type	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uchar ns_cert_type; \/**< Optional Netscape certificate type extension value: See the valu/;"	v
ntohl	$C2_LIBDIR/libc/sys_socket.c2i	/^fn u32 ntohl(u32 netlong);$/;"	f
ntohs	$C2_LIBDIR/libc/sys_socket.c2i	/^fn u16 ntohs(u16 netshort);$/;"	f
obtained	$C2_LIBDIR/sdl2/sdl.c2i	/^                                   AudioSpec* obtained,$/;"	v
off	$C2_LIBDIR/io_uring/io_uring.c2i	/^ * Toggle eventfd notification on or off, if an eventfd is registered with$/;"	v
offset	$C2_LIBDIR/io_uring/io_uring.c2i	/^					 __u64 offset, off_t len, int advice)$/;"	v
oid	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Asn1_buf oid;                   \/**< The object identifier. *\/$/;"	v
on_exit	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int on_exit(OnExitFn __func, void* __arg);$/;"	f
ones	$C2_LIBDIR/sdl2/sdl.c2i	/^                                        *   keyboards have over ANSI ones,$/;"	v
opaque	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uchar[32] opaque;$/;"	v
opcode	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u8    opcode;     \/* type of operation for this sqe *\/$/;"	v
open	$C2_LIBDIR/libc/libc_fcntl.c2i	/^fn c_int open(const char* __file, c_int __oflag, ...);$/;"	f
openAudioDevice	$C2_LIBDIR/sdl2/sdl.c2i	/^fn AudioDeviceID openAudioDevice(const char* device,$/;"	f
openFont	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^fn Font* openFont(const char* file, c_int ptsize) @(cname="TTF_OpenFont");$/;"	f
open_flags	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u32       open_flags;$/;"	v
open_memstream	$C2_LIBDIR/libc/stdio.c2i	/^fn FILE* open_memstream(c_char** __bufloc, c_size* __sizeloc);$/;"	f
openat	$C2_LIBDIR/libc/libc_fcntl.c2i	/^fn c_int openat(i32 dirfd, const char* pathname, i32 flags, ...);$/;"	f
opendir	$C2_LIBDIR/libc/libc_dirent.c2i	/^fn DIR* opendir(const c_char* name);$/;"	f
openf	$C2_LIBDIR/lua/lua_auxlib.c2i	/^                        CFunction openf, c_int glb);$/;"	v
operation	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^                                     seed or reseed operation, in bytes. *\/$/;"	v
optarg	$C2_LIBDIR/libc/unistd.c2i	/^char* optarg;$/;"	v
opterr	$C2_LIBDIR/libc/unistd.c2i	/^c_int opterr;$/;"	v
optind	$C2_LIBDIR/libc/unistd.c2i	/^c_int optind;$/;"	v
optopt	$C2_LIBDIR/libc/unistd.c2i	/^c_int optopt;$/;"	v
out_left	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_size out_left;            \/*!< amount of data not yet written   *\/$/;"	v
out_msglen	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_size out_msglen;          \/*!< record header: message length    *\/$/;"	v
out_msgtype	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int out_msgtype;            \/*!< record header: message type      *\/$/;"	v
overflow	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32 overflow;$/;"	v
own_buffer	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int own_buffer;                     \/**< Indicates if \\c raw is owned$/;"	v
own_verify_data	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    char[SSL_VERIFY_DATA_MAX_LEN] own_verify_data; \/*!<  previous handshake verify data *\/$/;"	v
p_source	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    void*           p_source;   \/**< The callback data pointer *\/$/;"	v
pad	$C2_LIBDIR/c2/varargs.c2i	/^    u8[24] pad;$/;"	v
pad	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32[4] pad;$/;"	v
pad	$C2_LIBDIR/libc/stdarg.c2i	/^    c_char[24] pad;$/;"	v
padding	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8[56] padding;$/;"	v
padding1	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8 padding1;$/;"	v
padding2	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8 padding2;$/;"	v
padding3	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8 padding3;$/;"	v
pcallk	$C2_LIBDIR/lua/lua.c2i	/^fn c_int pcallk(State *L, c_int nargs, c_int nresults, c_int errfunc,$/;"	f
pclose	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int pclose(FILE* __stream);$/;"	f
peek_batch_cqe	$C2_LIBDIR/io_uring/io_uring.c2i	/^fn u32 peek_batch_cqe(Ring *ring, Cqe** cqes, u32 count) @(cname="io_uring_peek_batch_cqe");$/;"	f
peer_verify_data	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    char[SSL_VERIFY_DATA_MAX_LEN] peer_verify_data; \/*!<  previous handshake verify data *\/$/;"	v
perror	$C2_LIBDIR/libc/stdio.c2i	/^fn void perror(const c_char* __s);$/;"	f
personality	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u16   personality;$/;"	v
pipe	$C2_LIBDIR/io_uring/io_uring.c2i	/^ * NOTE that even if fd_in or fd_out refers to a pipe, the splice operation can still failed wit/;"	v
pipe	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int pipe(c_int* pipefd);$/;"	f
pipe2	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int pipe2(c_int* pipefd, c_int flags);$/;"	f
pitch	$C2_LIBDIR/sdl2/sdl.c2i	/^    c_int pitch;$/;"	v
pixels	$C2_LIBDIR/sdl2/sdl.c2i	/^    void* pixels;$/;"	v
pk	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Pk_context pk;              \/**< Container for the public key context. *\/$/;"	v
pk_ctx	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    void *           pk_ctx;  \/**< Underlying public key context  *\/$/;"	v
pk_free	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void pk_free( Pk_context *ctx) @(cname="mbedtls_pk_free");$/;"	f
pk_info	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    const Pk_info_t* pk_info; \/**< Public key information         *\/$/;"	v
pk_init	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void pk_init(Pk_context* ctx) @(cname="mbedtls_pk_init");$/;"	f
pk_raw	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_buf pk_raw;$/;"	v
poll	$C2_LIBDIR/libc/libc_poll.c2i	/^fn c_int poll(Pollfd* fds, c_ulong nfds, c_int timeout);$/;"	f
poll32_events	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u32       poll32_events;  \/* word-reversed for BE *\/$/;"	v
poll_events	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u16       poll_events;    \/* compatibility *\/$/;"	v
poll_mask	$C2_LIBDIR/io_uring/io_uring.c2i	/^	return poll_mask;$/;"	v
popen	$C2_LIBDIR/libc/stdio.c2i	/^fn FILE* popen(const c_char* __command, const c_char* __modes);$/;"	f
port	$C2_LIBDIR/libc/net_if.c2i	/^    c_uchar port;$/;"	v
posix_memalign	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int posix_memalign(void** __memptr, c_size __alignment, c_size __size);$/;"	f
pow	$C2_LIBDIR/math/math.c2i	/^fn c_double pow(c_double, c_double);$/;"	f
powf	$C2_LIBDIR/math/math.c2i	/^fn c_float powf(c_float, c_float);$/;"	f
preciseX	$C2_LIBDIR/sdl2/sdl.c2i	/^    f32 preciseX;     \/**< The amount scrolled horizontally, positive to the right and negative/;"	v
preciseY	$C2_LIBDIR/sdl2/sdl.c2i	/^    f32 preciseY;     \/**< The amount scrolled vertically, positive away from the user and nega/;"	v
prediction_resistance	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int prediction_resistance;  \/*!< This determines whether prediction$/;"	v
prep_rw	$C2_LIBDIR/io_uring/io_uring.c2i	/^fn void prep_rw(c_int op, Sqe* sqe, c_int fd, const void* addr, u32 len, u64 offset) @(cname="io/;"	f
printf	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int printf(const c_char* __format @(printf_format), ...);$/;"	f
psk_identity_len	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_size         psk_identity_len;\/*!< The length of PSK identity.$/;"	v
psk_len	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_size         psk_len;  \/*!< The length of the raw pre-shared key.$/;"	v
pthread	$C2_LIBDIR/pthread/pthread.c2i	/^module pthread;$/;"	v
pushEvent	$C2_LIBDIR/sdl2/sdl.c2i	/^fn c_int pushEvent(Event* event)  @(cname="SDL_PushEvent");$/;"	f
pushboolean	$C2_LIBDIR/lua/lua.c2i	/^fn void pushboolean(State *L, c_int b) @(cname="lua_pushboolean");$/;"	f
pushcclosure	$C2_LIBDIR/lua/lua.c2i	/^fn void pushcclosure(State *L, CFunction func, c_int n) @(cname="lua_pushcclosure");$/;"	f
pushinteger	$C2_LIBDIR/lua/lua.c2i	/^fn void pushinteger(State *L, Integer n) @(cname="lua_pushinteger");$/;"	f
pushlightuserdata	$C2_LIBDIR/lua/lua.c2i	/^fn void pushlightuserdata(State *L, void *p) @(cname="lua_pushlightuserdata");$/;"	f
pushlstring	$C2_LIBDIR/lua/lua.c2i	/^fn const c_char* pushlstring(State *L, const c_char* s, c_size len) @(cname="lua_pushlstring");$/;"	f
pushnil	$C2_LIBDIR/lua/lua.c2i	/^fn void pushnil(State *L) @(cname="lua_pushnil");$/;"	f
pushnumber	$C2_LIBDIR/lua/lua.c2i	/^fn void pushnumber(State *L, Number n) @(cname="lua_pushnumber");$/;"	f
pushstring	$C2_LIBDIR/lua/lua.c2i	/^fn const c_char* pushstring(State *L, const c_char* s) @(cname="lua_pushstring");$/;"	f
pushthread	$C2_LIBDIR/lua/lua.c2i	/^fn c_int pushthread(State *L) @(cname="lua_pushthread");$/;"	f
pushvalue	$C2_LIBDIR/lua/lua.c2i	/^fn void pushvalue(State* L, c_int idx) @(cname="lua_pushvalue");$/;"	f
putc	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int putc(c_int __c, FILE* __stream);$/;"	f
putc_unlocked	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int putc_unlocked(c_int __c, FILE* __stream);$/;"	f
putchar	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int putchar(c_int __c);$/;"	f
putchar_unlocked	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int putchar_unlocked(c_int __c);$/;"	f
putenv	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int putenv(c_char* __string);$/;"	f
puts	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int puts(const c_char* __s);$/;"	f
putw	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int putw(c_int __w, FILE* __stream);$/;"	f
qecvt	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_char* qecvt(c_double __value, c_int __ndigit, c_int* __decpt, c_int* __sign);$/;"	f
qecvt_r	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int qecvt_r(c_double __value, c_int __ndigit, c_int* __decpt, c_int* __sign, c_char* __buf,/;"	f
qfcvt	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_char* qfcvt(c_double __value, c_int __ndigit, c_int* __decpt, c_int* __sign);$/;"	f
qfcvt_r	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int qfcvt_r(c_double __value, c_int __ndigit, c_int* __decpt, c_int* __sign, c_char* __buf,/;"	f
qgcvt	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_char* qgcvt(c_double __value, c_int __ndigit, c_char* __buf);$/;"	f
qsort	$C2_LIBDIR/libc/stdlib.c2i	/^fn void qsort(void* __base, c_size __nmemb, c_size __size, StdlibCompareFn __compar);$/;"	f
queue_init	$C2_LIBDIR/io_uring/io_uring.c2i	/^fn c_int queue_init(u32 entries, Ring* ring, u32 flags) @(cname="io_uring_queue_init");$/;"	f
queue_init_params	$C2_LIBDIR/io_uring/io_uring.c2i	/^fn c_int queue_init_params(u32 entries, Ring* ring, Params* p) @(cname="io_uring_queue_init_para/;"	f
queue_mmap	$C2_LIBDIR/io_uring/io_uring.c2i	/^fn c_int queue_mmap(c_int fd, Params *p, Ring* ring) @(cname="io_uring_queue_mmap");$/;"	f
quick_exit	$C2_LIBDIR/libc/stdlib.c2i	/^fn void quick_exit(c_int __status);$/;"	f
quit	$C2_LIBDIR/sdl2/sdl.c2i	/^fn void quit() @(cname="SDL_Quit");$/;"	f
quit	$C2_LIBDIR/sdl2_image/sdl_image.c2i	/^fn void quit() @(cname="IMG_Quit");$/;"	f
quit	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^fn void quit() @(cname="TTF_Quit");$/;"	f
quot	$C2_LIBDIR/libc/stdlib.c2i	/^    c_long quot;$/;"	v
rand	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int rand();$/;"	f
rand_r	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int rand_r(c_uint* __seed);$/;"	f
random	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_long random();$/;"	f
random_r	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int random_r(Random_data* __buf, c_int* __result);$/;"	f
raw	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_buf raw;$/;"	v
rawequeal	$C2_LIBDIR/lua/lua.c2i	/^fn c_int rawequeal(State *L, c_int idx1, c_int idx2) @(cname="lua_rawequeal");$/;"	f
rawget	$C2_LIBDIR/lua/lua.c2i	/^fn c_int rawget(State *L, c_int idx) @(cname="lua_rawget");$/;"	f
rawgeti	$C2_LIBDIR/lua/lua.c2i	/^fn c_int rawgeti(State *L, c_int idx, Integer n) @(cname="lua_rawgeti");$/;"	f
rawgetp	$C2_LIBDIR/lua/lua.c2i	/^fn c_int rawgetp(State *L, c_int idx, const void *p) @(cname="lua_rawgetp");$/;"	f
rawlen	$C2_LIBDIR/lua/lua.c2i	/^fn c_size rawlen(State* L, c_int idx) @(cname="lua_rawlen");$/;"	f
rawset	$C2_LIBDIR/lua/lua.c2i	/^fn void  rawset(State *L, c_int idx) @(cname="lua_rawset");$/;"	f
rawseti	$C2_LIBDIR/lua/lua.c2i	/^fn void  rawseti(State *L, c_int idx, Integer n) @(cname="lua_rawseti");$/;"	f
rawsetp	$C2_LIBDIR/lua/lua.c2i	/^fn void  rawsetp(State *L, c_int idx, const void *p) @(cname="lua_rawsetp");$/;"	f
re_erroffset	$C2_LIBDIR/libc/regex.c2i	/^    c_size re_erroffset;$/;"	v
re_nsub	$C2_LIBDIR/libc/regex.c2i	/^    c_size re_nsub;$/;"	v
read	$C2_LIBDIR/libc/unistd.c2i	/^fn c_long read(c_int fd, void* buf, c_ulong count);$/;"	f
read_timeout	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uint read_timeout;          \/*!< timeout for mbedtls_ssl_read (ms)  *\/$/;"	v
readdir	$C2_LIBDIR/libc/libc_dirent.c2i	/^fn Dirent* readdir(DIR* dirp);$/;"	f
readv	$C2_LIBDIR/libc/uio.c2i	/^fn isize readv(c_int fd, const Iovec* iovec, c_int count);$/;"	f
realloc	$C2_LIBDIR/libc/stdlib.c2i	/^fn void* realloc(void* ptr, c_size size);$/;"	f
realpath	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_char* realpath(const c_char* __name, c_char* __resolved);$/;"	f
recv	$C2_LIBDIR/libc/sys_socket.c2i	/^fn isize recv(c_int fd, void* buf, usize n, c_int flags);$/;"	f
recvfrom	$C2_LIBDIR/libc/sys_socket.c2i	/^fn isize recvfrom(c_int fd, void* buf, usize n, c_int flags, Sockaddr* addr, u32* addrlen);$/;"	f
refcount	$C2_LIBDIR/sdl2/sdl.c2i	/^    c_int refcount;$/;"	v
refresh	$C2_LIBDIR/curses/curses.c2i	/^fn void refresh();$/;"	f
regcomp	$C2_LIBDIR/libc/regex.c2i	/^fn c_int regcomp(Regex_t* preg, const c_char* pattern, c_int cflags);$/;"	f
regerror	$C2_LIBDIR/libc/regex.c2i	/^fn c_size regerror(c_int errcode, const Regex_t* preg, c_char* errbuf, c_size errbuf_size);$/;"	f
regex	$C2_LIBDIR/libc/regex.c2i	/^module regex;$/;"	v
regexec	$C2_LIBDIR/libc/regex.c2i	/^fn c_int regexec(const Regex_t* preg, const c_char* string, c_size nmatch, Regmatch_t* pmatch, c/;"	f
regfree	$C2_LIBDIR/libc/regex.c2i	/^fn void regfree(Regex_t* preg);$/;"	f
registerEvents	$C2_LIBDIR/sdl2/sdl.c2i	/^fn c_int registerEvents(c_int numevents) @(cname="SDL_RegisterEvents");$/;"	f
release	$C2_LIBDIR/libc/sys_utsname.c2i	/^    char[NAME_LEN] release;$/;"	v
rem	$C2_LIBDIR/libc/stdlib.c2i	/^    c_long rem;$/;"	v
remainder	$C2_LIBDIR/math/math.c2i	/^fn c_double remainder(c_double, c_double);$/;"	f
remainderf	$C2_LIBDIR/math/math.c2i	/^fn c_float remainderf(c_float, c_float);$/;"	f
remove	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int remove(const c_char* __filename);$/;"	f
removeTimer	$C2_LIBDIR/sdl2/sdl.c2i	/^fn bool removeTimer(TimerID id) @(cname="SDL_RemoveTimer");$/;"	f
remquo	$C2_LIBDIR/math/math.c2i	/^fn c_double remquo(c_double, c_double, c_int *);$/;"	f
remquof	$C2_LIBDIR/math/math.c2i	/^fn c_float remquof(c_float, c_float, c_int *);$/;"	f
rename	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int rename(const c_char* __old, const c_char* __new);$/;"	f
rename_flags	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u32       rename_flags;$/;"	v
renameat	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int renameat(c_int __oldfd, const c_char* __old, c_int __newfd, const c_char* __new);$/;"	f
renego_max_records	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int renego_max_records;         \/*!< grace period for renegotiation     *\/$/;"	v
renego_period	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uchar[8] renego_period; \/*!< value of the record counters$/;"	v
renego_records_seen	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int renego_records_seen;    \/*!< Records since renego request, or with DTLS,$/;"	v
renego_status	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int renego_status;          \/*!< Initial, in progress, pending?   *\/$/;"	v
renegotiation	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^     *  changes during renegotiation, mitigating the triple handshake attack. *\/$/;"	v
repeat	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8 repeat;       \/**< Non-zero if this is a key repeat *\/$/;"	v
res	$C2_LIBDIR/io_uring/io_uring.c2i	/^    i32   res;        \/* result code for this event *\/$/;"	v
reseed_counter	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int reseed_counter;         \/*!< The reseed counter.$/;"	v
reseed_interval	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int reseed_interval;        \/*!< The reseed interval.$/;"	v
reserved	$C2_LIBDIR/libc/sys_stat.c2i	/^    c_long[3] reserved;$/;"	v
resetKeyboard	$C2_LIBDIR/sdl2/sdl.c2i	/^fn void resetKeyboard() @(cname="SDL_ResetKeyboard");$/;"	f
resume	$C2_LIBDIR/lua/lua.c2i	/^fn c_int resume(State *L, State *from, c_int narg) @(cname="lua_resume");$/;"	f
resv	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32[3] resv;$/;"	v
resv1	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32 resv1;$/;"	v
resv2	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u64 resv2;$/;"	v
revents	$C2_LIBDIR/libc/libc_poll.c2i	/^    i16 revents;$/;"	v
revocation_date	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_time revocation_date;$/;"	v
rewind	$C2_LIBDIR/libc/stdio.c2i	/^fn void rewind(FILE* __stream);$/;"	f
rindex	$C2_LIBDIR/libc/strings.c2i	/^fn c_char* rindex(const c_char* s, c_int c);$/;"	f
ring	$C2_LIBDIR/io_uring/io_uring.c2i	/^ * to free up in the SQ ring, which happens when the kernel side thread has$/;"	v
ring_entries	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32 ring_entries;$/;"	v
ring_fd	$C2_LIBDIR/io_uring/io_uring.c2i	/^    c_int ring_fd;$/;"	v
ring_mask	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32 ring_mask;$/;"	v
ring_ptr	$C2_LIBDIR/io_uring/io_uring.c2i	/^    void* ring_ptr;$/;"	v
ring_sz	$C2_LIBDIR/io_uring/io_uring.c2i	/^    usize ring_sz;$/;"	v
rint	$C2_LIBDIR/math/math.c2i	/^fn c_double rint(c_double);$/;"	f
rintf	$C2_LIBDIR/math/math.c2i	/^fn c_float rintf(c_float);$/;"	f
rm_eo	$C2_LIBDIR/libc/regex.c2i	/^    RegOff rm_eo;$/;"	v
rm_so	$C2_LIBDIR/libc/regex.c2i	/^    RegOff rm_so;$/;"	v
rmask	$C2_LIBDIR/sdl2/sdl.c2i	/^                               u32 rmask, u32 gmask, u32 bmask, u32 amask)$/;"	v
rmdir	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int rmdir(const char* path);$/;"	f
rotate	$C2_LIBDIR/lua/lua.c2i	/^fn void rotate(State* L, c_int idx, c_int n) @(cname="lua_rotate");$/;"	f
round	$C2_LIBDIR/math/math.c2i	/^fn c_double round(c_double);$/;"	f
roundf	$C2_LIBDIR/math/math.c2i	/^fn c_float roundf(c_float);$/;"	f
rpmatch	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int rpmatch(const c_char* __response);$/;"	f
rsa_min_bitlen	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uint rsa_min_bitlen;    \/**< Minimum size for RSA keys  *\/$/;"	v
rwFromFile	$C2_LIBDIR/sdl2/sdl.c2i	/^fn RWops* rwFromFile(const char* file, const char* mode) @(cname="SDL_RWFromFile");$/;"	f
rwFromFile	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^fn sdl.RWops* rwFromFile(const char* file, const char* mode) @(cname="SDL_RWFromFile");$/;"	f
rw_flags	$C2_LIBDIR/io_uring/io_uring.c2i	/^        Kernel_rwf_t  rw_flags; \/\/ __kernel_rwf_t$/;"	v
s_addr	$C2_LIBDIR/libc/sys_socket.c2i	/^    InAddr s_addr;$/;"	v
sa_data	$C2_LIBDIR/libc/sys_socket.c2i	/^    char[14] sa_data;$/;"	v
sa_family	$C2_LIBDIR/libc/sys_socket.c2i	/^    SaFamily sa_family;$/;"	v
sa_flags	$C2_LIBDIR/libc/csignal.c2i	/^    c_int sa_flags;$/;"	v
sa_handler	$C2_LIBDIR/libc/csignal.c2i	/^        SigactionHandler sa_handler;$/;"	v
sa_mask	$C2_LIBDIR/libc/csignal.c2i	/^    Sigset sa_mask;$/;"	v
sa_restorer	$C2_LIBDIR/libc/csignal.c2i	/^    SigActionRestorer sa_restorer;$/;"	v
sa_sigaction	$C2_LIBDIR/libc/csignal.c2i	/^        SigActionAction sa_sigaction;$/;"	v
samples	$C2_LIBDIR/sdl2/sdl.c2i	/^    u16 samples;             \/**< Audio buffer size in sample FRAMES (total samples divided by /;"	v
sbuf	$C2_LIBDIR/libc/stdio.c2i	/^    FILE* sbuf;$/;"	v
scalbln	$C2_LIBDIR/math/math.c2i	/^fn c_double scalbln(c_double, c_long);$/;"	f
scalblnf	$C2_LIBDIR/math/math.c2i	/^fn c_float scalblnf(c_float, c_long);$/;"	f
scalbn	$C2_LIBDIR/math/math.c2i	/^fn c_double scalbn(c_double, c_int);$/;"	f
scalbnf	$C2_LIBDIR/math/math.c2i	/^fn c_float scalbnf(c_float, c_int);$/;"	f
scancode	$C2_LIBDIR/sdl2/sdl.c2i	/^    Scancode scancode;      \/**< SDL physical key code - see ::SDL_Scancode for details *\/$/;"	v
scandir	$C2_LIBDIR/libc/libc_dirent.c2i	/^fn c_int scandir(const c_char* dirp, Dirent*** namelist,$/;"	f
scanf	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int scanf(const c_char* __format, ...);$/;"	f
sdl	$C2_LIBDIR/sdl2/sdl.c2i	/^module sdl;$/;"	v
sdl	$C2_LIBDIR/sdl2_image/sdl_image.c2i	/^import sdl;$/;"	v
sdl	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^import sdl;$/;"	v
sdl	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^import sdl;$/;"	v
sdl_image	$C2_LIBDIR/sdl2_image/sdl_image.c2i	/^module sdl_image;$/;"	v
sdl_mixer	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^module sdl_mixer;$/;"	v
sdl_ttf	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^module sdl_ttf;$/;"	v
sec	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int sec;         \/**< Time. *\/$/;"	v
secure_renegotiation	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int secure_renegotiation;           \/*!<  does peer support legacy or$/;"	v
seed48	$C2_LIBDIR/libc/stdlib.c2i	/^fn u16* seed48(u16* __seed16v);$/;"	f
seed48_r	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int seed48_r(u16* __seed16v, Drand48_data* __buffer);$/;"	f
seeding	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^                                 * to use as a nonce for the initial seeding,$/;"	v
self	$C2_LIBDIR/pthread/pthread.c2i	/^fn Pthread self() @(cname="pthread_self");$/;"	f
send	$C2_LIBDIR/libc/sys_socket.c2i	/^fn isize send(c_int fd, const void* buf, usize n, c_int flags);$/;"	f
sendfile	$C2_LIBDIR/libc/sys_sendfile.c2i	/^fn c_ssize sendfile(i32 __out_fd, i32 __in_fd, Offset* __offset, c_size __count);$/;"	f
sendto	$C2_LIBDIR/libc/sys_socket.c2i	/^fn isize sendto(c_int fd, const void* buf, usize n, c_int flags, const Sockaddr* addr, u32 addr_/;"	f
sensor	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_SensorEvent sensor;                 \/**< Sensor event data *\/$/;"	v
serial	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_buf serial;$/;"	v
set	$C2_LIBDIR/io_uring/io_uring.c2i	/^ * IORING_CQE_F_MORE    If set, parent SQE will generate more CQE entries$/;"	v
set	$C2_LIBDIR/libc/ifaddrs.c2i	/^       IFF_POINTOPOINT bit is set, then `ifa_dstaddr' is valid.$/;"	v
setClipboardText	$C2_LIBDIR/sdl2/sdl.c2i	/^fn c_int setClipboardText(const char* text) @(cname="SDL_SetClipboardText");$/;"	f
setColorKey	$C2_LIBDIR/sdl2_image/sdl_image.c2i	/^fn c_int setColorKey(sdl.Surface* surface, c_int flag, u32 key) @(cname="SDL_SetColorKey");$/;"	f
setTextInputRect	$C2_LIBDIR/sdl2/sdl.c2i	/^fn void setTextInputRect(const Rect* rect) @(cname="SDL_SetTextInputRect");$/;"	f
setallocf	$C2_LIBDIR/lua/lua.c2i	/^fn void setallocf(State *L, Alloc f, void *ud) @(cname="lua_setallocf");$/;"	f
setbuf	$C2_LIBDIR/libc/stdio.c2i	/^fn void setbuf(FILE* __stream, c_char* __buf);$/;"	f
setbuffer	$C2_LIBDIR/libc/stdio.c2i	/^fn void setbuffer(FILE* __stream, c_char* __buf, c_size __size);$/;"	f
setenv	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int setenv(const c_char* __name, const c_char* __value, c_int __replace);$/;"	f
setfield	$C2_LIBDIR/lua/lua.c2i	/^fn void  setfield(State *L, c_int idx, const c_char *k) @(cname="lua_setfield");$/;"	f
setglobal	$C2_LIBDIR/lua/lua.c2i	/^fn void  setglobal(State *L, const c_char *name) @(cname="lua_setglobal");$/;"	f
seti	$C2_LIBDIR/lua/lua.c2i	/^fn void  seti(State *L, c_int idx, Integer n) @(cname="lua_seti");$/;"	f
setjmp	$C2_LIBDIR/libc/csetjmp.c2i	/^fn i32 setjmp(JmpBuf __env);$/;"	f
setlinebuf	$C2_LIBDIR/libc/stdio.c2i	/^fn void setlinebuf(FILE* __stream);$/;"	f
setmetatable	$C2_LIBDIR/lua/lua.c2i	/^fn c_int setmetatable(State *L, c_int objindex) @(cname="lua_setmetatable");$/;"	f
setsockopt	$C2_LIBDIR/libc/sys_socket.c2i	/^fn c_int setsockopt(c_int sockfd, c_int level, c_int optname, const void* optval, u32 optlen);$/;"	f
setstate	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_char* setstate(c_char* __statebuf);$/;"	f
setstate_r	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int setstate_r(c_char* __statebuf, Random_data* __buf);$/;"	f
settable	$C2_LIBDIR/lua/lua.c2i	/^fn void  settable(State *L, c_int idx) @(cname="lua_settable");$/;"	f
settimeofday	$C2_LIBDIR/libc/sys_time.c2i	/^fn c_int settimeofday(const Timeval* tv, const Timezone* tz);$/;"	f
settop	$C2_LIBDIR/lua/lua.c2i	/^fn void settop(State* L, c_int idx) @(cname="lua_settop");$/;"	f
setuservalue	$C2_LIBDIR/lua/lua.c2i	/^fn void  setuservalue(State *L, c_int idx) @(cname="lua_setuservalue");$/;"	f
setvbuf	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int setvbuf(FILE* __stream, c_char* __buf, c_int __modes, c_size __n);$/;"	f
showCursor	$C2_LIBDIR/sdl2/sdl.c2i	/^fn c_int showCursor(c_int toggle) @(cname="SDL_ShowCursor");$/;"	f
sig	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_buf sig;$/;"	v
sig_oid	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_buf sig_oid;       \/**< CRL signature type identifier *\/$/;"	v
sig_oid2	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_buf sig_oid2;$/;"	v
sig_pk	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Pk_type_t sig_pk;           \/**< Internal representation of the Public Key algorithm of the/;"	v
sigaction	$C2_LIBDIR/libc/csignal.c2i	/^fn c_int sigaction(c_int signum, const Sigaction* act, Sigaction* oldact);$/;"	f
sigaddset	$C2_LIBDIR/libc/csignal.c2i	/^fn c_int sigaddset (Sigset* set, i32 signum);$/;"	f
sigemptyset	$C2_LIBDIR/libc/csignal.c2i	/^fn c_int sigemptyset(Sigset* set);$/;"	f
signalfd	$C2_LIBDIR/libc/sys_signalfd.c2i	/^fn c_int signalfd(c_int __fd, const csignal.Sigset* mask, c_int flags) @(cname="signalfd");$/;"	f
signbit	$C2_LIBDIR/math/math.c2i	/^fn c_int signbit(c_double d) { FP64_ u; u.d = d; return (u.u >> 63) & 1; }$/;"	f
signbitf	$C2_LIBDIR/math/math.c2i	/^fn c_int signbitf(c_float f) { FP32_ u; u.f = f; return (u.u >> 31) & 1; }$/;"	f
sigprocmask	$C2_LIBDIR/libc/csignal.c2i	/^fn c_int sigprocmask(c_int how, const Sigset* set, Sigset* oldset);$/;"	f
silence	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8 silence;              \/**< Audio buffer silence value (calculated) *\/$/;"	v
sin	$C2_LIBDIR/math/math.c2i	/^fn c_double sin(c_double);$/;"	f
sin_addr	$C2_LIBDIR/libc/sys_socket.c2i	/^    In_addr sin_addr;$/;"	v
sin_family	$C2_LIBDIR/libc/sys_socket.c2i	/^    SaFamily sin_family;$/;"	v
sin_port	$C2_LIBDIR/libc/sys_socket.c2i	/^    InPort sin_port;$/;"	v
sin_zero	$C2_LIBDIR/libc/sys_socket.c2i	/^    u8[8] sin_zero; \/\/ on 64-bit Ubuntu$/;"	v
sinf	$C2_LIBDIR/math/math.c2i	/^fn c_float sinf(c_float);$/;"	f
sinh	$C2_LIBDIR/math/math.c2i	/^fn c_double sinh(c_double);$/;"	f
sinhf	$C2_LIBDIR/math/math.c2i	/^fn c_float sinhf(c_float);$/;"	f
size	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_size          size;       \/**< Amount received in bytes *\/$/;"	v
size	$C2_LIBDIR/pthread/pthread.c2i	/^    char[SIZEOF_MUTEX_T] size;$/;"	v
size	$C2_LIBDIR/sdl2/sdl.c2i	/^    u32 size;                \/**< Audio buffer size in bytes (calculated) *\/$/;"	v
sleep	$C2_LIBDIR/libc/unistd.c2i	/^fn c_uint sleep(c_uint __seconds);$/;"	f
sll_addr	$C2_LIBDIR/libc/sys_socket.c2i	/^    c_uchar[8] sll_addr;$/;"	v
sll_family	$C2_LIBDIR/libc/sys_socket.c2i	/^    c_ushort sll_family;$/;"	v
sll_halen	$C2_LIBDIR/libc/sys_socket.c2i	/^    c_uchar sll_halen;$/;"	v
sll_hatype	$C2_LIBDIR/libc/sys_socket.c2i	/^    c_ushort sll_hatype;$/;"	v
sll_ifindex	$C2_LIBDIR/libc/sys_socket.c2i	/^    c_int sll_ifindex;$/;"	v
sll_pkttype	$C2_LIBDIR/libc/sys_socket.c2i	/^    c_uchar sll_pkttype;$/;"	v
sll_protocol	$C2_LIBDIR/libc/sys_socket.c2i	/^    c_ushort sll_protocol;   \/\/ Big-Endian!$/;"	v
snprintf	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int snprintf(c_char* __s, c_size size, const c_char* __format @(printf_format), ...);$/;"	f
socket	$C2_LIBDIR/libc/sys_socket.c2i	/^fn c_int socket(c_int domain, c_int type_, c_int protocol);$/;"	f
source	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Entropy_source_state[ENTROPY_MAX_SOURCES] source;$/;"	v
source_count	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int             source_count;$/;"	v
splice_fd_in	$C2_LIBDIR/io_uring/io_uring.c2i	/^        i32   splice_fd_in;$/;"	v
splice_flags	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u32       splice_flags;$/;"	v
splice_off_in	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u64   splice_off_in;$/;"	v
split_done	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_char split_done;     \/*!< current record already splitted? *\/$/;"	v
sprintf	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int sprintf(c_char* __s, const c_char* __format @(printf_format), ...);$/;"	f
sq	$C2_LIBDIR/io_uring/io_uring.c2i	/^    Sq sq;$/;"	v
sq_entries	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32 sq_entries;$/;"	v
sq_off	$C2_LIBDIR/io_uring/io_uring.c2i	/^    SqringOffsets sq_off;$/;"	v
sq_space_left	$C2_LIBDIR/io_uring/io_uring.c2i	/^fn u32 sq_space_left(const Ring* ring)$/;"	f
sq_thread_cpu	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32 sq_thread_cpu;$/;"	v
sq_thread_idle	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32 sq_thread_idle;$/;"	v
sqe_head	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32 sqe_head;$/;"	v
sqe_tail	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32 sqe_tail;$/;"	v
sqes	$C2_LIBDIR/io_uring/io_uring.c2i	/^    Sqe* sqes;$/;"	v
sqrt	$C2_LIBDIR/math/math.c2i	/^fn c_double sqrt(c_double);$/;"	f
sqrtf	$C2_LIBDIR/math/math.c2i	/^fn c_float sqrtf(c_float);$/;"	f
srand	$C2_LIBDIR/libc/stdlib.c2i	/^fn void srand(c_uint __seed);$/;"	f
srand48	$C2_LIBDIR/libc/stdlib.c2i	/^fn void srand48(c_long __seedval);$/;"	f
srand48_r	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int srand48_r(c_long __seedval, Drand48_data* __buffer);$/;"	f
srandom	$C2_LIBDIR/libc/stdlib.c2i	/^fn void srandom(c_uint __seed);$/;"	f
srandom_r	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int srandom_r(c_uint __seed, Random_data* __buf);$/;"	f
src	$C2_LIBDIR/sdl2/sdl.c2i	/^                         const Rect* src,$/;"	v
sscanf	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int sscanf(const c_char* __s, const c_char* __format, ...);$/;"	f
ssi_addr	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  u64 ssi_addr;$/;"	v
ssi_addr_lsb	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  u16 ssi_addr_lsb;$/;"	v
ssi_arch	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  u32 ssi_arch;$/;"	v
ssi_band	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  u32 ssi_band;$/;"	v
ssi_call_addr	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  u64 ssi_call_addr;$/;"	v
ssi_code	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  i32 ssi_code;$/;"	v
ssi_errno	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  i32 ssi_errno;$/;"	v
ssi_fd	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  i32 ssi_fd;$/;"	v
ssi_int	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  i32 ssi_int;$/;"	v
ssi_overrun	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  u32 ssi_overrun;$/;"	v
ssi_pid	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  u32 ssi_pid;$/;"	v
ssi_ptr	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  u64 ssi_ptr;$/;"	v
ssi_signo	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  u32 ssi_signo;$/;"	v
ssi_status	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  i32 ssi_status;$/;"	v
ssi_stime	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  u64 ssi_stime;$/;"	v
ssi_syscall	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  i32 ssi_syscall;$/;"	v
ssi_tid	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  u32 ssi_tid;$/;"	v
ssi_trapno	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  u32 ssi_trapno;$/;"	v
ssi_uid	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  u32 ssi_uid;$/;"	v
ssi_utime	$C2_LIBDIR/libc/sys_signalfd.c2i	/^  u64 ssi_utime;$/;"	v
ssl_conf_ca_chain	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void ssl_conf_ca_chain( Ssl_config *conf, X509_crt *ca_chain, X509_crl *ca_crl) @(cname="mbed/;"	f
ssl_conf_dbg	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void ssl_conf_dbg( Ssl_config *conf, Dbg_fn f_dbg, void  *p_dbg ) @(cname="mbedtls_ssl_conf_d/;"	f
ssl_conf_max_frag_len	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int ssl_conf_max_frag_len( Ssl_config *conf, c_uchar mfl_code) @(cname="mbedtls_ssl_conf_ma/;"	f
ssl_conf_own_cert	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int ssl_conf_own_cert( Ssl_config *conf, X509_crt *own_cert, Pk_context *pk_key) @(cname="m/;"	f
ssl_conf_read_timeout	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void ssl_conf_read_timeout(Ssl_config *conf, c_uint timeout) @(cname="mbedtls_ssl_conf_read_t/;"	f
ssl_conf_renegotiation	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void ssl_conf_renegotiation(Ssl_config *conf, c_int renegotiation) @(cname="mbedtls_ssl_conf_/;"	f
ssl_conf_rng	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void ssl_conf_rng( Ssl_config *conf, Rng_fn f_rng, void *p_rng) @(cname="mbedtls_ssl_conf_rng/;"	f
ssl_conf_session_tickets	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void ssl_conf_session_tickets( Ssl_config *conf, c_int use_tickets) @(cname="mbedtls_ssl_conf/;"	f
ssl_conf_verify	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void ssl_conf_verify(Ssl_config *conf, Verify_fn f_vrfy, void *p_vrfy) @(cname="mbedtls_ssl_c/;"	f
ssl_config_defaults	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int ssl_config_defaults( Ssl_config *conf, c_int endpoint, c_int transport, c_int preset ) /;"	f
ssl_config_init	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void ssl_config_init( Ssl_config *conf ) @(cname="mbedtls_ssl_config_init");$/;"	f
ssl_get_ciphersuite	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn const char* ssl_get_ciphersuite(const Ssl_context *ssl) @(cname="mbedtls_ssl_get_ciphersuite"/;"	f
ssl_get_input_max_frag_len	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_size ssl_get_input_max_frag_len( const Ssl_context *ssl ) @(cname="mbedtls_ssl_get_input_ma/;"	f
ssl_get_output_max_frag_len	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_size ssl_get_output_max_frag_len( const Ssl_context *ssl) @(cname="mbedtls_ssl_get_output_m/;"	f
ssl_get_record_expansion	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int ssl_get_record_expansion( const Ssl_context *ssl ) @(cname="mbedtls_ssl_get_record_expa/;"	f
ssl_get_version	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn const char* ssl_get_version( const Ssl_context *ssl) @(cname="mbedtls_ssl_get_version");$/;"	f
ssl_handshake	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int ssl_handshake(Ssl_context *ssl) @(cname="mbedtls_ssl_handshake");$/;"	f
ssl_init	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void ssl_init( Ssl_context *ssl ) @(cname="mbedtls_ssl_init");$/;"	f
ssl_set_bio	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void ssl_set_bio( Ssl_context *ssl, void *p_bio, Ssl_send_t f_send, Ssl_recv_t f_recv, Ssl_re/;"	f
ssl_set_hostname	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int ssl_set_hostname( Ssl_context *ssl, const char *hostname) @(cname="mbedtls_ssl_set_host/;"	f
ssl_set_timer_cb	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void ssl_set_timer_cb(Ssl_context *ssl, void *p_timer, Ssl_set_timer_t f_set_timer, Ssl_get_t/;"	f
ssl_setup	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int ssl_setup( Ssl_context *ssl, const Ssl_config *conf) @(cname="mbedtls_ssl_setup");$/;"	f
st_atime	$C2_LIBDIR/libc/sys_stat.c2i	/^    c_long  st_atime;$/;"	v
st_atime_nsec	$C2_LIBDIR/libc/sys_stat.c2i	/^    c_long  st_atime_nsec;$/;"	v
st_atimespec	$C2_LIBDIR/libc/sys_stat.c2i	/^    Timespec st_atimespec;$/;"	v
st_birthtimespec	$C2_LIBDIR/libc/sys_stat.c2i	/^    Timespec st_birthtimespec;$/;"	v
st_blksize	$C2_LIBDIR/libc/sys_stat.c2i	/^    i32 st_blksize;  \/\/ actually c_int$/;"	v
st_blocks	$C2_LIBDIR/libc/sys_stat.c2i	/^    i64 st_blocks;$/;"	v
st_ctime	$C2_LIBDIR/libc/sys_stat.c2i	/^    c_long  st_ctime;$/;"	v
st_ctime_nsec	$C2_LIBDIR/libc/sys_stat.c2i	/^    c_long  st_ctime_nsec;$/;"	v
st_ctimespec	$C2_LIBDIR/libc/sys_stat.c2i	/^    Timespec st_ctimespec;$/;"	v
st_dev	$C2_LIBDIR/libc/sys_stat.c2i	/^    u64 st_dev;$/;"	v
st_flags	$C2_LIBDIR/libc/sys_stat.c2i	/^    u32 st_flags;$/;"	v
st_gen	$C2_LIBDIR/libc/sys_stat.c2i	/^    u64 st_gen;$/;"	v
st_gid	$C2_LIBDIR/libc/sys_stat.c2i	/^    c_uint st_gid;$/;"	v
st_ino	$C2_LIBDIR/libc/sys_stat.c2i	/^    u64 st_ino;$/;"	v
st_lspare	$C2_LIBDIR/libc/sys_stat.c2i	/^    u64[10] st_lspare;$/;"	v
st_mode	$C2_LIBDIR/libc/sys_stat.c2i	/^    u32 st_mode;$/;"	v
st_mtime	$C2_LIBDIR/libc/sys_stat.c2i	/^    c_long  st_mtime;$/;"	v
st_mtime_nsec	$C2_LIBDIR/libc/sys_stat.c2i	/^    c_long  st_mtime_nsec;$/;"	v
st_mtimespec	$C2_LIBDIR/libc/sys_stat.c2i	/^    Timespec st_mtimespec;$/;"	v
st_nlink	$C2_LIBDIR/libc/sys_stat.c2i	/^    u64 st_nlink;$/;"	v
st_padding0	$C2_LIBDIR/libc/sys_stat.c2i	/^    c_ushort st_padding0;$/;"	v
st_padding1	$C2_LIBDIR/libc/sys_stat.c2i	/^    i32 st_padding1;$/;"	v
st_qspare	$C2_LIBDIR/libc/sys_stat.c2i	/^    c_long[2] st_qspare;$/;"	v
st_rdev	$C2_LIBDIR/libc/sys_stat.c2i	/^    u64 st_rdev;$/;"	v
st_size	$C2_LIBDIR/libc/sys_stat.c2i	/^    c_ulong st_size;$/;"	v
st_uid	$C2_LIBDIR/libc/sys_stat.c2i	/^    c_uint st_uid;$/;"	v
start	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Time_t start;       \/*!< starting time      *\/$/;"	v
start	$C2_LIBDIR/sdl2/sdl.c2i	/^    i32 start;                               \/**< The start cursor of selected editing text *\/$/;"	v
startTextInput	$C2_LIBDIR/sdl2/sdl.c2i	/^fn void startTextInput() @(cname="SDL_StartTextInput");$/;"	f
stat	$C2_LIBDIR/libc/sys_stat.c2i	/^fn c_int stat(const c_char* pathname, Stat* buf);$/;"	f
state	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_ulonglong[8] state;          \/*!< The intermediate digest state. *\/$/;"	v
state	$C2_LIBDIR/sdl2/sdl.c2i	/^    u8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	v
status	$C2_LIBDIR/lua/lua.c2i	/^fn c_int status(State *L) @(cname="lua_status");$/;"	f
statx	$C2_LIBDIR/io_uring/io_uring.c2i	/^struct statx;$/;"	v
statx_flags	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u32       statx_flags;$/;"	v
stdarg	$C2_LIBDIR/libc/stdarg.c2i	/^module stdarg;$/;"	v
stderr	$C2_LIBDIR/libc/stdio.c2i	/^FILE* stderr;$/;"	v
stdin	$C2_LIBDIR/libc/stdio.c2i	/^FILE* stdin;$/;"	v
stdio	$C2_LIBDIR/libc/stdio.c2i	/^module stdio;$/;"	v
stdlib	$C2_LIBDIR/libc/stdlib.c2i	/^module stdlib;$/;"	v
stdout	$C2_LIBDIR/libc/stdio.c2i	/^FILE* stdout;$/;"	v
stopTextInput	$C2_LIBDIR/sdl2/sdl.c2i	/^fn void stopTextInput() @(cname="SDL_StopTextInput");$/;"	f
stpcpy	$C2_LIBDIR/libc/string.c2i	/^fn c_char* stpcpy(c_char* dest, const c_char* src);$/;"	f
stpncpy	$C2_LIBDIR/libc/string.c2i	/^fn c_char* stpncpy(c_char* dest, const c_char* src, c_size n);$/;"	f
strcasecmp	$C2_LIBDIR/libc/string.c2i	/^fn c_int strcasecmp(const c_char* s1, const c_char* s2);$/;"	f
strcasestr	$C2_LIBDIR/libc/string.c2i	/^fn c_char* strcasestr(const c_char* s1, const c_char* s2);$/;"	f
strcat	$C2_LIBDIR/libc/string.c2i	/^fn c_char* strcat(c_char* dest, const c_char* src);$/;"	f
strchr	$C2_LIBDIR/libc/string.c2i	/^fn c_char* strchr(const c_char* s, c_int c);$/;"	f
strchrnul	$C2_LIBDIR/libc/string.c2i	/^fn c_char* strchrnul(const c_char* s, c_int c);$/;"	f
strcmp	$C2_LIBDIR/libc/string.c2i	/^fn c_int strcmp(const c_char* s1, const c_char* s2);$/;"	f
strcoll	$C2_LIBDIR/libc/string.c2i	/^fn c_int strcoll(const c_char* s1, const c_char* s2);$/;"	f
strcpy	$C2_LIBDIR/libc/string.c2i	/^fn c_char* strcpy(c_char* dest, const c_char* src);$/;"	f
strcspn	$C2_LIBDIR/libc/string.c2i	/^fn c_size strcspn(const c_char* s1, const c_char* s2);$/;"	f
strdup	$C2_LIBDIR/libc/string.c2i	/^fn c_char* strdup(const c_char* s);$/;"	f
strerror	$C2_LIBDIR/libc/string.c2i	/^fn c_char* strerror(c_int errnum);$/;"	f
strerror	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void strerror(c_int ret, char *buf, c_size buflen) @(cname="mbedtls_strerror");$/;"	f
strerror_r	$C2_LIBDIR/libc/string.c2i	/^fn c_int strerror_r(c_int errnum, c_char* dest, c_size n);$/;"	f
strftime	$C2_LIBDIR/libc/libc_time.c2i	/^fn c_size strftime(c_char *s, c_size max, const c_char *format, const Tm *tm);$/;"	f
string	$C2_LIBDIR/libc/stdlib.c2i	/^import string;$/;"	v
string	$C2_LIBDIR/libc/string.c2i	/^module string;$/;"	v
strings	$C2_LIBDIR/libc/strings.c2i	/^module strings;$/;"	v
stringtonumber	$C2_LIBDIR/lua/lua.c2i	/^fn c_size stringtonumber(State *L, const c_char *s) @(cname="lua_stringtonumber");$/;"	f
strlcat	$C2_LIBDIR/libc/string.c2i	/^fn c_size strlcat(c_char* dest, const c_char* src, c_size n);$/;"	f
strlcpy	$C2_LIBDIR/libc/string.c2i	/^fn c_size strlcpy(c_char* dest, const c_char* src, c_size n);$/;"	f
strlen	$C2_LIBDIR/libc/string.c2i	/^fn c_size strlen(const c_char* s);$/;"	f
strncasecmp	$C2_LIBDIR/libc/string.c2i	/^fn c_int strncasecmp(const c_char* s1, const c_char* s2, c_size n);$/;"	f
strncat	$C2_LIBDIR/libc/string.c2i	/^fn c_char* strncat(c_char* dest, const c_char* src, c_size n);$/;"	f
strncmp	$C2_LIBDIR/libc/string.c2i	/^fn c_int strncmp(const c_char* s1, const c_char* s2, c_size n);$/;"	f
strncpy	$C2_LIBDIR/libc/string.c2i	/^fn c_char* strncpy(c_char* dest, const c_char* src, c_size n);$/;"	f
strndup	$C2_LIBDIR/libc/string.c2i	/^fn c_char* strndup(const c_char* s, c_size n);$/;"	f
strnlen	$C2_LIBDIR/libc/string.c2i	/^fn c_size strnlen(const c_char* s, c_size n);$/;"	f
strnstr	$C2_LIBDIR/libc/string.c2i	/^fn c_char* strnstr(const c_char* s1, const c_char* s2, c_size n);$/;"	f
strong	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int           strong;     \/**< Is the source strong? *\/$/;"	v
strpbrk	$C2_LIBDIR/libc/string.c2i	/^fn c_char* strpbrk(const c_char* s1, const c_char* s2);$/;"	f
strrchr	$C2_LIBDIR/libc/string.c2i	/^fn c_char* strrchr(const c_char* s, c_int c);$/;"	f
strsep	$C2_LIBDIR/libc/string.c2i	/^fn c_char* strsep(c_char** stringp, const c_char* delim);$/;"	f
strsignal	$C2_LIBDIR/libc/string.c2i	/^fn c_char* strsignal(c_int sig);$/;"	f
strspn	$C2_LIBDIR/libc/string.c2i	/^fn c_size strspn(const c_char* s1, const c_char* s2);$/;"	f
strstr	$C2_LIBDIR/libc/string.c2i	/^fn c_char* strstr(const c_char* s1, const c_char* s2);$/;"	f
strtod	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_double strtod(const c_char* nptr, c_char** endptr);$/;"	f
strtof	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_float strtof(const c_char* nptr, c_char** endptr);$/;"	f
strtok	$C2_LIBDIR/libc/string.c2i	/^fn c_char* strtok(c_char* s1, const c_char* s2);$/;"	f
strtok_r	$C2_LIBDIR/libc/string.c2i	/^fn c_char* strtok_r(c_char* s, const c_char* delim, c_char** save_ptr);$/;"	f
strtol	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_long strtol(const c_char* nptr, c_char** endptr, c_int base);$/;"	f
strtoll	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_longlong strtoll(const c_char* nptr, c_char** endptr, c_int base);$/;"	f
strtoq	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_longlong strtoq(const c_char* nptr, c_char** endptr, c_int base);$/;"	f
strtoul	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_ulong strtoul(const c_char* nptr, c_char** endptr, c_int base);$/;"	f
strtoull	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_ulonglong strtoull(const c_char* nptr, c_char** endptr, c_int base);$/;"	f
strtouq	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_ulonglong strtouq(const c_char* nptr, c_char** endptr, c_int base);$/;"	f
struct	$C2_LIBDIR/c2/varargs.c2i	/^type va_list struct @(cname="va_list") {$/;"	v
struct	$C2_LIBDIR/io_uring/io_uring.c2i	/^type SqringOffsets struct @(cname="io_sqring_offsets") {$/;"	v
struct	$C2_LIBDIR/libc/csetjmp.c2i	/^type JmpBufTag struct @(cname="__jmp_buf_tag", aligned=8) {$/;"	v
struct	$C2_LIBDIR/libc/csignal.c2i	/^type Siginfo_t struct @(cname="siginfo_t") {$/;"	v
struct	$C2_LIBDIR/libc/ctermios.c2i	/^type Termios struct @(cname="termios") {$/;"	v
struct	$C2_LIBDIR/libc/libc_dirent.c2i	/^type Dirent struct @(cname="dirent") {$/;"	v
struct	$C2_LIBDIR/libc/libc_poll.c2i	/^type Pollfd struct @(cname="pollfd") {$/;"	v
struct	$C2_LIBDIR/libc/linux_ifether.c2i	/^type Hdr struct @(cname="ethhdr", packed) {$/;"	v
struct	$C2_LIBDIR/libc/net_if.c2i	/^type Req struct @(cname="ifreq") {$/;"	v
struct	$C2_LIBDIR/libc/regex.c2i	/^type Regmatch_t struct @(cname="regmatch_t") {$/;"	v
struct	$C2_LIBDIR/libc/stdarg.c2i	/^type va_list struct @(cname="va_list") {$/;"	v
struct	$C2_LIBDIR/libc/stdio.c2i	/^type IO_marker struct @(cname="_IO_marker") {$/;"	v
struct	$C2_LIBDIR/libc/stdlib.c2i	/^type Random_data struct @(opaque, cname="random_data");$/;"	v
struct	$C2_LIBDIR/libc/sys_socket.c2i	/^type Sockaddr_un struct @(cname="sockaddr_un") {$/;"	v
struct	$C2_LIBDIR/libc/sys_stat.c2i	/^type Timespec struct @(cname="timespec", no_typedef) {$/;"	v
struct	$C2_LIBDIR/libc/sys_time.c2i	/^type Timezone struct @(cname="timezone") {$/;"	v
struct	$C2_LIBDIR/libc/sys_utsname.c2i	/^type Name struct @(cname="utsname") {$/;"	v
struct	$C2_LIBDIR/lua/lua.c2i	/^type State struct @(cname="lua_State") { }$/;"	v
struct	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type X509_time struct @(cname="mbedtls_x509_time") {$/;"	v
struct	$C2_LIBDIR/pthread/pthread.c2i	/^type PthreadAttr struct @(cname="pthread_attr_t") {$/;"	v
struct	$C2_LIBDIR/sdl2/sdl.c2i	/^type Window struct @(opaque, cname="SDL_Window");$/;"	v
struct	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^type Mix_Music  struct @(opaque, cname="Mix_Music");$/;"	v
struct	$C2_LIBDIR/sdl2_ttf/sdl_ttf.c2i	/^type Font struct @(cname="TTF_FONT", opaque);$/;"	v
structure	$C2_LIBDIR/io_uring/io_uring.c2i	/^ * return an allocated io_uring_probe structure, or NULL if probe fails (for$/;"	v
strxfrm	$C2_LIBDIR/libc/string.c2i	/^fn c_size strxfrm(c_char* s1, const c_char* s2, c_size n);$/;"	f
subject	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_name subject;          \/**< The parsed subject data (named information object). *\/$/;"	v
subject_alt_names	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_sequence subject_alt_names;    \/**< Optional list of raw entries of Subject Alternativ/;"	v
subject_id	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_buf subject_id;        \/**< Optional X.509 v2\/v3 subject unique identifier. *\/$/;"	v
subject_raw	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_buf subject_raw;       \/**< The raw subject data (DER). Used for quick comparison. *\/$/;"	v
success	$C2_LIBDIR/io_uring/io_uring.c2i	/^ * cqe_ptr filled in on success, -errno on failure.$/;"	v
sun_family	$C2_LIBDIR/libc/sys_socket.c2i	/^    SaFamily sun_family;$/;"	v
sun_path	$C2_LIBDIR/libc/sys_socket.c2i	/^    char[UNIX_PATH_MAX] sun_path;$/;"	v
switch	$C2_LIBDIR/sdl2/sdl.c2i	/^                                           switch, video mode switch *\/$/;"	v
sym	$C2_LIBDIR/sdl2/sdl.c2i	/^    Keycode sym;            \/**< SDL virtual key code - see ::SDL_Keycode for details *\/$/;"	v
sync	$C2_LIBDIR/libc/unistd.c2i	/^fn void sync();$/;"	f
sync_range_flags	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u32       sync_range_flags;$/;"	v
sys_ioctl	$C2_LIBDIR/libc/sys_ioctl.c2i	/^module sys_ioctl;$/;"	v
sys_mman	$C2_LIBDIR/libc/sys_mman.c2i	/^module sys_mman;$/;"	v
sys_sendfile	$C2_LIBDIR/libc/sys_sendfile.c2i	/^module sys_sendfile;$/;"	v
sys_signalfd	$C2_LIBDIR/libc/sys_signalfd.c2i	/^module sys_signalfd;$/;"	v
sys_socket	$C2_LIBDIR/io_uring/io_uring.c2i	/^import sys_socket;$/;"	v
sys_socket	$C2_LIBDIR/libc/ifaddrs.c2i	/^import sys_socket;$/;"	v
sys_socket	$C2_LIBDIR/libc/net_if.c2i	/^import sys_socket;$/;"	v
sys_socket	$C2_LIBDIR/libc/sys_socket.c2i	/^module sys_socket;$/;"	v
sys_stat	$C2_LIBDIR/libc/sys_stat.c2i	/^module sys_stat;$/;"	v
sys_time	$C2_LIBDIR/libc/sys_time.c2i	/^module sys_time;$/;"	v
sys_utsname	$C2_LIBDIR/libc/sys_utsname.c2i	/^module sys_utsname;$/;"	v
sysconf	$C2_LIBDIR/libc/unistd.c2i	/^fn c_long sysconf(c_int name);$/;"	f
sysname	$C2_LIBDIR/libc/sys_utsname.c2i	/^    char[NAME_LEN] sysname;$/;"	v
system	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int system(const c_char* __command);$/;"	f
syswm	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_SysWMEvent syswm;                   \/**< System dependent window event data *\/$/;"	v
tag	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int tag;                \/**< ASN1 type, e.g. MBEDTLS_ASN1_UTF8_STRING. *\/$/;"	v
tags	$C2_LIBDIR/io_uring/io_uring.c2i	/^				   const u64* tags, u32 nr) @(cname="io_uring_register_buffers_tags");$/;"	v
tail	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32 tail;$/;"	v
tan	$C2_LIBDIR/math/math.c2i	/^fn c_double tan(c_double);$/;"	f
tanf	$C2_LIBDIR/math/math.c2i	/^fn c_float tanf(c_float);$/;"	f
tanh	$C2_LIBDIR/math/math.c2i	/^fn c_double tanh(c_double);$/;"	f
tanhf	$C2_LIBDIR/math/math.c2i	/^fn c_float tanhf(c_float);$/;"	f
tbs	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_buf tbs;           \/**< The raw certificate body (DER). The part that is To Be Signed./;"	v
tcgetattr	$C2_LIBDIR/libc/ctermios.c2i	/^fn c_int tcgetattr(c_int fd, Termios* termios_p);$/;"	f
tcsetattr	$C2_LIBDIR/libc/ctermios.c2i	/^fn c_int tcsetattr(c_int fd, c_int optional_actions, const Termios* termios_p);$/;"	f
tempnam	$C2_LIBDIR/libc/stdio.c2i	/^fn c_char* tempnam(const c_char* __dir, const c_char* __pfx);$/;"	f
test_array	$C2_LIBDIR/c2/c2_test.c2i	/^char[] test_array;$/;"	v
text	$C2_LIBDIR/sdl2/sdl.c2i	/^    char[TextInputEvent_Text_Size] text;  \/**< The input text *\/$/;"	v
texture	$C2_LIBDIR/sdl2/sdl.c2i	/^                         Texture* texture,$/;"	v
tfinger	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_TouchFingerEvent tfinger;           \/**< Touch finger event data *\/$/;"	v
tgamma	$C2_LIBDIR/math/math.c2i	/^fn c_double tgamma(c_double);$/;"	f
tgammaf	$C2_LIBDIR/math/math.c2i	/^fn c_float tgammaf(c_float);$/;"	f
this_update	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_time this_update;$/;"	v
threshold	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_size          threshold;  \/**< Minimum bytes required before release *\/$/;"	v
ticket_len	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_size ticket_len;          \/*!< session ticket length   *\/$/;"	v
ticket_lifetime	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uint ticket_lifetime;   \/*!< ticket lifetime hint    *\/$/;"	v
time	$C2_LIBDIR/libc/libc_time.c2i	/^fn Time time(Time* tloc);$/;"	f
timeout_flags	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u32       timeout_flags;$/;"	v
timer	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Timing_hr_time   timer;$/;"	v
timestamp	$C2_LIBDIR/sdl2/sdl.c2i	/^    u32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	v
timing_get_delay	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int timing_get_delay(void *data) @(cname="mbedtls_timing_get_delay");$/;"	f
timing_set_delay	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void timing_set_delay( void *data, u32 int_ms, u32 fin_ms ) @(cname="mbedtls_timing_set_delay/;"	f
tm_gmtoff	$C2_LIBDIR/libc/libc_time.c2i	/^    c_long tm_gmtoff;$/;"	v
tm_hour	$C2_LIBDIR/libc/libc_time.c2i	/^    c_int tm_hour;   \/* Hours (0-23) *\/$/;"	v
tm_isdst	$C2_LIBDIR/libc/libc_time.c2i	/^    c_int tm_isdst;  \/* Daylight saving time *\/$/;"	v
tm_mday	$C2_LIBDIR/libc/libc_time.c2i	/^    c_int tm_mday;   \/* Day of the month (1-31) *\/$/;"	v
tm_min	$C2_LIBDIR/libc/libc_time.c2i	/^    c_int tm_min;    \/* Minutes (0-59) *\/$/;"	v
tm_mon	$C2_LIBDIR/libc/libc_time.c2i	/^    c_int tm_mon;    \/* Month (0-11) *\/$/;"	v
tm_sec	$C2_LIBDIR/libc/libc_time.c2i	/^    c_int tm_sec;    \/* Seconds (0-60) *\/$/;"	v
tm_wday	$C2_LIBDIR/libc/libc_time.c2i	/^    c_int tm_wday;   \/* Day of the week (0-6, Sunday = 0) *\/$/;"	v
tm_yday	$C2_LIBDIR/libc/libc_time.c2i	/^    c_int tm_yday;   \/* Day in the year (0-365, 1 Jan = 0) *\/$/;"	v
tm_year	$C2_LIBDIR/libc/libc_time.c2i	/^    c_int tm_year;   \/* Year - 1900 *\/$/;"	v
tm_zone	$C2_LIBDIR/libc/libc_time.c2i	/^    const c_char* tm_zone;$/;"	v
tmpfile	$C2_LIBDIR/libc/stdio.c2i	/^fn FILE* tmpfile();$/;"	f
tmpfile64	$C2_LIBDIR/libc/stdio.c2i	/^fn FILE* tmpfile64(void);$/;"	f
tmpnam_r	$C2_LIBDIR/libc/stdio.c2i	/^fn c_char* tmpnam_r(c_char* __s);$/;"	f
toboolean	$C2_LIBDIR/lua/lua.c2i	/^fn c_int toboolean(State *L, c_int idx) @(cname="lua_toboolean");$/;"	f
tocfunction	$C2_LIBDIR/lua/lua.c2i	/^fn CFunction tocfunction(State *L, c_int idx) @(cname="lua_tocfunction");$/;"	f
tointegerx	$C2_LIBDIR/lua/lua.c2i	/^fn Integer tointegerx(State *L, c_int idx, c_int *isnum) @(cname="lua_tointegerx");$/;"	f
tolower	$C2_LIBDIR/libc/ctype.c2i	/^fn c_int tolower(c_int c) @(pure);$/;"	f
tolstring	$C2_LIBDIR/lua/lua.c2i	/^fn const c_char* tolstring(State *L, c_int idx, c_size *len) @(cname="lua_tolstring");$/;"	f
tonumberx	$C2_LIBDIR/lua/lua.c2i	/^fn Number tonumberx(State *L, c_int idx, c_int *isnum) @(cname="lua_tonumberx");$/;"	f
topointer	$C2_LIBDIR/lua/lua.c2i	/^fn const void* topointer(State *L, c_int idx) @(cname="lua_topointer");$/;"	f
total	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_ulonglong[2] total;          \/*!< The number of Bytes processed. *\/$/;"	v
toupper	$C2_LIBDIR/libc/ctype.c2i	/^fn c_int toupper(c_int c) @(pure);$/;"	f
touserdata	$C2_LIBDIR/lua/lua.c2i	/^fn void* touserdata(State *L, c_int idx) @(cname="lua_touserdata");$/;"	f
true	$C2_LIBDIR/io_uring/io_uring.c2i	/^		return true;$/;"	v
trunc	$C2_LIBDIR/math/math.c2i	/^fn c_double trunc(c_double);$/;"	f
trunc_hmac	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int trunc_hmac;             \/*!< flag for truncated hmac activation   *\/$/;"	v
truncf	$C2_LIBDIR/math/math.c2i	/^fn c_float truncf(c_float);$/;"	f
tv_nsec	$C2_LIBDIR/libc/linux_types.c2i	/^    c_longlong tv_nsec; \/\/ nanoseconds$/;"	v
tv_nsec	$C2_LIBDIR/libc/sys_stat.c2i	/^    c_long tv_nsec;$/;"	v
tv_sec	$C2_LIBDIR/libc/linux_types.c2i	/^    c_longlong tv_sec; \/\/ seconds$/;"	v
tv_sec	$C2_LIBDIR/libc/sys_stat.c2i	/^    c_long tv_sec;$/;"	v
tv_sec	$C2_LIBDIR/libc/sys_time.c2i	/^    Time tv_sec;$/;"	v
tv_usec	$C2_LIBDIR/libc/sys_time.c2i	/^    SuSeconds tv_usec;$/;"	v
type_	$C2_LIBDIR/sdl2/sdl.c2i	/^    u32 type_;       \/**< ::SDL_MOUSEMOTION *\/$/;"	v
typename	$C2_LIBDIR/lua/lua.c2i	/^fn const c_char* typename(State *L, c_int tp) @(cname="lua_typename");$/;"	f
tz_dsttime	$C2_LIBDIR/libc/sys_time.c2i	/^    c_int tz_dsttime;$/;"	v
tz_minuteswest	$C2_LIBDIR/libc/sys_time.c2i	/^    c_int tz_minuteswest;$/;"	v
u16	$C2_LIBDIR/c2/c2.c2i	/^type c_ushort u16;$/;"	v
u16	$C2_LIBDIR/c2/u16.c2i	/^module u16;$/;"	v
u16	$C2_LIBDIR/libc/sys_socket.c2i	/^type SaFamily u16 @(cname="sa_family_t");$/;"	v
u16	$C2_LIBDIR/sdl2/sdl.c2i	/^type EventType enum u16 @(cname="SDL_EventType") {$/;"	v
u32	$C2_LIBDIR/c2/c2.c2i	/^type c_ulong u32;$/;"	v
u32	$C2_LIBDIR/c2/u32.c2i	/^module u32;$/;"	v
u32	$C2_LIBDIR/libc/net_if.c2i	/^type Flag enum u32 @(cname="ifflag") {$/;"	v
u32	$C2_LIBDIR/libc/sys_socket.c2i	/^type SocketType enum u32 @(cname="__socket_type") {$/;"	v
u32	$C2_LIBDIR/sdl2/sdl.c2i	/^type AudioDeviceID u32 @(cname="SDL_AudioDeviceID");$/;"	v
u64	$C2_LIBDIR/c2/c2.c2i	/^type c_ulonglong u64;$/;"	v
u64	$C2_LIBDIR/c2/u64.c2i	/^module u64;$/;"	v
u64	$C2_LIBDIR/libc/stdio.c2i	/^type Offset u64 @(cname="off_t");$/;"	v
u64	$C2_LIBDIR/libc/sys_mman.c2i	/^type Offset u64 @(cname="off_t");$/;"	v
u64	$C2_LIBDIR/libc/sys_sendfile.c2i	/^type Offset u64 @(cname="off_t");$/;"	v
u8	$C2_LIBDIR/c2/c2.c2i	/^type c_uchar u8;$/;"	v
u8	$C2_LIBDIR/c2/u8.c2i	/^module u8;$/;"	v
u8	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^type Pk_type_t enum u8 @(cname="mbedtls_pk_type_t") {$/;"	v
uio	$C2_LIBDIR/io_uring/io_uring.c2i	/^import uio;$/;"	v
uio	$C2_LIBDIR/libc/uio.c2i	/^module uio;$/;"	v
umask	$C2_LIBDIR/libc/sys_stat.c2i	/^fn Mode umask(Mode mask);$/;"	f
uname	$C2_LIBDIR/libc/sys_utsname.c2i	/^fn c_int uname(Name* buf);$/;"	f
ungetc	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int ungetc(c_int __c, FILE* __stream);$/;"	f
union	$C2_LIBDIR/pthread/pthread.c2i	/^type MutexAttr union @(cname="pthread_mutexattr_t") {$/;"	v
union	$C2_LIBDIR/sdl2/sdl.c2i	/^type Event union @(cname="SDL_Event") {$/;"	v
unistd	$C2_LIBDIR/libc/unistd.c2i	/^module unistd;$/;"	v
unlink	$C2_LIBDIR/libc/unistd.c2i	/^fn c_int unlink(const char* name);$/;"	f
unlink_flags	$C2_LIBDIR/io_uring/io_uring.c2i	/^        u32       unlink_flags;$/;"	v
unsetenv	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int unsetenv(const c_char* __name);$/;"	f
unused	$C2_LIBDIR/sdl2/sdl.c2i	/^    u32 unused;$/;"	v
user	$C2_LIBDIR/sdl2/sdl.c2i	/^    SDL_UserEvent user;                     \/**< Custom event data *\/$/;"	v
user_data	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u64   user_data;  \/* sqe->data submission passed back *\/$/;"	v
userdata	$C2_LIBDIR/sdl2/sdl.c2i	/^    void* userdata;$/;"	v
usize	$C2_LIBDIR/c2/usize.c2i	/^module usize;$/;"	v
usleep	$C2_LIBDIR/libc/unistd.c2i	/^fn i32 usleep(c_ulonglong __useconds);$/;"	f
v3_ext	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_buf v3_ext;            \/**< Optional X.509 v3 extensions.  *\/$/;"	v
va_end	$C2_LIBDIR/c2/varargs.c2i	/^fn void va_end(va_list ap);$/;"	f
va_end	$C2_LIBDIR/libc/stdarg.c2i	/^fn void va_end(va_list ap);$/;"	f
va_list	$C2_LIBDIR/c2/varargs.c2i	/^type va_list struct @(cname="va_list") {$/;"	t
va_list	$C2_LIBDIR/libc/stdarg.c2i	/^type va_list struct @(cname="va_list") {$/;"	t
va_start	$C2_LIBDIR/c2/varargs.c2i	/^fn void va_start(va_list ap, ...);$/;"	f
va_start	$C2_LIBDIR/libc/stdarg.c2i	/^fn void va_start(va_list ap, const c_char* last);$/;"	f
val	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    Asn1_buf val;                   \/**< The named value. *\/$/;"	v
valid_from	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_time valid_from;       \/**< Start time of certificate validity. *\/$/;"	v
valid_to	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    X509_time valid_to;         \/**< End time of certificate validity. *\/$/;"	v
valloc	$C2_LIBDIR/libc/stdlib.c2i	/^fn void* valloc(c_size size);$/;"	f
varargs	$C2_LIBDIR/c2/varargs.c2i	/^module varargs;$/;"	v
vdprintf	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int vdprintf(c_int __fd, const c_char *format, va_list ap);$/;"	f
verify_data_len	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_size verify_data_len;             \/*!<  length of verify data stored   *\/$/;"	v
verify_result	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_uint verify_result;          \/*!<  verification result     *\/$/;"	v
version	$C2_LIBDIR/libc/sys_utsname.c2i	/^    char[NAME_LEN] version;$/;"	v
version	$C2_LIBDIR/lua/lua.c2i	/^fn const Number* version(State *L) @(cname="lua_version");$/;"	f
version	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int version;            \/**< CRL version (1=v1, 2=v2) *\/$/;"	v
version	$C2_LIBDIR/sdl2/sdl.c2i	/^    u32 version;$/;"	v
versionsort	$C2_LIBDIR/libc/libc_dirent.c2i	/^fn c_int versionsort(const Dirent**, const Dirent**);$/;"	f
vfprintf	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int vfprintf(FILE* stream, const c_char *format, va_list ap);$/;"	f
volume	$C2_LIBDIR/sdl2_mixer/sdl_mixer.c2i	/^    u8 volume;$/;"	v
vprintf	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int vprintf(const c_char* format, va_list ap);$/;"	f
vsnprintf	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int vsnprintf(c_char* str, c_size size, const c_char *format, va_list ap);$/;"	f
vsprintf	$C2_LIBDIR/libc/stdio.c2i	/^fn c_int vsprintf(c_char* str, const c_char *format, va_list ap);$/;"	f
wait	$C2_LIBDIR/libc/unistd.c2i	/^fn Pid wait(c_int* wstatus);$/;"	f
waitEventTimeout	$C2_LIBDIR/sdl2/sdl.c2i	/^fn c_int waitEventTimeout(Event* event, c_int timeout_ms) @(cname="SDL_WaitEventTimeout");$/;"	f
wait_nr	$C2_LIBDIR/io_uring/io_uring.c2i	/^		       unsigned wait_nr, struct __kernel_timespec *ts,$/;"	v
waitpid	$C2_LIBDIR/libc/unistd.c2i	/^fn Pid waitpid(Pid pid, c_int* wstatus, c_int options);$/;"	f
wcstombs	$C2_LIBDIR/libc/stdlib.c2i	/^fn c_int wcstombs(c_char* __s, const c_int* __pwcs, c_size __n);$/;"	f
wheel	$C2_LIBDIR/sdl2/sdl.c2i	/^    MouseWheelEvent wheel;                  \/**< Mouse wheel event data *\/$/;"	v
which	$C2_LIBDIR/sdl2/sdl.c2i	/^    u32 which;       \/**< The mouse instance id, or SDL_TOUCH_MOUSEID *\/$/;"	v
width	$C2_LIBDIR/c2/char.c2i	/^const u8 width = 8;$/;"	v
width	$C2_LIBDIR/c2/f32.c2i	/^const u8 width = 32;$/;"	v
width	$C2_LIBDIR/c2/f64.c2i	/^const u8 width = 32;$/;"	v
width	$C2_LIBDIR/c2/i16.c2i	/^const u8 width = 16;$/;"	v
width	$C2_LIBDIR/c2/i32.c2i	/^const u8 width = 32;$/;"	v
width	$C2_LIBDIR/c2/i64.c2i	/^const u8 width = 64;$/;"	v
width	$C2_LIBDIR/c2/i8.c2i	/^const u8 width = 8;$/;"	v
width	$C2_LIBDIR/c2/isize.c2i	/^const u8 width = 64;$/;"	v
width	$C2_LIBDIR/c2/u16.c2i	/^const u8 width = 16;$/;"	v
width	$C2_LIBDIR/c2/u32.c2i	/^const u8 width = 32;$/;"	v
width	$C2_LIBDIR/c2/u64.c2i	/^const u8 width = 64;$/;"	v
width	$C2_LIBDIR/c2/u8.c2i	/^const u8 width = 8;$/;"	v
width	$C2_LIBDIR/c2/usize.c2i	/^const u8 width = 64;$/;"	v
window	$C2_LIBDIR/sdl2/sdl.c2i	/^    WindowEvent window;                     \/**< Window event data *\/$/;"	v
windowID	$C2_LIBDIR/sdl2/sdl.c2i	/^    u32 windowID;    \/**< The window with mouse focus, if any *\/$/;"	v
wq_fd	$C2_LIBDIR/io_uring/io_uring.c2i	/^    u32 wq_fd;$/;"	v
write	$C2_LIBDIR/libc/unistd.c2i	/^fn c_ssize write(c_int fd, const void* buf, c_size count);$/;"	f
writev	$C2_LIBDIR/libc/uio.c2i	/^fn isize writev(c_int fd, const Iovec* iovec, c_int count);$/;"	f
x509_crt_free	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void x509_crt_free(X509_crt *crt) @(cname="mbedtls_x509_crt_free");$/;"	f
x509_crt_info	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int x509_crt_info(char *buf, c_size size, const char *prefix, const X509_crt *crt) @(cname=/;"	f
x509_crt_init	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn void x509_crt_init(X509_crt* crt) @(cname="mbedtls_x509_crt_init");$/;"	f
x509_crt_parse	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int x509_crt_parse( X509_crt *chain, const c_uchar *buf, c_size buflen ) @(cname="mbedtls_x/;"	f
x509_crt_parse_file	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int x509_crt_parse_file( X509_crt *chain, const char *path) @(cname="mbedtls_x509_crt_parse/;"	f
x509_crt_parse_path	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int x509_crt_parse_path( X509_crt *chain, const char *path ) @(cname="mbedtls_x509_crt_pars/;"	f
x509_crt_verify_info	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^fn c_int x509_crt_verify_info(char *buf, c_size size, const char *prefix, c_uint flags) @(cname=/;"	f
xmove	$C2_LIBDIR/lua/lua.c2i	/^fn void xmove(State *from, State *to, c_int n) @(cname="lua_xmove");$/;"	f
xrel	$C2_LIBDIR/sdl2/sdl.c2i	/^    i32 xrel;        \/**< The relative motion in the X direction *\/$/;"	v
year	$C2_LIBDIR/mbedtls/mbedtls.c2i	/^    c_int year;$/;"	v
yieldk	$C2_LIBDIR/lua/lua.c2i	/^fn c_int yieldk(State *L, c_int nresults, KContext ctx,$/;"	f
yrel	$C2_LIBDIR/sdl2/sdl.c2i	/^    i32 yrel;        \/**< The relative motion in the Y direction *\/$/;"	v
