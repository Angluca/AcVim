AAUDIO_CREATE_STREAMBUILDER_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    AAUDIO_CREATE_STREAMBUILDER_FAILED = 22,$/;"	v
AAUDIO_PTHREAD_CREATE_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    AAUDIO_PTHREAD_CREATE_FAILED = 19,$/;"	v
AAUDIO_RESTARTING_STREAM_AFTER_ERROR	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    AAUDIO_RESTARTING_STREAM_AFTER_ERROR = 20,$/;"	v
AAUDIO_STREAMBUILDER_OPEN_STREAM_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    AAUDIO_STREAMBUILDER_OPEN_STREAM_FAILED = 18,$/;"	v
ACCEPT	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    ACCEPT,$/;"	v
AC_BACK	$C2_ROOT/libs/sdl2/sdl.c2i	/^    AC_BACK = 270,$/;"	v
AC_BOOKMARKS	$C2_ROOT/libs/sdl2/sdl.c2i	/^    AC_BOOKMARKS = 274,$/;"	v
AC_FORWARD	$C2_ROOT/libs/sdl2/sdl.c2i	/^    AC_FORWARD = 271,$/;"	v
AC_HOME	$C2_ROOT/libs/sdl2/sdl.c2i	/^    AC_HOME = 269,$/;"	v
AC_REFRESH	$C2_ROOT/libs/sdl2/sdl.c2i	/^    AC_REFRESH = 273,$/;"	v
AC_SEARCH	$C2_ROOT/libs/sdl2/sdl.c2i	/^    AC_SEARCH = 268,$/;"	v
AC_STOP	$C2_ROOT/libs/sdl2/sdl.c2i	/^    AC_STOP = 272,$/;"	v
ADD	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ADD = 1,$/;"	v
ADD_COMMIT_LISTENER_FAILED	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    ADD_COMMIT_LISTENER_FAILED = 2,$/;"	v
ADD_COMMIT_LISTENER_FAILED	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    ADD_COMMIT_LISTENER_FAILED = 4,$/;"	v
ALLOC	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ALLOC = 1,$/;"	v
ALSA_FLOAT_SAMPLES_NOT_SUPPORTED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    ALSA_FLOAT_SAMPLES_NOT_SUPPORTED = 3,$/;"	v
ALSA_PTHREAD_CREATE_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    ALSA_PTHREAD_CREATE_FAILED = 8,$/;"	v
ALSA_REQUESTED_BUFFER_SIZE_NOT_SUPPORTED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    ALSA_REQUESTED_BUFFER_SIZE_NOT_SUPPORTED = 4,$/;"	v
ALSA_REQUESTED_CHANNEL_COUNT_NOT_SUPPORTED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    ALSA_REQUESTED_CHANNEL_COUNT_NOT_SUPPORTED = 5,$/;"	v
ALSA_SND_PCM_HW_PARAMS_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    ALSA_SND_PCM_HW_PARAMS_FAILED = 7,$/;"	v
ALSA_SND_PCM_HW_PARAMS_SET_RATE_NEAR_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    ALSA_SND_PCM_HW_PARAMS_SET_RATE_NEAR_FAILED = 6,$/;"	v
ALSA_SND_PCM_OPEN_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    ALSA_SND_PCM_OPEN_FAILED = 2,$/;"	v
ALWAYS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ALWAYS = 8,$/;"	v
AMP	$C2_ROOT/parser/c2_tokenizer.c2	/^    AMP,$/;"	v
ANDROID_CREATE_THREAD_PIPE_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_CREATE_THREAD_PIPE_FAILED = 83,$/;"	v
ANDROID_LOOP_THREAD_DONE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_LOOP_THREAD_DONE = 67,$/;"	v
ANDROID_LOOP_THREAD_STARTED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_LOOP_THREAD_STARTED = 66,$/;"	v
ANDROID_MSG_CREATE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_MSG_CREATE = 57,$/;"	v
ANDROID_MSG_DESTROY	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_MSG_DESTROY = 64,$/;"	v
ANDROID_MSG_FOCUS	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_MSG_FOCUS = 60,$/;"	v
ANDROID_MSG_NO_FOCUS	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_MSG_NO_FOCUS = 61,$/;"	v
ANDROID_MSG_PAUSE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_MSG_PAUSE = 59,$/;"	v
ANDROID_MSG_RESUME	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_MSG_RESUME = 58,$/;"	v
ANDROID_MSG_SET_INPUT_QUEUE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_MSG_SET_INPUT_QUEUE = 63,$/;"	v
ANDROID_MSG_SET_NATIVE_WINDOW	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_MSG_SET_NATIVE_WINDOW = 62,$/;"	v
ANDROID_NATIVE_ACTIVITY_CREATE_SUCCESS	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_NATIVE_ACTIVITY_CREATE_SUCCESS = 84,$/;"	v
ANDROID_NATIVE_ACTIVITY_DONE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_NATIVE_ACTIVITY_DONE = 81,$/;"	v
ANDROID_NATIVE_ACTIVITY_ONCONFIGURATIONCHANGED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_NATIVE_ACTIVITY_ONCONFIGURATIONCHANGED = 78,$/;"	v
ANDROID_NATIVE_ACTIVITY_ONCREATE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_NATIVE_ACTIVITY_ONCREATE = 82,$/;"	v
ANDROID_NATIVE_ACTIVITY_ONDESTROY	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_NATIVE_ACTIVITY_ONDESTROY = 80,$/;"	v
ANDROID_NATIVE_ACTIVITY_ONINPUTQUEUECREATED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_NATIVE_ACTIVITY_ONINPUTQUEUECREATED = 76,$/;"	v
ANDROID_NATIVE_ACTIVITY_ONINPUTQUEUEDESTROYED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_NATIVE_ACTIVITY_ONINPUTQUEUEDESTROYED = 77,$/;"	v
ANDROID_NATIVE_ACTIVITY_ONLOWMEMORY	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_NATIVE_ACTIVITY_ONLOWMEMORY = 79,$/;"	v
ANDROID_NATIVE_ACTIVITY_ONNATIVEWINDOWCREATED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_NATIVE_ACTIVITY_ONNATIVEWINDOWCREATED = 74,$/;"	v
ANDROID_NATIVE_ACTIVITY_ONNATIVEWINDOWDESTROYED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_NATIVE_ACTIVITY_ONNATIVEWINDOWDESTROYED = 75,$/;"	v
ANDROID_NATIVE_ACTIVITY_ONPAUSE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_NATIVE_ACTIVITY_ONPAUSE = 72,$/;"	v
ANDROID_NATIVE_ACTIVITY_ONRESUME	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_NATIVE_ACTIVITY_ONRESUME = 69,$/;"	v
ANDROID_NATIVE_ACTIVITY_ONSAVEINSTANCESTATE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_NATIVE_ACTIVITY_ONSAVEINSTANCESTATE = 70,$/;"	v
ANDROID_NATIVE_ACTIVITY_ONSTART	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_NATIVE_ACTIVITY_ONSTART = 68,$/;"	v
ANDROID_NATIVE_ACTIVITY_ONSTOP	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_NATIVE_ACTIVITY_ONSTOP = 73,$/;"	v
ANDROID_NATIVE_ACTIVITY_ONWINDOWFOCUSCHANGED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_NATIVE_ACTIVITY_ONWINDOWFOCUSCHANGED = 71,$/;"	v
ANDROID_READ_MSG_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_READ_MSG_FAILED = 55,$/;"	v
ANDROID_UNKNOWN_MSG	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_UNKNOWN_MSG = 65,$/;"	v
ANDROID_UNSUPPORTED_INPUT_EVENT_INPUT_CB	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_UNSUPPORTED_INPUT_EVENT_INPUT_CB = 53,$/;"	v
ANDROID_UNSUPPORTED_INPUT_EVENT_MAIN_CB	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_UNSUPPORTED_INPUT_EVENT_MAIN_CB = 54,$/;"	v
ANDROID_WRITE_MSG_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ANDROID_WRITE_MSG_FAILED = 56,$/;"	v
APOSTROPHE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    APOSTROPHE = 52,$/;"	v
APOSTROPHE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    APOSTROPHE = 39,$/;"	v
APP1	$C2_ROOT/libs/sdl2/sdl.c2i	/^    APP1 = 283,$/;"	v
APP2	$C2_ROOT/libs/sdl2/sdl.c2i	/^    APP2 = 284,$/;"	v
ARRAY	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ARRAY = 4,$/;"	v
ARROW	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ARROW = 1,$/;"	v
AST	$C2_ROOT/ast/ast.c2	/^public type AST struct @(opaque) {$/;"	t
ASTC_4X4_RGBA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ASTC_4X4_RGBA = 66,$/;"	v
ASTC_4X4_SRGBA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ASTC_4X4_SRGBA = 67,$/;"	v
ASTVisitor	$C2_ROOT/ast/module.c2	/^public type ASTVisitor fn void (void* arg, AST* d);$/;"	t
ASYNC_CANCEL	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    ASYNC_CANCEL,$/;"	v
AT	$C2_ROOT/parser/c2_tokenizer.c2	/^    AT,$/;"	v
AUDIOFASTFORWARD	$C2_ROOT/libs/sdl2/sdl.c2i	/^    AUDIOFASTFORWARD = 286,$/;"	v
AUDIOMUTE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    AUDIOMUTE = 262,$/;"	v
AUDIONEXT	$C2_ROOT/libs/sdl2/sdl.c2i	/^    AUDIONEXT = 258,$/;"	v
AUDIOPLAY	$C2_ROOT/libs/sdl2/sdl.c2i	/^    AUDIOPLAY = 261,$/;"	v
AUDIOPREV	$C2_ROOT/libs/sdl2/sdl.c2i	/^    AUDIOPREV = 259,$/;"	v
AUDIOREWIND	$C2_ROOT/libs/sdl2/sdl.c2i	/^    AUDIOREWIND = 285,$/;"	v
AUDIOSTOP	$C2_ROOT/libs/sdl2/sdl.c2i	/^    AUDIOSTOP = 260,$/;"	v
AUDIO_S16LSB	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^const u32 MIX_DEFAULT_FORMAT = AUDIO_S16LSB;$/;"	v
Abi	$C2_ROOT/common/target_info.c2	/^public type Abi enum u8 { Unknown, GNU, GNU_EABI, MACHO, WIN32, Rv32G, BSD }$/;"	t
Abort	$C2_ROOT/ast/ast_evaluator.c2	/^    return Cont.Abort;$/;"	v
Action	$C2_ROOT/parser/c2_tokenizer.c2	/^type Action enum u8 {$/;"	t
Add	$C2_ROOT/ast/binary_operator.c2	/^    Add,$/;"	v
Add	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.Add]         = Additive,$/;"	v
Add	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.Add]         = Additive,$/;"	v
Add	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        kind = InstrKind.Add;$/;"	v
Add	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^            k = InstrKind.Add;$/;"	v
Add	$C2_ROOT/ir/instr_kind.c2	/^    Add,$/;"	v
AddAssign	$C2_ROOT/ast/binary_operator.c2	/^    AddAssign,$/;"	v
AddAssign	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.AddAssign]   = Assignment,$/;"	v
AddAssign	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.AddAssign]   = Assignment,$/;"	v
AddSourceFn	$C2_ROOT/plugins/plugin_info.c2	/^public type AddSourceFn fn void (void* arg, const char* name, string_buffer.Buf* content);$/;"	t
Addr	$C2_ROOT/libs/libc/net_if.c2i	/^type Addr struct @(cname="ifaddr") {$/;"	t
AddrOf	$C2_ROOT/ast/unary_operator.c2	/^    return e.getOpcode() == UnaryOpcode.AddrOf;$/;"	v
AddrOf	$C2_ROOT/parser/c2_parser_expr.c2	/^    case Amp: return UnaryOpcode.AddrOf;$/;"	v
Aes_context	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Aes_context struct @(cname="mbedtls_aes_context") {$/;"	t
Alias	$C2_ROOT/ast/type.c2	/^    Alias,$/;"	v
Alias	$C2_ROOT/ir_examples/functions.c2	/^type Alias i64;$/;"	t
AliasType	$C2_ROOT/ast/alias_type.c2	/^public type AliasType struct @(opaque) {$/;"	t
AliasType	$C2_ROOT/ast/decl.c2	/^    AliasType,$/;"	v
AliasTypeDecl	$C2_ROOT/ast/alias_type_decl.c2	/^public type AliasTypeDecl struct @(opaque) {$/;"	t
Aligned	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.Aligned]      = AttrReq.Number,$/;"	v
Alloc	$C2_ROOT/libs/lua/lua.c2i	/^type Alloc fn void* (void *ud, void *ptr, c_size osize, c_size nsize) @(cname="lua_Alloc");$/;"	t
Alloc1	$C2_ROOT/ir/context.c2	/^        kind = InstrKind.Alloc1;$/;"	v
Alloc1	$C2_ROOT/ir/instr_kind.c2	/^    Alloc1,$/;"	v
Alloc2	$C2_ROOT/ir/context.c2	/^        kind = InstrKind.Alloc2;$/;"	v
Alloc2	$C2_ROOT/ir/instr_kind.c2	/^    Alloc2,$/;"	v
Alloc4	$C2_ROOT/ir/context.c2	/^        kind = InstrKind.Alloc4;$/;"	v
Alloc4	$C2_ROOT/ir/instr_kind.c2	/^    Alloc4,$/;"	v
Alloc8	$C2_ROOT/ir/context.c2	/^        kind = InstrKind.Alloc8;$/;"	v
Alloc8	$C2_ROOT/ir/instr_kind.c2	/^    Alloc8,$/;"	v
AllocCb	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type AllocCb fn void*(usize, void*);$/;"	t
AllocCb	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^type AllocCb fn void*(usize, void*);$/;"	t
AllocCb	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^type AllocCb fn void*(usize, void*);$/;"	t
AllocCb	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type AllocCb fn void*(usize, void*);$/;"	t
AllocCb	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^type AllocCb fn void*(usize, void*);$/;"	t
Allocator	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type Allocator struct @(cname="sapp_allocator") {$/;"	t
Allocator	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^type Allocator struct @(cname="saudio_allocator") {$/;"	t
Allocator	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^type Allocator struct @(cname="sdtx_allocator_t") {$/;"	t
Allocator	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Allocator struct @(cname="sg_allocator") {$/;"	t
Allocator	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^type Allocator struct @(cname="sgl_allocator_t") {$/;"	t
Aloss	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u8 Aloss;$/;"	v
Alpha	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Alpha = 0x00000002,$/;"	v
Amask	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u32 Amask;$/;"	v
Amp	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.Amp] = 7,$/;"	v
Amp	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.Amp;$/;"	v
Amp	$C2_ROOT/parser/token.c2	/^    [Kind.Amp]              = "&",$/;"	v
AmpAmp	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.AmpAmp]   = LogicalAndOr,$/;"	v
AmpAmp	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.AmpAmp;$/;"	v
AmpAmp	$C2_ROOT/parser/token.c2	/^    [Kind.AmpAmp]           = "&&",$/;"	v
AmpEqual	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.AmpEqual]       = AndAssign,$/;"	v
AmpEqual	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.AmpEqual;$/;"	v
AmpEqual	$C2_ROOT/parser/token.c2	/^    [Kind.AmpEqual]         = "&=",$/;"	v
Analyser	$C2_ROOT/analyser/module_analyser.c2	/^public type Analyser struct @(opaque) {$/;"	t
And	$C2_ROOT/ast/binary_operator.c2	/^    And,$/;"	v
And	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.And]         = Bitwise,$/;"	v
And	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.And]         = And,$/;"	v
And	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        kind = InstrKind.And;$/;"	v
And	$C2_ROOT/ir/instr_kind.c2	/^    And,$/;"	v
AndAssign	$C2_ROOT/ast/binary_operator.c2	/^    AndAssign,$/;"	v
AndAssign	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.AndAssign]   = Assignment,$/;"	v
AndAssign	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.AndAssign]   = Assignment,$/;"	v
AndTrue	$C2_ROOT/ir/block.c2	/^    AndTrue,$/;"	v
AndroidTooltype	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type AndroidTooltype enum i32 @(cname="sapp_android_tooltype") {$/;"	t
Arch	$C2_ROOT/common/target_info.c2	/^public type Arch enum u8 { Unknown, I686, Arm, X86_64, Amd64, Arm64, Riscv_32 }$/;"	t
Arena	$C2_ROOT/ir/interference_graph.c2	/^type Arena struct {$/;"	t
Arena	$C2_ROOT/ir/live_map.c2	/^type Arena struct {$/;"	t
Arena	$C2_ROOT/ir/slot_writes_map.c2	/^type Arena struct {$/;"	t
Arg	$C2_ROOT/ast_utils/attr.c2	/^    Arg,$/;"	v
Arg	$C2_ROOT/ir/instr_kind.c2	/^    Arg,$/;"	v
ArgValue	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^type ArgValue struct {$/;"	t
Array	$C2_ROOT/ast/type.c2	/^    Array,$/;"	v
ArrayDesignatedInit	$C2_ROOT/ast/expr.c2	/^    return e.getKind() == ExprKind.ArrayDesignatedInit;$/;"	v
ArrayDesignatedInitExpr	$C2_ROOT/ast/array_designated_init_expr.c2	/^public type ArrayDesignatedInitExpr struct @(opaque) {$/;"	t
ArraySubscript	$C2_ROOT/ast/expr.c2	/^    ArraySubscript,$/;"	v
ArraySubscriptExpr	$C2_ROOT/ast/array_subscript_expr.c2	/^public type ArraySubscriptExpr struct @(opaque) {$/;"	t
ArraySubscriptExprBits	$C2_ROOT/ast/array_subscript_expr.c2	/^type ArraySubscriptExprBits struct {$/;"	t
ArraySubscriptExprBits	$C2_ROOT/ast/stmt.c2	/^        ArraySubscriptExprBits arraySubscriptExprBits;$/;"	v
ArrayToPointerDecay	$C2_ROOT/ast/implicit_cast_expr.c2	/^    return e.getKind() == ImplicitCastKind.ArrayToPointerDecay;$/;"	v
ArrayType	$C2_ROOT/ast/array_type.c2	/^public type ArrayType struct @(opaque) {$/;"	t
ArrayTypeBits	$C2_ROOT/ast/array_type.c2	/^type ArrayTypeBits struct {$/;"	t
ArrayTypeBits	$C2_ROOT/ast/type.c2	/^        ArrayTypeBits arrayTypeBits;$/;"	v
ArrayValue	$C2_ROOT/ast/array_value.c2	/^public type ArrayValue struct @(opaque) {$/;"	t
ArrayValueList	$C2_ROOT/ast/array_value_list.c2	/^type ArrayValueList struct {$/;"	t
ArrayValueList	$C2_ROOT/ast/ast.c2	/^    ArrayValueList array_values;$/;"	v
ArrayValueVisitor	$C2_ROOT/ast/ast.c2	/^public type ArrayValueVisitor fn void (void* arg, ArrayValue* avd);$/;"	t
Ashift	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u8 Ashift;$/;"	v
Asm	$C2_ROOT/ast/stmt.c2	/^    Asm,$/;"	v
AsmFile	$C2_ROOT/compiler/c2recipe_parser.c2	/^    AsmFile,$/;"	v
AsmStmt	$C2_ROOT/ast/asm_stmt.c2	/^public type AsmStmt struct @(opaque) {$/;"	t
AsmStmtBits	$C2_ROOT/ast/asm_stmt.c2	/^type AsmStmtBits struct {$/;"	t
AsmStmtBits	$C2_ROOT/ast/stmt.c2	/^        AsmStmtBits asmStmtBits;$/;"	v
Asn1_buf	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Asn1_buf struct @(cname="mbedtls_asn1_buf") {$/;"	t
Asn1_named_data	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Asn1_named_data struct @(cname="mbedtls_asn1_named_data") {$/;"	t
Asn1_sequence	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Asn1_sequence struct @(cname="mbedtls_asn1_sequence") {$/;"	t
Assert	$C2_ROOT/ast/stmt.c2	/^    Assert,$/;"	v
AssertStmt	$C2_ROOT/ast/assert_stmt.c2	/^public type AssertStmt struct @(opaque) {$/;"	t
Assign	$C2_ROOT/ast/binary_operator.c2	/^    Assign,$/;"	v
Assign	$C2_ROOT/ast/expr.c2	/^    return e.isBinaryOperator() && ((BinaryOperator*)e).getOpcode() == BinaryOpcode.Assign;$/;"	v
Assign	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.Assign]      = Assignment,$/;"	v
Assign	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.Assign]      = Assignment,$/;"	v
Assign	$C2_ROOT/parser/c2_parser_expr.c2	/^            BinaryOpcode opcode = BinaryOpcode.Assign;$/;"	v
At	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.At;$/;"	v
At	$C2_ROOT/parser/token.c2	/^    [Kind.At]               = "@",$/;"	v
AtExitFn	$C2_ROOT/libs/libc/stdlib.c2i	/^type AtExitFn fn void();$/;"	t
Attachments	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Attachments struct @(cname="sg_attachments") {$/;"	t
Attr	$C2_ROOT/ast_utils/attr.c2	/^public type Attr struct {$/;"	t
Attr	$C2_ROOT/ast_utils/attr_table.c2	/^type Attr struct {$/;"	t
Attr	$C2_ROOT/parser/c2_parser.c2	/^                  Attr$/;"	v
AttrHandlerFn	$C2_ROOT/ast/utils.c2	/^public type AttrHandlerFn fn bool (void* arg, Decl* d, const attr.Attr* a);$/;"	t
AttrKind	$C2_ROOT/ast_utils/attr.c2	/^public type AttrKind enum u8 {$/;"	t
AttrReq	$C2_ROOT/ast_utils/attr.c2	/^public type AttrReq enum u8 {$/;"	t
AudioCallback	$C2_ROOT/libs/sdl2/sdl.c2i	/^type AudioCallback fn void (void* userdata, u8* stream, c_int len) @(cname="SDL_AudioCallback");$/;"	t
AudioDeviceID	$C2_ROOT/libs/sdl2/sdl.c2i	/^type AudioDeviceID u32 @(cname="SDL_AudioDeviceID");$/;"	t
AudioFormat	$C2_ROOT/libs/sdl2/sdl.c2i	/^type AudioFormat u16 @(cname="SDL_AudioFormat");$/;"	t
AudioSpec	$C2_ROOT/libs/sdl2/sdl.c2i	/^type AudioSpec struct @(cname="SDL_AudioSpec") {$/;"	t
AutoAttr	$C2_ROOT/ast/var_decl.c2	/^type AutoAttr enum u32 {$/;"	t
AutoFile	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.AutoFile]     = AttrReq.NoArg,$/;"	v
AutoFunc	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.AutoFunc]     = AttrReq.NoArg,$/;"	v
AutoLine	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.AutoLine]     = AttrReq.NoArg,$/;"	v
B19200	$C2_ROOT/libs/libc/ctermios.c2i	/^const c_uint EXTA = B19200;$/;"	v
B38400	$C2_ROOT/libs/libc/ctermios.c2i	/^const c_uint EXTB = B38400;$/;"	v
BA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BA = 12,$/;"	v
BACK	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BACK = 3,$/;"	v
BACKEND_BUFFER_SIZE_ISNT_MULTIPLE_OF_PACKET_SIZE	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    BACKEND_BUFFER_SIZE_ISNT_MULTIPLE_OF_PACKET_SIZE = 26,$/;"	v
BACKSLASH	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    BACKSLASH = 92,$/;"	v
BACKSPACE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    BACKSPACE = 42,$/;"	v
BACKSPACE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    BACKSPACE = 259,$/;"	v
BC1_RGBA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BC1_RGBA = 45,$/;"	v
BC2_RGBA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BC2_RGBA = 46,$/;"	v
BC3_RGBA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BC3_RGBA = 47,$/;"	v
BC3_SRGBA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BC3_SRGBA = 48,$/;"	v
BC4_R	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BC4_R = 49,$/;"	v
BC4_RSN	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BC4_RSN = 50,$/;"	v
BC5_RG	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BC5_RG = 51,$/;"	v
BC5_RGSN	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BC5_RGSN = 52,$/;"	v
BC6H_RGBF	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BC6H_RGBF = 53,$/;"	v
BC6H_RGBUF	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BC6H_RGBUF = 54,$/;"	v
BC7_RGBA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BC7_RGBA = 55,$/;"	v
BC7_SRGBA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BC7_SRGBA = 56,$/;"	v
BEGINPASS_ATTACHMENTS_ALIVE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BEGINPASS_ATTACHMENTS_ALIVE = 123,$/;"	v
BEGINPASS_TOO_MANY_COLOR_ATTACHMENTS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BEGINPASS_TOO_MANY_COLOR_ATTACHMENTS = 121,$/;"	v
BEGINPASS_TOO_MANY_RESOLVE_ATTACHMENTS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BEGINPASS_TOO_MANY_RESOLVE_ATTACHMENTS = 122,$/;"	v
BGRA8	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BGRA8 = 28,$/;"	v
BLEND_ALPHA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BLEND_ALPHA = 14,$/;"	v
BLEND_COLOR	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BLEND_COLOR = 12,$/;"	v
BQUOTE	$C2_ROOT/parser/c2_tokenizer.c2	/^    BQUOTE,$/;"	v
BRIGHTNESSDOWN	$C2_ROOT/libs/sdl2/sdl.c2i	/^    BRIGHTNESSDOWN = 275,$/;"	v
BRIGHTNESSUP	$C2_ROOT/libs/sdl2/sdl.c2i	/^    BRIGHTNESSUP = 276,$/;"	v
BSD	$C2_ROOT/common/target_info.c2	/^        info.abi = Abi.BSD;$/;"	v
BUFFER_POOL_EXHAUSTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BUFFER_POOL_EXHAUSTED = 115,$/;"	v
BYTE4	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BYTE4 = 13,$/;"	v
BYTE4N	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BYTE4N = 14,$/;"	v
BackEndKind	$C2_ROOT/common/build_target.c2	/^public type BackEndKind enum u8 {$/;"	t
Backend	$C2_ROOT/compiler/c2recipe_parser.c2	/^    Backend,$/;"	v
Backend	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Backend enum i32 @(cname="sg_backend") {$/;"	t
Bar	$C2_ROOT/ir_examples/array.c2	/^type Bar struct @(aligned=32) {$/;"	t
BasicStructLayouter	$C2_ROOT/generator/ir/basic_struct_layouter.c2	/^type BasicStructLayouter struct {$/;"	t
BasicStructLayouter	$C2_ROOT/generator/ir/ir_generator.c2	/^        BasicStructLayouter layouter;$/;"	v
Bblue	$C2_ROOT/ir/print.c2	/^const char* col_Symbol = color.Bblue;$/;"	v
Bcyan	$C2_ROOT/ast/utils.c2	/^const char* col_Value = color.Bcyan;$/;"	v
Bcyan	$C2_ROOT/ir/print.c2	/^const char* col_Slot = color.Bcyan;$/;"	v
BeginTargetFn	$C2_ROOT/compiler/compiler.c2	/^public type BeginTargetFn fn void (void* arg, plugin_info.Info* info);$/;"	t
Bgreen	$C2_ROOT/ast/utils.c2	/^const char* col_Decl = color.Bgreen;$/;"	v
Bgreen	$C2_ROOT/ir/print.c2	/^const char* col_Temp = color.Bgreen;$/;"	v
Binary	$C2_ROOT/ast_utils/number_radix.c2	/^    Binary,$/;"	v
Binary	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.radix = Radix.Binary;$/;"	v
BinaryOpcode	$C2_ROOT/ast/binary_operator.c2	/^public type BinaryOpcode enum u8 {$/;"	t
BinaryOpcode	$C2_ROOT/parser/ast_builder.c2	/^                                            BinaryOpcode opcode,$/;"	v
BinaryOperator	$C2_ROOT/ast/binary_operator.c2	/^public type BinaryOperator struct @(opaque) {$/;"	t
BinaryOperator	$C2_ROOT/ast/expr.c2	/^    return e.getKind() == ExprKind.BinaryOperator;$/;"	v
BinaryOperatorBits	$C2_ROOT/ast/binary_operator.c2	/^type BinaryOperatorBits struct {$/;"	t
BinaryOperatorBits	$C2_ROOT/ast/stmt.c2	/^        BinaryOperatorBits binaryOperatorBits;$/;"	v
Bindings	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Bindings struct @(cname="sg_bindings") {$/;"	t
BitArray	$C2_ROOT/common/bit_array.c2	/^public type BitArray struct {$/;"	t
BitFieldInfo	$C2_ROOT/ast/var_decl.c2	/^type BitFieldInfo struct {$/;"	t
BitFieldLayout	$C2_ROOT/ast/var_decl.c2	/^public type BitFieldLayout struct {$/;"	t
BitOffset	$C2_ROOT/ast/expr.c2	/^    return e.getKind() == ExprKind.BitOffset;$/;"	v
BitOffsetExpr	$C2_ROOT/ast/bitoffset_expr.c2	/^public type BitOffsetExpr struct @(opaque) {$/;"	t
BitOffsetExprBits	$C2_ROOT/ast/bitoffset_expr.c2	/^type BitOffsetExprBits struct {$/;"	t
BitOffsetExprBits	$C2_ROOT/ast/stmt.c2	/^        BitOffsetExprBits bitOffsetBits;$/;"	v
BitsPerPixel	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u8 BitsPerPixel;$/;"	v
BlendFactor	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type BlendFactor enum u32 @(cname="sg_blend_factor") {$/;"	t
BlendMode	$C2_ROOT/libs/sdl2/sdl.c2i	/^type BlendMode enum u32 {$/;"	t
BlendOp	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type BlendOp enum u32 @(cname="sg_blend_op") {$/;"	t
BlendState	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type BlendState struct @(cname="sg_blend_state") {$/;"	t
Block	$C2_ROOT/ast_utils/context.c2	/^type Block struct {$/;"	t
Block	$C2_ROOT/ir/block.c2	/^public type Block struct {$/;"	t
BlockComment	$C2_ROOT/parser/c2_tokenizer.c2	/^                    result.kind = Kind.BlockComment;$/;"	v
BlockComment	$C2_ROOT/parser/token.c2	/^    [Kind.BlockComment]     = "b-comment",$/;"	v
BlockId	$C2_ROOT/generator/ir/ir_generator_switch.c2	/^                                 BlockId join_blk,$/;"	v
BlockId	$C2_ROOT/ir/case_list.c2	/^    BlockId block;$/;"	v
BlockId	$C2_ROOT/ir/common.c2	/^public type BlockId u32;    \/\/ TODO make u16$/;"	t
BlockId	$C2_ROOT/ir/context.c2	/^    BlockId cur_block;$/;"	v
BlockId	$C2_ROOT/ir/phi_list.c2	/^    BlockId src;$/;"	v
BlockId	$C2_ROOT/ir/slot_collector.c2	/^    BlockId cur_blk;$/;"	v
BlockIndex	$C2_ROOT/ir/slot_collector.c2	/^public type BlockIndex struct {$/;"	t
BlockKind	$C2_ROOT/ir/block.c2	/^public type BlockKind enum u8 {$/;"	t
BlockList	$C2_ROOT/ir/block_list.c2	/^public type BlockList struct {$/;"	t
BlockList	$C2_ROOT/ir/function_info.c2	/^    BlockList blocks;$/;"	v
BlockList	$C2_ROOT/ir/inserter.c2	/^    BlockList new_blocks;$/;"	v
BlockWrites	$C2_ROOT/ir/slot_writes_map.c2	/^type BlockWrites struct {$/;"	t
Bloss	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u8 Bloss;$/;"	v
Blue	$C2_ROOT/ast/utils.c2	/^const char* col_Attr = color.Blue;$/;"	v
Bmagenta	$C2_ROOT/ast/utils.c2	/^const char* col_Stmt = color.Bmagenta;$/;"	v
Bmagenta	$C2_ROOT/ir/print.c2	/^const char* col_Attr = color.Bmagenta;$/;"	v
Bmask	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u32 Bmask;$/;"	v
Bool	$C2_ROOT/ast/builtin_type.c2	/^    return b.isInteger() || b.getKind() == BuiltinKind.Bool;$/;"	v
Bool	$C2_ROOT/generator/c/c_generator_expr.c2	/^    [BuiltinKind.Bool] = false,$/;"	v
Bool	$C2_ROOT/generator/ir/ir_generator.c2	/^    [BuiltinKind.Bool]    = I8,    \/\/ TODO ir.Type.I1?$/;"	v
BooleanLiteral	$C2_ROOT/ast/boolean_literal.c2	/^public type BooleanLiteral struct @(opaque) {$/;"	t
BooleanLiteral	$C2_ROOT/ast/expr.c2	/^    BooleanLiteral,$/;"	v
BooleanLiteralBits	$C2_ROOT/ast/boolean_literal.c2	/^type BooleanLiteralBits struct {$/;"	t
BooleanLiteralBits	$C2_ROOT/ast/stmt.c2	/^        BooleanLiteralBits booleanLiteralBits;$/;"	v
BorderColor	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type BorderColor enum u32 @(cname="sg_border_color") {$/;"	t
Box	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^type Box struct @(cname="sshape_box_t") {$/;"	t
Break	$C2_ROOT/analyser/module_analyser_stmt.c2	/^const FlowBits FlowBreak     = 1 << Flow.Break;$/;"	v
Break	$C2_ROOT/ast/stmt.c2	/^    Break,$/;"	v
BreakStmt	$C2_ROOT/ast/break_stmt.c2	/^public type BreakStmt struct @(opaque) {$/;"	t
Bred	$C2_ROOT/ir/print.c2	/^const char* col_PseudoInstr = color.Bred;$/;"	v
Bshift	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u8 Bshift;$/;"	v
Buf	$C2_ROOT/ast_utils/string_buffer.c2	/^public type Buf struct {$/;"	t
Buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Buffer struct @(cname="sg_buffer") {$/;"	t
Buffer	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^type Buffer struct @(cname="sshape_buffer_t") {$/;"	t
BufferDesc	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type BufferDesc struct @(cname="sg_buffer_desc") {$/;"	t
BufferInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type BufferInfo struct @(cname="sg_buffer_info") {$/;"	t
BufferItem	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^type BufferItem struct @(cname="sshape_buffer_item_t") {$/;"	t
BufferUsage	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type BufferUsage struct @(cname="sg_buffer_usage") {$/;"	t
BufferViewDesc	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type BufferViewDesc struct @(cname="sg_buffer_view_desc") {$/;"	t
Builder	$C2_ROOT/ir/context.c2	/^type Builder struct {$/;"	t
Builder	$C2_ROOT/parser/ast_builder.c2	/^public type Builder struct  @(opaque) {$/;"	t
Builtin	$C2_ROOT/ast/expr.c2	/^    Builtin,$/;"	v
Builtin	$C2_ROOT/ast/type.c2	/^    Builtin,$/;"	v
Builtin	$C2_ROOT/ast/type_ref.c2	/^    return r.flags.kind == TypeRefKind.Builtin;$/;"	v
BuiltinExpr	$C2_ROOT/ast/builtin_expr.c2	/^public type BuiltinExpr struct @(opaque) {$/;"	t
BuiltinExprBits	$C2_ROOT/ast/builtin_expr.c2	/^type BuiltinExprBits struct {$/;"	t
BuiltinExprBits	$C2_ROOT/ast/stmt.c2	/^        BuiltinExprBits builtinExprBits;$/;"	v
BuiltinExprKind	$C2_ROOT/ast/builtin_expr.c2	/^public type BuiltinExprKind enum u8 {$/;"	t
BuiltinKind	$C2_ROOT/analyser/conversion_checker.c2	/^    BuiltinKind native_kind;$/;"	v
BuiltinKind	$C2_ROOT/ast/builtin_type.c2	/^public type BuiltinKind enum u8 {$/;"	t
BuiltinType	$C2_ROOT/ast/builtin_type.c2	/^public type BuiltinType struct @(opaque) {$/;"	t
BuiltinTypeBits	$C2_ROOT/ast/builtin_type.c2	/^type BuiltinTypeBits struct {$/;"	t
BuiltinTypeBits	$C2_ROOT/ast/type.c2	/^        BuiltinTypeBits builtinTypeBits;$/;"	v
BytesPerPixel	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u8 BytesPerPixel;$/;"	v
C2Test	$C2_ROOT/plugins/unit_test1.c2	/^public type C2Test struct {$/;"	t
CALCULATOR	$C2_ROOT/libs/sdl2/sdl.c2i	/^    CALCULATOR = 266,$/;"	v
CANCEL	$C2_ROOT/libs/sdl2/sdl.c2i	/^    CANCEL = 155,$/;"	v
CANNOT_DESTROY_DEFAULT_CONTEXT	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    CANNOT_DESTROY_DEFAULT_CONTEXT = 5,$/;"	v
CANNOT_DESTROY_DEFAULT_CONTEXT	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    CANNOT_DESTROY_DEFAULT_CONTEXT = 6,$/;"	v
CAPSLOCK	$C2_ROOT/libs/sdl2/sdl.c2i	/^    CAPSLOCK = 57,$/;"	v
CAPS_LOCK	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CAPS_LOCK = 280,$/;"	v
CARET	$C2_ROOT/parser/c2_tokenizer.c2	/^    CARET,$/;"	v
CAddr	$C2_ROOT/libs/libc/net_if.c2i	/^type CAddr char* @(cname="__caddr_t");$/;"	t
CC	$C2_ROOT/libs/libc/ctermios.c2i	/^type CC c_uchar;$/;"	t
CCW	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    CCW = 1,$/;"	v
CDef	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.CDef]         = AttrReq.String,$/;"	v
CFunction	$C2_ROOT/libs/lua/lua.c2i	/^type CFunction fn i32 (State *L) @(cname="lua_CFunction");$/;"	t
CHAR	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CHAR = 3,$/;"	v
CLAMP_TO_BORDER	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    CLAMP_TO_BORDER = 3,$/;"	v
CLAMP_TO_EDGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    CLAMP_TO_EDGE = 2,$/;"	v
CLEAR	$C2_ROOT/libs/sdl2/sdl.c2i	/^    CLEAR = 156,$/;"	v
CLEAR	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    CLEAR = 1,$/;"	v
CLEARAGAIN	$C2_ROOT/libs/sdl2/sdl.c2i	/^    CLEARAGAIN = 162,$/;"	v
CLIPBOARD_PASTED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CLIPBOARD_PASTED = 22,$/;"	v
CLIPBOARD_STRING_TOO_BIG	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CLIPBOARD_STRING_TOO_BIG = 103,$/;"	v
CLOSE	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    CLOSE,$/;"	v
CName	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.CName]        = AttrReq.String,$/;"	v
COLON	$C2_ROOT/parser/c2_tokenizer.c2	/^    COLON,$/;"	v
COLORATTACHMENT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    COLORATTACHMENT = 4,$/;"	v
COMMA	$C2_ROOT/libs/sdl2/sdl.c2i	/^    COMMA = 54,$/;"	v
COMMA	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    COMMA = 44,$/;"	v
COMMA	$C2_ROOT/parser/c2_tokenizer.c2	/^    COMMA,$/;"	v
COMMAND_BUFFER_FULL	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    COMMAND_BUFFER_FULL = 3,$/;"	v
COMMIT_LISTENER_ARRAY_FULL	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    COMMIT_LISTENER_ARRAY_FULL = 89,$/;"	v
COMPARISON	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    COMPARISON = 3,$/;"	v
COMPUTE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    COMPUTE = 3,$/;"	v
COMPUTER	$C2_ROOT/libs/sdl2/sdl.c2i	/^    COMPUTER = 267,$/;"	v
CONNECT	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    CONNECT,$/;"	v
CONTEXT_POOL_EXHAUSTED	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    CONTEXT_POOL_EXHAUSTED = 4,$/;"	v
CONTEXT_POOL_EXHAUSTED	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    CONTEXT_POOL_EXHAUSTED = 5,$/;"	v
COPY	$C2_ROOT/libs/sdl2/sdl.c2i	/^    COPY = 124,$/;"	v
COREAUDIO_ALLOCATE_BUFFER_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    COREAUDIO_ALLOCATE_BUFFER_FAILED = 24,$/;"	v
COREAUDIO_NEW_OUTPUT_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    COREAUDIO_NEW_OUTPUT_FAILED = 23,$/;"	v
COREAUDIO_START_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    COREAUDIO_START_FAILED = 25,$/;"	v
CR	$C2_ROOT/parser/c2_tokenizer.c2	/^    CR,$/;"	v
CROSSHAIR	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CROSSHAIR = 3,$/;"	v
CRSEL	$C2_ROOT/libs/sdl2/sdl.c2i	/^    CRSEL = 163,$/;"	v
CUBE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    CUBE = 2,$/;"	v
CURRENCYSUBUNIT	$C2_ROOT/libs/sdl2/sdl.c2i	/^    CURRENCYSUBUNIT = 181,$/;"	v
CURRENCYUNIT	$C2_ROOT/libs/sdl2/sdl.c2i	/^    CURRENCYUNIT = 180,$/;"	v
CUSTOM_0	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CUSTOM_0 = 11,$/;"	v
CUSTOM_1	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CUSTOM_1 = 12,$/;"	v
CUSTOM_10	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CUSTOM_10 = 21,$/;"	v
CUSTOM_11	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CUSTOM_11 = 22,$/;"	v
CUSTOM_12	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CUSTOM_12 = 23,$/;"	v
CUSTOM_13	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CUSTOM_13 = 24,$/;"	v
CUSTOM_14	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CUSTOM_14 = 25,$/;"	v
CUSTOM_15	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CUSTOM_15 = 26,$/;"	v
CUSTOM_2	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CUSTOM_2 = 13,$/;"	v
CUSTOM_3	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CUSTOM_3 = 14,$/;"	v
CUSTOM_4	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CUSTOM_4 = 15,$/;"	v
CUSTOM_5	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CUSTOM_5 = 16,$/;"	v
CUSTOM_6	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CUSTOM_6 = 17,$/;"	v
CUSTOM_7	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CUSTOM_7 = 18,$/;"	v
CUSTOM_8	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CUSTOM_8 = 19,$/;"	v
CUSTOM_9	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    CUSTOM_9 = 20,$/;"	v
CUT	$C2_ROOT/libs/sdl2/sdl.c2i	/^    CUT = 123,$/;"	v
CW	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    CW = 2,$/;"	v
C_Prec	$C2_ROOT/common/c_prec.c2	/^public type C_Prec enum u8 {$/;"	t
C_keywords	$C2_ROOT/parser/keywords.c2	/^    const char *p = C_keywords;$/;"	v
Call	$C2_ROOT/ast/expr.c2	/^    return e.getKind() == ExprKind.Call;$/;"	v
Call	$C2_ROOT/ir/instr_kind.c2	/^    Call,$/;"	v
CallExpr	$C2_ROOT/ast/call_expr.c2	/^public type CallExpr struct @(opaque) {$/;"	t
CallExprBits	$C2_ROOT/ast/call_expr.c2	/^type CallExprBits struct {$/;"	t
CallExprBits	$C2_ROOT/ast/stmt.c2	/^        CallExprBits callExprBits;$/;"	v
CallKind	$C2_ROOT/ast/function_decl.c2	/^public type CallKind enum u8 {$/;"	t
Caps	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Caps    = 0x2000,$/;"	v
Caret	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.Caret] = Bitwise,$/;"	v
Caret	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.Caret;$/;"	v
Caret	$C2_ROOT/parser/token.c2	/^    [Kind.Caret]            = "^",$/;"	v
CaretEqual	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.CaretEqual]     = XorAssign,$/;"	v
CaretEqual	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.CaretEqual;$/;"	v
CaretEqual	$C2_ROOT/parser/token.c2	/^    [Kind.CaretEqual]       = "^=",$/;"	v
Case	$C2_ROOT/ir/case_list.c2	/^public type Case struct {$/;"	t
CaseId	$C2_ROOT/generator/ir/ir_generator_switch.c2	/^                                 CaseId caseId,$/;"	v
CaseId	$C2_ROOT/ir/case_list.c2	/^public type CaseId u32;$/;"	t
CaseList	$C2_ROOT/ir/case_list.c2	/^public type CaseList struct {$/;"	t
CaseList	$C2_ROOT/ir/function_info.c2	/^    CaseList cases;$/;"	v
Category	$C2_ROOT/common/diagnostics.c2	/^type Category enum u8 {$/;"	t
Cb	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type Cb fn void();$/;"	t
Cfg_dbg_f	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Cfg_dbg_f fn void(void *, c_int, const char *, c_int, const char *);$/;"	t
Cfg_get_cache_f	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Cfg_get_cache_f fn c_int(void *, Ssl_session*);$/;"	t
Cfg_rng_f	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Cfg_rng_f fn c_int(void *, c_uchar*, c_size);$/;"	t
Cfg_set_cache_f	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Cfg_set_cache_f fn c_int(void *, const Ssl_session*);$/;"	t
Cfg_sni_f	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Cfg_sni_f fn c_int(void *, Ssl_context *, const c_uchar *, c_size);$/;"	t
Char	$C2_ROOT/analyser_utils/printf_utils.c2	/^        spec = Specifier.Char;$/;"	v
Char	$C2_ROOT/ast/builtin_type.c2	/^    return b.base.builtinTypeBits.kind == BuiltinKind.Char;$/;"	v
Char	$C2_ROOT/ast/type_ref.c2	/^           r.flags.num_arrays == 0 && r.getBuiltinKind() == BuiltinKind.Char;$/;"	v
Char	$C2_ROOT/generator/c/c_generator_expr.c2	/^    [BuiltinKind.Char] = false,$/;"	v
Char	$C2_ROOT/generator/ir/ir_generator.c2	/^    [BuiltinKind.Char]    = I8,$/;"	v
CharLiteral	$C2_ROOT/ast/char_literal.c2	/^public type CharLiteral struct @(opaque) {$/;"	t
CharLiteral	$C2_ROOT/ast/expr.c2	/^    CharLiteral,$/;"	v
CharLiteral	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.CharLiteral] = 4,$/;"	v
CharLiteral	$C2_ROOT/parser/c2_tokenizer.c2	/^    result.kind = Kind.CharLiteral;$/;"	v
CharLiteral	$C2_ROOT/parser/token.c2	/^    [Kind.CharLiteral]      = "character",$/;"	v
CharLiteralBits	$C2_ROOT/ast/char_literal.c2	/^type CharLiteralBits struct {$/;"	t
CharLiteralBits	$C2_ROOT/ast/stmt.c2	/^        CharLiteralBits charLiteralBits;$/;"	v
CheckPoint	$C2_ROOT/common/source_mgr.c2	/^type CheckPoint struct {$/;"	t
CheckPointSize	$C2_ROOT/common/source_mgr.c2	/^    u32 ncheck = f.data_size \/ CheckPointSize;$/;"	v
Checked	$C2_ROOT/ast/decl.c2	/^    Checked,$/;"	v
Checker	$C2_ROOT/analyser/conversion_checker.c2	/^public type Checker struct {$/;"	t
Checker	$C2_ROOT/analyser/init_checker.c2	/^public type Checker struct {$/;"	t
Checker	$C2_ROOT/analyser/unused_checker.c2	/^type Checker struct {$/;"	t
CmpEq	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        kind = InstrKind.CmpEq;$/;"	v
CmpEq	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        k = InstrKind.CmpEq;$/;"	v
CmpEq	$C2_ROOT/ir/instr_kind.c2	/^    CmpEq,$/;"	v
CmpGe	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        kind = InstrKind.CmpGe;$/;"	v
CmpGe	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        k = InstrKind.CmpGe;$/;"	v
CmpGe	$C2_ROOT/ir/instr_kind.c2	/^    CmpGe,$/;"	v
CmpGt	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        kind = InstrKind.CmpGt;$/;"	v
CmpGt	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        k = InstrKind.CmpGt;$/;"	v
CmpGt	$C2_ROOT/ir/instr_kind.c2	/^    CmpGt,$/;"	v
CmpLe	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        kind = InstrKind.CmpLe;$/;"	v
CmpLe	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        k = InstrKind.CmpLe;$/;"	v
CmpLe	$C2_ROOT/ir/instr_kind.c2	/^    CmpLe,$/;"	v
CmpLt	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        kind = InstrKind.CmpLt;$/;"	v
CmpLt	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        k = InstrKind.CmpLt;$/;"	v
CmpLt	$C2_ROOT/ir/instr_kind.c2	/^    CmpLt,$/;"	v
CmpNe	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        kind = InstrKind.CmpNe;$/;"	v
CmpNe	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        k = InstrKind.CmpNe;$/;"	v
CmpNe	$C2_ROOT/ir/instr_kind.c2	/^    CmpNe,$/;"	v
Colon	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    Colon,$/;"	v
Colon	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.Colon;$/;"	v
Colon	$C2_ROOT/parser/token.c2	/^    [Kind.Colon]            = ":",$/;"	v
Color	$C2_ROOT/libs/sdl2/sdl.c2i	/^type Color struct @(cname="SDL_Color") {$/;"	t
Color	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Color struct @(cname="sg_color") {$/;"	t
ColorAttachmentAction	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ColorAttachmentAction struct @(cname="sg_color_attachment_action") {$/;"	t
ColorMask	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ColorMask enum u32 @(cname="sg_color_mask") {$/;"	t
ColorTargetState	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ColorTargetState struct @(cname="sg_color_target_state") {$/;"	t
Comma	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.Comma] = Comma,$/;"	v
Comma	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.Comma;$/;"	v
Comma	$C2_ROOT/parser/token.c2	/^    [Kind.Comma]            = ",",$/;"	v
Comment	$C2_ROOT/ir/instr.c2	/^    return i.getKind() == InstrKind.Comment;$/;"	v
CommitListener	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type CommitListener struct @(cname="sg_commit_listener") {$/;"	t
CompareFn	$C2_ROOT/common/quicksort.c2	/^public type CompareFn fn bool(void* arg, const void* left, const void* right);$/;"	t
CompareFunc	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type CompareFunc enum u32 @(cname="sg_compare_func") {$/;"	t
Compiler	$C2_ROOT/compiler/compiler.c2	/^type Compiler struct {$/;"	t
Component	$C2_ROOT/common/component.c2	/^public type Component struct @(opaque) {$/;"	t
Compound	$C2_ROOT/ast/stmt.c2	/^    return s.getKind() == StmtKind.Compound;$/;"	v
CompoundStmt	$C2_ROOT/ast/compound_stmt.c2	/^public type CompoundStmt struct @(opaque) {$/;"	t
CompoundStmtBits	$C2_ROOT/ast/compound_stmt.c2	/^type CompoundStmtBits struct {$/;"	t
CompoundStmtBits	$C2_ROOT/ast/stmt.c2	/^        CompoundStmtBits compoundStmtBits;$/;"	v
Cond	$C2_ROOT/libs/pthread/pthread.c2i	/^type Cond union @(cname="pthread_cond_t") {$/;"	t
CondAttr	$C2_ROOT/libs/pthread/pthread.c2i	/^type CondAttr union @(cname="pthread_condattr_t") {$/;"	t
CondFalse	$C2_ROOT/ir/block.c2	/^    CondFalse,$/;"	v
CondJoin	$C2_ROOT/ir/block.c2	/^    CondJoin,$/;"	v
CondTrue	$C2_ROOT/ir/block.c2	/^    CondTrue,$/;"	v
ConditionalOperator	$C2_ROOT/ast/conditional_operator.c2	/^public type ConditionalOperator struct @(opaque) {$/;"	t
ConditionalOperator	$C2_ROOT/ast/expr.c2	/^    ConditionalOperator,$/;"	v
Conf	$C2_ROOT/libs/libc/net_if.c2i	/^type Conf struct @(cname="ifconf") {$/;"	t
Config	$C2_ROOT/compiler/c2recipe_parser.c2	/^    Config,$/;"	v
Config	$C2_ROOT/plugins/unit_test1.c2	/^public type Config struct {$/;"	t
Constant	$C2_ROOT/ir/constant.c2	/^type Constant struct {$/;"	t
ConstantList	$C2_ROOT/ir/constant_list.c2	/^type ConstantList struct {$/;"	t
ConstantList	$C2_ROOT/ir/context.c2	/^    ConstantList constants;$/;"	v
Constructor	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.Constructor]  = AttrReq.NoArg,$/;"	v
Cont	$C2_ROOT/ast/ast_evaluator.c2	/^type Cont enum u8 {$/;"	t
Context	$C2_ROOT/ast_utils/context.c2	/^public type Context struct @(opaque) {$/;"	t
Context	$C2_ROOT/compiler/main.c2	/^type Context struct {$/;"	t
Context	$C2_ROOT/ir/context.c2	/^public type Context struct @(opaque) {$/;"	t
Context	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^type Context struct @(cname="sdtx_context") {$/;"	t
Context	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^type Context struct @(cname="sgl_context") {$/;"	t
ContextDesc	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^type ContextDesc struct @(cname="sdtx_context_desc_t") {$/;"	t
ContextDesc	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^type ContextDesc struct @(cname="sgl_context_desc_t") {$/;"	t
Continue	$C2_ROOT/analyser/module_analyser_stmt.c2	/^const FlowBits FlowContinue  = 1 << Flow.Continue;$/;"	v
Continue	$C2_ROOT/ast/stmt.c2	/^    Continue,$/;"	v
ContinueStmt	$C2_ROOT/ast/continue_stmt.c2	/^public type ContinueStmt struct @(opaque) {$/;"	t
Copy	$C2_ROOT/ir/instr.c2	/^    return i.getKind() == InstrKind.Copy;$/;"	v
Copy	$C2_ROOT/ir/instr_kind.c2	/^    Copy,$/;"	v
Copy	$C2_ROOT/ir/slot_collector.c2	/^            cur.instrBits.kind = InstrKind.Copy;$/;"	v
CopyInfo	$C2_ROOT/ir/copy_list.c2	/^public type CopyInfo struct {$/;"	t
CopyList	$C2_ROOT/ir/context.c2	/^    CopyList copies;$/;"	v
CopyList	$C2_ROOT/ir/copy_list.c2	/^public type CopyList struct {$/;"	t
Counter	$C2_ROOT/ir/usage_counter.c2	/^public type Counter struct {$/;"	t
Cq	$C2_ROOT/libs/io_uring/io_uring.c2i	/^type Cq struct @(cname="io_uring_cq") {$/;"	t
Cqe	$C2_ROOT/libs/io_uring/io_uring.c2i	/^type Cqe struct @(cname="io_uring_cqe") {$/;"	t
CqringOffsets	$C2_ROOT/libs/io_uring/io_uring.c2i	/^type CqringOffsets struct @(cname="io_cqring_offsets") {$/;"	t
Ctr_drbg_context	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ctr_drbg_context struct @(cname="mbedtls_ctr_drbg_context") {$/;"	t
Ctx_cookie_check_f	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ctx_cookie_check_f fn c_int(void *, const c_uchar *, c_size, const c_uchar *, c_size);$/;"	t
Ctx_cookie_write_f	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ctx_cookie_write_f fn c_int(void *, c_uchar **, c_uchar *, const c_uchar *, c_size );$/;"	t
Ctx_export_keys_ext_f	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ctx_export_keys_ext_f fn c_int(void *, const c_uchar *,$/;"	t
Ctx_export_keys_f	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ctx_export_keys_f fn c_int(void *, const c_uchar *, const c_uchar *, c_size, c_size, c_size/;"	t
Ctx_psk_f	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ctx_psk_f fn c_int(void *, Ssl_context *, const c_uchar *, c_size);$/;"	t
Ctx_ticket_parse_f	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ctx_ticket_parse_f fn c_int(void *, Ssl_session *, c_uchar *, c_size);$/;"	t
Ctx_ticket_write_f	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ctx_ticket_write_f fn c_int(void *, const Ssl_session *, c_uchar *, const c_uchar *, c_size/;"	t
Ctx_vrfy_f	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ctx_vrfy_f fn c_int (void*, X509_crt *, c_int, c_uint*);$/;"	t
CullMode	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type CullMode enum u32 @(cname="sg_cull_mode") {$/;"	t
CurrentBeginThread	$C2_ROOT/libs/sdl2/sdl.c2i	/^type CurrentBeginThread fn usize (void*, c_uint, c_uint, CurrentBeginThreadArg func,$/;"	t
CurrentBeginThreadArg	$C2_ROOT/libs/sdl2/sdl.c2i	/^type CurrentBeginThreadArg fn c_uint (void*);$/;"	t
CurrentEndThread	$C2_ROOT/libs/sdl2/sdl.c2i	/^type CurrentEndThread fn void (c_uint code);$/;"	t
Cyan	$C2_ROOT/ir/print.c2	/^const char* col_Block = color.Cyan;$/;"	v
Cylinder	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^type Cylinder struct @(cname="sshape_cylinder_t") {$/;"	t
D3D11	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11 = 2,$/;"	v
D3D11_CREATE_2D_SRV_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_2D_SRV_FAILED = 26,$/;"	v
D3D11_CREATE_2D_TEXTURE_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_2D_TEXTURE_FAILED = 25,$/;"	v
D3D11_CREATE_2D_TEXTURE_UNSUPPORTED_PIXEL_FORMAT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_2D_TEXTURE_UNSUPPORTED_PIXEL_FORMAT = 24,$/;"	v
D3D11_CREATE_3D_SRV_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_3D_SRV_FAILED = 29,$/;"	v
D3D11_CREATE_3D_TEXTURE_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_3D_TEXTURE_FAILED = 28,$/;"	v
D3D11_CREATE_3D_TEXTURE_UNSUPPORTED_PIXEL_FORMAT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_3D_TEXTURE_UNSUPPORTED_PIXEL_FORMAT = 27,$/;"	v
D3D11_CREATE_BLEND_STATE_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_BLEND_STATE_FAILED = 45,$/;"	v
D3D11_CREATE_BUFFER_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_BUFFER_FAILED = 19,$/;"	v
D3D11_CREATE_BUFFER_SRV_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_BUFFER_SRV_FAILED = 20,$/;"	v
D3D11_CREATE_BUFFER_UAV_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_BUFFER_UAV_FAILED = 21,$/;"	v
D3D11_CREATE_CONSTANT_BUFFER_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_CONSTANT_BUFFER_FAILED = 41,$/;"	v
D3D11_CREATE_DEPTH_STENCIL_STATE_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_DEPTH_STENCIL_STATE_FAILED = 44,$/;"	v
D3D11_CREATE_DEPTH_TEXTURE_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_DEPTH_TEXTURE_FAILED = 23,$/;"	v
D3D11_CREATE_DEPTH_TEXTURE_UNSUPPORTED_PIXEL_FORMAT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_DEPTH_TEXTURE_UNSUPPORTED_PIXEL_FORMAT = 22,$/;"	v
D3D11_CREATE_DSV_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_DSV_FAILED = 47,$/;"	v
D3D11_CREATE_INPUT_LAYOUT_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_INPUT_LAYOUT_FAILED = 42,$/;"	v
D3D11_CREATE_MSAA_TEXTURE_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_MSAA_TEXTURE_FAILED = 30,$/;"	v
D3D11_CREATE_RASTERIZER_STATE_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_RASTERIZER_STATE_FAILED = 43,$/;"	v
D3D11_CREATE_RTV_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_RTV_FAILED = 46,$/;"	v
D3D11_CREATE_SAMPLER_STATE_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_SAMPLER_STATE_FAILED = 31,$/;"	v
D3D11_CREATE_UAV_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_CREATE_UAV_FAILED = 48,$/;"	v
D3D11_FEATURE_LEVEL_0_DETECTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_FEATURE_LEVEL_0_DETECTED = 18,$/;"	v
D3D11_IMAGE_HLSL_REGISTER_T_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_IMAGE_HLSL_REGISTER_T_OUT_OF_RANGE = 35,$/;"	v
D3D11_LOAD_D3DCOMPILER_47_DLL_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_LOAD_D3DCOMPILER_47_DLL_FAILED = 38,$/;"	v
D3D11_MAP_FOR_APPEND_BUFFER_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_MAP_FOR_APPEND_BUFFER_FAILED = 50,$/;"	v
D3D11_MAP_FOR_UPDATE_BUFFER_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_MAP_FOR_UPDATE_BUFFER_FAILED = 49,$/;"	v
D3D11_MAP_FOR_UPDATE_IMAGE_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_MAP_FOR_UPDATE_IMAGE_FAILED = 51,$/;"	v
D3D11_SAMPLER_HLSL_REGISTER_S_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_SAMPLER_HLSL_REGISTER_S_OUT_OF_RANGE = 37,$/;"	v
D3D11_SHADER_COMPILATION_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_SHADER_COMPILATION_FAILED = 39,$/;"	v
D3D11_SHADER_COMPILATION_OUTPUT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_SHADER_COMPILATION_OUTPUT = 40,$/;"	v
D3D11_STORAGEBUFFER_HLSL_REGISTER_T_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_STORAGEBUFFER_HLSL_REGISTER_T_OUT_OF_RANGE = 33,$/;"	v
D3D11_STORAGEBUFFER_HLSL_REGISTER_U_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_STORAGEBUFFER_HLSL_REGISTER_U_OUT_OF_RANGE = 34,$/;"	v
D3D11_STORAGEIMAGE_HLSL_REGISTER_U_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_STORAGEIMAGE_HLSL_REGISTER_U_OUT_OF_RANGE = 36,$/;"	v
D3D11_UNIFORMBLOCK_HLSL_REGISTER_B_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    D3D11_UNIFORMBLOCK_HLSL_REGISTER_B_OUT_OF_RANGE = 32,$/;"	v
D3d11BufferInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type D3d11BufferInfo struct @(cname="sg_d3d11_buffer_info") {$/;"	t
D3d11Environment	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type D3d11Environment struct @(cname="sg_d3d11_environment") {$/;"	t
D3d11ImageInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type D3d11ImageInfo struct @(cname="sg_d3d11_image_info") {$/;"	t
D3d11PipelineInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type D3d11PipelineInfo struct @(cname="sg_d3d11_pipeline_info") {$/;"	t
D3d11SamplerInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type D3d11SamplerInfo struct @(cname="sg_d3d11_sampler_info") {$/;"	t
D3d11ShaderInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type D3d11ShaderInfo struct @(cname="sg_d3d11_shader_info") {$/;"	t
D3d11Swapchain	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type D3d11Swapchain struct @(cname="sg_d3d11_swapchain") {$/;"	t
D3d11ViewInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type D3d11ViewInfo struct @(cname="sg_d3d11_view_info") {$/;"	t
DATA_ALIGN	$C2_ROOT/ast_utils/string_pool.c2	/^    p.data_size += len \/ DATA_ALIGN * DATA_ALIGN + DATA_ALIGN;$/;"	v
DEALLOC_BUFFER_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    DEALLOC_BUFFER_INVALID_STATE = 91,$/;"	v
DEALLOC_IMAGE_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    DEALLOC_IMAGE_INVALID_STATE = 92,$/;"	v
DEALLOC_PIPELINE_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    DEALLOC_PIPELINE_INVALID_STATE = 95,$/;"	v
DEALLOC_SAMPLER_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    DEALLOC_SAMPLER_INVALID_STATE = 93,$/;"	v
DEALLOC_SHADER_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    DEALLOC_SHADER_INVALID_STATE = 94,$/;"	v
DEALLOC_VIEW_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    DEALLOC_VIEW_INVALID_STATE = 96,$/;"	v
DECIMALSEPARATOR	$C2_ROOT/libs/sdl2/sdl.c2i	/^    DECIMALSEPARATOR = 179,$/;"	v
DECR_CLAMP	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    DECR_CLAMP = 5,$/;"	v
DECR_WRAP	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    DECR_WRAP = 8,$/;"	v
DEFAULT	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    DEFAULT = 0,$/;"	v
DEFAULT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    DEFAULT = 0,$/;"	v
DEG_TO_RAD	$C2_ROOT/libs/sokol/sokol_math.c2i	/^    return _degrees * DEG_TO_RAD;$/;"	v
DELETE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    DELETE = 76,$/;"	v
DELETE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    DELETE = 261,$/;"	v
DEPTH	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    DEPTH = 43,$/;"	v
DEPTHSTENCILATTACHMENT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    DEPTHSTENCILATTACHMENT = 6,$/;"	v
DEPTH_STENCIL	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    DEPTH_STENCIL = 44,$/;"	v
DIGIT	$C2_ROOT/parser/c2_tokenizer.c2	/^    DIGIT,$/;"	v
DIR	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct DIR_ DIR;$/;"	v
DIR	$C2_ROOT/libs/libc/libc_dirent.c2i	/^type DIR struct @(opaque);$/;"	t
DOLLARGESTURE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    DOLLARGESTURE   = 0x800,$/;"	v
DOLLARRECORD	$C2_ROOT/libs/sdl2/sdl.c2i	/^    DOLLARRECORD,$/;"	v
DONTCARE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    DONTCARE = 3,$/;"	v
DOT	$C2_ROOT/parser/c2_tokenizer.c2	/^    DOT,$/;"	v
DOWN	$C2_ROOT/libs/sdl2/sdl.c2i	/^    DOWN = 81,$/;"	v
DOWN	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    DOWN = 264,$/;"	v
DQUOTE	$C2_ROOT/parser/c2_tokenizer.c2	/^    DQUOTE,$/;"	v
DRAW_WITHOUT_BINDINGS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    DRAW_WITHOUT_BINDINGS = 124,$/;"	v
DROPPED_FILE_PATH_TOO_LONG	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    DROPPED_FILE_PATH_TOO_LONG = 102,$/;"	v
DST_ALPHA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    DST_ALPHA = 9,$/;"	v
DST_COLOR	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    DST_COLOR = 7,$/;"	v
DUMMY	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    DUMMY = 7,$/;"	v
Dash	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    Dash,$/;"	v
Data	$C2_ROOT/common/yaml/yaml_data.c2	/^type Data struct {$/;"	t
Data	$C2_ROOT/common/yaml/yaml_parser.c2	/^    Data data;$/;"	v
DataCb	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type DataCb fn void(void*);$/;"	t
DataCb	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type DataCb fn void(void*);$/;"	t
Dbg_fn	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Dbg_fn fn void(void*, c_int, const char *, c_int, const char *);$/;"	t
Decl	$C2_ROOT/ast/alias_type_decl.c2	/^    Decl base;$/;"	v
Decl	$C2_ROOT/ast/decl.c2	/^public type Decl struct @(opaque) {$/;"	t
Decl	$C2_ROOT/ast/enum_constant_decl.c2	/^    Decl base;$/;"	v
Decl	$C2_ROOT/ast/enum_type_decl.c2	/^    Decl base;$/;"	v
Decl	$C2_ROOT/ast/function_decl.c2	/^    Decl base;$/;"	v
Decl	$C2_ROOT/ast/function_type_decl.c2	/^    Decl base;$/;"	v
Decl	$C2_ROOT/ast/import_decl.c2	/^    Decl base;$/;"	v
Decl	$C2_ROOT/ast/stmt.c2	/^    return s.getKind() == StmtKind.Decl;$/;"	v
Decl	$C2_ROOT/ast/struct_type_decl.c2	/^    Decl base;$/;"	v
Decl	$C2_ROOT/ast/var_decl.c2	/^    Decl base;$/;"	v
DeclBits	$C2_ROOT/ast/decl.c2	/^type DeclBits struct {$/;"	t
DeclCheckState	$C2_ROOT/ast/decl.c2	/^public type DeclCheckState enum u8 {$/;"	t
DeclKind	$C2_ROOT/ast/decl.c2	/^public type DeclKind enum u8 {$/;"	t
DeclList	$C2_ROOT/ast/ast.c2	/^    DeclList variables;$/;"	v
DeclList	$C2_ROOT/ast/decl_list.c2	/^public type DeclList struct {$/;"	t
DeclList	$C2_ROOT/generator/c/c_generator.c2	/^    DeclList decls;$/;"	v
DeclList	$C2_ROOT/plugins/unit_test_plugin.c2	/^    DeclList decls;$/;"	v
DeclStmt	$C2_ROOT/ast/decl_stmt.c2	/^public type DeclStmt struct @(opaque) {$/;"	t
DeclStmtBits	$C2_ROOT/ast/decl_stmt.c2	/^type DeclStmtBits struct {$/;"	t
DeclStmtBits	$C2_ROOT/ast/stmt.c2	/^        DeclStmtBits declStmtBits;$/;"	v
DeclVisitor	$C2_ROOT/ast/ast.c2	/^public type DeclVisitor fn void (void* arg, Decl* d);$/;"	t
Dedent	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    if (t.cur_indent > indent) result.kind = TokenKind.Dedent;$/;"	v
Default	$C2_ROOT/ast/integer_literal.c2	/^    return e.base.base.integerLiteralBits.radix == Radix.Default;$/;"	v
Default	$C2_ROOT/ast_utils/number_radix.c2	/^    Default,$/;"	v
DepthAttachmentAction	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type DepthAttachmentAction struct @(cname="sg_depth_attachment_action") {$/;"	t
DepthState	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type DepthState struct @(cname="sg_depth_state") {$/;"	t
Deref	$C2_ROOT/parser/c2_parser_expr.c2	/^    case Star: return UnaryOpcode.Deref;$/;"	v
Desc	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type Desc struct @(cname="sapp_desc") {$/;"	t
Desc	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^type Desc struct @(cname="saudio_desc") {$/;"	t
Desc	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^type Desc struct @(cname="sdtx_desc_t") {$/;"	t
Desc	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Desc struct @(cname="sg_desc") {$/;"	t
Desc	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^type Desc struct @(cname="sgl_desc_t") {$/;"	t
Dest	$C2_ROOT/generator/c2refs.c2	/^public type Dest struct {$/;"	t
Destructor	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.Destructor]   = AttrReq.NoArg,$/;"	v
Diags	$C2_ROOT/common/diagnostics.c2	/^public type Diags struct @(opaque) {$/;"	t
Dir	$C2_ROOT/plugins/deps_generator.c2	/^type Dir struct {$/;"	t
Directive	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    result.kind = TokenKind.Directive;$/;"	v
Dirent	$C2_ROOT/libs/libc/libc_dirent.c2i	/^type Dirent struct @(cname="dirent") {$/;"	t
DirentCompareFn	$C2_ROOT/libs/libc/libc_dirent.c2i	/^type DirentCompareFn fn i32(const Dirent**, const Dirent**);$/;"	t
DisableAsserts	$C2_ROOT/compiler/c2recipe_parser.c2	/^    DisableAsserts,$/;"	v
Div	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        k = InstrKind.Div;$/;"	v
Div	$C2_ROOT/ir/instr_kind.c2	/^    Div,$/;"	v
DivAssign	$C2_ROOT/ast/binary_operator.c2	/^    DivAssign,$/;"	v
DivAssign	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.DivAssign]   = Assignment,$/;"	v
DivAssign	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.DivAssign]   = Assignment,$/;"	v
Div_t	$C2_ROOT/libs/libc/stdlib.c2i	/^type Div_t struct @(cname="div_t") {$/;"	t
Divide	$C2_ROOT/analyser/module_analyser_binop.c2	/^    Divide          int$/;"	v
Divide	$C2_ROOT/ast/binary_operator.c2	/^    Divide,$/;"	v
Divide	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.Divide]      = Multiplicative,$/;"	v
Divide	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.Divide]      = Multiplicative,$/;"	v
Doc_End	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    Doc_End,$/;"	v
Doc_Start	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    Doc_Start,$/;"	v
Dot	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.Dot;$/;"	v
Dot	$C2_ROOT/parser/token.c2	/^    [Kind.Dot]              = ".",$/;"	v
Double	$C2_ROOT/ir/ref.c2	/^    return r.kind >= RefKind.Value && r.kind <= RefKind.Double;$/;"	v
Double_Quoted_Scalar	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    Double_Quoted_Scalar,$/;"	v
Drand48_data	$C2_ROOT/libs/libc/stdlib.c2i	/^type Drand48_data struct @(opaque, cname="drand48_data");$/;"	t
DynamicLibrary	$C2_ROOT/common/build_target.c2	/^    DynamicLibrary,$/;"	v
DynamicLibrary	$C2_ROOT/common/component.c2	/^    return c.kind == Kind.StaticLibrary || c.kind == Kind.DynamicLibrary;$/;"	v
DynamicLibrary	$C2_ROOT/compiler/c2recipe_parser.c2	/^        kind = build_target.Kind.DynamicLibrary;$/;"	v
DynamicLibrary	$C2_ROOT/compiler/compiler.c2	/^        return component.Kind.DynamicLibrary;$/;"	v
EAC_R11	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    EAC_R11 = 62,$/;"	v
EAC_R11SN	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    EAC_R11SN = 63,$/;"	v
EAC_RG11	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    EAC_RG11 = 64,$/;"	v
EAC_RG11SN	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    EAC_RG11SN = 65,$/;"	v
EJECT	$C2_ROOT/libs/sdl2/sdl.c2i	/^    EJECT = 281,$/;"	v
ENAMETOOLONG	$C2_ROOT/common/file/file_utils.c2	/^    errno = ENAMETOOLONG;$/;"	v
END	$C2_ROOT/libs/sdl2/sdl.c2i	/^    END = 77,$/;"	v
END	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    END = 269,$/;"	v
ENOMEM	$C2_ROOT/common/file/reader.c2	/^        file.error = ENOMEM;$/;"	v
ENTER	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ENTER = 257,$/;"	v
EOF	$C2_ROOT/parser/c2_tokenizer.c2	/^    EOF,$/;"	v
EOPNOTSUPP	$C2_ROOT/libs/io_uring/io_uring.c2i	/^		return -EOPNOTSUPP;$/;"	v
EPOLL_CTL	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    EPOLL_CTL,$/;"	v
EQUAL	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    EQUAL = 61,$/;"	v
EQUAL	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    EQUAL = 3,$/;"	v
EQUAL	$C2_ROOT/parser/c2_tokenizer.c2	/^    EQUAL,$/;"	v
EQUALS	$C2_ROOT/libs/sdl2/sdl.c2i	/^    EQUALS = 46,$/;"	v
ESCAPE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    ESCAPE = 41,$/;"	v
ESCAPE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ESCAPE = 256,$/;"	v
ETC2_RGB8	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ETC2_RGB8 = 57,$/;"	v
ETC2_RGB8A1	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ETC2_RGB8A1 = 59,$/;"	v
ETC2_RGBA8	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ETC2_RGBA8 = 60,$/;"	v
ETC2_SRGB8	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ETC2_SRGB8 = 58,$/;"	v
ETC2_SRGB8A8	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ETC2_SRGB8A8 = 61,$/;"	v
EXCLAIM	$C2_ROOT/parser/c2_tokenizer.c2	/^    EXCLAIM,$/;"	v
EXECUTE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    EXECUTE = 116,$/;"	v
EXSEL	$C2_ROOT/libs/sdl2/sdl.c2i	/^    EXSEL = 164,$/;"	v
Ecp_group_id	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ecp_group_id enum u8 @(cname="mbedtls_ecp_group_id") {$/;"	t
Element	$C2_ROOT/common/linked_list.c2	/^public type Element struct {$/;"	t
ElementRange	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^type ElementRange struct @(cname="sshape_element_range_t") {$/;"	t
Elemsof	$C2_ROOT/ast/builtin_expr.c2	/^    Elemsof,$/;"	v
Ellipsis	$C2_ROOT/parser/c2_tokenizer.c2	/^                    result.kind = Kind.Ellipsis;$/;"	v
Ellipsis	$C2_ROOT/parser/token.c2	/^    [Kind.Ellipsis]         = "...",$/;"	v
Embed	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.Embed]        = AttrReq.String,$/;"	v
End	$C2_ROOT/compiler/c2recipe_parser.c2	/^    End,$/;"	v
Entropy_cb_f	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Entropy_cb_f fn c_int(void*, c_uchar*, c_size);$/;"	t
Entropy_context	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Entropy_context struct @(cname="mbedtls_entropy_context") {$/;"	t
Entropy_f_source_ptr	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Entropy_f_source_ptr fn c_int(void* data, c_uchar* output, c_size len, c_size* olen);$/;"	t
Entropy_seed_f	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Entropy_seed_f fn c_int(void *, c_uchar *, c_size);$/;"	t
Entropy_source_state	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Entropy_source_state struct @(cname="mbedtls_entropy_source_state") {$/;"	t
Entry	$C2_ROOT/common/attr_handler.c2	/^type Entry struct {$/;"	t
Enum	$C2_ROOT/ast/type.c2	/^    Enum,$/;"	v
Enum	$C2_ROOT/ir_examples/functions.c2	/^type Enum enum u8 { A, B }$/;"	t
EnumConstant	$C2_ROOT/analyser/module_analyser_expr.c2	/^        kind = IdentifierKind.EnumConstant;$/;"	v
EnumConstant	$C2_ROOT/ast/decl.c2	/^    return d.getKind() == DeclKind.EnumConstant;$/;"	v
EnumConstant	$C2_ROOT/ast/identifier_expr.c2	/^    EnumConstant,$/;"	v
EnumConstantDecl	$C2_ROOT/ast/enum_constant_decl.c2	/^public type EnumConstantDecl struct @(opaque) {$/;"	t
EnumConstantDeclBits	$C2_ROOT/ast/decl.c2	/^        EnumConstantDeclBits enumConstantDeclBits;$/;"	v
EnumConstantDeclBits	$C2_ROOT/ast/enum_constant_decl.c2	/^type EnumConstantDeclBits struct {$/;"	t
EnumMax	$C2_ROOT/ast/builtin_expr.c2	/^    EnumMax,$/;"	v
EnumMin	$C2_ROOT/ast/builtin_expr.c2	/^    EnumMin,$/;"	v
EnumType	$C2_ROOT/ast/decl.c2	/^    return d.getKind() == DeclKind.EnumType;$/;"	v
EnumType	$C2_ROOT/ast/enum_type.c2	/^public type EnumType struct @(opaque) {$/;"	t
EnumTypeDecl	$C2_ROOT/ast/enum_type_decl.c2	/^public type EnumTypeDecl struct @(opaque) {$/;"	t
EnumTypeDeclBits	$C2_ROOT/ast/decl.c2	/^        EnumTypeDeclBits enumTypeDeclBits;$/;"	v
EnumTypeDeclBits	$C2_ROOT/ast/enum_type_decl.c2	/^type EnumTypeDeclBits struct {$/;"	t
Environment	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Environment struct @(cname="sg_environment") {$/;"	t
EnvironmentDefaults	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type EnvironmentDefaults struct @(cname="sg_environment_defaults") {$/;"	t
Eof	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    Eof,$/;"	v
Eof	$C2_ROOT/compiler/c2recipe_parser.c2	/^    Eof,$/;"	v
Eof	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.Eof;$/;"	v
Eof	$C2_ROOT/parser/token.c2	/^    [Kind.Eof]              = "eof",$/;"	v
Equal	$C2_ROOT/ast/binary_operator.c2	/^    Equal,$/;"	v
Equal	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.Equal]       = Relational,$/;"	v
Equal	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.Equal]       = Equality,$/;"	v
Equal	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.Equal]          = Assign,$/;"	v
Equal	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.Equal;$/;"	v
Equal	$C2_ROOT/parser/token.c2	/^    [Kind.Equal]            = "=",$/;"	v
EqualEqual	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.EqualEqual]   = Relational,$/;"	v
EqualEqual	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.EqualEqual;$/;"	v
EqualEqual	$C2_ROOT/parser/token.c2	/^    [Kind.EqualEqual]       = "==",$/;"	v
Err_not_a_file	$C2_ROOT/common/file/reader.c2	/^        file.error = Err_not_a_file;$/;"	v
Err_read_error	$C2_ROOT/common/file/reader.c2	/^        file.error = Err_read_error;$/;"	v
Err_too_large	$C2_ROOT/common/file/reader.c2	/^        file.error = Err_too_large;$/;"	v
Err_write_error	$C2_ROOT/common/file/writer.c2	/^        file.error = Err_write_error;$/;"	v
Error	$C2_ROOT/analyser/module_analyser_stmt.c2	/^const FlowBits FlowError     = 1 << Flow.Error;$/;"	v
Error	$C2_ROOT/ast/ast_evaluator.c2	/^        return Cont.Error;$/;"	v
Error	$C2_ROOT/ast/value.c2	/^    return v.kind == ValueKind.Error;$/;"	v
Error	$C2_ROOT/common/diagnostics.c2	/^    if (diags.promote_warnings) category = Category.Error;$/;"	v
Error	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    result.kind = TokenKind.Error;$/;"	v
Error	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^type Error struct @(cname="sgl_error_t") {$/;"	t
Error	$C2_ROOT/parser/c2_tokenizer.c2	/^    result.kind = Kind.Error;$/;"	v
Error	$C2_ROOT/parser/keywords.c2	/^        info.indexes[idx] = Error;$/;"	v
Error	$C2_ROOT/parser/token.c2	/^    [Kind.Error]            = "error",$/;"	v
ErrorFn	$C2_ROOT/plugins/unit_test1.c2	/^public type ErrorFn fn void (const char* fmt @(printf_format), ...);$/;"	t
Evaluator	$C2_ROOT/ast/ast_evaluator.c2	/^type Evaluator struct {$/;"	t
Evaluator	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^type Evaluator struct {$/;"	t
Event	$C2_ROOT/libs/sdl2/sdl.c2i	/^type Event union @(cname="SDL_Event") {$/;"	t
Event	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type Event struct @(cname="sapp_event") {$/;"	t
EventCb	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type EventCb fn void(Event*);$/;"	t
EventDataCb	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type EventDataCb fn void(Event*, void*);$/;"	t
EventType	$C2_ROOT/libs/sdl2/sdl.c2i	/^type EventType enum u16 @(cname="SDL_EventType") {$/;"	t
EventType	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type EventType enum u32 @(cname="sapp_event_type") {$/;"	t
Exclaim	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.Exclaim] = 7,$/;"	v
Exclaim	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.Exclaim;$/;"	v
Exclaim	$C2_ROOT/parser/token.c2	/^    [Kind.Exclaim]          = "!",$/;"	v
ExclaimEqual	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.ExclaimEqual] = Relational,$/;"	v
ExclaimEqual	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.ExclaimEqual;$/;"	v
ExclaimEqual	$C2_ROOT/parser/token.c2	/^    [Kind.ExclaimEqual]     = "!=",$/;"	v
Executable	$C2_ROOT/common/build_target.c2	/^    Executable,$/;"	v
Executable	$C2_ROOT/common/component.c2	/^    Executable,$/;"	v
Executable	$C2_ROOT/compiler/c2recipe_parser.c2	/^    Executable,$/;"	v
Executable	$C2_ROOT/compiler/compiler.c2	/^    return component.Kind.Executable;$/;"	v
ExplicitCast	$C2_ROOT/ast/expr.c2	/^    ExplicitCast,$/;"	v
ExplicitCastExpr	$C2_ROOT/ast/explicit_cast_expr.c2	/^public type ExplicitCastExpr struct @(opaque) {$/;"	t
ExplicitCastExprBits	$C2_ROOT/ast/explicit_cast_expr.c2	/^type ExplicitCastExprBits struct {$/;"	t
ExplicitCastExprBits	$C2_ROOT/ast/stmt.c2	/^        ExplicitCastExprBits explicitCastExprBits;$/;"	v
Export	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.Export]       = AttrReq.NoArg,$/;"	v
Export	$C2_ROOT/compiler/c2recipe_parser.c2	/^    Export,$/;"	v
Expr	$C2_ROOT/ast/array_designated_init_expr.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/array_subscript_expr.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/binary_operator.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/bitoffset_expr.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/boolean_literal.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/builtin_expr.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/call_expr.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/char_literal.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/conditional_operator.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/explicit_cast_expr.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/expr.c2	/^public type Expr struct @(opaque) {$/;"	t
Expr	$C2_ROOT/ast/field_designated_init_expr.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/float_literal.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/identifier_expr.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/implicit_cast_expr.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/init_list_expr.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/integer_literal.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/member_expr.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/nil_expr.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/paren_expr.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/range_expr.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/stmt.c2	/^    return s.getKind() == StmtKind.Expr;$/;"	v
Expr	$C2_ROOT/ast/string_literal.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/type_expr.c2	/^    Expr base;$/;"	v
Expr	$C2_ROOT/ast/unary_operator.c2	/^    Expr base;$/;"	v
ExprBits	$C2_ROOT/ast/expr.c2	/^type ExprBits struct {$/;"	t
ExprBits	$C2_ROOT/ast/stmt.c2	/^        ExprBits exprBits;$/;"	v
ExprKind	$C2_ROOT/ast/expr.c2	/^public type ExprKind enum u8 {$/;"	t
ExprList	$C2_ROOT/ast/expr_list.c2	/^public type ExprList struct {$/;"	t
ExprPrinter	$C2_ROOT/ast/type_ref.c2	/^public type ExprPrinter fn void(void* arg, const Expr* e, string_buffer.Buf* out);$/;"	t
ExprRef	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^    ExprRef loc_str;$/;"	v
ExprWidth	$C2_ROOT/analyser/conversion_checker_expr.c2	/^type ExprWidth struct {$/;"	t
ExternalDynamic	$C2_ROOT/common/component.c2	/^    ExternalDynamic,$/;"	v
ExternalDynamic	$C2_ROOT/compiler/compiler_libs.c2	/^    Kind kind = is_static ? Kind.ExternalStatic : Kind.ExternalDynamic;$/;"	v
ExternalStatic	$C2_ROOT/common/component.c2	/^    return c.kind >= Kind.ExternalStatic;$/;"	v
F1	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F1 = 58,$/;"	v
F1	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F1 = 290,$/;"	v
F10	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F10 = 67,$/;"	v
F10	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F10 = 299,$/;"	v
F11	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F11 = 68,$/;"	v
F11	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F11 = 300,$/;"	v
F12	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F12 = 69,$/;"	v
F12	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F12 = 301,$/;"	v
F13	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F13 = 104,$/;"	v
F13	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F13 = 302,$/;"	v
F14	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F14 = 105,$/;"	v
F14	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F14 = 303,$/;"	v
F15	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F15 = 106,$/;"	v
F15	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F15 = 304,$/;"	v
F16	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F16 = 107,$/;"	v
F16	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F16 = 305,$/;"	v
F17	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F17 = 108,$/;"	v
F17	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F17 = 306,$/;"	v
F18	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F18 = 109,$/;"	v
F18	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F18 = 307,$/;"	v
F19	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F19 = 110,$/;"	v
F19	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F19 = 308,$/;"	v
F2	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F2 = 59,$/;"	v
F2	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F2 = 291,$/;"	v
F20	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F20 = 111,$/;"	v
F20	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F20 = 309,$/;"	v
F21	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F21 = 112,$/;"	v
F21	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F21 = 310,$/;"	v
F22	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F22 = 113,$/;"	v
F22	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F22 = 311,$/;"	v
F23	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F23 = 114,$/;"	v
F23	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F23 = 312,$/;"	v
F24	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F24 = 115,$/;"	v
F24	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F24 = 313,$/;"	v
F25	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F25 = 314,$/;"	v
F3	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F3 = 60,$/;"	v
F3	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F3 = 292,$/;"	v
F32	$C2_ROOT/ir/context.c2	/^    [Type.F32] = InstrKind.Store4,$/;"	v
F32	$C2_ROOT/ir/types.c2	/^    F32,$/;"	v
F4	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F4 = 61,$/;"	v
F4	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F4 = 293,$/;"	v
F5	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F5 = 62,$/;"	v
F5	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F5 = 294,$/;"	v
F6	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F6 = 63,$/;"	v
F6	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F6 = 295,$/;"	v
F64	$C2_ROOT/ir/context.c2	/^    [Type.F64] = InstrKind.Store8,$/;"	v
F64	$C2_ROOT/ir/types.c2	/^    F64,$/;"	v
F7	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F7 = 64,$/;"	v
F7	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F7 = 296,$/;"	v
F8	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F8 = 65,$/;"	v
F8	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F8 = 297,$/;"	v
F9	$C2_ROOT/libs/sdl2/sdl.c2i	/^    F9 = 66,$/;"	v
F9	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    F9 = 298,$/;"	v
FADVISE	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    FADVISE,$/;"	v
FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FAILED = 3,$/;"	v
FAIL_BUFFER_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FAIL_BUFFER_INVALID_STATE = 109,$/;"	v
FAIL_IMAGE_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FAIL_IMAGE_INVALID_STATE = 110,$/;"	v
FAIL_PIPELINE_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FAIL_PIPELINE_INVALID_STATE = 113,$/;"	v
FAIL_SAMPLER_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FAIL_SAMPLER_INVALID_STATE = 111,$/;"	v
FAIL_SHADER_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FAIL_SHADER_INVALID_STATE = 112,$/;"	v
FAIL_VIEW_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FAIL_VIEW_INVALID_STATE = 114,$/;"	v
FALLOCATE	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    FALLOCATE,$/;"	v
FETCH_ERROR_BUFFER_TOO_SMALL	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    FETCH_ERROR_BUFFER_TOO_SMALL = 1,$/;"	v
FETCH_ERROR_NO_ERROR	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    FETCH_ERROR_NO_ERROR = 0,$/;"	v
FETCH_ERROR_OTHER	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    FETCH_ERROR_OTHER = 2,$/;"	v
FILE	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct FILE_ FILE;$/;"	v
FILE	$C2_ROOT/libs/libc/stdio.c2i	/^type FILE struct {$/;"	t
FILES_DROPPED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    FILES_DROPPED = 23,$/;"	v
FILES_UPDATE	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    FILES_UPDATE,$/;"	v
FILTERING	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FILTERING = 1,$/;"	v
FIND	$C2_ROOT/libs/sdl2/sdl.c2i	/^    FIND = 126,$/;"	v
FINGER	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    FINGER = 1,$/;"	v
FINGERDOWN	$C2_ROOT/libs/sdl2/sdl.c2i	/^    FINGERDOWN      = 0x700,$/;"	v
FINGERMOTION	$C2_ROOT/libs/sdl2/sdl.c2i	/^    FINGERMOTION,$/;"	v
FINGERUP	$C2_ROOT/libs/sdl2/sdl.c2i	/^    FINGERUP,$/;"	v
FLOAT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FLOAT = 1,$/;"	v
FLOAT2	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FLOAT2 = 2,$/;"	v
FLOAT3	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FLOAT3 = 3,$/;"	v
FLOAT4	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FLOAT4 = 4,$/;"	v
FOCUSED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    FOCUSED = 17,$/;"	v
FP32_	$C2_ROOT/libs/math/math.c2i	/^type FP32_ union { f32 f; u32 u; }$/;"	t
FP64	$C2_ROOT/ast/value.c2	/^type FP64 union { f64 d; u64 bits; }$/;"	t
FP64_	$C2_ROOT/libs/math/math.c2i	/^type FP64_ union { f64 d; u64 u; }$/;"	t
FRAGMENT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FRAGMENT = 2,$/;"	v
FRONT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FRONT = 2,$/;"	v
FSYNC	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    FSYNC,$/;"	v
FaceWinding	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type FaceWinding enum u32 @(cname="sg_face_winding") {$/;"	t
FaceWinding	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    FaceWinding face_winding;$/;"	v
Fallthrough	$C2_ROOT/ast/stmt.c2	/^    return s.getKind() == StmtKind.Fallthrough;$/;"	v
FallthroughStmt	$C2_ROOT/ast/fallthrough_stmt.c2	/^public type FallthroughStmt struct @(opaque) {$/;"	t
Feat_elif	$C2_ROOT/parser/token.c2	/^    [Kind.Feat_elif]        = "#elif",$/;"	v
Feat_else	$C2_ROOT/parser/token.c2	/^    [Kind.Feat_else]        = "#else",$/;"	v
Feat_endif	$C2_ROOT/parser/token.c2	/^    [Kind.Feat_endif]       = "#endif",$/;"	v
Feat_error	$C2_ROOT/parser/token.c2	/^    [Kind.Feat_error]       = "#error",$/;"	v
Feat_if	$C2_ROOT/parser/token.c2	/^    [Kind.Feat_if]          = "#if",$/;"	v
Feat_ifdef	$C2_ROOT/parser/token.c2	/^    [Kind.Feat_ifdef]       = "#ifdef",$/;"	v
Feat_ifndef	$C2_ROOT/parser/token.c2	/^    [Kind.Feat_ifndef]      = "#ifndef",$/;"	v
Feat_warning	$C2_ROOT/parser/token.c2	/^    [Kind.Feat_warning]     = "#warning",$/;"	v
Feature	$C2_ROOT/parser/c2_tokenizer.c2	/^public type Feature struct {$/;"	t
Features	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Features struct @(cname="sg_features") {$/;"	t
FieldDesignatedInit	$C2_ROOT/ast/expr.c2	/^    return e.getKind() == ExprKind.FieldDesignatedInit;$/;"	v
FieldDesignatedInitExpr	$C2_ROOT/ast/field_designated_init_expr.c2	/^public type FieldDesignatedInitExpr struct @(opaque) {$/;"	t
FieldInit	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^type FieldInit struct {$/;"	t
FieldInitField	$C2_ROOT/ast/struct_type_decl.c2	/^public type FieldInitField struct {$/;"	t
FieldInitInfo	$C2_ROOT/ast/struct_type_decl.c2	/^public type FieldInitInfo struct {$/;"	t
FieldStructLayouter	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^type FieldStructLayouter struct {$/;"	t
FieldStructLayouter	$C2_ROOT/generator/ir/ir_generator.c2	/^        FieldStructLayouter layouter;$/;"	v
FieldStructLayouter	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        FieldStructLayouter layouter;$/;"	v
File	$C2_ROOT/ast/var_decl.c2	/^    return d.base.varDeclBits.auto_attr == AutoAttr.File;$/;"	v
File	$C2_ROOT/common/build_target.c2	/^public type File struct {$/;"	t
File	$C2_ROOT/common/file/file_utils.c2	/^public type File struct @(unused) {$/;"	t
File	$C2_ROOT/common/source_mgr.c2	/^type File struct {$/;"	t
File	$C2_ROOT/compiler/c2recipe_parser.c2	/^    File,$/;"	v
File	$C2_ROOT/generator/c2refs.c2	/^type File struct {$/;"	t
FileIndexSize	$C2_ROOT/common/source_mgr.c2	/^    u32 index_max = sm.max_offset \/ FileIndexSize;$/;"	v
Files	$C2_ROOT/generator/c2refs.c2	/^type Files struct {$/;"	t
FillInfo	$C2_ROOT/analyser/module_analyser_init.c2	/^type FillInfo struct {$/;"	t
Filter	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Filter enum u32 @(cname="sg_filter") {$/;"	t
FilterFn	$C2_ROOT/libs/libc/libc_dirent.c2i	/^type FilterFn fn i32(const Dirent*);$/;"	t
Finder	$C2_ROOT/generator/c/dep_finder.c2	/^public type Finder struct {$/;"	t
Flag	$C2_ROOT/libs/libc/ctermios.c2i	/^type Flag c_uint;$/;"	t
Flag	$C2_ROOT/libs/libc/net_if.c2i	/^type Flag enum u32 @(cname="ifflag") {$/;"	t
Flags	$C2_ROOT/common/warning_flags.c2	/^public type Flags struct {$/;"	t
Float	$C2_ROOT/ast/value.c2	/^    v.kind = ValueKind.Float;$/;"	v
Float32	$C2_ROOT/ast/builtin_type.c2	/^    [BuiltinKind.Float32] = true,$/;"	v
Float32	$C2_ROOT/generator/c/c_generator_expr.c2	/^    [BuiltinKind.Float32] = false,$/;"	v
Float32	$C2_ROOT/generator/ir/ir_generator.c2	/^    [BuiltinKind.Float32] = F32,$/;"	v
Float64	$C2_ROOT/ast/builtin_type.c2	/^    [BuiltinKind.Float64] = true,$/;"	v
Float64	$C2_ROOT/generator/c/c_generator_expr.c2	/^    [BuiltinKind.Float64] = true,$/;"	v
Float64	$C2_ROOT/generator/ir/ir_generator.c2	/^    [BuiltinKind.Float64] = F64,$/;"	v
FloatLiteral	$C2_ROOT/ast/expr.c2	/^    FloatLiteral,$/;"	v
FloatLiteral	$C2_ROOT/ast/float_literal.c2	/^public type FloatLiteral struct @(opaque) {$/;"	t
FloatLiteral	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.FloatLiteral] = 3,$/;"	v
FloatLiteral	$C2_ROOT/parser/c2_tokenizer.c2	/^    result.kind = Kind.FloatLiteral;$/;"	v
FloatLiteral	$C2_ROOT/parser/token.c2	/^    [Kind.FloatLiteral]     = "float",$/;"	v
FloatLiteralBits	$C2_ROOT/ast/float_literal.c2	/^type FloatLiteralBits struct {$/;"	t
FloatLiteralBits	$C2_ROOT/ast/stmt.c2	/^        FloatLiteralBits floatLiteralBits;$/;"	v
FloatingPoint	$C2_ROOT/analyser_utils/printf_utils.c2	/^        spec = Specifier.FloatingPoint;$/;"	v
Flow	$C2_ROOT/analyser/module_analyser_stmt.c2	/^type Flow enum u8 {$/;"	t
FlowBits	$C2_ROOT/analyser/module_analyser_stmt.c2	/^type FlowBits u32;$/;"	t
FlowBreak	$C2_ROOT/analyser/module_analyser_stmt.c2	/^        return FlowBreak;$/;"	v
FlowContinue	$C2_ROOT/analyser/module_analyser_stmt.c2	/^        return FlowContinue;$/;"	v
FlowError	$C2_ROOT/analyser/module_analyser_switch.c2	/^    return FlowError;$/;"	v
FlowGoto	$C2_ROOT/analyser/module_analyser_stmt.c2	/^        return FlowGoto;$/;"	v
FlowNext	$C2_ROOT/analyser/module_analyser_stmt.c2	/^    if (flow2 & FlowBreak) flow |= FlowNext;$/;"	v
FlowNext	$C2_ROOT/analyser/module_analyser_switch.c2	/^    if (!defaultCase) flow |= FlowNext;$/;"	v
FlowNoReturn	$C2_ROOT/analyser/module_analyser_stmt.c2	/^        if (!ma.has_error && ma.isNoReturn(e)) return FlowNoReturn;$/;"	v
FlowReturn	$C2_ROOT/analyser/module_analyser_stmt.c2	/^        return FlowReturn;$/;"	v
FnStart	$C2_ROOT/ir/block.c2	/^    FnStart,$/;"	v
Font	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^type Font struct @(cname="TTF_FONT", opaque);$/;"	t
FontDesc	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^type FontDesc struct @(cname="sdtx_font_desc_t") {$/;"	t
Foo	$C2_ROOT/ir_examples/array.c2	/^type Foo struct {$/;"	t
Foo	$C2_ROOT/ir_examples/builtins.c2	/^type Foo struct {$/;"	t
Foo	$C2_ROOT/ir_examples/global_arrays.c2	/^type Foo struct {$/;"	t
Foo	$C2_ROOT/ir_examples/struct_init.c2	/^type Foo struct {$/;"	t
Foo	$C2_ROOT/ir_examples/struct_init_anonymous.c2	/^type Foo struct {$/;"	t
For	$C2_ROOT/ast/stmt.c2	/^    For,$/;"	v
ForBody	$C2_ROOT/ir/block.c2	/^    ForBody,$/;"	v
ForCond	$C2_ROOT/ir/block.c2	/^    ForCond,$/;"	v
ForCont	$C2_ROOT/ir/block.c2	/^    ForCont,$/;"	v
ForJoin	$C2_ROOT/ir/block.c2	/^    ForJoin,$/;"	v
ForStmt	$C2_ROOT/ast/for_stmt.c2	/^public type ForStmt struct @(opaque) {$/;"	t
FormatAnalyser	$C2_ROOT/analyser/module_analyser_call.c2	/^type FormatAnalyser struct {$/;"	t
FormatChanger	$C2_ROOT/generator/c/c_generator_expr.c2	/^type FormatChanger struct {$/;"	t
FormatHandler	$C2_ROOT/analyser_utils/printf_utils.c2	/^public type FormatHandler fn bool (void* arg, Specifier specifier, u32 offset, i32 stars, char l/;"	t
Fragment	$C2_ROOT/generator/c/c_generator.c2	/^type Fragment struct {$/;"	t
FrameStats	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type FrameStats struct @(cname="sg_frame_stats") {$/;"	t
FrameStatsD3d11	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type FrameStatsD3d11 struct @(cname="sg_frame_stats_d3d11") {$/;"	t
FrameStatsD3d11Bindings	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type FrameStatsD3d11Bindings struct @(cname="sg_frame_stats_d3d11_bindings") {$/;"	t
FrameStatsD3d11Draw	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type FrameStatsD3d11Draw struct @(cname="sg_frame_stats_d3d11_draw") {$/;"	t
FrameStatsD3d11Pass	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type FrameStatsD3d11Pass struct @(cname="sg_frame_stats_d3d11_pass") {$/;"	t
FrameStatsD3d11Pipeline	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type FrameStatsD3d11Pipeline struct @(cname="sg_frame_stats_d3d11_pipeline") {$/;"	t
FrameStatsD3d11Uniforms	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type FrameStatsD3d11Uniforms struct @(cname="sg_frame_stats_d3d11_uniforms") {$/;"	t
FrameStatsGl	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type FrameStatsGl struct @(cname="sg_frame_stats_gl") {$/;"	t
FrameStatsMetal	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type FrameStatsMetal struct @(cname="sg_frame_stats_metal") {$/;"	t
FrameStatsMetalBindings	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type FrameStatsMetalBindings struct @(cname="sg_frame_stats_metal_bindings") {$/;"	t
FrameStatsMetalIdpool	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type FrameStatsMetalIdpool struct @(cname="sg_frame_stats_metal_idpool") {$/;"	t
FrameStatsMetalPipeline	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type FrameStatsMetalPipeline struct @(cname="sg_frame_stats_metal_pipeline") {$/;"	t
FrameStatsMetalUniforms	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type FrameStatsMetalUniforms struct @(cname="sg_frame_stats_metal_uniforms") {$/;"	t
FrameStatsWgpu	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type FrameStatsWgpu struct @(cname="sg_frame_stats_wgpu") {$/;"	t
FrameStatsWgpuBindings	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type FrameStatsWgpuBindings struct @(cname="sg_frame_stats_wgpu_bindings") {$/;"	t
FrameStatsWgpuUniforms	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type FrameStatsWgpuUniforms struct @(cname="sg_frame_stats_wgpu_uniforms") {$/;"	t
FreeCb	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type FreeCb fn void(void*, void*);$/;"	t
FreeCb	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^type FreeCb fn void(void*, void*);$/;"	t
FreeCb	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^type FreeCb fn void(void*, void*);$/;"	t
FreeCb	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type FreeCb fn void(void*, void*);$/;"	t
FreeCb	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^type FreeCb fn void(void*, void*);$/;"	t
Fun	$C2_ROOT/ast/ast_evaluator.c2	/^type Fun union {$/;"	t
FunDD	$C2_ROOT/ast/ast_evaluator.c2	/^type FunDD fn i64 (f64 a);$/;"	t
FunII	$C2_ROOT/ast/ast_evaluator.c2	/^type FunII fn i32 (i32 a);$/;"	t
Func	$C2_ROOT/ast/var_decl.c2	/^    return d.base.varDeclBits.auto_attr == AutoAttr.Func;$/;"	v
Function	$C2_ROOT/analyser/module_analyser_expr.c2	/^        kind = IdentifierKind.Function;$/;"	v
Function	$C2_ROOT/ast/decl.c2	/^    return d.getKind() == DeclKind.Function;$/;"	v
Function	$C2_ROOT/ast/identifier_expr.c2	/^    Function,$/;"	v
Function	$C2_ROOT/ast/type.c2	/^    Function,$/;"	v
FunctionDecl	$C2_ROOT/ast/function_decl.c2	/^public type FunctionDecl struct @(opaque) {$/;"	t
FunctionDeclBits	$C2_ROOT/ast/decl.c2	/^        FunctionDeclBits functionDeclBits;$/;"	v
FunctionDeclBits	$C2_ROOT/ast/function_decl.c2	/^type FunctionDeclBits struct {$/;"	t
FunctionDeclFlags	$C2_ROOT/ast/function_decl.c2	/^type FunctionDeclFlags struct {$/;"	t
FunctionDeclList	$C2_ROOT/ast/ast.c2	/^    FunctionDeclList functions;$/;"	v
FunctionDeclList	$C2_ROOT/ast/function_decl_list.c2	/^public type FunctionDeclList struct {$/;"	t
FunctionDeclList	$C2_ROOT/plugins/unit_test_plugin.c2	/^    FunctionDeclList tests;$/;"	v
FunctionInfo	$C2_ROOT/ir/function_info.c2	/^public type FunctionInfo struct {$/;"	t
FunctionParam	$C2_ROOT/ast/var_decl.c2	/^    return d.getKind() == VarDeclKind.FunctionParam;$/;"	v
FunctionType	$C2_ROOT/ast/decl.c2	/^    return d.getKind() == DeclKind.FunctionType;$/;"	v
FunctionType	$C2_ROOT/ast/function_type.c2	/^public type FunctionType struct @(opaque) {$/;"	t
FunctionTypeDecl	$C2_ROOT/ast/function_type_decl.c2	/^public type FunctionTypeDecl struct @(opaque) {$/;"	t
FunctionVisitor	$C2_ROOT/ast/ast.c2	/^public type FunctionVisitor fn void (void* arg, FunctionDecl* d);$/;"	t
GA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GA = 10,$/;"	v
GB	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GB = 6,$/;"	v
GBA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GBA = 14,$/;"	v
GLCORE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GLCORE = 0,$/;"	v
GLES3	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GLES3 = 1,$/;"	v
GL_3D_TEXTURES_NOT_SUPPORTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GL_3D_TEXTURES_NOT_SUPPORTED = 3,$/;"	v
GL_ARRAY_TEXTURES_NOT_SUPPORTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GL_ARRAY_TEXTURES_NOT_SUPPORTED = 4,$/;"	v
GL_FRAMEBUFFER_STATUS_INCOMPLETE_ATTACHMENT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GL_FRAMEBUFFER_STATUS_INCOMPLETE_ATTACHMENT = 13,$/;"	v
GL_FRAMEBUFFER_STATUS_INCOMPLETE_MISSING_ATTACHMENT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GL_FRAMEBUFFER_STATUS_INCOMPLETE_MISSING_ATTACHMENT = 14,$/;"	v
GL_FRAMEBUFFER_STATUS_INCOMPLETE_MULTISAMPLE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GL_FRAMEBUFFER_STATUS_INCOMPLETE_MULTISAMPLE = 16,$/;"	v
GL_FRAMEBUFFER_STATUS_UNDEFINED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GL_FRAMEBUFFER_STATUS_UNDEFINED = 12,$/;"	v
GL_FRAMEBUFFER_STATUS_UNKNOWN	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GL_FRAMEBUFFER_STATUS_UNKNOWN = 17,$/;"	v
GL_FRAMEBUFFER_STATUS_UNSUPPORTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GL_FRAMEBUFFER_STATUS_UNSUPPORTED = 15,$/;"	v
GL_IMAGE_SAMPLER_NAME_NOT_FOUND_IN_SHADER	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GL_IMAGE_SAMPLER_NAME_NOT_FOUND_IN_SHADER = 11,$/;"	v
GL_SHADER_COMPILATION_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GL_SHADER_COMPILATION_FAILED = 7,$/;"	v
GL_SHADER_LINKING_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GL_SHADER_LINKING_FAILED = 8,$/;"	v
GL_STORAGEBUFFER_GLSL_BINDING_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GL_STORAGEBUFFER_GLSL_BINDING_OUT_OF_RANGE = 5,$/;"	v
GL_STORAGEIMAGE_GLSL_BINDING_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GL_STORAGEIMAGE_GLSL_BINDING_OUT_OF_RANGE = 6,$/;"	v
GL_TEXTURE_FORMAT_NOT_SUPPORTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GL_TEXTURE_FORMAT_NOT_SUPPORTED = 2,$/;"	v
GL_UNIFORMBLOCK_NAME_NOT_FOUND_IN_SHADER	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GL_UNIFORMBLOCK_NAME_NOT_FOUND_IN_SHADER = 10,$/;"	v
GL_VERTEX_ATTRIBUTE_NOT_FOUND_IN_SHADER	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GL_VERTEX_ATTRIBUTE_NOT_FOUND_IN_SHADER = 9,$/;"	v
GRAVE_ACCENT	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    GRAVE_ACCENT = 96,$/;"	v
GREATER	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GREATER = 5,$/;"	v
GREATER	$C2_ROOT/parser/c2_tokenizer.c2	/^    GREATER,$/;"	v
GREATER_EQUAL	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GREATER_EQUAL = 7,$/;"	v
Generator	$C2_ROOT/generator/c/c_generator.c2	/^type Generator struct {$/;"	t
Generator	$C2_ROOT/generator/c2i/c2i_generator.c2	/^type Generator struct {$/;"	t
Generator	$C2_ROOT/generator/ir/ir_generator.c2	/^type Generator struct {$/;"	t
Generator	$C2_ROOT/plugins/deps_generator.c2	/^type Generator struct {$/;"	t
Generator	$C2_ROOT/plugins/refs_generator.c2	/^type Generator struct {$/;"	t
GlBufferInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type GlBufferInfo struct @(cname="sg_gl_buffer_info") {$/;"	t
GlImageInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type GlImageInfo struct @(cname="sg_gl_image_info") {$/;"	t
GlSamplerInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type GlSamplerInfo struct @(cname="sg_gl_sampler_info") {$/;"	t
GlShaderInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type GlShaderInfo struct @(cname="sg_gl_shader_info") {$/;"	t
GlSwapchain	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type GlSwapchain struct @(cname="sg_gl_swapchain") {$/;"	t
GlViewInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type GlViewInfo struct @(cname="sg_gl_view_info") {$/;"	t
GlobalVar	$C2_ROOT/ast/var_decl.c2	/^    return d.getKind() == VarDeclKind.GlobalVar;$/;"	v
Globals	$C2_ROOT/ast/utils.c2	/^public type Globals struct @(opaque) {$/;"	t
Gloss	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u8 Gloss;$/;"	v
GlslShaderUniform	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type GlslShaderUniform struct @(cname="sg_glsl_shader_uniform") {$/;"	t
Gmask	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u32 Gmask;$/;"	v
Goto	$C2_ROOT/analyser/module_analyser_stmt.c2	/^const FlowBits FlowGoto      = 1 << Flow.Goto;$/;"	v
Goto	$C2_ROOT/ast/stmt.c2	/^    Goto,$/;"	v
GotoStmt	$C2_ROOT/ast/goto_stmt.c2	/^public type GotoStmt struct @(opaque) {$/;"	t
Greater	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.Greater]      = Relational,$/;"	v
Greater	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.Greater;$/;"	v
Greater	$C2_ROOT/parser/token.c2	/^    [Kind.Greater]          = ">",$/;"	v
GreaterEqual	$C2_ROOT/ast/binary_operator.c2	/^    GreaterEqual,$/;"	v
GreaterEqual	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.GreaterEqual] = Relational,$/;"	v
GreaterEqual	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.GreaterEqual] = Relative,$/;"	v
GreaterEqual	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.GreaterEqual] = Relational,$/;"	v
GreaterEqual	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.GreaterEqual;$/;"	v
GreaterEqual	$C2_ROOT/parser/token.c2	/^    [Kind.GreaterEqual]     = ">=",$/;"	v
GreaterGreater	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.GreaterGreater] = ShiftRight,$/;"	v
GreaterGreater	$C2_ROOT/parser/c2_tokenizer.c2	/^                    result.kind = Kind.GreaterGreater;$/;"	v
GreaterGreater	$C2_ROOT/parser/token.c2	/^    [Kind.GreaterGreater]   = ">>",$/;"	v
GreaterGreaterEqual	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.GreaterGreaterEqual] = ShrAssign,$/;"	v
GreaterGreaterEqual	$C2_ROOT/parser/c2_tokenizer.c2	/^                    result.kind = Kind.GreaterGreaterEqual;$/;"	v
GreaterGreaterEqual	$C2_ROOT/parser/token.c2	/^    [Kind.GreaterGreaterEqual] = ">>=",$/;"	v
GreaterThan	$C2_ROOT/ast/binary_operator.c2	/^    GreaterThan,$/;"	v
GreaterThan	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.GreaterThan] = Relational,$/;"	v
GreaterThan	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.GreaterThan] = Relative,$/;"	v
Green	$C2_ROOT/ast/utils.c2	/^const char* col_Type = color.Green;$/;"	v
Green	$C2_ROOT/ir/print.c2	/^const char* col_Type = color.Green;$/;"	v
Green	$C2_ROOT/plugins/unit_test2.c2	/^  const char* color = stats.failed ? Red : Green;$/;"	v
Grey	$C2_ROOT/ast/symbol_table.c2	/^        const char* col = d.isUsed() ? color.Normal : color.Grey;$/;"	v
Grey	$C2_ROOT/common/component.c2	/^        const char* col = m.isUsed() ? color.Normal : color.Grey;$/;"	v
Grey	$C2_ROOT/ir/print.c2	/^const char* col_Comment = color.Grey;$/;"	v
Group	$C2_ROOT/plugins/unit_test1.c2	/^public type Group struct {$/;"	t
Gshift	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u8 Gshift;$/;"	v
HALF2	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    HALF2 = 26,$/;"	v
HALF4	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    HALF4 = 27,$/;"	v
HASH_BUCKETS	$C2_ROOT/generator/c/c_generator_trace.c2	/^    u32 bucket = hash % HASH_BUCKETS;$/;"	v
HASH_INITIAL	$C2_ROOT/ast_utils/string_pool.c2	/^    u32 result = HASH_INITIAL;$/;"	v
HASH_INITIAL	$C2_ROOT/generator/c/c_generator_trace.c2	/^    u32 hash = HASH_INITIAL;$/;"	v
HASH_PRIME	$C2_ROOT/ast_utils/string_pool.c2	/^        result *= HASH_PRIME;$/;"	v
HASH_PRIME	$C2_ROOT/generator/c/c_generator_trace.c2	/^        hash *= HASH_PRIME;$/;"	v
HELP	$C2_ROOT/libs/sdl2/sdl.c2i	/^    HELP = 117,$/;"	v
HOME	$C2_ROOT/libs/sdl2/sdl.c2i	/^    HOME = 74,$/;"	v
HOME	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    HOME = 268,$/;"	v
Halt	$C2_ROOT/ir/instr_kind.c2	/^    Halt,$/;"	v
Handler	$C2_ROOT/common/attr_handler.c2	/^public type Handler struct @(opaque) {$/;"	t
HandlerFn	$C2_ROOT/parser/c2_tokenizer.c2	/^public type HandlerFn fn void (void* arg, SrcLoc loc);$/;"	t
HashEntry	$C2_ROOT/ast_utils/string_pool.c2	/^type HashEntry u64;$/;"	t
Hdr	$C2_ROOT/libs/libc/linux_ifether.c2i	/^type Hdr struct @(cname="ethhdr", packed) {$/;"	t
Hex	$C2_ROOT/ast_utils/number_radix.c2	/^    Hex,$/;"	v
Hex	$C2_ROOT/parser/c2_tokenizer.c2	/^        result.radix = Radix.Hex;$/;"	v
Horizontal	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Horizontal = 0x00000001,$/;"	v
Html5FetchError	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type Html5FetchError enum i32 @(cname="sapp_html5_fetch_error") {$/;"	t
Html5FetchRequest	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type Html5FetchRequest struct @(cname="sapp_html5_fetch_request") {$/;"	t
Html5FetchResponse	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type Html5FetchResponse struct @(cname="sapp_html5_fetch_response") {$/;"	t
I16	$C2_ROOT/generator/ir/ir_generator.c2	/^            return ir.Type.I16;$/;"	v
I16	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        return ir.Type.I16;$/;"	v
I16	$C2_ROOT/ir/context.c2	/^    [Type.I16] = InstrKind.Store2,$/;"	v
I16	$C2_ROOT/ir/types.c2	/^    I16,$/;"	v
I32	$C2_ROOT/generator/ir/ir_generator.c2	/^            return ir.Type.I32;$/;"	v
I32	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        return ir.Type.I32;$/;"	v
I32	$C2_ROOT/ir/context.c2	/^    [Type.I32] = InstrKind.Store4,$/;"	v
I32	$C2_ROOT/ir/types.c2	/^    I32,$/;"	v
I64	$C2_ROOT/generator/ir/ir_generator.c2	/^        return ir.Type.I64;$/;"	v
I64	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^    return ir.Type.I64;$/;"	v
I64	$C2_ROOT/ir/context.c2	/^    [Type.I64] = InstrKind.Store8,$/;"	v
I64	$C2_ROOT/ir/types.c2	/^    I64,$/;"	v
I8	$C2_ROOT/generator/ir/ir_generator.c2	/^            return ir.Type.I8;$/;"	v
I8	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        return ir.Type.I8;$/;"	v
I8	$C2_ROOT/ir/context.c2	/^    [Type.I8]  = InstrKind.Store1,$/;"	v
I8	$C2_ROOT/ir/types.c2	/^    I8,$/;"	v
IBEAM	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    IBEAM = 2,$/;"	v
ICONIFIED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ICONIFIED = 15,$/;"	v
IDENT	$C2_ROOT/parser/c2_tokenizer.c2	/^    IDENT,$/;"	v
IDENTICAL_COMMIT_LISTENER	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    IDENTICAL_COMMIT_LISTENER = 88,$/;"	v
IDiv	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        kind = InstrKind.IDiv;$/;"	v
IDiv	$C2_ROOT/ir/instr_kind.c2	/^    IDiv,$/;"	v
IFF_BROADCAST	$C2_ROOT/libs/libc/net_if.c2i	/^    IFF_BROADCAST = 0x2,$/;"	v
IFF_DEBUG	$C2_ROOT/libs/libc/net_if.c2i	/^    IFF_DEBUG = 0x4,$/;"	v
IFF_LOOPBACK	$C2_ROOT/libs/libc/net_if.c2i	/^    IFF_LOOPBACK = 0x8,$/;"	v
IFF_NOARP	$C2_ROOT/libs/libc/net_if.c2i	/^    IFF_NOARP = 0x80,$/;"	v
IFF_PROMISC	$C2_ROOT/libs/libc/net_if.c2i	/^    IFF_PROMISC = 0x100,$/;"	v
IFF_RUNNING	$C2_ROOT/libs/libc/net_if.c2i	/^    IFF_RUNNING = 0x40,$/;"	v
IFF_UP	$C2_ROOT/libs/libc/net_if.c2i	/^    IFF_UP = 0x1,$/;"	v
IMAGE_DATA_SIZE_MISMATCH	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    IMAGE_DATA_SIZE_MISMATCH = 101,$/;"	v
IMAGE_POOL_EXHAUSTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    IMAGE_POOL_EXHAUSTED = 116,$/;"	v
INCR_CLAMP	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    INCR_CLAMP = 4,$/;"	v
INCR_WRAP	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    INCR_WRAP = 7,$/;"	v
INDEX_SHIFT	$C2_ROOT/ast_utils/string_pool.c2	/^const u32 DATA_ALIGN = 1 << INDEX_SHIFT;$/;"	v
INITIAL	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    INITIAL = 0,$/;"	v
INIT_BUFFER_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    INIT_BUFFER_INVALID_STATE = 97,$/;"	v
INIT_IMAGE_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    INIT_IMAGE_INVALID_STATE = 98,$/;"	v
INIT_PIPELINE_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    INIT_PIPELINE_INVALID_STATE = 101,$/;"	v
INIT_SAMPLER_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    INIT_SAMPLER_INVALID_STATE = 99,$/;"	v
INIT_SENSOR	$C2_ROOT/libs/sdl2/sdl.c2i	/^                INIT_GAMECONTROLLER | INIT_SENSOR;$/;"	v
INIT_SHADER_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    INIT_SHADER_INVALID_STATE = 100,$/;"	v
INIT_VIEW_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    INIT_VIEW_INVALID_STATE = 102,$/;"	v
INSERT	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    INSERT = 260,$/;"	v
INT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    INT = 5,$/;"	v
INT2	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    INT2 = 6,$/;"	v
INT3	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    INT3 = 7,$/;"	v
INT4	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    INT4 = 8,$/;"	v
INTERNATIONAL2	$C2_ROOT/libs/sdl2/sdl.c2i	/^    INTERNATIONAL2 = 136,$/;"	v
INTERNATIONAL4	$C2_ROOT/libs/sdl2/sdl.c2i	/^    INTERNATIONAL4 = 138,$/;"	v
INTERNATIONAL5	$C2_ROOT/libs/sdl2/sdl.c2i	/^    INTERNATIONAL5 = 139,$/;"	v
INTERNATIONAL6	$C2_ROOT/libs/sdl2/sdl.c2i	/^    INTERNATIONAL6 = 140,$/;"	v
INTERNATIONAL7	$C2_ROOT/libs/sdl2/sdl.c2i	/^    INTERNATIONAL7 = 141,$/;"	v
INTERNATIONAL8	$C2_ROOT/libs/sdl2/sdl.c2i	/^    INTERNATIONAL8 = 142,$/;"	v
INTERNATIONAL9	$C2_ROOT/libs/sdl2/sdl.c2i	/^    INTERNATIONAL9 = 143,$/;"	v
INVALID	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    INVALID = 256,$/;"	v
INVALID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    INVALID = 4,$/;"	v
INVERT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    INVERT = 6,$/;"	v
IORING_CQ_EVENTFD_DISABLED	$C2_ROOT/libs/io_uring/io_uring.c2i	/^		flags |= IORING_CQ_EVENTFD_DISABLED;$/;"	v
IORING_POLL_ADD_MULTI	$C2_ROOT/libs/io_uring/io_uring.c2i	/^	sqe->len = IORING_POLL_ADD_MULTI;$/;"	v
IO_marker	$C2_ROOT/libs/libc/stdio.c2i	/^type IO_marker struct @(cname="_IO_marker") {$/;"	t
IR	$C2_ROOT/common/build_target.c2	/^    IR,$/;"	v
IR	$C2_ROOT/compiler/main.c2	/^        if (c.opts.use_ir_backend) backend = build_target.BackEndKind.IR;$/;"	v
ISize	$C2_ROOT/ast/builtin_type.c2	/^    [BuiltinKind.ISize] = true,$/;"	v
ISize	$C2_ROOT/generator/c/c_generator_expr.c2	/^    [BuiltinKind.ISize] = true,$/;"	v
ISize	$C2_ROOT/generator/ir/ir_generator.c2	/^    [BuiltinKind.ISize]   = I64,  \/\/ TODO 32-bit$/;"	v
IconDesc	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type IconDesc struct @(cname="sapp_icon_desc") {$/;"	t
Identifier	$C2_ROOT/ast/expr.c2	/^    return e.getKind() == ExprKind.Identifier;$/;"	v
Identifier	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.Identifier] = 1,$/;"	v
Identifier	$C2_ROOT/parser/c2_tokenizer.c2	/^    result.kind = Kind.Identifier;$/;"	v
Identifier	$C2_ROOT/parser/token.c2	/^    [Kind.Identifier]       = "identifier",$/;"	v
IdentifierExpr	$C2_ROOT/ast/identifier_expr.c2	/^public type IdentifierExpr struct @(opaque) {$/;"	t
IdentifierExprBits	$C2_ROOT/ast/identifier_expr.c2	/^type IdentifierExprBits struct {$/;"	t
IdentifierExprBits	$C2_ROOT/ast/stmt.c2	/^        IdentifierExprBits identifierExprBits;$/;"	v
IdentifierKind	$C2_ROOT/ast/identifier_expr.c2	/^public type IdentifierKind enum u8 {$/;"	t
If	$C2_ROOT/ast/stmt.c2	/^    If,$/;"	v
IfFalse	$C2_ROOT/ir/block.c2	/^    IfFalse,$/;"	v
IfJoin	$C2_ROOT/ir/block.c2	/^    IfJoin,$/;"	v
IfStmt	$C2_ROOT/ast/if_stmt.c2	/^public type IfStmt struct @(opaque) {$/;"	t
IfStmtBits	$C2_ROOT/ast/if_stmt.c2	/^type IfStmtBits struct {$/;"	t
IfStmtBits	$C2_ROOT/ast/stmt.c2	/^        IfStmtBits ifStmtBits;$/;"	v
IfTrue	$C2_ROOT/ir/block.c2	/^    IfTrue,$/;"	v
Ifaddrs	$C2_ROOT/libs/libc/ifaddrs.c2i	/^type Ifaddrs struct {$/;"	t
Image	$C2_ROOT/common/build_target.c2	/^    Image,$/;"	v
Image	$C2_ROOT/common/component.c2	/^    Image,$/;"	v
Image	$C2_ROOT/compiler/c2recipe_parser.c2	/^    Image,$/;"	v
Image	$C2_ROOT/compiler/compiler.c2	/^    c.is_image = target.getKind() == build_target.Kind.Image;$/;"	v
Image	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Image struct @(cname="sg_image") {$/;"	t
ImageData	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ImageData struct @(cname="sg_image_data") {$/;"	t
ImageDesc	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type ImageDesc struct @(cname="sapp_image_desc") {$/;"	t
ImageDesc	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ImageDesc struct @(cname="sg_image_desc") {$/;"	t
ImageInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ImageInfo struct @(cname="sg_image_info") {$/;"	t
ImageSampleType	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ImageSampleType enum u32 @(cname="sg_image_sample_type") {$/;"	t
ImageType	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ImageType enum u32 @(cname="sg_image_type") {$/;"	t
ImageUsage	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ImageUsage struct @(cname="sg_image_usage") {$/;"	t
ImageViewDesc	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ImageViewDesc struct @(cname="sg_image_view_desc") {$/;"	t
ImplicitCast	$C2_ROOT/ast/expr.c2	/^    return e.getKind() == ExprKind.ImplicitCast;$/;"	v
ImplicitCastBits	$C2_ROOT/ast/implicit_cast_expr.c2	/^type ImplicitCastBits struct {$/;"	t
ImplicitCastBits	$C2_ROOT/ast/stmt.c2	/^        ImplicitCastBits implicitCastBits;$/;"	v
ImplicitCastExpr	$C2_ROOT/ast/implicit_cast_expr.c2	/^public type ImplicitCastExpr struct @(opaque) {$/;"	t
ImplicitCastKind	$C2_ROOT/ast/implicit_cast_expr.c2	/^public type ImplicitCastKind enum u8 {$/;"	t
ImplicitCastKind	$C2_ROOT/parser/ast_builder.c2	/^                                          ImplicitCastKind kind,$/;"	v
Import	$C2_ROOT/ast/decl.c2	/^    return d.getKind() == DeclKind.Import;$/;"	v
ImportDecl	$C2_ROOT/ast/import_decl.c2	/^public type ImportDecl struct @(opaque) {$/;"	t
ImportDeclBits	$C2_ROOT/ast/decl.c2	/^        ImportDeclBits importDeclBits;$/;"	v
ImportDeclBits	$C2_ROOT/ast/import_decl.c2	/^type ImportDeclBits struct {$/;"	t
ImportDeclList	$C2_ROOT/ast/ast.c2	/^    ImportDeclList imports;$/;"	v
ImportDeclList	$C2_ROOT/ast/import_decl_list.c2	/^public type ImportDeclList struct {$/;"	t
ImportVisitor	$C2_ROOT/ast/ast.c2	/^public type ImportVisitor fn void (void* arg, ImportDecl* d);$/;"	t
InAddr	$C2_ROOT/libs/libc/sys_socket.c2i	/^type InAddr u32 @(cname="in_addr_t");$/;"	t
InPort	$C2_ROOT/libs/libc/sys_socket.c2i	/^type InPort u16 @(cname="in_port_t");$/;"	t
InProgress	$C2_ROOT/ast/decl.c2	/^    InProgress,$/;"	v
In_addr	$C2_ROOT/libs/libc/sys_socket.c2i	/^type In_addr struct @(cname="in_addr") {$/;"	t
Indent	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    else result.kind = TokenKind.Indent;$/;"	v
Index	$C2_ROOT/ir/types.c2	/^public type Index struct {$/;"	t
IndexType	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type IndexType enum u32 @(cname="sg_index_type") {$/;"	t
Info	$C2_ROOT/analyser/incr_array_list.c2	/^public type Info struct {$/;"	t
Info	$C2_ROOT/analyser/struct_func_list.c2	/^public type Info struct {$/;"	t
Info	$C2_ROOT/common/build_file.c2	/^public type Info struct @(opaque) {$/;"	t
Info	$C2_ROOT/common/target_info.c2	/^public type Info struct {$/;"	t
Info	$C2_ROOT/parser/keywords.c2	/^public type Info struct {$/;"	t
Info	$C2_ROOT/plugins/plugin_info.c2	/^public type Info struct {$/;"	t
InitEntry	$C2_ROOT/analyser/init_checker.c2	/^public type InitEntry struct {$/;"	t
InitEntry	$C2_ROOT/generator/ir/array_init_sorter.c2	/^public type InitEntry struct {$/;"	t
InitFn	$C2_ROOT/plugins/plugin_info.c2	/^public type InitFn fn void(void* arg, plugin_info.Info* info);$/;"	t
InitList	$C2_ROOT/ast/expr.c2	/^    return e.getKind() == ExprKind.InitList;$/;"	v
InitListExpr	$C2_ROOT/ast/init_list_expr.c2	/^public type InitListExpr struct @(opaque) {$/;"	t
InitListExprBits	$C2_ROOT/ast/init_list_expr.c2	/^type InitListExprBits struct {$/;"	t
InitListExprBits	$C2_ROOT/ast/stmt.c2	/^        InitListExprBits initListExprBits;$/;"	v
InitValue	$C2_ROOT/ir/init_value.c2	/^type InitValue struct {$/;"	t
InitValueKind	$C2_ROOT/ir/init_value.c2	/^type InitValueKind enum u8 {$/;"	t
InitValueList	$C2_ROOT/ir/context.c2	/^    InitValueList init_values;$/;"	v
InitValueList	$C2_ROOT/ir/init_value_list.c2	/^type InitValueList struct {$/;"	t
InitialMaxFiles	$C2_ROOT/common/source_mgr.c2	/^    sm.max_files = InitialMaxFiles;$/;"	v
Inline	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.Inline]       = AttrReq.NoArg,$/;"	v
InputStream	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^public type InputStream struct {$/;"	t
Inserter	$C2_ROOT/ir/inserter.c2	/^public type Inserter struct {$/;"	t
InstanceTable	$C2_ROOT/ast/instance_table.c2	/^type InstanceTable struct {$/;"	t
InstanceTable	$C2_ROOT/ast/module.c2	/^    InstanceTable instances;$/;"	v
Instantiator	$C2_ROOT/ast/instantiator.c2	/^public type Instantiator struct {$/;"	t
Instr	$C2_ROOT/ir/inserter.c2	/^    Instr instr;$/;"	v
Instr	$C2_ROOT/ir/instr.c2	/^public type Instr struct {$/;"	t
InstrBits	$C2_ROOT/ir/instr.c2	/^public type InstrBits struct {$/;"	t
InstrInsertion	$C2_ROOT/ir/inserter.c2	/^public type InstrInsertion struct {$/;"	t
InstrKind	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^    InstrKind k;$/;"	v
InstrKind	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^    InstrKind k;$/;"	v
InstrKind	$C2_ROOT/ir/context.c2	/^    InstrKind kind;$/;"	v
InstrKind	$C2_ROOT/ir/instr_kind.c2	/^public type InstrKind enum u8 {$/;"	t
InstrList	$C2_ROOT/ir/function_info.c2	/^    InstrList instructions;$/;"	v
InstrList	$C2_ROOT/ir/instr_list.c2	/^public type InstrList struct {$/;"	t
Int16	$C2_ROOT/ast/builtin_type.c2	/^    [BuiltinKind.Int16] = true,$/;"	v
Int16	$C2_ROOT/generator/c/c_generator_expr.c2	/^    [BuiltinKind.Int16] = false,$/;"	v
Int16	$C2_ROOT/generator/ir/ir_generator.c2	/^    [BuiltinKind.Int16]   = I16,$/;"	v
Int32	$C2_ROOT/ast/builtin_type.c2	/^    return b.base.builtinTypeBits.kind == BuiltinKind.Int32;$/;"	v
Int32	$C2_ROOT/ast/utils.c2	/^        globals.builtinType_baseTypes[BuiltinKind.ISize] = BuiltinKind.Int32;$/;"	v
Int32	$C2_ROOT/generator/c/c_generator_expr.c2	/^    [BuiltinKind.Int32] = false,$/;"	v
Int32	$C2_ROOT/generator/ir/ir_generator.c2	/^    [BuiltinKind.Int32]   = I32,$/;"	v
Int64	$C2_ROOT/ast/builtin_type.c2	/^    [BuiltinKind.Int64] = true,$/;"	v
Int64	$C2_ROOT/ast/utils.c2	/^        globals.builtinType_baseTypes[BuiltinKind.ISize] = BuiltinKind.Int64;$/;"	v
Int64	$C2_ROOT/generator/c/c_generator_expr.c2	/^    [BuiltinKind.Int64] = true,$/;"	v
Int64	$C2_ROOT/generator/ir/ir_generator.c2	/^    [BuiltinKind.Int64]   = I64,$/;"	v
Int8	$C2_ROOT/ast/builtin_type.c2	/^    return b.base.builtinTypeBits.kind == BuiltinKind.Int8;$/;"	v
Int8	$C2_ROOT/generator/c/c_generator_expr.c2	/^    [BuiltinKind.Int8] = false,$/;"	v
Int8	$C2_ROOT/generator/ir/ir_generator.c2	/^    [BuiltinKind.Int8]    = I8,$/;"	v
Integer	$C2_ROOT/analyser_utils/printf_utils.c2	/^        spec = Specifier.Integer;$/;"	v
Integer	$C2_ROOT/ast/value.c2	/^    v.kind = ValueKind.Integer;$/;"	v
Integer	$C2_ROOT/libs/lua/lua.c2i	/^type Integer c_int @(cname="lua_integer");$/;"	t
IntegerLiteral	$C2_ROOT/ast/expr.c2	/^    IntegerLiteral,$/;"	v
IntegerLiteral	$C2_ROOT/ast/integer_literal.c2	/^public type IntegerLiteral struct @(opaque) {$/;"	t
IntegerLiteral	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.IntegerLiteral] = 2,$/;"	v
IntegerLiteral	$C2_ROOT/parser/c2_tokenizer.c2	/^    result.kind = Kind.IntegerLiteral;$/;"	v
IntegerLiteral	$C2_ROOT/parser/token.c2	/^    [Kind.IntegerLiteral]   = "integer",$/;"	v
IntegerLiteralBits	$C2_ROOT/ast/integer_literal.c2	/^type IntegerLiteralBits struct {$/;"	t
IntegerLiteralBits	$C2_ROOT/ast/stmt.c2	/^        IntegerLiteralBits integerLiteralBits;$/;"	v
IntegralCast	$C2_ROOT/ast/implicit_cast_expr.c2	/^    IntegralCast,$/;"	v
InterferenceGraph	$C2_ROOT/ir/interference_graph.c2	/^public type InterferenceGraph struct @(opaque) {$/;"	t
Internal	$C2_ROOT/common/component.c2	/^    return c.kind == Kind.Internal;$/;"	v
Invalid	$C2_ROOT/analyser/module_analyser_member.c2	/^    CallKind ck = CallKind.Invalid;$/;"	v
Invalid	$C2_ROOT/analyser_utils/printf_utils.c2	/^    Specifier spec = Specifier.Invalid;$/;"	v
Invalid	$C2_ROOT/ast/function_decl.c2	/^    Invalid,$/;"	v
Invalid	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Invalid = 0x7FFFFFFF,$/;"	v
Invalid	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.Invalid;$/;"	v
Invalid	$C2_ROOT/parser/token.c2	/^    [Kind.Invalid]          = "invalid",$/;"	v
Iovec	$C2_ROOT/libs/libc/uio.c2i	/^type Iovec struct {$/;"	t
Ip_Mreq	$C2_ROOT/libs/libc/sys_socket.c2i	/^type Ip_Mreq struct @(cname="ip_mreq") {$/;"	t
Iter	$C2_ROOT/common/yaml/yaml_iterator.c2	/^public type Iter struct {$/;"	t
Iter	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^type Iter struct {$/;"	t
Iter	$C2_ROOT/ir/interference_graph.c2	/^public type Iter struct {$/;"	t
Iter	$C2_ROOT/ir/live_map.c2	/^public type Iter struct {$/;"	t
Iter	$C2_ROOT/ir/slot_writes_map.c2	/^public type Iter struct {$/;"	t
Iter	$C2_ROOT/ir_examples/bitfield_init.c2	/^type Iter struct {$/;"	t
Jmp	$C2_ROOT/ir/instr_kind.c2	/^    Jmp,$/;"	v
JmpBuf	$C2_ROOT/libs/libc/csetjmp.c2i	/^type JmpBuf JmpBufTag* @(cname="jmp_buf");$/;"	t
JmpBufTag	$C2_ROOT/common/yaml/yaml_parser.c2	/^    JmpBufTag jmp_err;$/;"	v
JmpBufTag	$C2_ROOT/compiler/c2recipe_parser.c2	/^    JmpBufTag jmpbuf;$/;"	v
JmpBufTag	$C2_ROOT/libs/libc/csetjmp.c2i	/^type JmpBufTag struct @(cname="__jmp_buf_tag", aligned=8) {$/;"	t
JmpBufTag	$C2_ROOT/parser/c2_parser.c2	/^    JmpBufTag jmpbuf;$/;"	v
JmpBufTag	$C2_ROOT/plugins/unit_test2.c2	/^JmpBufTag jmpbuf;$/;"	v
JmpIf	$C2_ROOT/ir/instr_kind.c2	/^    JmpIf,$/;"	v
JumpScope	$C2_ROOT/generator/ir/ir_generator.c2	/^type JumpScope struct {$/;"	t
KBDILLUMDOWN	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KBDILLUMDOWN = 279,$/;"	v
KBDILLUMTOGGLE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KBDILLUMTOGGLE = 278,$/;"	v
KBDILLUMUP	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KBDILLUMUP = 280,$/;"	v
KContext	$C2_ROOT/libs/lua/lua.c2i	/^type KContext LUA_KCONTEXT @(cname="lua_KContext");$/;"	t
KEEP	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    KEEP = 1,$/;"	v
KEY_DOWN	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    KEY_DOWN = 1,$/;"	v
KEY_UP	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    KEY_UP = 2,$/;"	v
KFunction	$C2_ROOT/libs/lua/lua.c2i	/^type KFunction fn c_int (State *L, c_int status, KContext ctx) @(cname="lua_KFunction");$/;"	t
KP_0	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_0 = 98,$/;"	v
KP_0	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    KP_0 = 320,$/;"	v
KP_00	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_00 = 176,$/;"	v
KP_000	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_000 = 177,$/;"	v
KP_1	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_1 = 89,$/;"	v
KP_1	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    KP_1 = 321,$/;"	v
KP_2	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_2 = 90,$/;"	v
KP_2	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    KP_2 = 322,$/;"	v
KP_3	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_3 = 91,$/;"	v
KP_3	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    KP_3 = 323,$/;"	v
KP_4	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_4 = 92,$/;"	v
KP_4	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    KP_4 = 324,$/;"	v
KP_5	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_5 = 93,$/;"	v
KP_5	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    KP_5 = 325,$/;"	v
KP_6	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_6 = 94,$/;"	v
KP_6	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    KP_6 = 326,$/;"	v
KP_7	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_7 = 95,$/;"	v
KP_7	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    KP_7 = 327,$/;"	v
KP_8	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_8 = 96,$/;"	v
KP_8	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    KP_8 = 328,$/;"	v
KP_9	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_9 = 97,$/;"	v
KP_9	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    KP_9 = 329,$/;"	v
KP_A	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_A = 188,$/;"	v
KP_ADD	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    KP_ADD = 334,$/;"	v
KP_AMPERSAND	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_AMPERSAND = 199,$/;"	v
KP_AT	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_AT = 206,$/;"	v
KP_B	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_B = 189,$/;"	v
KP_BACKSPACE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_BACKSPACE = 187,$/;"	v
KP_BINARY	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_BINARY = 218,$/;"	v
KP_C	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_C = 190,$/;"	v
KP_CLEAR	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_CLEAR = 216,$/;"	v
KP_CLEARENTRY	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_CLEARENTRY = 217,$/;"	v
KP_COLON	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_COLON = 203,$/;"	v
KP_COMMA	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_COMMA = 133,$/;"	v
KP_D	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_D = 191,$/;"	v
KP_DBLAMPERSAND	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_DBLAMPERSAND = 200,$/;"	v
KP_DBLVERTICALBAR	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_DBLVERTICALBAR = 202,$/;"	v
KP_DECIMAL	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_DECIMAL = 220,$/;"	v
KP_DECIMAL	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    KP_DECIMAL = 330,$/;"	v
KP_DIVIDE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_DIVIDE = 84,$/;"	v
KP_DIVIDE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    KP_DIVIDE = 331,$/;"	v
KP_E	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_E = 192,$/;"	v
KP_ENTER	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_ENTER = 88,$/;"	v
KP_ENTER	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    KP_ENTER = 335,$/;"	v
KP_EQUAL	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    KP_EQUAL = 336,$/;"	v
KP_EQUALS	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_EQUALS = 103,$/;"	v
KP_EQUALSAS400	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_EQUALSAS400 = 134,$/;"	v
KP_EXCLAM	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_EXCLAM = 207,$/;"	v
KP_F	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_F = 193,$/;"	v
KP_GREATER	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_GREATER = 198,$/;"	v
KP_HASH	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_HASH = 204,$/;"	v
KP_HEXADECIMAL	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_HEXADECIMAL = 221,$/;"	v
KP_LEFTBRACE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_LEFTBRACE = 184,$/;"	v
KP_LEFTPAREN	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_LEFTPAREN = 182,$/;"	v
KP_LESS	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_LESS = 197,$/;"	v
KP_MEMADD	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_MEMADD = 211,$/;"	v
KP_MEMCLEAR	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_MEMCLEAR = 210,$/;"	v
KP_MEMDIVIDE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_MEMDIVIDE = 214,$/;"	v
KP_MEMMULTIPLY	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_MEMMULTIPLY = 213,$/;"	v
KP_MEMRECALL	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_MEMRECALL = 209,$/;"	v
KP_MEMSTORE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_MEMSTORE = 208,$/;"	v
KP_MEMSUBTRACT	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_MEMSUBTRACT = 212,$/;"	v
KP_MINUS	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_MINUS = 86,$/;"	v
KP_MULTIPLY	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_MULTIPLY = 85,$/;"	v
KP_MULTIPLY	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    KP_MULTIPLY = 332,$/;"	v
KP_OCTAL	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_OCTAL = 219,$/;"	v
KP_PERCENT	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_PERCENT = 196,$/;"	v
KP_PERIOD	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_PERIOD = 99,$/;"	v
KP_PLUS	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_PLUS = 87,$/;"	v
KP_PLUSMINUS	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_PLUSMINUS = 215,$/;"	v
KP_POWER	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_POWER = 195,$/;"	v
KP_RIGHTBRACE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_RIGHTBRACE = 185,$/;"	v
KP_RIGHTPAREN	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_RIGHTPAREN = 183,$/;"	v
KP_SPACE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_SPACE = 205,$/;"	v
KP_SUBTRACT	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    KP_SUBTRACT = 333,$/;"	v
KP_TAB	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_TAB = 186,$/;"	v
KP_VERTICALBAR	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_VERTICALBAR = 201,$/;"	v
KP_XOR	$C2_ROOT/libs/sdl2/sdl.c2i	/^    KP_XOR = 194,$/;"	v
KW_as	$C2_ROOT/parser/token.c2	/^    [Kind.KW_as]            = "as",$/;"	v
KW_asm	$C2_ROOT/parser/token.c2	/^    [Kind.KW_asm]           = "asm",$/;"	v
KW_assert	$C2_ROOT/parser/token.c2	/^    [Kind.KW_assert]        = "assert",$/;"	v
KW_bool	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_bool] = 16,$/;"	v
KW_bool	$C2_ROOT/parser/token.c2	/^    [Kind.KW_bool]          = "bool",$/;"	v
KW_break	$C2_ROOT/parser/token.c2	/^    [Kind.KW_break]         = "break",$/;"	v
KW_case	$C2_ROOT/parser/token.c2	/^    [Kind.KW_case]          = "case",$/;"	v
KW_cast	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_cast] = 8,$/;"	v
KW_cast	$C2_ROOT/parser/token.c2	/^    [Kind.KW_cast]          = "cast",$/;"	v
KW_char	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_char] = 16,$/;"	v
KW_char	$C2_ROOT/parser/token.c2	/^    [Kind.KW_char]          = "char",$/;"	v
KW_const	$C2_ROOT/parser/token.c2	/^    [Kind.KW_const]         = "const",$/;"	v
KW_continue	$C2_ROOT/parser/token.c2	/^    [Kind.KW_continue]      = "continue",$/;"	v
KW_default	$C2_ROOT/parser/token.c2	/^    [Kind.KW_default]       = "default",$/;"	v
KW_elemsof	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_elemsof] = 9,$/;"	v
KW_elemsof	$C2_ROOT/parser/token.c2	/^    [Kind.KW_elemsof]       = "elemsof",$/;"	v
KW_else	$C2_ROOT/parser/token.c2	/^    [Kind.KW_else]          = "else",$/;"	v
KW_enum	$C2_ROOT/parser/token.c2	/^    [Kind.KW_enum]          = "enum",$/;"	v
KW_enum_max	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_enum_max] = 10,$/;"	v
KW_enum_max	$C2_ROOT/parser/token.c2	/^    [Kind.KW_enum_max]      = "enum_max",$/;"	v
KW_enum_min	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_enum_min] = 10,$/;"	v
KW_enum_min	$C2_ROOT/parser/token.c2	/^    [Kind.KW_enum_min]      = "enum_min",$/;"	v
KW_f32	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_f32] = 16,$/;"	v
KW_f32	$C2_ROOT/parser/token.c2	/^    [Kind.KW_f32]           = "f32",$/;"	v
KW_f64	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_f64] = 16,$/;"	v
KW_f64	$C2_ROOT/parser/token.c2	/^    [Kind.KW_f64]           = "f64",$/;"	v
KW_fallthrough	$C2_ROOT/parser/token.c2	/^    [Kind.KW_fallthrough]   = "fallthrough",$/;"	v
KW_false	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_false] = 11,$/;"	v
KW_false	$C2_ROOT/parser/token.c2	/^    [Kind.KW_false]         = "false",$/;"	v
KW_fn	$C2_ROOT/parser/token.c2	/^    [Kind.KW_fn]            = "fn",$/;"	v
KW_for	$C2_ROOT/parser/token.c2	/^    [Kind.KW_for]           = "for",$/;"	v
KW_goto	$C2_ROOT/parser/token.c2	/^    [Kind.KW_goto]          = "goto",$/;"	v
KW_i16	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_i16] = 16,$/;"	v
KW_i16	$C2_ROOT/parser/token.c2	/^    [Kind.KW_i16]           = "i16",$/;"	v
KW_i32	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_i32] = 16,$/;"	v
KW_i32	$C2_ROOT/parser/token.c2	/^    [Kind.KW_i32]           = "i32",$/;"	v
KW_i64	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_i64] = 16,$/;"	v
KW_i64	$C2_ROOT/parser/token.c2	/^    [Kind.KW_i64]           = "i64",$/;"	v
KW_i8	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_i8] = 16,$/;"	v
KW_i8	$C2_ROOT/parser/token.c2	/^    [Kind.KW_i8]            = "i8",$/;"	v
KW_if	$C2_ROOT/parser/token.c2	/^    [Kind.KW_if]            = "if",$/;"	v
KW_import	$C2_ROOT/parser/token.c2	/^    [Kind.KW_import]        = "import",$/;"	v
KW_isize	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_isize] = 16,$/;"	v
KW_isize	$C2_ROOT/parser/token.c2	/^    [Kind.KW_isize]         = "isize",$/;"	v
KW_local	$C2_ROOT/parser/token.c2	/^    [Kind.KW_local]         = "local",$/;"	v
KW_module	$C2_ROOT/parser/token.c2	/^    [Kind.KW_module]        = "module",$/;"	v
KW_nil	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_nil] = 12,$/;"	v
KW_nil	$C2_ROOT/parser/token.c2	/^    [Kind.KW_nil]           = "nil",$/;"	v
KW_offsetof	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_offsetof] = 13,$/;"	v
KW_offsetof	$C2_ROOT/parser/token.c2	/^    [Kind.KW_offsetof]      = "offsetof",$/;"	v
KW_public	$C2_ROOT/parser/token.c2	/^    [Kind.KW_public]        = "public",$/;"	v
KW_reg16	$C2_ROOT/parser/token.c2	/^    [Kind.KW_reg16]         = "reg16",$/;"	v
KW_reg32	$C2_ROOT/parser/token.c2	/^    [Kind.KW_reg32]         = "reg32",$/;"	v
KW_reg64	$C2_ROOT/parser/token.c2	/^    [Kind.KW_reg64]         = "reg64",$/;"	v
KW_reg8	$C2_ROOT/parser/token.c2	/^    [Kind.KW_reg8]          = "reg8",$/;"	v
KW_return	$C2_ROOT/parser/token.c2	/^    [Kind.KW_return]        = "return",$/;"	v
KW_sizeof	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_sizeof] = 14,$/;"	v
KW_sizeof	$C2_ROOT/parser/token.c2	/^    [Kind.KW_sizeof]        = "sizeof",$/;"	v
KW_static_assert	$C2_ROOT/parser/token.c2	/^    [Kind.KW_static_assert] = "static_assert",$/;"	v
KW_struct	$C2_ROOT/parser/c2_parser_type.c2	/^            bool is_struct = p.tok.kind == Kind.KW_struct;$/;"	v
KW_struct	$C2_ROOT/parser/token.c2	/^    [Kind.KW_struct]        = "struct",$/;"	v
KW_switch	$C2_ROOT/parser/token.c2	/^    [Kind.KW_switch]        = "switch",$/;"	v
KW_template	$C2_ROOT/parser/token.c2	/^    [Kind.KW_template]      = "template",$/;"	v
KW_to_container	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_to_container] = 15,$/;"	v
KW_to_container	$C2_ROOT/parser/token.c2	/^    [Kind.KW_to_container]  = "to_container",$/;"	v
KW_true	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_true] = 11,$/;"	v
KW_true	$C2_ROOT/parser/token.c2	/^    [Kind.KW_true]          = "true",$/;"	v
KW_type	$C2_ROOT/parser/token.c2	/^    [Kind.KW_type]          = "type",$/;"	v
KW_u16	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_u16] = 16,$/;"	v
KW_u16	$C2_ROOT/parser/token.c2	/^    [Kind.KW_u16]           = "u16",$/;"	v
KW_u32	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_u32] = 16,$/;"	v
KW_u32	$C2_ROOT/parser/token.c2	/^    [Kind.KW_u32]           = "u32",$/;"	v
KW_u64	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_u64] = 16,$/;"	v
KW_u64	$C2_ROOT/parser/token.c2	/^    [Kind.KW_u64]           = "u64",$/;"	v
KW_u8	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_u8] = 16,$/;"	v
KW_u8	$C2_ROOT/parser/token.c2	/^    [Kind.KW_u8]            = "u8",$/;"	v
KW_union	$C2_ROOT/parser/token.c2	/^    [Kind.KW_union]         = "union",$/;"	v
KW_usize	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.KW_usize] = 16,$/;"	v
KW_usize	$C2_ROOT/parser/token.c2	/^    [Kind.KW_usize]         = "usize",$/;"	v
KW_void	$C2_ROOT/parser/token.c2	/^    return kind >= Kind.KW_bool && kind <= Kind.KW_void;$/;"	v
KW_volatile	$C2_ROOT/parser/token.c2	/^    return kind == Kind.KW_const || kind == Kind.KW_volatile;$/;"	v
KW_while	$C2_ROOT/parser/token.c2	/^    return kind >= Kind.KW_bool && kind <= Kind.KW_while;$/;"	v
K_ESCAPE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    K_ESCAPE = 27,$/;"	v
K_UNKNOWN	$C2_ROOT/libs/sdl2/sdl.c2i	/^    K_UNKNOWN = 0,$/;"	v
Kernel_rwf_t	$C2_ROOT/libs/io_uring/io_uring.c2i	/^type Kernel_rwf_t c_int;$/;"	t
Key	$C2_ROOT/libs/sdl2/sdl.c2i	/^type Key enum i32 {$/;"	t
KeyboardEvent	$C2_ROOT/libs/sdl2/sdl.c2i	/^type KeyboardEvent struct {$/;"	t
Keycode	$C2_ROOT/libs/sdl2/sdl.c2i	/^type Keycode i32;$/;"	t
Keycode	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type Keycode enum i32 @(cname="sapp_keycode") {$/;"	t
Keymod	$C2_ROOT/libs/sdl2/sdl.c2i	/^type Keymod enum u32 {$/;"	t
Keysym	$C2_ROOT/libs/sdl2/sdl.c2i	/^type Keysym struct {$/;"	t
Kind	$C2_ROOT/common/build_target.c2	/^public type Kind enum u8 {$/;"	t
Kind	$C2_ROOT/common/component.c2	/^public type Kind enum u8 {$/;"	t
Kind	$C2_ROOT/compiler/c2recipe_parser.c2	/^type Kind enum u8 {$/;"	t
Kind	$C2_ROOT/ir_examples/global_vars.c2	/^type Kind enum u8 { A, B, C }$/;"	t
Kind	$C2_ROOT/parser/c2_parser_stmt.c2	/^    Kind kind;$/;"	v
Kind	$C2_ROOT/parser/c2_tokenizer.c2	/^    Kind op;$/;"	v
Kind	$C2_ROOT/parser/token.c2	/^public type Kind enum u8 {$/;"	t
LASTEVENT	$C2_ROOT/libs/sdl2/sdl.c2i	/^    LASTEVENT    = 0xFFFF$/;"	v
LAnd	$C2_ROOT/ast/binary_operator.c2	/^    LAnd,$/;"	v
LAnd	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.LAnd]        = LogicalAndOr,$/;"	v
LAnd	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.LAnd]        = LogicalAnd,$/;"	v
LBrace	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.LBrace;$/;"	v
LBrace	$C2_ROOT/parser/token.c2	/^    [Kind.LBrace]           = "{",$/;"	v
LCTRL	$C2_ROOT/libs/sdl2/sdl.c2i	/^    LCTRL = 224,$/;"	v
LEFT	$C2_ROOT/libs/sdl2/sdl.c2i	/^    LEFT = 80,$/;"	v
LEFT	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LEFT = 263,$/;"	v
LEFTBRACKET	$C2_ROOT/libs/sdl2/sdl.c2i	/^    LEFTBRACKET = 47,$/;"	v
LEFT_ALT	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LEFT_ALT = 342,$/;"	v
LEFT_BRACKET	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LEFT_BRACKET = 91,$/;"	v
LEFT_CONTROL	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LEFT_CONTROL = 341,$/;"	v
LEFT_SHIFT	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LEFT_SHIFT = 340,$/;"	v
LEFT_SUPER	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LEFT_SUPER = 343,$/;"	v
LESS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    LESS = 2,$/;"	v
LESS	$C2_ROOT/parser/c2_tokenizer.c2	/^    LESS,$/;"	v
LESS_EQUAL	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    LESS_EQUAL = 4,$/;"	v
LHS	$C2_ROOT/analyser/module_analyser_stmt.c2	/^            side = LHS;$/;"	v
LHS	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^        side |= LHS;$/;"	v
LINEAR	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    LINEAR = 2,$/;"	v
LINES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    LINES = 2,$/;"	v
LINE_STRIP	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    LINE_STRIP = 3,$/;"	v
LINKAT	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    LINKAT,$/;"	v
LINK_TIMEOUT	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    LINK_TIMEOUT,$/;"	v
LINK_TIMEOUT_UPDATE	$C2_ROOT/libs/io_uring/io_uring.c2i	/^const u32 TIMEOUT_UPDATE_MASK = TIMEOUT_UPDATE | LINK_TIMEOUT_UPDATE;$/;"	v
LINUX_EGL_BIND_OPENGL_API_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_EGL_BIND_OPENGL_API_FAILED = 39,$/;"	v
LINUX_EGL_BIND_OPENGL_ES_API_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_EGL_BIND_OPENGL_ES_API_FAILED = 40,$/;"	v
LINUX_EGL_CREATE_CONTEXT_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_EGL_CREATE_CONTEXT_FAILED = 47,$/;"	v
LINUX_EGL_CREATE_WINDOW_SURFACE_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_EGL_CREATE_WINDOW_SURFACE_FAILED = 46,$/;"	v
LINUX_EGL_GET_DISPLAY_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_EGL_GET_DISPLAY_FAILED = 41,$/;"	v
LINUX_EGL_GET_VISUAL_INFO_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_EGL_GET_VISUAL_INFO_FAILED = 45,$/;"	v
LINUX_EGL_INITIALIZE_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_EGL_INITIALIZE_FAILED = 42,$/;"	v
LINUX_EGL_MAKE_CURRENT_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_EGL_MAKE_CURRENT_FAILED = 48,$/;"	v
LINUX_EGL_NO_CONFIGS	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_EGL_NO_CONFIGS = 43,$/;"	v
LINUX_EGL_NO_NATIVE_VISUAL	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_EGL_NO_NATIVE_VISUAL = 44,$/;"	v
LINUX_GLX_CREATE_CONTEXT_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_GLX_CREATE_CONTEXT_FAILED = 36,$/;"	v
LINUX_GLX_CREATE_WINDOW_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_GLX_CREATE_WINDOW_FAILED = 37,$/;"	v
LINUX_GLX_EXTENSION_NOT_FOUND	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_GLX_EXTENSION_NOT_FOUND = 29,$/;"	v
LINUX_GLX_GET_VISUAL_FROM_FBCONFIG_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_GLX_GET_VISUAL_FROM_FBCONFIG_FAILED = 34,$/;"	v
LINUX_GLX_LOAD_ENTRY_POINTS_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_GLX_LOAD_ENTRY_POINTS_FAILED = 28,$/;"	v
LINUX_GLX_LOAD_LIBGL_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_GLX_LOAD_LIBGL_FAILED = 27,$/;"	v
LINUX_GLX_NO_GLXFBCONFIGS	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_GLX_NO_GLXFBCONFIGS = 32,$/;"	v
LINUX_GLX_NO_SUITABLE_GLXFBCONFIG	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_GLX_NO_SUITABLE_GLXFBCONFIG = 33,$/;"	v
LINUX_GLX_QUERY_VERSION_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_GLX_QUERY_VERSION_FAILED = 30,$/;"	v
LINUX_GLX_REQUIRED_EXTENSIONS_MISSING	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_GLX_REQUIRED_EXTENSIONS_MISSING = 35,$/;"	v
LINUX_GLX_VERSION_TOO_LOW	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_GLX_VERSION_TOO_LOW = 31,$/;"	v
LINUX_X11_CREATE_WINDOW_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_X11_CREATE_WINDOW_FAILED = 38,$/;"	v
LINUX_X11_DROPPED_FILE_URI_WRONG_SCHEME	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_X11_DROPPED_FILE_URI_WRONG_SCHEME = 51,$/;"	v
LINUX_X11_FAILED_TO_BECOME_OWNER_OF_CLIPBOARD	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_X11_FAILED_TO_BECOME_OWNER_OF_CLIPBOARD = 52,$/;"	v
LINUX_X11_OPEN_DISPLAY_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_X11_OPEN_DISPLAY_FAILED = 49,$/;"	v
LINUX_X11_QUERY_SYSTEM_DPI_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LINUX_X11_QUERY_SYSTEM_DPI_FAILED = 50,$/;"	v
LNot	$C2_ROOT/parser/c2_parser_expr.c2	/^    case Exclaim: return UnaryOpcode.LNot;$/;"	v
LOAD	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    LOAD = 2,$/;"	v
LOr	$C2_ROOT/ast/binary_operator.c2	/^    LOr,$/;"	v
LOr	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.LOr]         = LogicalAndOr,$/;"	v
LOr	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.LOr]         = LogicalOr,$/;"	v
LPAREN	$C2_ROOT/parser/c2_tokenizer.c2	/^    LPAREN,$/;"	v
LParen	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.LParen] = 6,$/;"	v
LParen	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.LParen;$/;"	v
LParen	$C2_ROOT/parser/token.c2	/^    [Kind.LParen]           = "(",$/;"	v
LSHIFT	$C2_ROOT/libs/sdl2/sdl.c2i	/^    LSHIFT = 225,$/;"	v
LSquare	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.LSquare;$/;"	v
LSquare	$C2_ROOT/parser/token.c2	/^    [Kind.LSquare]          = "[",$/;"	v
LUA_INTEGER	$C2_ROOT/libs/lua/lua.c2i	/^type LUA_INTEGER c_int;$/;"	t
LUA_KCONTEXT	$C2_ROOT/libs/lua/lua.c2i	/^type LUA_KCONTEXT c_longlong;$/;"	t
LUA_NUMBER	$C2_ROOT/libs/lua/lua.c2i	/^type LUA_NUMBER c_double;$/;"	t
LUA_RIDX_GLOBALS	$C2_ROOT/libs/lua/lua.c2i	/^const c_int LUA_RIDX_LAST       = LUA_RIDX_GLOBALS;$/;"	v
LUA_UNSIGNED	$C2_ROOT/libs/lua/lua.c2i	/^type LUA_UNSIGNED c_uint;$/;"	t
LValue	$C2_ROOT/analyser/module_analyser_member.c2	/^        return ValType.LValue;$/;"	v
LValue	$C2_ROOT/ast/expr.c2	/^    return e.getValType() == ValType.LValue;$/;"	v
LValueToRValue	$C2_ROOT/ast/implicit_cast_expr.c2	/^    LValueToRValue,$/;"	v
Label	$C2_ROOT/analyser/label_vector.c2	/^public type Label struct {$/;"	t
Label	$C2_ROOT/ast/identifier_expr.c2	/^    Label,$/;"	v
Label	$C2_ROOT/ast/stmt.c2	/^    return s.getKind() == StmtKind.Label;$/;"	v
Label	$C2_ROOT/ir/block.c2	/^    Label,$/;"	v
LabelStmt	$C2_ROOT/ast/label_stmt.c2	/^public type LabelStmt struct @(opaque) {$/;"	t
LabelStmtBits	$C2_ROOT/ast/label_stmt.c2	/^type LabelStmtBits struct {$/;"	t
LabelStmtBits	$C2_ROOT/ast/stmt.c2	/^        LabelStmtBits labelStmtBits;$/;"	v
LabelVector	$C2_ROOT/analyser/label_vector.c2	/^public type LabelVector struct {$/;"	t
LabelVector	$C2_ROOT/analyser/module_analyser.c2	/^    LabelVector labels;$/;"	v
Lalt	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Lalt    = 0x0100,$/;"	v
Lctrl	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Lctrl   = 0x0040,$/;"	v
Ldiv_t	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct Ldiv_t_ Ldiv_t;$/;"	v
Ldiv_t	$C2_ROOT/libs/libc/stdlib.c2i	/^type Ldiv_t struct @(cname="Ldiv_t") {$/;"	t
Lengths	$C2_ROOT/generator/c2refs.c2	/^type Lengths struct {$/;"	t
Less	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.Less]         = Relational,$/;"	v
Less	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.Less;$/;"	v
Less	$C2_ROOT/parser/token.c2	/^    [Kind.Less]             = "<",$/;"	v
LessEqual	$C2_ROOT/ast/binary_operator.c2	/^    LessEqual,$/;"	v
LessEqual	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.LessEqual]   = Relational,$/;"	v
LessEqual	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.LessEqual]   = Relative,$/;"	v
LessEqual	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.LessEqual]    = Relational,$/;"	v
LessEqual	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.LessEqual;$/;"	v
LessEqual	$C2_ROOT/parser/token.c2	/^    [Kind.LessEqual]        = "<=",$/;"	v
LessLess	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.LessLess] = Shift,$/;"	v
LessLess	$C2_ROOT/parser/c2_tokenizer.c2	/^                    result.kind = Kind.LessLess;$/;"	v
LessLess	$C2_ROOT/parser/token.c2	/^    [Kind.LessLess]         = "<<",$/;"	v
LessLessEqual	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.LessLessEqual]  = ShlAssign,$/;"	v
LessLessEqual	$C2_ROOT/parser/c2_tokenizer.c2	/^                    result.kind = Kind.LessLessEqual;$/;"	v
LessLessEqual	$C2_ROOT/parser/token.c2	/^    [Kind.LessLessEqual]    = "<<=",$/;"	v
LessThan	$C2_ROOT/ast/binary_operator.c2	/^    LessThan,$/;"	v
LessThan	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.LessThan]    = Relational,$/;"	v
LessThan	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.LessThan]    = Relative,$/;"	v
Level	$C2_ROOT/analyser/scope.c2	/^type Level struct {$/;"	t
Lgui	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Lgui    = 0x0400,$/;"	v
Lib	$C2_ROOT/common/library_list.c2	/^public type Lib struct {$/;"	t
Lib	$C2_ROOT/compiler/c2recipe_parser.c2	/^    Lib,$/;"	v
Limit	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^type Limit struct {$/;"	t
Limits	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Limits struct @(cname="sg_limits") {$/;"	t
Line	$C2_ROOT/ast/var_decl.c2	/^    return d.base.varDeclBits.auto_attr == AutoAttr.Line;$/;"	v
LineComment	$C2_ROOT/parser/c2_tokenizer.c2	/^        result.kind = Kind.LineComment;$/;"	v
LineComment	$C2_ROOT/parser/token.c2	/^    [Kind.LineComment]      = "l-comment",$/;"	v
LineCounter	$C2_ROOT/plugins/refs_generator.c2	/^type LineCounter struct {$/;"	t
Link	$C2_ROOT/generator/c2refs.c2	/^type Link struct {$/;"	t
Links	$C2_ROOT/generator/c2refs.c2	/^type Links struct {$/;"	t
List	$C2_ROOT/analyser/incr_array_list.c2	/^public type List struct {$/;"	t
List	$C2_ROOT/analyser/struct_func_list.c2	/^public type List struct {$/;"	t
List	$C2_ROOT/common/component.c2	/^public type List struct {$/;"	t
List	$C2_ROOT/common/index_list.c2	/^public type List struct {$/;"	t
List	$C2_ROOT/common/library_list.c2	/^public type List struct {$/;"	t
List	$C2_ROOT/common/module_list.c2	/^public type List struct {$/;"	t
List	$C2_ROOT/common/string_list.c2	/^public type List struct {$/;"	t
List	$C2_ROOT/common/value_maplist.c2	/^public type List struct {$/;"	t
List	$C2_ROOT/parser/case_list.c2	/^public type List struct {$/;"	t
List	$C2_ROOT/parser/expr_list.c2	/^public type List struct {$/;"	t
List	$C2_ROOT/parser/stmt_list.c2	/^public type List struct {$/;"	t
LiveVector	$C2_ROOT/ir/register_alloc.c2	/^type LiveVector struct  {$/;"	t
Load1	$C2_ROOT/ir/context.c2	/^        k = InstrKind.Load1;$/;"	v
Load1	$C2_ROOT/ir/instr_kind.c2	/^    Load1,$/;"	v
Load2	$C2_ROOT/ir/context.c2	/^        k = InstrKind.Load2;$/;"	v
Load2	$C2_ROOT/ir/instr_kind.c2	/^    Load2,$/;"	v
Load4	$C2_ROOT/ir/context.c2	/^        k = InstrKind.Load4;$/;"	v
Load4	$C2_ROOT/ir/instr_kind.c2	/^    Load4,$/;"	v
Load8	$C2_ROOT/ir/context.c2	/^        k = InstrKind.Load8;$/;"	v
Load8	$C2_ROOT/ir/instr_kind.c2	/^    Load8,$/;"	v
LoadAction	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type LoadAction enum u32 @(cname="sg_load_action") {$/;"	t
LoadFn	$C2_ROOT/plugins/plugin_info.c2	/^public type LoadFn fn void*(const char* options, bool console_timing, bool console_debug);$/;"	t
Loc	$C2_ROOT/plugins/refs_generator.c2	/^type Loc struct {$/;"	t
LocalVar	$C2_ROOT/ast/var_decl.c2	/^    return d.getKind() == VarDeclKind.LocalVar;$/;"	v
Locals	$C2_ROOT/generator/ir/ir_generator.c2	/^    Locals locals;$/;"	v
Locals	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^public type Locals struct {$/;"	t
Location	$C2_ROOT/common/source_mgr.c2	/^public type Location struct {$/;"	t
Location	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^type Location struct {$/;"	t
LogCb	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type LogCb fn void(const char*, u32, u32, const char*, u32, const char*, void*);$/;"	t
LogCb	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^type LogCb fn void(const char*, u32, u32, const char*, u32, const char*, void*);$/;"	t
LogCb	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^type LogCb fn void(const char*, u32, u32, const char*, u32, const char*, void*);$/;"	t
LogCb	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type LogCb fn void(const char*, u32, u32, const char*, u32, const char*, void*);$/;"	t
LogCb	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^type LogCb fn void(const char*, u32, u32, const char*, u32, const char*, void*);$/;"	t
LogFn	$C2_ROOT/plugins/unit_test1.c2	/^public type LogFn fn void (const char* fmt, va_list args);$/;"	t
LogItem	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type LogItem enum i32 @(cname="sapp_log_item") {$/;"	t
LogItem	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^type LogItem enum i32 @(cname="saudio_log_item") {$/;"	t
LogItem	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^type LogItem enum i32 @(cname="sdtx_log_item_t") {$/;"	t
LogItem	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type LogItem enum i32 @(cname="sg_log_item") {$/;"	t
LogItem	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^type LogItem enum i32 @(cname="sgl_log_item_t") {$/;"	t
Logger	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type Logger struct @(cname="sapp_logger") {$/;"	t
Logger	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^type Logger struct @(cname="saudio_logger") {$/;"	t
Logger	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^type Logger struct @(cname="sdtx_logger_t") {$/;"	t
Logger	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Logger struct @(cname="sg_logger") {$/;"	t
Logger	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^type Logger struct @(cname="sgl_logger_t") {$/;"	t
LogicJoin	$C2_ROOT/ir/block.c2	/^    LogicJoin,$/;"	v
Lshift	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Lshift  = 0x0001,$/;"	v
MACOS_INVALID_NSOPENGL_PROFILE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    MACOS_INVALID_NSOPENGL_PROFILE = 2,$/;"	v
MADVISE	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    MADVISE,$/;"	v
MAIL	$C2_ROOT/libs/sdl2/sdl.c2i	/^    MAIL = 265,$/;"	v
MAKE_PIPELINE_FAILED	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    MAKE_PIPELINE_FAILED = 2,$/;"	v
MALLOC_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    MALLOC_FAILED = 1,$/;"	v
MALLOC_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    MALLOC_FAILED = 1,$/;"	v
MALLOC_FAILED	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    MALLOC_FAILED = 1,$/;"	v
MALLOC_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    MALLOC_FAILED = 1,$/;"	v
MALLOC_FAILED	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    MALLOC_FAILED = 1,$/;"	v
MAP_PRIVATE	$C2_ROOT/generator/c2refs.c2	/^    i32 flags = MAP_PRIVATE;$/;"	v
MAT4	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    MAT4 = 9,$/;"	v
MAX	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    MAX = 5,$/;"	v
MAX_THREADS	$C2_ROOT/ir/work_queue.c2	/^    if (num_threads > MAX_THREADS) num_threads = MAX_THREADS;$/;"	v
MBEDTLS_PK_ECDSA	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    MBEDTLS_PK_ECDSA,$/;"	v
MBEDTLS_PK_ECKEY	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    MBEDTLS_PK_ECKEY,$/;"	v
MBEDTLS_PK_ECKEY_DH	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    MBEDTLS_PK_ECKEY_DH,$/;"	v
MBEDTLS_PK_NONE	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    MBEDTLS_PK_NONE=0,$/;"	v
MBEDTLS_PK_OPAQUE	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    MBEDTLS_PK_OPAQUE,$/;"	v
MBEDTLS_PK_RSA	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    MBEDTLS_PK_RSA,$/;"	v
MBEDTLS_PK_RSASSA_PSS	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    MBEDTLS_PK_RSASSA_PSS,$/;"	v
MBEDTLS_PK_RSA_ALT	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    MBEDTLS_PK_RSA_ALT,$/;"	v
MEDIASELECT	$C2_ROOT/libs/sdl2/sdl.c2i	/^    MEDIASELECT = 263,$/;"	v
MENU	$C2_ROOT/libs/sdl2/sdl.c2i	/^    MENU = 118,$/;"	v
MENU	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    MENU = 348,$/;"	v
METAL_CREATE_BUFFER_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_CREATE_BUFFER_FAILED = 52,$/;"	v
METAL_CREATE_CPS_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_CREATE_CPS_FAILED = 65,$/;"	v
METAL_CREATE_CPS_OUTPUT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_CREATE_CPS_OUTPUT = 66,$/;"	v
METAL_CREATE_DSS_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_CREATE_DSS_FAILED = 69,$/;"	v
METAL_CREATE_RPS_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_CREATE_RPS_FAILED = 67,$/;"	v
METAL_CREATE_RPS_OUTPUT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_CREATE_RPS_OUTPUT = 68,$/;"	v
METAL_CREATE_SAMPLER_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_CREATE_SAMPLER_FAILED = 55,$/;"	v
METAL_CREATE_TEXTURE_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_CREATE_TEXTURE_FAILED = 54,$/;"	v
METAL_IMAGE_MSL_TEXTURE_SLOT_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_IMAGE_MSL_TEXTURE_SLOT_OUT_OF_RANGE = 63,$/;"	v
METAL_IOS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_IOS = 3,$/;"	v
METAL_MACOS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_MACOS = 4,$/;"	v
METAL_SAMPLER_MSL_SAMPLER_SLOT_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_SAMPLER_MSL_SAMPLER_SLOT_OUT_OF_RANGE = 64,$/;"	v
METAL_SHADER_COMPILATION_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_SHADER_COMPILATION_FAILED = 56,$/;"	v
METAL_SHADER_COMPILATION_OUTPUT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_SHADER_COMPILATION_OUTPUT = 58,$/;"	v
METAL_SHADER_CREATION_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_SHADER_CREATION_FAILED = 57,$/;"	v
METAL_SHADER_ENTRY_NOT_FOUND	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_SHADER_ENTRY_NOT_FOUND = 59,$/;"	v
METAL_SIMULATOR	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_SIMULATOR = 5,$/;"	v
METAL_STORAGEBUFFER_MSL_BUFFER_SLOT_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_STORAGEBUFFER_MSL_BUFFER_SLOT_OUT_OF_RANGE = 61,$/;"	v
METAL_STORAGEIMAGE_MSL_TEXTURE_SLOT_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_STORAGEIMAGE_MSL_TEXTURE_SLOT_OUT_OF_RANGE = 62,$/;"	v
METAL_TEXTURE_FORMAT_NOT_SUPPORTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_TEXTURE_FORMAT_NOT_SUPPORTED = 53,$/;"	v
METAL_UNIFORMBLOCK_MSL_BUFFER_SLOT_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    METAL_UNIFORMBLOCK_MSL_BUFFER_SLOT_OUT_OF_RANGE = 60,$/;"	v
MIDDLE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    MIDDLE = 2,$/;"	v
MIN	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    MIN = 4,$/;"	v
MINUS	$C2_ROOT/libs/sdl2/sdl.c2i	/^    MINUS = 45,$/;"	v
MINUS	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    MINUS = 45,$/;"	v
MINUS	$C2_ROOT/parser/c2_tokenizer.c2	/^    MINUS,$/;"	v
MIRRORED_REPEAT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    MIRRORED_REPEAT = 4,$/;"	v
MKDIRAT	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    MKDIRAT,$/;"	v
MOUSE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    MOUSE = 3,$/;"	v
MOUSE_DOWN	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    MOUSE_DOWN = 4,$/;"	v
MOUSE_ENTER	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    MOUSE_ENTER = 8,$/;"	v
MOUSE_LEAVE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    MOUSE_LEAVE = 9,$/;"	v
MOUSE_MOVE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    MOUSE_MOVE = 7,$/;"	v
MOUSE_SCROLL	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    MOUSE_SCROLL = 6,$/;"	v
MOUSE_UP	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    MOUSE_UP = 5,$/;"	v
MULTIGESTURE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    MULTIGESTURE,$/;"	v
MUTE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    MUTE = 127,$/;"	v
M_PI	$C2_ROOT/libs/sokol/sokol_math.c2i	/^const f32 PI = M_PI;$/;"	v
Magenta	$C2_ROOT/ir/print.c2	/^const char* col_Value = color.Magenta;$/;"	v
MainMarker	$C2_ROOT/analyser/module_analyser.c2	/^type MainMarker struct {$/;"	t
Map	$C2_ROOT/common/yaml/yaml_data.c2	/^    Map,$/;"	v
Map	$C2_ROOT/common/yaml/yaml_parser.c2	/^        p.stack[0].node.kind = NodeKind.Map;$/;"	v
Map	$C2_ROOT/ir/live_map.c2	/^public type Map struct @(opaque) {$/;"	t
Map	$C2_ROOT/ir/slot_writes_map.c2	/^public type Map struct @(opaque) {$/;"	t
Map	$C2_ROOT/libs/libc/net_if.c2i	/^type Map struct @(cname="ifmap") {$/;"	t
MapFile	$C2_ROOT/generator/c2refs.c2	/^type MapFile struct {$/;"	t
Mat4	$C2_ROOT/libs/sokol/sokol_math.c2i	/^type Mat4 struct {$/;"	t
Mat4	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^type Mat4 struct @(cname="sshape_mat4_t") {$/;"	t
MatchFn	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^public type MatchFn fn void (void* arg, const char* text, u32 value);$/;"	t
MaxLookahead	$C2_ROOT/parser/c2_parser.c2	/^    u32 slot = (p.next_head + n - 1) % MaxLookahead;$/;"	v
MaxMultiDeclBits	$C2_ROOT/ast/decl_stmt.c2	/^    u32 count : MaxMultiDeclBits;$/;"	v
Md_type_t	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Md_type_t enum u8 @(cname="mbedtls_md_type_t") {$/;"	t
Member	$C2_ROOT/ast/expr.c2	/^    return e.getKind() == ExprKind.Member;$/;"	v
MemberConversion	$C2_ROOT/ast/member_expr.c2	/^public type MemberConversion enum u8 {$/;"	t
MemberExpr	$C2_ROOT/ast/member_expr.c2	/^public type MemberExpr struct @(opaque) {$/;"	t
MemberExprBits	$C2_ROOT/ast/member_expr.c2	/^type MemberExprBits struct {$/;"	t
MemberExprBits	$C2_ROOT/ast/stmt.c2	/^        MemberExprBits memberExprBits;$/;"	v
MemberRef	$C2_ROOT/ast/member_expr.c2	/^type MemberRef union {$/;"	t
MetalEnvironment	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type MetalEnvironment struct @(cname="sg_metal_environment") {$/;"	t
MetalSwapchain	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type MetalSwapchain struct @(cname="sg_metal_swapchain") {$/;"	t
Mgr	$C2_ROOT/compiler/plugin_mgr.c2	/^public type Mgr struct @(opaque) {$/;"	t
Minus	$C2_ROOT/parser/c2_parser_expr.c2	/^    case Minus: return UnaryOpcode.Minus;$/;"	v
Minus	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.Minus;$/;"	v
Minus	$C2_ROOT/parser/token.c2	/^    [Kind.Minus]            = "-",$/;"	v
MinusEqual	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.MinusEqual]     = SubAssign,$/;"	v
MinusEqual	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.MinusEqual;$/;"	v
MinusEqual	$C2_ROOT/parser/token.c2	/^    [Kind.MinusEqual]       = "-=",$/;"	v
MinusMinus	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.MinusMinus] = 7,$/;"	v
MinusMinus	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.MinusMinus;$/;"	v
MinusMinus	$C2_ROOT/parser/token.c2	/^    [Kind.MinusMinus]       = "--",$/;"	v
Mix_Chunk	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^type Mix_Chunk struct {$/;"	t
Mix_CloseAudio	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^fn void Mix_CloseAudio() @(cname="Mix_CloseAudio");$/;"	f
Mix_FadeInMusic	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_FadeInMusic(Mix_Music* music, c_int loops, c_int ms) @(cname="Mix_FadeInMusic");$/;"	f
Mix_FadeOutChannel	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_FadeOutChannel(c_int which, c_int ms) @(cname="Mix_FadeOutChannel");$/;"	f
Mix_FadeOutMusic	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_FadeOutMusic(c_int ms) @(cname="Mix_FadeOutMusic");$/;"	f
Mix_FreeChunk	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^fn void Mix_FreeChunk(Mix_Chunk* chunk) @(cname="Mix_FreeChunk");$/;"	f
Mix_FreeMusic	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^fn void Mix_FreeMusic(Mix_Music* music) @(cname="Mix_FreeMusic");$/;"	f
Mix_HaltChannel	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_HaltChannel(c_int channel) @(cname="Mix_HaltChannel");$/;"	f
Mix_HaltMusic	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_HaltMusic() @(cname="Mix_HaltMusic");$/;"	f
Mix_LoadMUS	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^fn Mix_Music* Mix_LoadMUS(const char* file) @(cname="Mix_LoadMUS");$/;"	f
Mix_LoadWAV_RW	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^fn Mix_Chunk* Mix_LoadWAV_RW(sdl.RWops* src, c_int freesrc) @(cname="Mix_LoadWAV_RW");$/;"	f
Mix_Music	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^type Mix_Music  struct @(opaque, cname="Mix_Music");$/;"	t
Mix_OpenAudio	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_OpenAudio(c_int frequency, u16 format, c_int channels, c_int chunksize); \/\/@(cnam/;"	f
Mix_PlayChannelTimed	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_PlayChannelTimed(c_int channel, Mix_Chunk* chunk, c_int loops, c_int ticks);$/;"	f
Mix_PlayMusic	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_PlayMusic(Mix_Music* music, c_int loops) @(cname="Mix_PlayMusic");$/;"	f
Mix_SetDistance	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_SetDistance(c_int channel, u8 distance) @(cname="Mix_SetDistance");$/;"	f
Mix_SetPanning	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_SetPanning(c_int channel, u8 left, u8 right) @(cname="Mix_SetPanning");$/;"	f
Mix_SetPosition	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^fn c_int Mix_SetPosition(c_int channel, i16 angle, u8 distance) @(cname="Mix_SetPosition");$/;"	f
Mode	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint32_t Mode;$/;"	v
Mode	$C2_ROOT/libs/libc/sys_stat.c2i	/^type Mode c_uint;$/;"	t
Mode	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Mode    = 0x4000,$/;"	v
Module	$C2_ROOT/analyser/module_analyser_expr.c2	/^        kind = IdentifierKind.Module;$/;"	v
Module	$C2_ROOT/ast/identifier_expr.c2	/^    Module,$/;"	v
Module	$C2_ROOT/ast/module.c2	/^public type Module struct @(opaque) {$/;"	t
Module	$C2_ROOT/ast/type.c2	/^    Module,$/;"	v
ModuleSorter	$C2_ROOT/analyser/module_sorter.c2	/^type ModuleSorter struct {$/;"	t
ModuleType	$C2_ROOT/ast/module_type.c2	/^public type ModuleType struct @(opaque) {$/;"	t
MouseButtonEvent	$C2_ROOT/libs/sdl2/sdl.c2i	/^type MouseButtonEvent struct {$/;"	t
MouseCursor	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type MouseCursor enum i32 @(cname="sapp_mouse_cursor") {$/;"	t
MouseMotionEvent	$C2_ROOT/libs/sdl2/sdl.c2i	/^type MouseMotionEvent struct {$/;"	t
MouseWheelEvent	$C2_ROOT/libs/sdl2/sdl.c2i	/^type MouseWheelEvent struct {$/;"	t
Mousebutton	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type Mousebutton enum i32 @(cname="sapp_mousebutton") {$/;"	t
Mpi	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Mpi struct @(cname="mbedtls_mpi") {$/;"	t
Mpi_uint	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Mpi_uint c_ulonglong;$/;"	t
MtlBufferInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type MtlBufferInfo struct @(cname="sg_mtl_buffer_info") {$/;"	t
MtlImageInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type MtlImageInfo struct @(cname="sg_mtl_image_info") {$/;"	t
MtlPipelineInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type MtlPipelineInfo struct @(cname="sg_mtl_pipeline_info") {$/;"	t
MtlSamplerInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type MtlSamplerInfo struct @(cname="sg_mtl_sampler_info") {$/;"	t
MtlShaderInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type MtlShaderInfo struct @(cname="sg_mtl_shader_info") {$/;"	t
MtlShaderThreadsPerThreadgroup	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type MtlShaderThreadsPerThreadgroup struct @(cname="sg_mtl_shader_threads_per_threadgroup") {$/;"	t
Mul	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        kind = InstrKind.Mul;$/;"	v
Mul	$C2_ROOT/ir/instr_kind.c2	/^    Mul,$/;"	v
MulAssign	$C2_ROOT/ast/binary_operator.c2	/^    MulAssign,$/;"	v
MulAssign	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.MulAssign]   = Assignment,$/;"	v
MulAssign	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.MulAssign]   = Assignment,$/;"	v
Multiply	$C2_ROOT/ast/binary_operator.c2	/^    Multiply,$/;"	v
Multiply	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.Multiply]    = Multiplicative,$/;"	v
Multiply	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.Multiply]    = Multiplicative,$/;"	v
Mutex	$C2_ROOT/libs/pthread/pthread.c2i	/^type Mutex union @(cname="pthread_mutex_t") {$/;"	t
MutexAttr	$C2_ROOT/libs/pthread/pthread.c2i	/^type MutexAttr union @(cname="pthread_mutexattr_t") {$/;"	t
NATIVE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    NATIVE = 1,$/;"	v
NEAREST	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    NEAREST = 1,$/;"	v
NEVER	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    NEVER = 1,$/;"	v
NEWLINE	$C2_ROOT/parser/c2_tokenizer.c2	/^    NEWLINE,$/;"	v
NEXT_SHIFT	$C2_ROOT/ast_utils/string_pool.c2	/^                next = v >> NEXT_SHIFT;$/;"	v
NONE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    NONE = 16,$/;"	v
NONFILTERING	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    NONFILTERING = 2,$/;"	v
NOP	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    NOP,$/;"	v
NOT_ALLOWED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    NOT_ALLOWED = 10,$/;"	v
NOT_EQUAL	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    NOT_EQUAL = 6,$/;"	v
NOT_FOUND	$C2_ROOT/generator/c2refs.c2	/^    u32 src_loc = NOT_FOUND;$/;"	v
NULL	$C2_ROOT/bootstrap/bootstrap.c	/^static const uint32_t* attr_name_indexes = NULL;$/;"	v
NULL	$C2_ROOT/ir/interference_graph.c2	/^    r.prev = NULL;$/;"	v
NULL	$C2_ROOT/ir/live_map.c2	/^    r.prev = NULL;$/;"	v
NULL	$C2_ROOT/ir/slot_writes_map.c2	/^    r.prev = NULL;$/;"	v
NUM	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    NUM = 27,$/;"	v
NUM	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    NUM = 9,$/;"	v
NUM_0	$C2_ROOT/libs/sdl2/sdl.c2i	/^    NUM_0 = 39,$/;"	v
NUM_0	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    NUM_0 = 48,$/;"	v
NUM_1	$C2_ROOT/libs/sdl2/sdl.c2i	/^    NUM_1 = 30,$/;"	v
NUM_1	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    NUM_1 = 49,$/;"	v
NUM_2	$C2_ROOT/libs/sdl2/sdl.c2i	/^    NUM_2 = 31,$/;"	v
NUM_2	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    NUM_2 = 50,$/;"	v
NUM_3	$C2_ROOT/libs/sdl2/sdl.c2i	/^    NUM_3 = 32,$/;"	v
NUM_3	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    NUM_3 = 51,$/;"	v
NUM_4	$C2_ROOT/libs/sdl2/sdl.c2i	/^    NUM_4 = 33,$/;"	v
NUM_4	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    NUM_4 = 52,$/;"	v
NUM_5	$C2_ROOT/libs/sdl2/sdl.c2i	/^    NUM_5 = 34,$/;"	v
NUM_5	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    NUM_5 = 53,$/;"	v
NUM_6	$C2_ROOT/libs/sdl2/sdl.c2i	/^    NUM_6 = 35,$/;"	v
NUM_6	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    NUM_6 = 54,$/;"	v
NUM_7	$C2_ROOT/libs/sdl2/sdl.c2i	/^    NUM_7 = 36,$/;"	v
NUM_7	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    NUM_7 = 55,$/;"	v
NUM_8	$C2_ROOT/libs/sdl2/sdl.c2i	/^    NUM_8 = 37,$/;"	v
NUM_8	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    NUM_8 = 56,$/;"	v
NUM_9	$C2_ROOT/libs/sdl2/sdl.c2i	/^    NUM_9 = 38,$/;"	v
NUM_9	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    NUM_9 = 57,$/;"	v
NUM_LOCK	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    NUM_LOCK = 282,$/;"	v
NValue	$C2_ROOT/analyser/module_analyser_member.c2	/^    return ValType.NValue;$/;"	v
NValue	$C2_ROOT/ast/expr.c2	/^    return e.getValType() == ValType.NValue;$/;"	v
Name	$C2_ROOT/libs/libc/sys_utsname.c2i	/^type Name struct @(cname="utsname") {$/;"	t
NameVector	$C2_ROOT/analyser/module_analyser.c2	/^    NameVector prefixes;$/;"	v
NameVector	$C2_ROOT/analyser/name_vector.c2	/^public type NameVector struct {$/;"	t
Net_context	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Net_context struct @(cname="mbedtls_net_context") {$/;"	t
Next	$C2_ROOT/analyser/module_analyser_stmt.c2	/^const FlowBits FlowNext      = 1 << Flow.Next;$/;"	v
Nil	$C2_ROOT/ast/expr.c2	/^    return e.getKind() == ExprKind.Nil;$/;"	v
NilExpr	$C2_ROOT/ast/nil_expr.c2	/^public type NilExpr struct @(opaque) {$/;"	t
NoArg	$C2_ROOT/ast_utils/attr.c2	/^    NoArg = 0,$/;"	v
NoLibc	$C2_ROOT/compiler/c2recipe_parser.c2	/^    NoLibc,$/;"	v
NoReturn	$C2_ROOT/analyser/module_analyser_stmt.c2	/^const FlowBits FlowNoReturn  = 1 << Flow.NoReturn;$/;"	v
NoReturn	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.NoReturn]     = AttrReq.NoArg,$/;"	v
NoTypeDef	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.NoTypeDef]    = AttrReq.NoArg,$/;"	v
Node	$C2_ROOT/common/yaml/yaml_data.c2	/^public type Node struct @(opaque) {$/;"	t
Node	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^type Node struct @(aligned=4) {$/;"	t
NodeKind	$C2_ROOT/common/yaml/yaml_data.c2	/^type NodeKind enum u8 {$/;"	t
Nodes	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^type Nodes struct {$/;"	t
None	$C2_ROOT/ast/member_expr.c2	/^    None,$/;"	v
None	$C2_ROOT/ast/var_decl.c2	/^    return d.base.varDeclBits.auto_attr != AutoAttr.None;$/;"	v
None	$C2_ROOT/ast_utils/attr.c2	/^    None,$/;"	v
None	$C2_ROOT/common/build_target.c2	/^    return t.backend != BackEndKind.None;$/;"	v
None	$C2_ROOT/common/yaml/yaml_parser.c2	/^    p.token.kind = TokenKind.None;$/;"	v
None	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    t.next.kind = TokenKind.None;$/;"	v
None	$C2_ROOT/generator/ir/ir_generator.c2	/^    return ir.Type.None;$/;"	v
None	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^    InstrKind kind = InstrKind.None;$/;"	v
None	$C2_ROOT/ir/function_info.c2	/^    if (fi.num_args == 0) return Type.None;$/;"	v
None	$C2_ROOT/ir/init_value.c2	/^    None,$/;"	v
None	$C2_ROOT/ir/instr.c2	/^    return i.getKind() == InstrKind.None;$/;"	v
None	$C2_ROOT/ir/ref.c2	/^    return r.kind == RefKind.None;$/;"	v
None	$C2_ROOT/ir/slot_collector.c2	/^            ref.kind = RefKind.None;$/;"	v
None	$C2_ROOT/ir/types.c2	/^    None,$/;"	v
None	$C2_ROOT/libs/sdl2/sdl.c2i	/^    None  = 0x00000000,$/;"	v
None	$C2_ROOT/parser/c2_parser.c2	/^        a.value_kind = attr.ValueKind.None;$/;"	v
None	$C2_ROOT/parser/c2_tokenizer.c2	/^                op = Kind.None;$/;"	v
None	$C2_ROOT/parser/token.c2	/^    [Kind.None]             = "none",$/;"	v
Normal	$C2_ROOT/analyser/module_analyser_member.c2	/^        if (ck == CallKind.Invalid && d.isFunction()) ck = CallKind.Normal;$/;"	v
Normal	$C2_ROOT/ast/ast_evaluator.c2	/^    return s1 ? s1.eval(sf) : Cont.Normal;$/;"	v
Normal	$C2_ROOT/ast/function_decl.c2	/^    d.base.functionDeclBits.call_kind = prefix ? CallKind.StaticTypeFunc : CallKind.Normal;$/;"	v
Normal	$C2_ROOT/ast/utils.c2	/^const char* col_Normal = color.Normal;$/;"	v
Normal	$C2_ROOT/ir/print.c2	/^const char* col_Instr = color.Normal;$/;"	v
Not	$C2_ROOT/analyser/module_analyser_binop.c2	/^        Not Allowed$/;"	v
Not	$C2_ROOT/parser/c2_parser_expr.c2	/^    case Tilde: return UnaryOpcode.Not;$/;"	v
NotEqual	$C2_ROOT/ast/binary_operator.c2	/^    return opcode >= BinaryOpcode.LessThan && opcode <= BinaryOpcode.NotEqual;$/;"	v
NotEqual	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.NotEqual]    = Relational,$/;"	v
NotEqual	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.NotEqual]    = Equality,$/;"	v
Note	$C2_ROOT/common/diagnostics.c2	/^    Note,$/;"	v
Num	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Num     = 0x1000,$/;"	v
NumDeclBits	$C2_ROOT/ast/enum_constant_decl.c2	/^    u32 : NumDeclBits;$/;"	v
NumDeclBits	$C2_ROOT/ast/enum_type_decl.c2	/^    u32 : NumDeclBits;$/;"	v
NumDeclBits	$C2_ROOT/ast/function_decl.c2	/^    u32 : NumDeclBits;$/;"	v
NumDeclBits	$C2_ROOT/ast/import_decl.c2	/^    u32 : NumDeclBits;$/;"	v
NumDeclBits	$C2_ROOT/ast/struct_type_decl.c2	/^    u32 : NumDeclBits;$/;"	v
NumDeclBits	$C2_ROOT/ast/var_decl.c2	/^    u32 : NumDeclBits;$/;"	v
NumExprBits	$C2_ROOT/ast/array_subscript_expr.c2	/^    u32 src_len : 32 - NumExprBits;$/;"	v
NumExprBits	$C2_ROOT/ast/binary_operator.c2	/^    u32 : NumExprBits;$/;"	v
NumExprBits	$C2_ROOT/ast/bitoffset_expr.c2	/^    u32 : NumExprBits;$/;"	v
NumExprBits	$C2_ROOT/ast/boolean_literal.c2	/^    u32 : NumExprBits;$/;"	v
NumExprBits	$C2_ROOT/ast/builtin_expr.c2	/^    u32 : NumExprBits;$/;"	v
NumExprBits	$C2_ROOT/ast/call_expr.c2	/^    u32 : NumExprBits;$/;"	v
NumExprBits	$C2_ROOT/ast/char_literal.c2	/^    u32 : NumExprBits;$/;"	v
NumExprBits	$C2_ROOT/ast/explicit_cast_expr.c2	/^    u32 : NumExprBits;$/;"	v
NumExprBits	$C2_ROOT/ast/float_literal.c2	/^    u32 : NumExprBits;$/;"	v
NumExprBits	$C2_ROOT/ast/identifier_expr.c2	/^    u32 : NumExprBits;$/;"	v
NumExprBits	$C2_ROOT/ast/implicit_cast_expr.c2	/^    u32 : NumExprBits;$/;"	v
NumExprBits	$C2_ROOT/ast/init_list_expr.c2	/^    u32 : NumExprBits;$/;"	v
NumExprBits	$C2_ROOT/ast/integer_literal.c2	/^    u32 : NumExprBits;$/;"	v
NumExprBits	$C2_ROOT/ast/member_expr.c2	/^    u32 : NumExprBits;$/;"	v
NumExprBits	$C2_ROOT/ast/paren_expr.c2	/^    u32 src_len : 32 - NumExprBits;$/;"	v
NumExprBits	$C2_ROOT/ast/string_literal.c2	/^    u32 src_len : 32 - NumExprBits;$/;"	v
NumExprBits	$C2_ROOT/ast/type_expr.c2	/^    u32 src_len : 32 - NumExprBits;$/;"	v
NumExprBits	$C2_ROOT/ast/unary_operator.c2	/^    u32 : NumExprBits;$/;"	v
NumStmtBits	$C2_ROOT/ast/asm_stmt.c2	/^    u32 : NumStmtBits;$/;"	v
NumStmtBits	$C2_ROOT/ast/compound_stmt.c2	/^    u32 count : 32 - NumStmtBits;$/;"	v
NumStmtBits	$C2_ROOT/ast/decl_stmt.c2	/^    u32 : NumStmtBits;$/;"	v
NumStmtBits	$C2_ROOT/ast/expr.c2	/^    u32 : NumStmtBits;$/;"	v
NumStmtBits	$C2_ROOT/ast/if_stmt.c2	/^    u32 : NumStmtBits;$/;"	v
NumStmtBits	$C2_ROOT/ast/label_stmt.c2	/^    u32 : NumStmtBits;$/;"	v
NumStmtBits	$C2_ROOT/ast/return_stmt.c2	/^    u32 : NumStmtBits;$/;"	v
NumStmtBits	$C2_ROOT/ast/stmt.c2	/^    u32 kind : NumStmtBits;$/;"	v
NumStmtBits	$C2_ROOT/ast/switch_stmt.c2	/^    u32 : NumStmtBits;$/;"	v
NumTypeBits	$C2_ROOT/ast/array_type.c2	/^    u32 : NumTypeBits;$/;"	v
NumTypeBits	$C2_ROOT/ast/builtin_type.c2	/^    u32 : NumTypeBits;$/;"	v
Number	$C2_ROOT/ast_utils/attr.c2	/^    Number,$/;"	v
Number	$C2_ROOT/libs/lua/lua.c2i	/^type Number LUA_NUMBER @(cname="lua_Number");$/;"	t
Number	$C2_ROOT/parser/c2_parser.c2	/^                a.value_kind = attr.ValueKind.Number;$/;"	v
OK	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    OK = 0,$/;"	v
OK	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    OK = 0,$/;"	v
OK	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    OK = 0,$/;"	v
OK	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    OK = 0,$/;"	v
OK	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    OK = 0,$/;"	v
ONE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ONE = 2,$/;"	v
ONE_MINUS_BLEND_ALPHA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ONE_MINUS_BLEND_ALPHA = 15,$/;"	v
ONE_MINUS_BLEND_COLOR	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ONE_MINUS_BLEND_COLOR = 13,$/;"	v
ONE_MINUS_DST_ALPHA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ONE_MINUS_DST_ALPHA = 10,$/;"	v
ONE_MINUS_DST_COLOR	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ONE_MINUS_DST_COLOR = 8,$/;"	v
ONE_MINUS_SRC_ALPHA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ONE_MINUS_SRC_ALPHA = 6,$/;"	v
ONE_MINUS_SRC_COLOR	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ONE_MINUS_SRC_COLOR = 4,$/;"	v
OPAQUE_BLACK	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    OPAQUE_BLACK = 2,$/;"	v
OPAQUE_WHITE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    OPAQUE_WHITE = 3,$/;"	v
OPENAT	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    OPENAT,$/;"	v
OPENAT2	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    OPENAT2,$/;"	v
OPER	$C2_ROOT/libs/sdl2/sdl.c2i	/^    OPER = 161,$/;"	v
OUT	$C2_ROOT/libs/sdl2/sdl.c2i	/^    OUT = 160,$/;"	v
Octal	$C2_ROOT/ast_utils/number_radix.c2	/^    Octal,$/;"	v
Octal	$C2_ROOT/parser/c2_tokenizer.c2	/^        result.radix = Radix.Octal;$/;"	v
Offset	$C2_ROOT/libs/libc/stdio.c2i	/^type Offset u64 @(cname="off_t");$/;"	t
Offset	$C2_ROOT/libs/libc/sys_mman.c2i	/^type Offset u64 @(cname="off_t");$/;"	t
Offset	$C2_ROOT/libs/libc/sys_sendfile.c2i	/^type Offset u64 @(cname="off_t");$/;"	t
OffsetOf	$C2_ROOT/ast/builtin_expr.c2	/^    e.base.base.builtinExprBits.kind = BuiltinExprKind.OffsetOf;$/;"	v
OffsetOfData	$C2_ROOT/ast/builtin_expr.c2	/^type OffsetOfData struct {$/;"	t
Ok	$C2_ROOT/ast_utils/attr.c2	/^    return AttrReq.Ok;$/;"	v
OnDecl	$C2_ROOT/generator/c/dep_finder.c2	/^public type OnDecl fn void (void* arg, Decl* d);$/;"	t
OnExitFn	$C2_ROOT/libs/libc/stdlib.c2i	/^type OnExitFn fn void(i32, void*);$/;"	t
OnExprFn	$C2_ROOT/generator/ir/array_init_sorter.c2	/^public type OnExprFn fn void (void* arg, const ast.Expr* e, u32 elem_size);$/;"	t
OnRef	$C2_ROOT/generator/ast_visitor.c2	/^public type OnRef fn void (void* arg, const Ref* ref);$/;"	t
OnZeroFn	$C2_ROOT/generator/ir/array_init_sorter.c2	/^public type OnZeroFn fn void (void* arg, u32 size);$/;"	t
Op	$C2_ROOT/libs/io_uring/io_uring.c2i	/^type Op enum u8 {$/;"	t
Opaque	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.Opaque]       = AttrReq.NoArg,$/;"	v
OpaqueErrorfn	$C2_ROOT/ast/instantiator.c2	/^public type OpaqueErrorfn fn void (void* arg, src_loc.SrcLoc loc, Decl* decl);$/;"	t
Operand	$C2_ROOT/parser/c2_tokenizer.c2	/^type Operand struct {$/;"	t
Options	$C2_ROOT/compiler/compiler.c2	/^public type Options struct {$/;"	t
Options	$C2_ROOT/compiler/main.c2	/^type Options struct {$/;"	t
Or	$C2_ROOT/ast/binary_operator.c2	/^    Or,$/;"	v
Or	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.Or]          = Bitwise,$/;"	v
Or	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.Or]          = Or,$/;"	v
Or	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        kind = InstrKind.Or;$/;"	v
Or	$C2_ROOT/ir/instr_kind.c2	/^    Or,$/;"	v
OrAssign	$C2_ROOT/ast/binary_operator.c2	/^    OrAssign,$/;"	v
OrAssign	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.OrAssign]    = Assignment,$/;"	v
OrAssign	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.OrAssign]    = Assignment,$/;"	v
OrFalse	$C2_ROOT/ir/block.c2	/^    OrFalse,$/;"	v
Other	$C2_ROOT/analyser_utils/printf_utils.c2	/^            spec = Specifier.Other;$/;"	v
PAGEDOWN	$C2_ROOT/libs/sdl2/sdl.c2i	/^    PAGEDOWN = 78,$/;"	v
PAGEUP	$C2_ROOT/libs/sdl2/sdl.c2i	/^    PAGEUP = 75,$/;"	v
PAGE_DOWN	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    PAGE_DOWN = 267,$/;"	v
PAGE_UP	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    PAGE_UP = 266,$/;"	v
PASTE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    PASTE = 125,$/;"	v
PAUSE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    PAUSE = 72,$/;"	v
PAUSE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    PAUSE = 284,$/;"	v
PERCENT	$C2_ROOT/parser/c2_tokenizer.c2	/^    PERCENT,$/;"	v
PERIOD	$C2_ROOT/libs/sdl2/sdl.c2i	/^    PERIOD = 55,$/;"	v
PERIOD	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    PERIOD = 46,$/;"	v
PER_INSTANCE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    PER_INSTANCE = 2,$/;"	v
PER_VERTEX	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    PER_VERTEX = 1,$/;"	v
PF_UNIX	$C2_ROOT/libs/libc/sys_socket.c2i	/^const c_int AF_UNIX    =  PF_UNIX;$/;"	v
PI	$C2_ROOT/libs/sokol/sokol_math.c2i	/^const f32 RAD_TO_DEG = 180.0 \/ PI;$/;"	v
PIPE	$C2_ROOT/parser/c2_tokenizer.c2	/^    PIPE,$/;"	v
PIPELINE_POOL_EXHAUSTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    PIPELINE_POOL_EXHAUSTED = 119,$/;"	v
PIPELINE_POOL_EXHAUSTED	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    PIPELINE_POOL_EXHAUSTED = 3,$/;"	v
PLUS	$C2_ROOT/parser/c2_tokenizer.c2	/^    PLUS,$/;"	v
POINTING_HAND	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    POINTING_HAND = 4,$/;"	v
POINTS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    POINTS = 1,$/;"	v
POLL_ADD	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    POLL_ADD,$/;"	v
POLL_REMOVE	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    POLL_REMOVE,$/;"	v
POUND	$C2_ROOT/parser/c2_tokenizer.c2	/^    POUND,$/;"	v
PRINTSCREEN	$C2_ROOT/libs/sdl2/sdl.c2i	/^    PRINTSCREEN = 70,$/;"	v
PRINT_SCREEN	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    PRINT_SCREEN = 283,$/;"	v
PRIOR	$C2_ROOT/libs/sdl2/sdl.c2i	/^    PRIOR = 157,$/;"	v
PROT_READ	$C2_ROOT/generator/c2refs.c2	/^    i32 prot = PROT_READ;$/;"	v
PROVIDE_BUFFERS	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    PROVIDE_BUFFERS,$/;"	v
Packed	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.Packed]       = AttrReq.NoArg,$/;"	v
Palette	$C2_ROOT/libs/sdl2/sdl.c2i	/^type Palette struct @(cname="SDL_Palette") {$/;"	t
Param	$C2_ROOT/ir/instr_kind.c2	/^    Param,$/;"	v
Params	$C2_ROOT/libs/io_uring/io_uring.c2i	/^type Params struct @(cname="io_uring_params") {$/;"	t
Paren	$C2_ROOT/ast/expr.c2	/^    return e.getKind() == ExprKind.Paren;$/;"	v
ParenExpr	$C2_ROOT/ast/paren_expr.c2	/^public type ParenExpr struct @(opaque) {$/;"	t
ParenExprBits	$C2_ROOT/ast/paren_expr.c2	/^type ParenExprBits struct {$/;"	t
ParenExprBits	$C2_ROOT/ast/stmt.c2	/^        ParenExprBits parenExprBits;$/;"	v
Parser	$C2_ROOT/common/yaml/yaml_parser.c2	/^public type Parser struct @(opaque) {$/;"	t
Parser	$C2_ROOT/compiler/c2recipe_parser.c2	/^type Parser struct {$/;"	t
Parser	$C2_ROOT/parser/c2_parser.c2	/^public type Parser struct @(opaque) {$/;"	t
Pass	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Pass struct @(cname="sg_pass") {$/;"	t
PassAction	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type PassAction struct @(cname="sg_pass_action") {$/;"	t
PathInfo	$C2_ROOT/common/utils.c2	/^public type PathInfo struct {$/;"	t
Percent	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.Percent] = Multiplicative,$/;"	v
Percent	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.Percent;$/;"	v
Percent	$C2_ROOT/parser/token.c2	/^    [Kind.Percent]          = "%",$/;"	v
PercentEqual	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.PercentEqual]   = RemAssign,$/;"	v
PercentEqual	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.PercentEqual;$/;"	v
PercentEqual	$C2_ROOT/parser/token.c2	/^    [Kind.PercentEqual]     = "%=",$/;"	v
Phi	$C2_ROOT/ir/instr.c2	/^    return i.getKind() == InstrKind.Phi;$/;"	v
Phi	$C2_ROOT/ir/instr_kind.c2	/^    Phi,$/;"	v
PhiClause	$C2_ROOT/ir/phi_list.c2	/^public type PhiClause struct {$/;"	t
PhiClauses	$C2_ROOT/ir/phi_list.c2	/^public type PhiClauses struct {$/;"	t
PhiList	$C2_ROOT/ir/phi_list.c2	/^public type PhiList struct {$/;"	t
PhiSplit	$C2_ROOT/ir/block.c2	/^    PhiSplit,$/;"	v
Pid	$C2_ROOT/libs/libc/unistd.c2i	/^type Pid c_int @(cname="pid_t");$/;"	t
Pipe	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.Pipe]  = Bitwise,$/;"	v
Pipe	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.Pipe;$/;"	v
Pipe	$C2_ROOT/parser/token.c2	/^    [Kind.Pipe]             = "|",$/;"	v
PipeEqual	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.PipeEqual]      = OrAssign,$/;"	v
PipeEqual	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.PipeEqual;$/;"	v
PipeEqual	$C2_ROOT/parser/token.c2	/^    [Kind.PipeEqual]        = "|=",$/;"	v
PipePipe	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.PipePipe] = LogicalAndOr,$/;"	v
PipePipe	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.PipePipe;$/;"	v
PipePipe	$C2_ROOT/parser/token.c2	/^    [Kind.PipePipe]         = "||",$/;"	v
Pipeline	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Pipeline struct @(cname="sg_pipeline") {$/;"	t
Pipeline	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^type Pipeline struct @(cname="sgl_pipeline") {$/;"	t
PipelineDesc	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type PipelineDesc struct @(cname="sg_pipeline_desc") {$/;"	t
PipelineInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type PipelineInfo struct @(cname="sg_pipeline_info") {$/;"	t
PixelFormat	$C2_ROOT/libs/sdl2/sdl.c2i	/^type PixelFormat struct @(cname="SDL_PixelFormat") {$/;"	t
PixelFormat	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    PixelFormat depth_format;$/;"	v
PixelFormat	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type PixelFormat enum u32 @(cname="sg_pixel_format") {$/;"	t
PixelFormat	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    PixelFormat depth_format;$/;"	v
PixelformatInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type PixelformatInfo struct @(cname="sg_pixelformat_info") {$/;"	t
Pk_context	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Pk_context struct @(cname="mbedtls_pk_context") {$/;"	t
Pk_info_t	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Pk_info_t struct @(opaque, cname="mbedtls_pk_info_t");$/;"	t
Pk_type_t	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Pk_type_t enum u8 @(cname="mbedtls_pk_type_t") {$/;"	t
Plain_Scalar	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    result.kind = TokenKind.Plain_Scalar;$/;"	v
Plane	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^type Plane struct @(cname="sshape_plane_t") {$/;"	t
Plugin	$C2_ROOT/common/build_file.c2	/^public type Plugin struct {$/;"	t
Plugin	$C2_ROOT/common/build_target.c2	/^public type Plugin struct {$/;"	t
Plugin	$C2_ROOT/compiler/c2recipe_parser.c2	/^    Plugin,$/;"	v
Plugin	$C2_ROOT/compiler/plugin_mgr.c2	/^type Plugin struct {$/;"	t
Plugin	$C2_ROOT/plugins/deps_generator_plugin.c2	/^type Plugin struct {$/;"	t
Plugin	$C2_ROOT/plugins/git_version_plugin.c2	/^type Plugin struct {$/;"	t
Plugin	$C2_ROOT/plugins/plugin_info.c2	/^public type Plugin struct @(unused) {$/;"	t
Plugin	$C2_ROOT/plugins/refs_generator_plugin.c2	/^type Plugin struct {$/;"	t
Plugin	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^type Plugin struct {$/;"	t
Plugin	$C2_ROOT/plugins/unit_test_plugin.c2	/^type Plugin struct {$/;"	t
PluginFn	$C2_ROOT/compiler/compiler.c2	/^public type PluginFn fn void (void* arg);$/;"	t
PluginHandler	$C2_ROOT/compiler/compiler.c2	/^public type PluginHandler struct {$/;"	t
PluginList	$C2_ROOT/common/build_target.c2	/^public type PluginList struct {$/;"	t
PluginOptions	$C2_ROOT/compiler/c2recipe_parser.c2	/^    PluginOptions,$/;"	v
Plus	$C2_ROOT/parser/c2_parser_expr.c2	/^    case Plus: return UnaryOpcode.Plus;$/;"	v
Plus	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.Plus;$/;"	v
Plus	$C2_ROOT/parser/token.c2	/^    [Kind.Plus]             = "+",$/;"	v
PlusEqual	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.PlusEqual]      = AddAssign,$/;"	v
PlusEqual	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.PlusEqual;$/;"	v
PlusEqual	$C2_ROOT/parser/token.c2	/^    [Kind.PlusEqual]        = "+=",$/;"	v
PlusPlus	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.PlusPlus] = 7,$/;"	v
PlusPlus	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.PlusPlus;$/;"	v
PlusPlus	$C2_ROOT/parser/token.c2	/^    [Kind.PlusPlus]         = "++",$/;"	v
Point	$C2_ROOT/ir_examples/types.c2	/^type Point struct {$/;"	t
Point	$C2_ROOT/libs/sdl2/sdl.c2i	/^type Point struct @(cname="SDL_Point") {$/;"	t
Pointer	$C2_ROOT/analyser_utils/printf_utils.c2	/^        spec = Specifier.Pointer;$/;"	v
Pointer	$C2_ROOT/ast/type.c2	/^    Pointer,$/;"	v
PointerPool	$C2_ROOT/ast/pointer_pool.c2	/^type PointerPool struct {$/;"	t
PointerPool	$C2_ROOT/ast/utils.c2	/^    PointerPool pointers;$/;"	v
PointerPoolSlot	$C2_ROOT/ast/pointer_pool.c2	/^type PointerPoolSlot struct {$/;"	t
PointerToBoolean	$C2_ROOT/ast/implicit_cast_expr.c2	/^    PointerToBoolean,$/;"	v
PointerToInteger	$C2_ROOT/ast/implicit_cast_expr.c2	/^    PointerToInteger,$/;"	v
PointerType	$C2_ROOT/ast/pointer_type.c2	/^public type PointerType struct @(opaque) {$/;"	t
Pollfd	$C2_ROOT/libs/libc/libc_poll.c2i	/^type Pollfd struct @(cname="pollfd") {$/;"	t
Pool	$C2_ROOT/ast_utils/string_pool.c2	/^public type Pool struct @(opaque) {$/;"	t
PostAnalysisFn	$C2_ROOT/plugins/plugin_info.c2	/^public type PostAnalysisFn fn void(void* arg);$/;"	t
PostParseFn	$C2_ROOT/plugins/plugin_info.c2	/^public type PostParseFn fn void(void* arg);$/;"	t
Power2	$C2_ROOT/ast_utils/attr.c2	/^    Power2,$/;"	v
PreDec	$C2_ROOT/parser/c2_parser_expr.c2	/^    case MinusMinus: return UnaryOpcode.PreDec;$/;"	v
PreInc	$C2_ROOT/parser/c2_parser_expr.c2	/^    return UnaryOpcode.PreInc;$/;"	v
Prec	$C2_ROOT/common/c2_prec.c2	/^public type Prec enum u8 {$/;"	t
PrimitiveType	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type PrimitiveType enum u32 @(cname="sg_primitive_type") {$/;"	t
PrintHelper	$C2_ROOT/ir/print.c2	/^type PrintHelper struct {$/;"	t
PrintfFormat	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.PrintfFormat] = AttrReq.NoArg,$/;"	v
Pthread	$C2_ROOT/libs/pthread/pthread.c2i	/^type Pthread c_ulong @(cname="pthread_t");$/;"	t
PthreadAttr	$C2_ROOT/libs/pthread/pthread.c2i	/^type PthreadAttr struct @(cname="pthread_attr_t") {$/;"	t
Pure	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.Pure]         = AttrReq.NoArg,$/;"	v
QUESTION	$C2_ROOT/parser/c2_tokenizer.c2	/^    QUESTION,$/;"	v
QUIT_REQUESTED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    QUIT_REQUESTED = 21,$/;"	v
QualType	$C2_ROOT/analyser/conversion_checker.c2	/^    QualType rhs;$/;"	v
QualType	$C2_ROOT/analyser/module_analyser.c2	/^    QualType res;$/;"	v
QualType	$C2_ROOT/analyser/module_analyser_binop.c2	/^    QualType rtype;$/;"	v
QualType	$C2_ROOT/analyser/module_analyser_builtin.c2	/^    QualType qt;$/;"	v
QualType	$C2_ROOT/analyser/module_analyser_call.c2	/^    QualType baseType;$/;"	v
QualType	$C2_ROOT/analyser/module_analyser_expr.c2	/^        QualType$/;"	v
QualType	$C2_ROOT/analyser/module_analyser_type.c2	/^    QualType base;$/;"	v
QualType	$C2_ROOT/ast/array_type.c2	/^    QualType elem;$/;"	v
QualType	$C2_ROOT/ast/decl.c2	/^    QualType qt;$/;"	v
QualType	$C2_ROOT/ast/enum_type_decl.c2	/^    QualType implType;$/;"	v
QualType	$C2_ROOT/ast/expr.c2	/^    QualType qt;$/;"	v
QualType	$C2_ROOT/ast/instance_table.c2	/^    QualType qt;$/;"	v
QualType	$C2_ROOT/ast/member_expr.c2	/^    QualType qt;$/;"	v
QualType	$C2_ROOT/ast/pointer_type.c2	/^    QualType inner;$/;"	v
QualType	$C2_ROOT/ast/qualtype.c2	/^public type QualType struct {$/;"	t
QualType	$C2_ROOT/ast/type.c2	/^    QualType canonicalType;$/;"	v
QualType	$C2_ROOT/generator/ir/ir_generator_member.c2	/^    QualType base_type;$/;"	v
QualType	$C2_ROOT/parser/ast_builder.c2	/^                                        QualType implType,$/;"	v
QualType_Const	$C2_ROOT/ast/qualtype.c2	/^    qt.ptr |= QualType_Const;$/;"	v
QualType_Const	$C2_ROOT/parser/c2_parser.c2	/^        qualifiers |= QualType_Const;$/;"	v
QualType_Invalid	$C2_ROOT/analyser/conversion_checker.c2	/^    return QualType_Invalid;$/;"	v
QualType_Invalid	$C2_ROOT/analyser/module_analyser_binop.c2	/^    return QualType_Invalid;$/;"	v
QualType_Invalid	$C2_ROOT/analyser/module_analyser_builtin.c2	/^    return QualType_Invalid;$/;"	v
QualType_Invalid	$C2_ROOT/analyser/module_analyser_call.c2	/^    return QualType_Invalid;$/;"	v
QualType_Invalid	$C2_ROOT/analyser/module_analyser_expr.c2	/^    return QualType_Invalid;$/;"	v
QualType_Invalid	$C2_ROOT/analyser/module_analyser_member.c2	/^    QualType baseType = QualType_Invalid;$/;"	v
QualType_Invalid	$C2_ROOT/analyser/module_analyser_stmt.c2	/^    if (res.isInvalid()) return QualType_Invalid;$/;"	v
QualType_Invalid	$C2_ROOT/analyser/module_analyser_type.c2	/^    if (ma.has_error) return QualType_Invalid;$/;"	v
QualType_Invalid	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^    return QualType_Invalid;$/;"	v
QualType_Invalid	$C2_ROOT/ast/explicit_cast_expr.c2	/^    e2.dest_type = QualType_Invalid;$/;"	v
QualType_Invalid	$C2_ROOT/ast/function_decl.c2	/^    fd2.rt = QualType_Invalid;$/;"	v
QualType_Mask	$C2_ROOT/ast/qualtype.c2	/^    usize temp = qt.ptr & ~QualType_Mask;$/;"	v
QualType_Volatile	$C2_ROOT/ast/qualtype.c2	/^    qt.ptr |= QualType_Volatile;$/;"	v
QualType_Volatile	$C2_ROOT/parser/c2_parser.c2	/^        qualifiers |= QualType_Volatile;$/;"	v
Question	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.Question] = Conditional,$/;"	v
Question	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.Question;$/;"	v
Question	$C2_ROOT/parser/token.c2	/^    [Kind.Question]         = "?",$/;"	v
QueueWorker	$C2_ROOT/ir/work_queue.c2	/^type QueueWorker struct {$/;"	t
R16	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    R16 = 6,$/;"	v
R16F	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    R16F = 10,$/;"	v
R16SI	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    R16SI = 9,$/;"	v
R16SN	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    R16SN = 7,$/;"	v
R16UI	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    R16UI = 8,$/;"	v
R32F	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    R32F = 17,$/;"	v
R32SI	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    R32SI = 16,$/;"	v
R32UI	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    R32UI = 15,$/;"	v
R8	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    R8 = 2,$/;"	v
R8SI	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    R8SI = 5,$/;"	v
R8SN	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    R8SN = 3,$/;"	v
R8UI	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    R8UI = 4,$/;"	v
RA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RA = 9,$/;"	v
RAD_TO_DEG	$C2_ROOT/libs/sokol/sokol_math.c2i	/^    return _radians * RAD_TO_DEG;$/;"	v
RB	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RB = 5,$/;"	v
RBA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RBA = 13,$/;"	v
RBrace	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.RBrace;$/;"	v
RBrace	$C2_ROOT/parser/token.c2	/^    [Kind.RBrace]           = "}",$/;"	v
RCTRL	$C2_ROOT/libs/sdl2/sdl.c2i	/^    RCTRL = 228,$/;"	v
READ	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    READ,$/;"	v
READV	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    READV,$/;"	v
READ_FIXED	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    READ_FIXED,$/;"	v
RECV	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    RECV,$/;"	v
RECVMSG	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    RECVMSG,$/;"	v
REMOVE_BUFFERS	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    REMOVE_BUFFERS,$/;"	v
RENAMEAT	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    RENAMEAT,$/;"	v
REPEAT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    REPEAT = 1,$/;"	v
REPLACE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    REPLACE = 3,$/;"	v
RESIZED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    RESIZED = 14,$/;"	v
RESIZE_ALL	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    RESIZE_ALL = 9,$/;"	v
RESIZE_EW	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    RESIZE_EW = 5,$/;"	v
RESIZE_NESW	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    RESIZE_NESW = 8,$/;"	v
RESIZE_NS	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    RESIZE_NS = 6,$/;"	v
RESIZE_NWSE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    RESIZE_NWSE = 7,$/;"	v
RESOLVEATTACHMENT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RESOLVEATTACHMENT = 5,$/;"	v
RESTORED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    RESTORED = 16,$/;"	v
RESUMED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    RESUMED = 20,$/;"	v
RETURN	$C2_ROOT/libs/sdl2/sdl.c2i	/^    RETURN = 40,$/;"	v
RETURN2	$C2_ROOT/libs/sdl2/sdl.c2i	/^    RETURN2 = 158,$/;"	v
REVERSE_SUBTRACT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    REVERSE_SUBTRACT = 3,$/;"	v
RG	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RG = 3,$/;"	v
RG11B10F	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RG11B10F = 30,$/;"	v
RG16	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RG16 = 18,$/;"	v
RG16F	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RG16F = 22,$/;"	v
RG16SI	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RG16SI = 21,$/;"	v
RG16SN	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RG16SN = 19,$/;"	v
RG16UI	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RG16UI = 20,$/;"	v
RG32F	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RG32F = 34,$/;"	v
RG32SI	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RG32SI = 33,$/;"	v
RG32UI	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RG32UI = 32,$/;"	v
RG8	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RG8 = 11,$/;"	v
RG8SI	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RG8SI = 14,$/;"	v
RG8SN	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RG8SN = 12,$/;"	v
RG8UI	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RG8UI = 13,$/;"	v
RGA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RGA = 11,$/;"	v
RGB	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RGB = 7,$/;"	v
RGB10A2	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RGB10A2 = 29,$/;"	v
RGB9E5	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RGB9E5 = 31,$/;"	v
RGBA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RGBA = 15,$/;"	v
RGBA16	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RGBA16 = 35,$/;"	v
RGBA16F	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RGBA16F = 39,$/;"	v
RGBA16SI	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RGBA16SI = 38,$/;"	v
RGBA16SN	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RGBA16SN = 36,$/;"	v
RGBA16UI	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RGBA16UI = 37,$/;"	v
RGBA32F	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RGBA32F = 42,$/;"	v
RGBA32SI	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RGBA32SI = 41,$/;"	v
RGBA32UI	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RGBA32UI = 40,$/;"	v
RGBA8	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RGBA8 = 23,$/;"	v
RGBA8SI	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RGBA8SI = 27,$/;"	v
RGBA8SN	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RGBA8SN = 25,$/;"	v
RGBA8UI	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    RGBA8UI = 26,$/;"	v
RHS	$C2_ROOT/analyser/module_analyser_stmt.c2	/^            side = RHS;$/;"	v
RHS	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^        side |= RHS;$/;"	v
RIGHT	$C2_ROOT/libs/sdl2/sdl.c2i	/^    RIGHT = 79,$/;"	v
RIGHT	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    RIGHT = 262,$/;"	v
RIGHTBRACKET	$C2_ROOT/libs/sdl2/sdl.c2i	/^    RIGHTBRACKET = 48,$/;"	v
RIGHT_ALT	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    RIGHT_ALT = 346,$/;"	v
RIGHT_BRACKET	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    RIGHT_BRACKET = 93,$/;"	v
RIGHT_CONTROL	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    RIGHT_CONTROL = 345,$/;"	v
RIGHT_SHIFT	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    RIGHT_SHIFT = 344,$/;"	v
RIGHT_SUPER	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    RIGHT_SUPER = 347,$/;"	v
RPAREN	$C2_ROOT/parser/c2_tokenizer.c2	/^    RPAREN,$/;"	v
RParen	$C2_ROOT/parser/c2_parser_stmt.c2	/^            closeKind[depth++] = RParen;$/;"	v
RParen	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.RParen;$/;"	v
RParen	$C2_ROOT/parser/token.c2	/^    [Kind.RParen]           = ")",$/;"	v
RSHIFT	$C2_ROOT/libs/sdl2/sdl.c2i	/^    RSHIFT = 229,$/;"	v
RSQUARE	$C2_ROOT/parser/c2_tokenizer.c2	/^    RSQUARE,$/;"	v
RSquare	$C2_ROOT/parser/c2_parser_stmt.c2	/^            closeKind[depth++] = RSquare;$/;"	v
RSquare	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.RSquare;$/;"	v
RSquare	$C2_ROOT/parser/token.c2	/^    [Kind.RSquare]          = "]",$/;"	v
RValue	$C2_ROOT/analyser/module_analyser_member.c2	/^        return ValType.RValue;$/;"	v
RValue	$C2_ROOT/ast/expr.c2	/^    return e.getValType() == ValType.RValue;$/;"	v
RWops	$C2_ROOT/libs/sdl2/sdl.c2i	/^type RWops struct @(opaque, cname="SDL_RWops");$/;"	t
Radix	$C2_ROOT/ast_utils/number_radix.c2	/^public type Radix enum u8 {$/;"	t
Ralt	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Ralt    = 0x0200,$/;"	v
Random_data	$C2_ROOT/libs/libc/stdlib.c2i	/^type Random_data struct @(opaque, cname="random_data");$/;"	t
Range	$C2_ROOT/ast/expr.c2	/^    return e.getKind() == ExprKind.Range;$/;"	v
Range	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type Range struct @(cname="sapp_range") {$/;"	t
Range	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^type Range struct @(cname="sdtx_range") {$/;"	t
Range	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Range struct @(cname="sg_range") {$/;"	t
Range	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^type Range struct @(cname="sshape_range") {$/;"	t
RangeExpr	$C2_ROOT/ast/range_expr.c2	/^public type RangeExpr struct @(opaque) {$/;"	t
Rctrl	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Rctrl   = 0x0080,$/;"	v
ReadSlotAccess	$C2_ROOT/ir/slot_collector.c2	/^public type ReadSlotAccess struct {$/;"	t
Reader	$C2_ROOT/libs/lua/lua.c2i	/^type Reader fn const c_char* (State *L, void *ud, c_size *sz) @(cname="lua_Reader");$/;"	t
Recipe	$C2_ROOT/compiler/c2recipe.c2	/^public type Recipe struct @(opaque) {$/;"	t
Rect	$C2_ROOT/libs/sdl2/sdl.c2i	/^type Rect struct @(cname="SDL_Rect") {$/;"	t
Red	$C2_ROOT/ast/utils.c2	/^const char* col_Error = color.Red;$/;"	v
Ref	$C2_ROOT/ast/function_decl.c2	/^    Ref prefix;$/;"	v
Ref	$C2_ROOT/ast/member_expr.c2	/^    Ref ref;$/;"	v
Ref	$C2_ROOT/ast/type_ref.c2	/^public type Ref struct {$/;"	t
Ref	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^        Ref value_ref;$/;"	v
Ref	$C2_ROOT/ir/context.c2	/^    Ref ref;$/;"	v
Ref	$C2_ROOT/ir/copy_list.c2	/^    Ref ref;$/;"	v
Ref	$C2_ROOT/ir/phi_list.c2	/^    Ref ref;$/;"	v
Ref	$C2_ROOT/ir/ref.c2	/^public type Ref struct {$/;"	t
Ref	$C2_ROOT/ir/slot_collector.c2	/^    Ref ref;$/;"	v
Ref	$C2_ROOT/parser/c2_parser.c2	/^    Ref prefix_ref;$/;"	v
RefKind	$C2_ROOT/ir/ref.c2	/^public type RefKind enum u8 {$/;"	t
RefList	$C2_ROOT/generator/ir/ref_list.c2	/^public type RefList struct {$/;"	t
RefSrc	$C2_ROOT/generator/c2refs.c2	/^public type RefSrc struct @(packed) {$/;"	t
RefUsesFn	$C2_ROOT/generator/c2refs.c2	/^public type RefUsesFn fn void (void* arg, const Dest* res);$/;"	t
Refs	$C2_ROOT/generator/c2refs.c2	/^public type Refs struct @(opaque) {$/;"	t
RegOff	$C2_ROOT/libs/libc/regex.c2i	/^type RegOff c_int @(cname="regoff_t");$/;"	t
Regex_t	$C2_ROOT/libs/libc/regex.c2i	/^type Regex_t struct @(cname="regex_t") {$/;"	t
Register	$C2_ROOT/ir/ref.c2	/^    return r.kind == RefKind.Register;$/;"	v
RegisterAttrFn	$C2_ROOT/plugins/plugin_info.c2	/^public type RegisterAttrFn fn bool (void* arg, u32 name, ast.AttrHandlerFn func, void* arg2);$/;"	t
Regmatch_t	$C2_ROOT/libs/libc/regex.c2i	/^type Regmatch_t struct @(cname="regmatch_t") {$/;"	t
Rem	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        kind = InstrKind.Rem;$/;"	v
Rem	$C2_ROOT/ir/instr_kind.c2	/^    Rem,$/;"	v
RemAssign	$C2_ROOT/ast/binary_operator.c2	/^    RemAssign,$/;"	v
RemAssign	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.RemAssign]   = Assignment,$/;"	v
RemAssign	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.RemAssign]   = Assignment,$/;"	v
Remainder	$C2_ROOT/ast/binary_operator.c2	/^    Remainder,$/;"	v
Remainder	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.Remainder]   = Multiplicative,$/;"	v
Remainder	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.Remainder]   = Multiplicative,$/;"	v
RenderFlags	$C2_ROOT/libs/sdl2/sdl.c2i	/^type RenderFlags enum u32 {$/;"	t
Renderer	$C2_ROOT/libs/sdl2/sdl.c2i	/^type Renderer struct @(opaque, cname="SDL_Renderer");$/;"	t
RendererFlip	$C2_ROOT/libs/sdl2/sdl.c2i	/^type RendererFlip enum u8 {$/;"	t
Req	$C2_ROOT/libs/libc/net_if.c2i	/^type Req struct @(cname="ifreq") {$/;"	t
ResourceState	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ResourceState enum u32 @(cname="sg_resource_state") {$/;"	t
ResourceStats	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ResourceStats struct @(cname="sg_resource_stats") {$/;"	t
ResponseCb	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type ResponseCb fn void(Html5FetchResponse*);$/;"	t
Ret	$C2_ROOT/ir/instr.c2	/^    return i.getKind() == InstrKind.Ret;$/;"	v
Ret	$C2_ROOT/ir/instr_kind.c2	/^    Ret,$/;"	v
Return	$C2_ROOT/analyser/module_analyser_stmt.c2	/^const FlowBits FlowReturn    = 1 << Flow.Return;$/;"	v
Return	$C2_ROOT/ast/ast_evaluator.c2	/^        return Cont.Return;$/;"	v
Return	$C2_ROOT/ast/stmt.c2	/^    Return,$/;"	v
ReturnStmt	$C2_ROOT/ast/return_stmt.c2	/^public type ReturnStmt struct @(opaque) {$/;"	t
ReturnStmtBits	$C2_ROOT/ast/return_stmt.c2	/^type ReturnStmtBits struct {$/;"	t
ReturnStmtBits	$C2_ROOT/ast/stmt.c2	/^        ReturnStmtBits returnStmtBits;$/;"	v
RevIndex	$C2_ROOT/ir/rev_list.c2	/^public type RevIndex struct {$/;"	t
RevList	$C2_ROOT/ir/context.c2	/^    RevList revlist;$/;"	v
RevList	$C2_ROOT/ir/rev_list.c2	/^public type RevList struct {$/;"	t
Rgui	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Rgui    = 0x0800,$/;"	v
Ring	$C2_ROOT/libs/io_uring/io_uring.c2i	/^type Ring struct @(cname="io_uring") {$/;"	t
Rloss	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u8 Rloss;$/;"	v
Rmask	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u32 Rmask;$/;"	v
Rng_fn	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Rng_fn fn c_int(void *, c_uchar *, c_size);$/;"	t
Rpo	$C2_ROOT/ir/rpo.c2	/^public type Rpo struct {$/;"	t
Rshift	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u8 Rshift;$/;"	v
SAMPLER_POOL_EXHAUSTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SAMPLER_POOL_EXHAUSTED = 117,$/;"	v
SCROLLLOCK	$C2_ROOT/libs/sdl2/sdl.c2i	/^    SCROLLLOCK = 71,$/;"	v
SCROLL_LOCK	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    SCROLL_LOCK = 281,$/;"	v
SELECT	$C2_ROOT/libs/sdl2/sdl.c2i	/^    SELECT = 119,$/;"	v
SEMICOLON	$C2_ROOT/libs/sdl2/sdl.c2i	/^    SEMICOLON = 51,$/;"	v
SEMICOLON	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    SEMICOLON = 59,$/;"	v
SEMI_COLON	$C2_ROOT/parser/c2_tokenizer.c2	/^    SEMI_COLON,$/;"	v
SEND	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    SEND,$/;"	v
SENDMSG	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    SENDMSG,$/;"	v
SEPARATOR	$C2_ROOT/libs/sdl2/sdl.c2i	/^    SEPARATOR = 159,$/;"	v
SHADERDESC_TOO_MANY_COMPUTESTAGE_STORAGEBUFFERS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SHADERDESC_TOO_MANY_COMPUTESTAGE_STORAGEBUFFERS = 130,$/;"	v
SHADERDESC_TOO_MANY_COMPUTESTAGE_STORAGEIMAGES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SHADERDESC_TOO_MANY_COMPUTESTAGE_STORAGEIMAGES = 133,$/;"	v
SHADERDESC_TOO_MANY_COMPUTESTAGE_TEXTURES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SHADERDESC_TOO_MANY_COMPUTESTAGE_TEXTURES = 127,$/;"	v
SHADERDESC_TOO_MANY_COMPUTESTAGE_TEXTURESAMPLERPAIRS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SHADERDESC_TOO_MANY_COMPUTESTAGE_TEXTURESAMPLERPAIRS = 136,$/;"	v
SHADERDESC_TOO_MANY_FRAGMENTSTAGE_STORAGEBUFFERS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SHADERDESC_TOO_MANY_FRAGMENTSTAGE_STORAGEBUFFERS = 129,$/;"	v
SHADERDESC_TOO_MANY_FRAGMENTSTAGE_STORAGEIMAGES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SHADERDESC_TOO_MANY_FRAGMENTSTAGE_STORAGEIMAGES = 132,$/;"	v
SHADERDESC_TOO_MANY_FRAGMENTSTAGE_TEXTURES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SHADERDESC_TOO_MANY_FRAGMENTSTAGE_TEXTURES = 126,$/;"	v
SHADERDESC_TOO_MANY_FRAGMENTSTAGE_TEXTURESAMPLERPAIRS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SHADERDESC_TOO_MANY_FRAGMENTSTAGE_TEXTURESAMPLERPAIRS = 135,$/;"	v
SHADERDESC_TOO_MANY_VERTEXSTAGE_STORAGEBUFFERS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SHADERDESC_TOO_MANY_VERTEXSTAGE_STORAGEBUFFERS = 128,$/;"	v
SHADERDESC_TOO_MANY_VERTEXSTAGE_STORAGEIMAGES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SHADERDESC_TOO_MANY_VERTEXSTAGE_STORAGEIMAGES = 131,$/;"	v
SHADERDESC_TOO_MANY_VERTEXSTAGE_TEXTURES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SHADERDESC_TOO_MANY_VERTEXSTAGE_TEXTURES = 125,$/;"	v
SHADERDESC_TOO_MANY_VERTEXSTAGE_TEXTURESAMPLERPAIRS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SHADERDESC_TOO_MANY_VERTEXSTAGE_TEXTURESAMPLERPAIRS = 134,$/;"	v
SHADER_POOL_EXHAUSTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SHADER_POOL_EXHAUSTED = 118,$/;"	v
SHORT2	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SHORT2 = 17,$/;"	v
SHORT2N	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SHORT2N = 18,$/;"	v
SHORT4	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SHORT4 = 21,$/;"	v
SHORT4N	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SHORT4N = 22,$/;"	v
SHUTDOWN	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    SHUTDOWN,$/;"	v
SIGCHLD	$C2_ROOT/libs/libc/csignal.c2i	/^const c_int SIGCLD      = SIGCHLD;$/;"	v
SIGIO	$C2_ROOT/libs/libc/csignal.c2i	/^const c_int SIGPOLL     = SIGIO;$/;"	v
SINT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SINT = 3,$/;"	v
SLASH	$C2_ROOT/libs/sdl2/sdl.c2i	/^    SLASH = 56,$/;"	v
SLASH	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    SLASH = 47,$/;"	v
SLASH	$C2_ROOT/parser/c2_tokenizer.c2	/^    SLASH,$/;"	v
SLEEP	$C2_ROOT/libs/sdl2/sdl.c2i	/^    SLEEP = 282,$/;"	v
SPACE	$C2_ROOT/libs/sdl2/sdl.c2i	/^    SPACE = 44,$/;"	v
SPACE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    SPACE = 32,$/;"	v
SPLICE	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    SPLICE,$/;"	v
SQUOTE	$C2_ROOT/parser/c2_tokenizer.c2	/^    SQUOTE,$/;"	v
SRC_ALPHA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SRC_ALPHA = 5,$/;"	v
SRC_ALPHA_SATURATED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SRC_ALPHA_SATURATED = 11,$/;"	v
SRC_COLOR	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SRC_COLOR = 3,$/;"	v
SRGB8A8	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SRGB8A8 = 24,$/;"	v
STAR	$C2_ROOT/parser/c2_tokenizer.c2	/^    STAR,$/;"	v
STATX	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    STATX,$/;"	v
STD140	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    STD140 = 2,$/;"	v
STOP	$C2_ROOT/libs/sdl2/sdl.c2i	/^    STOP = 120,$/;"	v
STORAGEBUFFER	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    STORAGEBUFFER = 1,$/;"	v
STORAGEIMAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    STORAGEIMAGE = 2,$/;"	v
STORE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    STORE = 1,$/;"	v
STYLUS	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    STYLUS = 2,$/;"	v
SUBTRACT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SUBTRACT = 2,$/;"	v
SUSPENDED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    SUSPENDED = 19,$/;"	v
SYMLINKAT	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    SYMLINKAT,$/;"	v
SYNC_FILE_RANGE	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    SYNC_FILE_RANGE,$/;"	v
SYSREQ	$C2_ROOT/libs/sdl2/sdl.c2i	/^    SYSREQ = 154,$/;"	v
S_IFDIR	$C2_ROOT/common/file/file_utils.c2	/^    return !stat(dirname, &statbuf) && (statbuf.st_mode & S_IFMT) == S_IFDIR;$/;"	v
S_IFREG	$C2_ROOT/common/file/file_utils.c2	/^    return !stat(filename, &statbuf) && (statbuf.st_mode & S_IFMT) == S_IFREG;$/;"	v
SaFamily	$C2_ROOT/libs/libc/sys_socket.c2i	/^type SaFamily u16 @(cname="sa_family_t");$/;"	t
Sampler	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Sampler struct @(cname="sg_sampler") {$/;"	t
SamplerDesc	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type SamplerDesc struct @(cname="sg_sampler_desc") {$/;"	t
SamplerInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type SamplerInfo struct @(cname="sg_sampler_info") {$/;"	t
SamplerType	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type SamplerType enum u32 @(cname="sg_sampler_type") {$/;"	t
Sbuf__	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^> typedef struct Sbuf___ Sbuf__;$/;"	v
Sbuf__	$C2_ROOT/libs/libc/stdio.c2i	/^type Sbuf__ struct {$/;"	t
Scalar	$C2_ROOT/common/yaml/yaml_data.c2	/^    Scalar,$/;"	v
Scalar	$C2_ROOT/common/yaml/yaml_parser.c2	/^    n.kind = NodeKind.Scalar;$/;"	v
ScaleMode	$C2_ROOT/libs/sdl2/sdl.c2i	/^type ScaleMode enum u8 {$/;"	t
Scancode	$C2_ROOT/libs/sdl2/sdl.c2i	/^type Scancode enum u16 {$/;"	t
Scope	$C2_ROOT/analyser/scope.c2	/^public type Scope struct @(opaque) {$/;"	t
Scroll	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Scroll  = 0x8000,$/;"	v
Section	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.Section]      = AttrReq.String,$/;"	v
Semicolon	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.Semicolon;$/;"	v
Semicolon	$C2_ROOT/parser/token.c2	/^    [Kind.Semicolon]        = ";",$/;"	v
Sequence	$C2_ROOT/common/yaml/yaml_data.c2	/^    Sequence,$/;"	v
Set	$C2_ROOT/compiler/c2recipe_parser.c2	/^type Set struct {$/;"	t
SetUse	$C2_ROOT/compiler/c2recipe_parser.c2	/^    result.kind = Kind.SetUse;$/;"	v
Sha512_context	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Sha512_context struct @(cname="mbedtls_sha512_context") {$/;"	t
Shader	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Shader struct @(cname="sg_shader") {$/;"	t
ShaderAttrBaseType	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ShaderAttrBaseType enum u32 @(cname="sg_shader_attr_base_type") {$/;"	t
ShaderDesc	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ShaderDesc struct @(cname="sg_shader_desc") {$/;"	t
ShaderFunction	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ShaderFunction struct @(cname="sg_shader_function") {$/;"	t
ShaderInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ShaderInfo struct @(cname="sg_shader_info") {$/;"	t
ShaderSampler	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ShaderSampler struct @(cname="sg_shader_sampler") {$/;"	t
ShaderStage	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ShaderStage enum u32 @(cname="sg_shader_stage") {$/;"	t
ShaderStorageBufferView	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ShaderStorageBufferView struct @(cname="sg_shader_storage_buffer_view") {$/;"	t
ShaderStorageImageView	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ShaderStorageImageView struct @(cname="sg_shader_storage_image_view") {$/;"	t
ShaderTextureSamplerPair	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ShaderTextureSamplerPair struct @(cname="sg_shader_texture_sampler_pair") {$/;"	t
ShaderTextureView	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ShaderTextureView struct @(cname="sg_shader_texture_view") {$/;"	t
ShaderUniformBlock	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ShaderUniformBlock struct @(cname="sg_shader_uniform_block") {$/;"	t
ShaderVertexAttr	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ShaderVertexAttr struct @(cname="sg_shader_vertex_attr") {$/;"	t
ShaderView	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ShaderView struct @(cname="sg_shader_view") {$/;"	t
ShiftLeft	$C2_ROOT/ast/binary_operator.c2	/^    ShiftLeft,$/;"	v
ShiftLeft	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.ShiftLeft]   = Shift,$/;"	v
ShiftLeft	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.ShiftLeft]   = Shift,$/;"	v
ShiftRight	$C2_ROOT/ast/binary_operator.c2	/^    ShiftRight,$/;"	v
ShiftRight	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.ShiftRight]  = Shift,$/;"	v
ShiftRight	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.ShiftRight]  = Shift,$/;"	v
Shl	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        k = InstrKind.Shl;$/;"	v
Shl	$C2_ROOT/ir/instr.c2	/^    return k >= InstrKind.Add && k <= InstrKind.Shl;$/;"	v
Shl	$C2_ROOT/ir/instr_kind.c2	/^    Shl,$/;"	v
ShlAssign	$C2_ROOT/ast/binary_operator.c2	/^    ShlAssign,$/;"	v
ShlAssign	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.ShlAssign]   = Assignment,$/;"	v
ShlAssign	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.ShlAssign]   = Assignment,$/;"	v
Shr	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        k = InstrKind.Shr;$/;"	v
Shr	$C2_ROOT/ir/instr_kind.c2	/^    Shr,$/;"	v
ShrAssign	$C2_ROOT/ast/binary_operator.c2	/^    ShrAssign,$/;"	v
ShrAssign	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.ShrAssign]   = Assignment,$/;"	v
ShrAssign	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.ShrAssign]   = Assignment,$/;"	v
SigActionAction	$C2_ROOT/libs/libc/csignal.c2i	/^type SigActionAction fn void(i32, Siginfo_t*, void*);$/;"	t
SigActionRestorer	$C2_ROOT/libs/libc/csignal.c2i	/^type SigActionRestorer fn void();$/;"	t
Sigaction	$C2_ROOT/libs/libc/csignal.c2i	/^type Sigaction struct {$/;"	t
SigactionHandler	$C2_ROOT/libs/libc/csignal.c2i	/^type SigactionHandler fn void(i32);$/;"	t
Siginfo	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^type Siginfo struct {$/;"	t
Siginfo_t	$C2_ROOT/libs/libc/csignal.c2i	/^type Siginfo_t struct @(cname="siginfo_t") {$/;"	t
Sigset	$C2_ROOT/libs/libc/csignal.c2i	/^type Sigset struct {$/;"	t
Single_Quoted_Scalar	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    result.kind = (delim == '"') ? TokenKind.Double_Quoted_Scalar : TokenKind.Single_Quoted_Scal/;"	v
Sizeof	$C2_ROOT/ast/builtin_expr.c2	/^    Sizeof,$/;"	v
Sizes	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^type Sizes struct @(cname="sshape_sizes_t") {$/;"	t
SizesItem	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^type SizesItem struct @(cname="sshape_sizes_item_t") {$/;"	t
Slash	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.Slash]   = Multiplicative,$/;"	v
Slash	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.Slash;$/;"	v
Slash	$C2_ROOT/parser/token.c2	/^    [Kind.Slash]            = "\/",$/;"	v
SlashEqual	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.SlashEqual]     = DivAssign,$/;"	v
SlashEqual	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.SlashEqual;$/;"	v
SlashEqual	$C2_ROOT/parser/token.c2	/^    [Kind.SlashEqual]       = "\/=",$/;"	v
Slot	$C2_ROOT/ir/ref.c2	/^    return r.kind == RefKind.Slot;$/;"	v
SlotCollector	$C2_ROOT/ir/context.c2	/^    SlotCollector collector;$/;"	v
SlotCollector	$C2_ROOT/ir/slot_collector.c2	/^public type SlotCollector struct {$/;"	t
SlotInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type SlotInfo struct @(cname="sg_slot_info") {$/;"	t
SlotValues	$C2_ROOT/ir/context.c2	/^    SlotValues slot_values;$/;"	v
SlotValues	$C2_ROOT/ir/slot_values.c2	/^public type SlotValues struct {$/;"	t
SlotWrite	$C2_ROOT/ir/slot_writes_map.c2	/^public type SlotWrite struct {$/;"	t
Sockaddr	$C2_ROOT/libs/libc/sys_socket.c2i	/^type Sockaddr struct @(cname="sockaddr") {$/;"	t
Sockaddr_in	$C2_ROOT/libs/libc/sys_socket.c2i	/^type Sockaddr_in struct @(cname="sockaddr_in") {$/;"	t
Sockaddr_ll	$C2_ROOT/libs/libc/sys_socket.c2i	/^type Sockaddr_ll struct @(cname="sockaddr_ll") {$/;"	t
Sockaddr_un	$C2_ROOT/libs/libc/sys_socket.c2i	/^type Sockaddr_un struct @(cname="sockaddr_un") {$/;"	t
SocketType	$C2_ROOT/libs/libc/sys_socket.c2i	/^type SocketType enum u32 @(cname="__socket_type") {$/;"	t
Sorter	$C2_ROOT/common/dsm_sorter.c2	/^public type Sorter struct {$/;"	t
Sorter	$C2_ROOT/generator/ir/array_init_sorter.c2	/^public type Sorter struct {$/;"	t
SourceMgr	$C2_ROOT/common/source_mgr.c2	/^public type SourceMgr struct @(opaque) {$/;"	t
Specifier	$C2_ROOT/analyser_utils/printf_utils.c2	/^public type Specifier enum u8 {$/;"	t
Speed	$C2_ROOT/libs/libc/ctermios.c2i	/^type Speed c_uint;$/;"	t
Sphere	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^type Sphere struct @(cname="sshape_sphere_t") {$/;"	t
SplitEdge	$C2_ROOT/ir/inserter.c2	/^public type SplitEdge struct {$/;"	t
Sq	$C2_ROOT/libs/io_uring/io_uring.c2i	/^type Sq struct @(cname="io_uring_sq") {$/;"	t
Sqe	$C2_ROOT/libs/io_uring/io_uring.c2i	/^type Sqe struct @(cname="io_uring_sqe") {$/;"	t
SqringOffsets	$C2_ROOT/libs/io_uring/io_uring.c2i	/^type SqringOffsets struct @(cname="io_sqring_offsets") {$/;"	t
SrcLoc	$C2_ROOT/analyser/conversion_checker.c2	/^    SrcLoc loc;$/;"	v
SrcLoc	$C2_ROOT/analyser/init_checker.c2	/^    SrcLoc loc;$/;"	v
SrcLoc	$C2_ROOT/analyser/label_vector.c2	/^    SrcLoc loc;$/;"	v
SrcLoc	$C2_ROOT/analyser/module_analyser_call.c2	/^    SrcLoc loc;$/;"	v
SrcLoc	$C2_ROOT/analyser/module_analyser_init.c2	/^        SrcLoc loc;$/;"	v
SrcLoc	$C2_ROOT/analyser/module_analyser_switch.c2	/^                                 SrcLoc loc,$/;"	v
SrcLoc	$C2_ROOT/ast/alias_type_decl.c2	/^                                                SrcLoc loc,$/;"	v
SrcLoc	$C2_ROOT/ast/array_designated_init_expr.c2	/^                                                                    SrcLoc loc,$/;"	v
SrcLoc	$C2_ROOT/ast/array_value.c2	/^    SrcLoc loc;$/;"	v
SrcLoc	$C2_ROOT/ast/asm_stmt.c2	/^                                    SrcLoc loc,$/;"	v
SrcLoc	$C2_ROOT/ast/assert_stmt.c2	/^                                          SrcLoc loc,$/;"	v
SrcLoc	$C2_ROOT/ast/call_expr.c2	/^    SrcLoc endLoc;$/;"	v
SrcLoc	$C2_ROOT/ast/conditional_operator.c2	/^    SrcLoc colonLoc;$/;"	v
SrcLoc	$C2_ROOT/ast/decl.c2	/^        SrcLoc loc;$/;"	v
SrcLoc	$C2_ROOT/ast/enum_constant_decl.c2	/^                                                      SrcLoc loc,$/;"	v
SrcLoc	$C2_ROOT/ast/enum_type_decl.c2	/^                                              SrcLoc loc,$/;"	v
SrcLoc	$C2_ROOT/ast/expr.c2	/^                  SrcLoc loc,$/;"	v
SrcLoc	$C2_ROOT/ast/field_designated_init_expr.c2	/^                                                                  SrcLoc loc,$/;"	v
SrcLoc	$C2_ROOT/ast/function_decl.c2	/^    SrcLoc template_loc;$/;"	v
SrcLoc	$C2_ROOT/ast/import_decl.c2	/^    SrcLoc alias_loc;$/;"	v
SrcLoc	$C2_ROOT/ast/init_list_expr.c2	/^    SrcLoc endLoc;$/;"	v
SrcLoc	$C2_ROOT/ast/static_assert.c2	/^                                                      SrcLoc loc,$/;"	v
SrcLoc	$C2_ROOT/ast/stmt.c2	/^    SrcLoc loc;$/;"	v
SrcLoc	$C2_ROOT/ast/struct_type_decl.c2	/^                                                  SrcLoc loc,$/;"	v
SrcLoc	$C2_ROOT/ast/switch_case.c2	/^    SrcLoc loc;$/;"	v
SrcLoc	$C2_ROOT/ast/switch_stmt.c2	/^                                          SrcLoc loc,$/;"	v
SrcLoc	$C2_ROOT/ast/type_expr.c2	/^                                    SrcLoc loc,$/;"	v
SrcLoc	$C2_ROOT/ast/type_ref.c2	/^    SrcLoc loc;$/;"	v
SrcLoc	$C2_ROOT/ast/var_decl.c2	/^    SrcLoc loc;$/;"	v
SrcLoc	$C2_ROOT/ast_utils/attr.c2	/^    SrcLoc loc;$/;"	v
SrcLoc	$C2_ROOT/ast_utils/src_loc.c2	/^public type SrcLoc u32;$/;"	t
SrcLoc	$C2_ROOT/common/build_target.c2	/^    SrcLoc loc;$/;"	v
SrcLoc	$C2_ROOT/common/diagnostics.c2	/^                       SrcLoc sloc,$/;"	v
SrcLoc	$C2_ROOT/compiler/c2recipe_parser.c2	/^    SrcLoc loc_start;$/;"	v
SrcLoc	$C2_ROOT/generator/c/c_generator_call.c2	/^                SrcLoc format_loc;$/;"	v
SrcLoc	$C2_ROOT/parser/ast_builder.c2	/^                                   SrcLoc mod_loc,$/;"	v
SrcLoc	$C2_ROOT/parser/c2_parser.c2	/^    SrcLoc prev_loc;$/;"	v
SrcLoc	$C2_ROOT/parser/c2_parser_type.c2	/^            SrcLoc loc;$/;"	v
SrcLoc	$C2_ROOT/parser/c2_tokenizer.c2	/^    SrcLoc loc_start;$/;"	v
SrcLoc	$C2_ROOT/parser/token.c2	/^    SrcLoc loc;$/;"	v
SrcRange	$C2_ROOT/ast_utils/src_loc.c2	/^public type SrcRange struct {$/;"	t
SrcRange	$C2_ROOT/common/diagnostics.c2	/^                       SrcRange range,$/;"	v
Ssl_config	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ssl_config struct @(cname="mbedtls_ssl_config") {$/;"	t
Ssl_context	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ssl_context struct @(cname="mbedtls_ssl_context") {$/;"	t
Ssl_get_timer_t	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ssl_get_timer_t fn c_int (void* ctx) @(cname="mbedtls_ssl_get_timer_t");$/;"	t
Ssl_handshake_params	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ssl_handshake_params struct @(opaque, cname="mbedtls_ssl_handshake_params");$/;"	t
Ssl_key_cert	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ssl_key_cert struct @(opaque, cname="mbedtls_ssl_key_cert");$/;"	t
Ssl_recv_t	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ssl_recv_t fn c_int(void *ctx, c_uchar *buf, c_size len) @(cname="mbedtls_ssl_recv_t");$/;"	t
Ssl_recv_timeout_t	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ssl_recv_timeout_t fn c_int(void *ctx, c_uchar *buf, c_size len, c_uint timeout) @(cname="m/;"	t
Ssl_send_t	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ssl_send_t fn c_int(void *ctx, const c_char *buf, c_size len) @(cname="mbedtls_ssl_send_t")/;"	t
Ssl_session	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ssl_session struct @(cname="mbedtls_ssl_session") {$/;"	t
Ssl_set_timer_t	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ssl_set_timer_t fn void (void* ctx, c_uint int_ms, c_uint fin_ms) @(cname="mbedtls_ssl_set_/;"	t
Ssl_transform	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Ssl_transform struct @(opaque, cname="mbedtls_ssl_transform");$/;"	t
StackLayer	$C2_ROOT/analyser/module_analyser.c2	/^type StackLayer struct {$/;"	t
StackLevel	$C2_ROOT/common/yaml/yaml_data.c2	/^type StackLevel struct {$/;"	t
StackVar	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^public type StackVar struct {$/;"	t
Star	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.Star] = 7,$/;"	v
Star	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.Star;$/;"	v
Star	$C2_ROOT/parser/token.c2	/^    [Kind.Star]             = "*",$/;"	v
StarEqual	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.StarEqual]      = MulAssign,$/;"	v
StarEqual	$C2_ROOT/parser/c2_tokenizer.c2	/^                result.kind = Kind.StarEqual;$/;"	v
StarEqual	$C2_ROOT/parser/token.c2	/^    [Kind.StarEqual]        = "*=",$/;"	v
Stat	$C2_ROOT/ast/statistics.c2	/^type Stat struct {$/;"	t
Stat	$C2_ROOT/common/file/file_utils.c2	/^    Stat statbuf;$/;"	v
Stat	$C2_ROOT/common/file/reader.c2	/^    Stat statbuf;$/;"	v
Stat	$C2_ROOT/common/process_utils.c2	/^    Stat statbuf;$/;"	v
Stat	$C2_ROOT/common/utils.c2	/^    Stat buf;$/;"	v
Stat	$C2_ROOT/generator/c2refs.c2	/^    Stat statbuf;$/;"	v
Stat	$C2_ROOT/libs/libc/sys_stat.c2i	/^type Stat struct @(cname="stat", no_typedef) {$/;"	t
State	$C2_ROOT/libs/lua/lua.c2i	/^type State struct @(cname="lua_State") { }$/;"	t
Static	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Static,$/;"	v
StaticAssert	$C2_ROOT/ast/static_assert.c2	/^public type StaticAssert struct @(opaque) {$/;"	t
StaticAssertList	$C2_ROOT/ast/ast.c2	/^    StaticAssertList static_asserts;$/;"	v
StaticAssertList	$C2_ROOT/ast/static_assert_list.c2	/^type StaticAssertList struct {$/;"	t
StaticAssertVisitor	$C2_ROOT/ast/ast.c2	/^public type StaticAssertVisitor fn void (void* arg, StaticAssert* d);$/;"	t
StaticLibrary	$C2_ROOT/common/build_target.c2	/^    StaticLibrary,$/;"	v
StaticLibrary	$C2_ROOT/common/component.c2	/^    StaticLibrary,$/;"	v
StaticLibrary	$C2_ROOT/compiler/c2recipe_parser.c2	/^    build_target.Kind kind = build_target.Kind.StaticLibrary;$/;"	v
StaticLibrary	$C2_ROOT/compiler/compiler.c2	/^        return component.Kind.StaticLibrary;$/;"	v
StaticSlot	$C2_ROOT/ir/slot_collector.c2	/^public type StaticSlot struct {$/;"	t
StaticTypeFunc	$C2_ROOT/analyser/module_analyser_member.c2	/^            *ck = CallKind.StaticTypeFunc;$/;"	v
StaticTypeFunc	$C2_ROOT/ast/function_decl.c2	/^    StaticTypeFunc,$/;"	v
Stats	$C2_ROOT/ast/statistics.c2	/^type Stats struct {$/;"	t
Stats	$C2_ROOT/ast/utils.c2	/^    Stats stats;$/;"	v
Stats	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^type Stats struct {$/;"	t
Stats	$C2_ROOT/plugins/unit_test2.c2	/^public type Stats struct {$/;"	t
StdlibCompareFn	$C2_ROOT/libs/libc/stdlib.c2i	/^type StdlibCompareFn fn i32(const void*, const void*) @(cname="__compar_fn_t");$/;"	t
StencilAttachmentAction	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type StencilAttachmentAction struct @(cname="sg_stencil_attachment_action") {$/;"	t
StencilFaceState	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type StencilFaceState struct @(cname="sg_stencil_face_state") {$/;"	t
StencilOp	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type StencilOp enum u32 @(cname="sg_stencil_op") {$/;"	t
StencilState	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type StencilState struct @(cname="sg_stencil_state") {$/;"	t
Stmt	$C2_ROOT/ast/asm_stmt.c2	/^    Stmt base;$/;"	v
Stmt	$C2_ROOT/ast/assert_stmt.c2	/^    Stmt base;$/;"	v
Stmt	$C2_ROOT/ast/break_stmt.c2	/^    Stmt base;$/;"	v
Stmt	$C2_ROOT/ast/compound_stmt.c2	/^    Stmt base;$/;"	v
Stmt	$C2_ROOT/ast/continue_stmt.c2	/^    Stmt base;$/;"	v
Stmt	$C2_ROOT/ast/decl_stmt.c2	/^    Stmt base;$/;"	v
Stmt	$C2_ROOT/ast/expr.c2	/^    Stmt base;$/;"	v
Stmt	$C2_ROOT/ast/fallthrough_stmt.c2	/^    Stmt base;$/;"	v
Stmt	$C2_ROOT/ast/for_stmt.c2	/^    Stmt base;$/;"	v
Stmt	$C2_ROOT/ast/goto_stmt.c2	/^    Stmt base;$/;"	v
Stmt	$C2_ROOT/ast/if_stmt.c2	/^    Stmt base;$/;"	v
Stmt	$C2_ROOT/ast/label_stmt.c2	/^    Stmt base;$/;"	v
Stmt	$C2_ROOT/ast/return_stmt.c2	/^    Stmt base;$/;"	v
Stmt	$C2_ROOT/ast/stmt.c2	/^public type Stmt struct @(opaque) {$/;"	t
Stmt	$C2_ROOT/ast/switch_stmt.c2	/^    Stmt base;$/;"	v
Stmt	$C2_ROOT/ast/while_stmt.c2	/^    Stmt base;$/;"	v
StmtBits	$C2_ROOT/ast/stmt.c2	/^type StmtBits struct {$/;"	t
StmtKind	$C2_ROOT/ast/stmt.c2	/^public type StmtKind enum u8 {$/;"	t
Store1	$C2_ROOT/ir/instr_kind.c2	/^    Store1,$/;"	v
Store2	$C2_ROOT/ir/instr_kind.c2	/^    Store2,$/;"	v
Store4	$C2_ROOT/ir/instr_kind.c2	/^    Store4,$/;"	v
Store8	$C2_ROOT/ir/instr_kind.c2	/^    Store8,$/;"	v
StoreAction	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type StoreAction enum u32 @(cname="sg_store_action") {$/;"	t
StreamCb	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^type StreamCb fn void(c_float*, c_int, c_int);$/;"	t
StreamDataCb	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^type StreamDataCb fn void(c_float*, c_int, c_int, void*);$/;"	t
Streaming	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Streaming,$/;"	v
String	$C2_ROOT/analyser_utils/printf_utils.c2	/^        spec = Specifier.String;$/;"	v
String	$C2_ROOT/ast_utils/attr.c2	/^    String,$/;"	v
String	$C2_ROOT/parser/c2_parser.c2	/^                a.value_kind = attr.ValueKind.String;$/;"	v
StringList	$C2_ROOT/generator/c/c_generator.c2	/^    StringList funcnames;$/;"	v
StringList	$C2_ROOT/generator/c/c_generator_trace.c2	/^type StringList struct {$/;"	t
StringLiteral	$C2_ROOT/ast/expr.c2	/^    return e.getKind() == ExprKind.StringLiteral;$/;"	v
StringLiteral	$C2_ROOT/ast/string_literal.c2	/^public type StringLiteral struct @(opaque) {$/;"	t
StringLiteral	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.StringLiteral] = 5,$/;"	v
StringLiteral	$C2_ROOT/parser/c2_tokenizer.c2	/^    result.kind = Kind.StringLiteral;$/;"	v
StringLiteral	$C2_ROOT/parser/token.c2	/^    [Kind.StringLiteral]    = "string",$/;"	v
StringLiteralBits	$C2_ROOT/ast/stmt.c2	/^        StringLiteralBits stringLiteralBits;$/;"	v
StringLiteralBits	$C2_ROOT/ast/string_literal.c2	/^type StringLiteralBits struct {$/;"	t
StringTypePool	$C2_ROOT/ast/string_type_pool.c2	/^type StringTypePool struct {$/;"	t
StringTypePool	$C2_ROOT/ast/utils.c2	/^    StringTypePool string_types;$/;"	v
StringTypeSlot	$C2_ROOT/ast/string_type_pool.c2	/^type StringTypeSlot struct {$/;"	t
Struct	$C2_ROOT/ast/type.c2	/^    Struct,$/;"	v
Struct	$C2_ROOT/ir_examples/members.c2	/^type Struct struct {$/;"	t
StructFieldInitChecker	$C2_ROOT/analyser/struct_field_init_checker.c2	/^type StructFieldInitChecker struct {$/;"	t
StructLayout	$C2_ROOT/ast/struct_type_decl.c2	/^public type StructLayout struct {$/;"	t
StructMember	$C2_ROOT/analyser/module_analyser_expr.c2	/^            kind = IdentifierKind.StructMember;$/;"	v
StructMember	$C2_ROOT/ast/var_decl.c2	/^    return d.getKind() == VarDeclKind.StructMember;$/;"	v
StructMemberLayout	$C2_ROOT/ast/struct_type_decl.c2	/^public type StructMemberLayout struct {$/;"	t
StructMemberType	$C2_ROOT/ast/type_ref.c2	/^    r.flags.kind = TypeRefKind.StructMemberType;$/;"	v
StructType	$C2_ROOT/ast/decl.c2	/^    return d.getKind() == DeclKind.StructType;$/;"	v
StructType	$C2_ROOT/ast/struct_type.c2	/^public type StructType struct @(opaque) {$/;"	t
StructTypeDecl	$C2_ROOT/ast/struct_type_decl.c2	/^public type StructTypeDecl struct @(opaque) {$/;"	t
StructTypeDeclBits	$C2_ROOT/ast/decl.c2	/^        StructTypeDeclBits structTypeDeclBits;$/;"	v
StructTypeDeclBits	$C2_ROOT/ast/struct_type_decl.c2	/^type StructTypeDeclBits struct {$/;"	t
SuSeconds	$C2_ROOT/libs/libc/sys_time.c2i	/^type SuSeconds c_long @(cname="suseconds_t");$/;"	t
Sub	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        kind = InstrKind.Sub;$/;"	v
Sub	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^            k = InstrKind.Sub;$/;"	v
Sub	$C2_ROOT/ir/instr_kind.c2	/^    Sub,$/;"	v
Sub	$C2_ROOT/ir_examples/types.c2	/^type Sub struct {$/;"	t
SubAssign	$C2_ROOT/ast/binary_operator.c2	/^    SubAssign,$/;"	v
SubAssign	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.SubAssign]   = Assignment,$/;"	v
SubAssign	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.SubAssign]   = Assignment,$/;"	v
Subtract	$C2_ROOT/ast/binary_operator.c2	/^    Subtract,$/;"	v
Subtract	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.Subtract]    = Additive,$/;"	v
Subtract	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.Subtract]    = Additive,$/;"	v
Surface	$C2_ROOT/libs/sdl2/sdl.c2i	/^type Surface struct @(cname="SDL_Surface") {$/;"	t
Swapchain	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Swapchain struct @(cname="sg_swapchain") {$/;"	t
Switch	$C2_ROOT/ast/stmt.c2	/^    Switch,$/;"	v
Switch	$C2_ROOT/ir/instr.c2	/^    return i.getKind() >= InstrKind.Switch;$/;"	v
Switch	$C2_ROOT/ir/instr_kind.c2	/^    Switch,$/;"	v
SwitchCase	$C2_ROOT/ast/switch_case.c2	/^public type SwitchCase struct @(opaque) {$/;"	t
SwitchCase	$C2_ROOT/generator/ir/ir_generator_switch.c2	/^    BlockKind kind = sc.isDefault() ? BlockKind.SwitchDefault : BlockKind.SwitchCase;$/;"	v
SwitchCase	$C2_ROOT/ir/block.c2	/^    SwitchCase,$/;"	v
SwitchCaseBits	$C2_ROOT/ast/switch_case.c2	/^type SwitchCaseBits struct {$/;"	t
SwitchCond	$C2_ROOT/ir/block.c2	/^    SwitchCond,$/;"	v
SwitchDefault	$C2_ROOT/ir/block.c2	/^    SwitchDefault,$/;"	v
SwitchJoin	$C2_ROOT/ir/block.c2	/^    SwitchJoin,$/;"	v
SwitchStmt	$C2_ROOT/ast/switch_stmt.c2	/^public type SwitchStmt struct @(opaque) {$/;"	t
SwitchStmtBits	$C2_ROOT/ast/stmt.c2	/^        SwitchStmtBits switchStmtBits;$/;"	v
SwitchStmtBits	$C2_ROOT/ast/switch_stmt.c2	/^type SwitchStmtBits struct {$/;"	t
Symbol	$C2_ROOT/ir/init_value.c2	/^    Symbol,$/;"	v
Symbol	$C2_ROOT/ir/symbol_list.c2	/^type Symbol struct {$/;"	t
SymbolId	$C2_ROOT/ir/context.c2	/^    SymbolId cur_global;$/;"	v
SymbolId	$C2_ROOT/ir/symbol_list.c2	/^public type SymbolId u32;$/;"	t
SymbolList	$C2_ROOT/ir/context.c2	/^    SymbolList symbols;$/;"	v
SymbolList	$C2_ROOT/ir/symbol_list.c2	/^type SymbolList struct {$/;"	t
SymbolTable	$C2_ROOT/ast/module.c2	/^    SymbolTable symbols;$/;"	v
SymbolTable	$C2_ROOT/ast/symbol_table.c2	/^public type SymbolTable struct {$/;"	t
System	$C2_ROOT/common/target_info.c2	/^public type System enum u8 { Unknown, Linux, Darwin, Cygwin, FreeBSD, OpenBSD }$/;"	t
TAB	$C2_ROOT/libs/sdl2/sdl.c2i	/^    TAB = 43,$/;"	v
TAB	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    TAB = 258,$/;"	v
TABSPACE	$C2_ROOT/parser/c2_tokenizer.c2	/^    TABSPACE,$/;"	v
TEE	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    TEE,$/;"	v
TEXTURE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    TEXTURE = 3,$/;"	v
THOUSANDSSEPARATOR	$C2_ROOT/libs/sdl2/sdl.c2i	/^    THOUSANDSSEPARATOR = 178,$/;"	v
TILDE	$C2_ROOT/parser/c2_tokenizer.c2	/^    TILDE,$/;"	v
TIMEOUT	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    TIMEOUT,$/;"	v
TIMEOUT_REALTIME	$C2_ROOT/libs/io_uring/io_uring.c2i	/^const u32 TIMEOUT_CLOCK_MASK  = TIMEOUT_BOOTTIME | TIMEOUT_REALTIME;$/;"	v
TIMEOUT_REMOVE	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    TIMEOUT_REMOVE,$/;"	v
TIMEOUT_UPDATE	$C2_ROOT/libs/io_uring/io_uring.c2i	/^	sqe.timeout_flags = flags | TIMEOUT_UPDATE;$/;"	v
TODO	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    TODO$/;"	v
TOUCHES_BEGAN	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    TOUCHES_BEGAN = 10,$/;"	v
TOUCHES_CANCELLED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    TOUCHES_CANCELLED = 13,$/;"	v
TOUCHES_ENDED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    TOUCHES_ENDED = 12,$/;"	v
TOUCHES_MOVED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    TOUCHES_MOVED = 11,$/;"	v
TRACE_HOOKS_NOT_ENABLED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    TRACE_HOOKS_NOT_ENABLED = 90,$/;"	v
TRANSPARENT_BLACK	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    TRANSPARENT_BLACK = 1,$/;"	v
TRIANGLES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    TRIANGLES = 4,$/;"	v
TRIANGLE_STRIP	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    TRIANGLE_STRIP = 5,$/;"	v
TYPE_2D	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    TYPE_2D = 1,$/;"	v
TYPE_3D	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    TYPE_3D = 3,$/;"	v
Table	$C2_ROOT/ast_utils/attr_table.c2	/^public type Table struct @(opaque) {$/;"	t
Table	$C2_ROOT/ir/lookup_table.c2	/^public type Table struct {$/;"	t
Target	$C2_ROOT/common/build_target.c2	/^public type Target struct @(opaque) {$/;"	t
Target	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Target,$/;"	v
Temp	$C2_ROOT/ir/ref.c2	/^    return r.kind == RefKind.Temp;$/;"	v
Temp	$C2_ROOT/ir/slot_collector.c2	/^        r.kind = RefKind.Temp;$/;"	v
TemplateFunction	$C2_ROOT/ast/instance_table.c2	/^type TemplateFunction struct {$/;"	t
TemplateInstance	$C2_ROOT/ast/instance_table.c2	/^type TemplateInstance struct {$/;"	t
TemplateVisitor	$C2_ROOT/ast/module.c2	/^public type TemplateVisitor fn void (void* arg, FunctionDecl* fd, u32 idx);$/;"	t
Termios	$C2_ROOT/libs/libc/ctermios.c2i	/^type Termios struct @(cname="termios") {$/;"	t
TestFn	$C2_ROOT/plugins/unit_test1.c2	/^public type TestFn fn void(void* t);$/;"	t
Text	$C2_ROOT/compiler/c2recipe_parser.c2	/^            result.kind = p.new_line ? Kind.File : Kind.Text;$/;"	v
Text	$C2_ROOT/ir/init_value.c2	/^    Text,$/;"	v
TextEditingEvent	$C2_ROOT/libs/sdl2/sdl.c2i	/^type TextEditingEvent struct {$/;"	t
TextInputEvent	$C2_ROOT/libs/sdl2/sdl.c2i	/^type TextInputEvent struct {$/;"	t
Texture	$C2_ROOT/libs/sdl2/sdl.c2i	/^type Texture struct @(opaque, cname="SDL_Texture");$/;"	t
TextureAccess	$C2_ROOT/libs/sdl2/sdl.c2i	/^type TextureAccess enum u8 {$/;"	t
TextureModulate	$C2_ROOT/libs/sdl2/sdl.c2i	/^type TextureModulate enum u8 {$/;"	t
TextureViewDesc	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type TextureViewDesc struct @(cname="sg_texture_view_desc") {$/;"	t
TextureViewRange	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type TextureViewRange struct @(cname="sg_texture_view_range") {$/;"	t
Thread	$C2_ROOT/libs/sdl2/sdl.c2i	/^type Thread struct @(cname="SDL_Thread", opaque);$/;"	t
ThreadFunc	$C2_ROOT/libs/pthread/pthread.c2i	/^type ThreadFunc fn void*(void*) @(cname="pthread_threadfunc");$/;"	t
ThreadFunction	$C2_ROOT/libs/sdl2/sdl.c2i	/^type ThreadFunction fn c_int (void* data);$/;"	t
Tilde	$C2_ROOT/parser/c2_parser_expr.c2	/^    [Kind.Tilde] = 7,$/;"	v
Tilde	$C2_ROOT/parser/c2_tokenizer.c2	/^            result.kind = Kind.Tilde;$/;"	v
Tilde	$C2_ROOT/parser/token.c2	/^    [Kind.Tilde]            = "~",$/;"	v
Time	$C2_ROOT/libs/libc/libc_time.c2i	/^type Time c_long @(cname="time_t");$/;"	t
Time	$C2_ROOT/libs/libc/sys_time.c2i	/^type Time c_long @(cname="time_t");$/;"	t
Time_t	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Time_t c_long;$/;"	t
TimerCallback	$C2_ROOT/libs/sdl2/sdl.c2i	/^type TimerCallback fn u32 (u32 interval, void* param);$/;"	t
TimerID	$C2_ROOT/libs/sdl2/sdl.c2i	/^type TimerID c_int;$/;"	t
Timespec	$C2_ROOT/libs/libc/linux_types.c2i	/^type Timespec struct {$/;"	t
Timespec	$C2_ROOT/libs/libc/sys_stat.c2i	/^type Timespec struct @(cname="timespec", no_typedef) {$/;"	t
Timeval	$C2_ROOT/libs/libc/sys_time.c2i	/^type Timeval struct @(cname="timeval") {$/;"	t
Timezone	$C2_ROOT/libs/libc/sys_time.c2i	/^type Timezone struct @(cname="timezone") {$/;"	t
Timing_delay_context	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Timing_delay_context struct @(cname="mbedtls_timing_delay_context") {$/;"	t
Timing_hr_time	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Timing_hr_time struct @(cname="mbedtls_timing_hr_time") {$/;"	t
Tls_prf_types	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Tls_prf_types enum u8 {$/;"	t
Tm	$C2_ROOT/libs/libc/libc_time.c2i	/^type Tm struct {$/;"	t
ToContainer	$C2_ROOT/ast/builtin_expr.c2	/^    e.base.base.builtinExprBits.kind = BuiltinExprKind.ToContainer;$/;"	v
ToContainerData	$C2_ROOT/ast/builtin_expr.c2	/^type ToContainerData struct {$/;"	t
Token	$C2_ROOT/common/yaml/yaml_parser.c2	/^    Token token;$/;"	v
Token	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^type Token struct {$/;"	t
Token	$C2_ROOT/compiler/c2recipe_parser.c2	/^type Token struct {$/;"	t
Token	$C2_ROOT/parser/c2_parser.c2	/^    Token tok;$/;"	v
Token	$C2_ROOT/parser/c2_parser_stmt.c2	/^        Token next;$/;"	v
Token	$C2_ROOT/parser/token.c2	/^public type Token struct {$/;"	t
TokenKind	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^type TokenKind enum u8 {$/;"	t
Tokenizer	$C2_ROOT/common/yaml/yaml_parser.c2	/^    Tokenizer tokenizer;$/;"	v
Tokenizer	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^type Tokenizer struct {$/;"	t
Tokenizer	$C2_ROOT/parser/c2_tokenizer.c2	/^public type Tokenizer struct {$/;"	t
Tools	$C2_ROOT/ir/context.c2	/^type Tools struct {$/;"	t
Tools	$C2_ROOT/ir/work_queue.c2	/^    Tools tools;$/;"	v
Torus	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^type Torus struct @(cname="sshape_torus_t") {$/;"	t
Touchpoint	$C2_ROOT/libs/sokol/sokol_app.c2i	/^type Touchpoint struct @(cname="sapp_touchpoint") {$/;"	t
TraceCall	$C2_ROOT/generator/c/c_generator_trace.c2	/^type TraceCall struct {$/;"	t
TraceCallList	$C2_ROOT/generator/c/c_generator.c2	/^    TraceCallList calls;$/;"	v
TraceCallList	$C2_ROOT/generator/c/c_generator_trace.c2	/^type TraceCallList struct {$/;"	t
Tree	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^public type Tree struct @(opaque) {$/;"	t
Trimmer	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^type Trimmer struct {$/;"	t
Type	$C2_ROOT/analyser/module_analyser_expr.c2	/^        kind = IdentifierKind.Type;$/;"	v
Type	$C2_ROOT/ast/alias_type.c2	/^    Type base;$/;"	v
Type	$C2_ROOT/ast/array_type.c2	/^    Type base;$/;"	v
Type	$C2_ROOT/ast/builtin_type.c2	/^    Type base;$/;"	v
Type	$C2_ROOT/ast/enum_type.c2	/^    Type base;$/;"	v
Type	$C2_ROOT/ast/expr.c2	/^    return e.getKind() == ExprKind.Type;$/;"	v
Type	$C2_ROOT/ast/function_type.c2	/^    Type base;$/;"	v
Type	$C2_ROOT/ast/identifier_expr.c2	/^    Type,$/;"	v
Type	$C2_ROOT/ast/module_type.c2	/^    Type base;$/;"	v
Type	$C2_ROOT/ast/pointer_type.c2	/^    Type base;$/;"	v
Type	$C2_ROOT/ast/struct_type.c2	/^    Type base;$/;"	v
Type	$C2_ROOT/ast/type.c2	/^public type Type struct @(opaque) {$/;"	t
Type	$C2_ROOT/ir/types.c2	/^public type Type enum u8 {$/;"	t
TypeBits	$C2_ROOT/ast/type.c2	/^type TypeBits struct {$/;"	t
TypeDeclVisitor	$C2_ROOT/ast/ast.c2	/^public type TypeDeclVisitor fn void (void* arg, Decl* d);$/;"	t
TypeExpr	$C2_ROOT/ast/type_expr.c2	/^public type TypeExpr struct @(opaque) {$/;"	t
TypeExprBits	$C2_ROOT/ast/stmt.c2	/^        TypeExprBits typeExprBits;$/;"	v
TypeExprBits	$C2_ROOT/ast/type_expr.c2	/^type TypeExprBits struct {$/;"	t
TypeFunc	$C2_ROOT/analyser/module_analyser_member.c2	/^            *ck = CallKind.TypeFunc;$/;"	v
TypeFunc	$C2_ROOT/ast/function_decl.c2	/^    TypeFunc,$/;"	v
TypeKind	$C2_ROOT/ast/type.c2	/^public type TypeKind enum u8 {$/;"	t
TypeRef	$C2_ROOT/ast/type_ref.c2	/^public type TypeRef struct @(opaque, aligned=8) {$/;"	t
TypeRefBits	$C2_ROOT/ast/type_ref.c2	/^type TypeRefBits struct {$/;"	t
TypeRefHolder	$C2_ROOT/ast/type_ref.c2	/^public type TypeRefHolder struct {$/;"	t
TypeRefKind	$C2_ROOT/ast/type_ref.c2	/^public type TypeRefKind enum u8 {$/;"	t
TypeSize	$C2_ROOT/analyser/size_analyser.c2	/^public type TypeSize struct {$/;"	t
U16	$C2_ROOT/ir/context.c2	/^    [Type.U16] = InstrKind.Store2,$/;"	v
U16	$C2_ROOT/ir/types.c2	/^    U16,$/;"	v
U32	$C2_ROOT/generator/ir/ir_generator.c2	/^    gen.ptr_type = targetInfo.intWidth == 64 ? ir.Type.U64 : ir.Type.U32;$/;"	v
U32	$C2_ROOT/ir/context.c2	/^    [Type.U32] = InstrKind.Store4,$/;"	v
U32	$C2_ROOT/ir/types.c2	/^    U32,$/;"	v
U64	$C2_ROOT/ir/context.c2	/^    [Type.U64] = InstrKind.Store8,$/;"	v
U64	$C2_ROOT/ir/types.c2	/^    U64,$/;"	v
U8	$C2_ROOT/ir/context.c2	/^    [Type.U8]  = InstrKind.Store1,$/;"	v
U8	$C2_ROOT/ir/types.c2	/^    U8,$/;"	v
UBYTE4	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    UBYTE4 = 15,$/;"	v
UBYTE4N	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    UBYTE4N = 16,$/;"	v
UINT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    UINT = 9,$/;"	v
UINT10_N2	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    UINT10_N2 = 25,$/;"	v
UINT16	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    UINT16 = 2,$/;"	v
UINT2	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    UINT2 = 10,$/;"	v
UINT3	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    UINT3 = 11,$/;"	v
UINT32	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    UINT32 = 3,$/;"	v
UINT4	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    UINT4 = 12,$/;"	v
UInt16	$C2_ROOT/ast/builtin_type.c2	/^    [BuiltinKind.UInt16] = true,$/;"	v
UInt16	$C2_ROOT/generator/c/c_generator_expr.c2	/^    [BuiltinKind.UInt16] = false,$/;"	v
UInt16	$C2_ROOT/generator/ir/ir_generator.c2	/^    [BuiltinKind.UInt16]  = U16,$/;"	v
UInt32	$C2_ROOT/ast/builtin_type.c2	/^    [BuiltinKind.UInt32] = true,$/;"	v
UInt32	$C2_ROOT/ast/type_ref.c2	/^    return r.isBuiltin() && r.flags.num_ptrs == 0 && r.flags.num_arrays == 0 && r.getBuiltinKind/;"	v
UInt32	$C2_ROOT/ast/utils.c2	/^    return globals.wordsize == 8 ? BuiltinKind.UInt64 : BuiltinKind.UInt32;$/;"	v
UInt32	$C2_ROOT/generator/c/c_generator_expr.c2	/^    [BuiltinKind.UInt32] = false,$/;"	v
UInt32	$C2_ROOT/generator/ir/ir_generator.c2	/^    [BuiltinKind.UInt32]  = U32,$/;"	v
UInt64	$C2_ROOT/ast/builtin_type.c2	/^    [BuiltinKind.UInt64] = true,$/;"	v
UInt64	$C2_ROOT/ast/utils.c2	/^        globals.builtinType_baseTypes[BuiltinKind.USize] = BuiltinKind.UInt64;$/;"	v
UInt64	$C2_ROOT/generator/c/c_generator_expr.c2	/^    [BuiltinKind.UInt64] = true,$/;"	v
UInt64	$C2_ROOT/generator/ir/ir_generator.c2	/^    [BuiltinKind.UInt64]  = U64,$/;"	v
UInt8	$C2_ROOT/ast/builtin_type.c2	/^    return b.base.builtinTypeBits.kind == BuiltinKind.UInt8;$/;"	v
UInt8	$C2_ROOT/generator/c/c_generator_expr.c2	/^    [BuiltinKind.UInt8] = false,$/;"	v
UInt8	$C2_ROOT/generator/ir/ir_generator.c2	/^    [BuiltinKind.UInt8]   = U8,$/;"	v
UNDEFINED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    UNDEFINED = 0,$/;"	v
UNDO	$C2_ROOT/libs/sdl2/sdl.c2i	/^    UNDO = 122,$/;"	v
UNFILTERABLE_FLOAT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    UNFILTERABLE_FLOAT = 5,$/;"	v
UNFOCUSED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    UNFOCUSED = 18,$/;"	v
UNINIT_BUFFER_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    UNINIT_BUFFER_INVALID_STATE = 103,$/;"	v
UNINIT_IMAGE_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    UNINIT_IMAGE_INVALID_STATE = 104,$/;"	v
UNINIT_PIPELINE_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    UNINIT_PIPELINE_INVALID_STATE = 107,$/;"	v
UNINIT_SAMPLER_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    UNINIT_SAMPLER_INVALID_STATE = 105,$/;"	v
UNINIT_SHADER_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    UNINIT_SHADER_INVALID_STATE = 106,$/;"	v
UNINIT_VIEW_INVALID_STATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    UNINIT_VIEW_INVALID_STATE = 108,$/;"	v
UNKNOWN	$C2_ROOT/libs/sdl2/sdl.c2i	/^    UNKNOWN = 0,$/;"	v
UNKNOWN	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    UNKNOWN = 0,$/;"	v
UNLINKAT	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    UNLINKAT,$/;"	v
UP	$C2_ROOT/libs/sdl2/sdl.c2i	/^    UP = 82,$/;"	v
UP	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    UP = 265,$/;"	v
USEREVENT	$C2_ROOT/libs/sdl2/sdl.c2i	/^    USEREVENT    = 0x8000,$/;"	v
USHORT2	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    USHORT2 = 19,$/;"	v
USHORT2N	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    USHORT2N = 20,$/;"	v
USHORT4	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    USHORT4 = 23,$/;"	v
USHORT4N	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    USHORT4N = 24,$/;"	v
USING_AAUDIO_BACKEND	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    USING_AAUDIO_BACKEND = 21,$/;"	v
USize	$C2_ROOT/ast/builtin_type.c2	/^    [BuiltinKind.USize] = true,$/;"	v
USize	$C2_ROOT/generator/c/c_generator_expr.c2	/^    [BuiltinKind.USize] = true,$/;"	v
USize	$C2_ROOT/generator/ir/ir_generator.c2	/^    [BuiltinKind.USize]   = U64,  \/\/ TODO 32-bit$/;"	v
UnaryOpcode	$C2_ROOT/ast/unary_operator.c2	/^public type UnaryOpcode enum u8 {$/;"	t
UnaryOperator	$C2_ROOT/ast/expr.c2	/^    return e.getKind() == ExprKind.UnaryOperator;$/;"	v
UnaryOperator	$C2_ROOT/ast/unary_operator.c2	/^public type UnaryOperator struct @(opaque) {$/;"	t
UnaryOperatorBits	$C2_ROOT/ast/stmt.c2	/^        UnaryOperatorBits unaryOperatorBits;$/;"	v
UnaryOperatorBits	$C2_ROOT/ast/unary_operator.c2	/^type UnaryOperatorBits struct {$/;"	t
Unchecked	$C2_ROOT/ast/decl.c2	/^    Unchecked,$/;"	v
UniformLayout	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type UniformLayout enum u32 @(cname="sg_uniform_layout") {$/;"	t
UniformType	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type UniformType enum u32 @(cname="sg_uniform_type") {$/;"	t
Union	$C2_ROOT/ir_examples/types.c2	/^type Union union {$/;"	t
Unknown	$C2_ROOT/ast_utils/attr.c2	/^    return AttrKind.Unknown;$/;"	v
Unknown	$C2_ROOT/common/target_info.c2	/^    return Vendor.Unknown;$/;"	v
Unknown	$C2_ROOT/common/yaml/yaml_data.c2	/^    Unknown,$/;"	v
UnloadFn	$C2_ROOT/plugins/plugin_info.c2	/^public type UnloadFn fn void(void* arg);$/;"	t
Unreachable	$C2_ROOT/analyser/scope.c2	/^    top.flags |= Unreachable;$/;"	v
Unresolved	$C2_ROOT/analyser/module_analyser_expr.c2	/^    IdentifierKind kind = IdentifierKind.Unresolved;$/;"	v
Unresolved	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^    return IdentifierKind.Unresolved;$/;"	v
Unresolved	$C2_ROOT/ast/identifier_expr.c2	/^    Unresolved,$/;"	v
Unsigned	$C2_ROOT/libs/lua/lua.c2i	/^type Unsigned LUA_UNSIGNED @(cname="lua_Unsigned");$/;"	t
Unspecified	$C2_ROOT/ir/block.c2	/^    Unspecified,$/;"	v
Unused	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.Unused]       = AttrReq.NoArg,$/;"	v
UnusedParams	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.UnusedParams] = AttrReq.NoArg,$/;"	v
Use	$C2_ROOT/compiler/c2recipe_parser.c2	/^    Use,$/;"	v
User	$C2_ROOT/ast/type_ref.c2	/^    return r.flags.kind == TypeRefKind.User;$/;"	v
VALID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALID = 2,$/;"	v
VALIDATE_ABND_COMPUTE_EXPECTED_NO_IBUF	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_COMPUTE_EXPECTED_NO_IBUF = 347,$/;"	v
VALIDATE_ABND_COMPUTE_EXPECTED_NO_VBUFS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_COMPUTE_EXPECTED_NO_VBUFS = 346,$/;"	v
VALIDATE_ABND_EMPTY_BINDINGS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_EMPTY_BINDINGS = 340,$/;"	v
VALIDATE_ABND_EXPECTED_IBUF	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_EXPECTED_IBUF = 353,$/;"	v
VALIDATE_ABND_EXPECTED_NONFILTERING_SAMPLER	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_EXPECTED_NONFILTERING_SAMPLER = 374,$/;"	v
VALIDATE_ABND_EXPECTED_NO_IBUF	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_EXPECTED_NO_IBUF = 352,$/;"	v
VALIDATE_ABND_EXPECTED_SAMPLER_BINDING	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_EXPECTED_SAMPLER_BINDING = 371,$/;"	v
VALIDATE_ABND_EXPECTED_SAMPLER_COMPARE_NEVER	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_EXPECTED_SAMPLER_COMPARE_NEVER = 373,$/;"	v
VALIDATE_ABND_EXPECTED_VBUF	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_EXPECTED_VBUF = 348,$/;"	v
VALIDATE_ABND_EXPECTED_VIEW_BINDING	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_EXPECTED_VIEW_BINDING = 357,$/;"	v
VALIDATE_ABND_EXPECT_SBVIEW	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_EXPECT_SBVIEW = 360,$/;"	v
VALIDATE_ABND_EXPECT_SIMGVIEW	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_EXPECT_SIMGVIEW = 361,$/;"	v
VALIDATE_ABND_EXPECT_TEXVIEW	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_EXPECT_TEXVIEW = 359,$/;"	v
VALIDATE_ABND_IBUF_ALIVE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_IBUF_ALIVE = 354,$/;"	v
VALIDATE_ABND_IBUF_OVERFLOW	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_IBUF_OVERFLOW = 356,$/;"	v
VALIDATE_ABND_IBUF_USAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_IBUF_USAGE = 355,$/;"	v
VALIDATE_ABND_NO_PIPELINE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_NO_PIPELINE = 341,$/;"	v
VALIDATE_ABND_PASS_EXPECTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_PASS_EXPECTED = 339,$/;"	v
VALIDATE_ABND_PIPELINE_ALIVE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_PIPELINE_ALIVE = 342,$/;"	v
VALIDATE_ABND_PIPELINE_SHADER_ALIVE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_PIPELINE_SHADER_ALIVE = 344,$/;"	v
VALIDATE_ABND_PIPELINE_SHADER_VALID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_PIPELINE_SHADER_VALID = 345,$/;"	v
VALIDATE_ABND_PIPELINE_VALID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_PIPELINE_VALID = 343,$/;"	v
VALIDATE_ABND_SAMPLER_ALIVE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_SAMPLER_ALIVE = 375,$/;"	v
VALIDATE_ABND_SAMPLER_VALID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_SAMPLER_VALID = 376,$/;"	v
VALIDATE_ABND_SBVIEW_READWRITE_IMMUTABLE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_SBVIEW_READWRITE_IMMUTABLE = 367,$/;"	v
VALIDATE_ABND_SIMGVIEW_ACCESSFORMAT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_SIMGVIEW_ACCESSFORMAT = 370,$/;"	v
VALIDATE_ABND_SIMGVIEW_COMPUTE_PASS_EXPECTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_SIMGVIEW_COMPUTE_PASS_EXPECTED = 368,$/;"	v
VALIDATE_ABND_SIMGVIEW_IMAGETYPE_MISMATCH	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_SIMGVIEW_IMAGETYPE_MISMATCH = 369,$/;"	v
VALIDATE_ABND_TEXTURE_BINDING_VS_COLOR_ATTACHMENT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_TEXTURE_BINDING_VS_COLOR_ATTACHMENT = 378,$/;"	v
VALIDATE_ABND_TEXTURE_BINDING_VS_DEPTHSTENCIL_ATTACHMENT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_TEXTURE_BINDING_VS_DEPTHSTENCIL_ATTACHMENT = 377,$/;"	v
VALIDATE_ABND_TEXTURE_BINDING_VS_RESOLVE_ATTACHMENT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_TEXTURE_BINDING_VS_RESOLVE_ATTACHMENT = 379,$/;"	v
VALIDATE_ABND_TEXTURE_VS_STORAGEIMAGE_BINDING	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_TEXTURE_VS_STORAGEIMAGE_BINDING = 380,$/;"	v
VALIDATE_ABND_TEXVIEW_EXPECTED_DEPTH_IMAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_TEXVIEW_EXPECTED_DEPTH_IMAGE = 366,$/;"	v
VALIDATE_ABND_TEXVIEW_EXPECTED_FILTERABLE_IMAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_TEXVIEW_EXPECTED_FILTERABLE_IMAGE = 365,$/;"	v
VALIDATE_ABND_TEXVIEW_EXPECTED_MULTISAMPLED_IMAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_TEXVIEW_EXPECTED_MULTISAMPLED_IMAGE = 363,$/;"	v
VALIDATE_ABND_TEXVIEW_EXPECTED_NON_MULTISAMPLED_IMAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_TEXVIEW_EXPECTED_NON_MULTISAMPLED_IMAGE = 364,$/;"	v
VALIDATE_ABND_TEXVIEW_IMAGETYPE_MISMATCH	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_TEXVIEW_IMAGETYPE_MISMATCH = 362,$/;"	v
VALIDATE_ABND_UNEXPECTED_SAMPLER_COMPARE_NEVER	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_UNEXPECTED_SAMPLER_COMPARE_NEVER = 372,$/;"	v
VALIDATE_ABND_VBUF_ALIVE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_VBUF_ALIVE = 349,$/;"	v
VALIDATE_ABND_VBUF_OVERFLOW	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_VBUF_OVERFLOW = 351,$/;"	v
VALIDATE_ABND_VBUF_USAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_VBUF_USAGE = 350,$/;"	v
VALIDATE_ABND_VIEW_ALIVE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ABND_VIEW_ALIVE = 358,$/;"	v
VALIDATE_APIP_ATTACHMENTS_ALIVE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_ATTACHMENTS_ALIVE = 330,$/;"	v
VALIDATE_APIP_ATTACHMENT_SAMPLE_COUNT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_ATTACHMENT_SAMPLE_COUNT = 338,$/;"	v
VALIDATE_APIP_COLORATTACHMENTS_COUNT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_COLORATTACHMENTS_COUNT = 331,$/;"	v
VALIDATE_APIP_COLORATTACHMENTS_FORMAT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_COLORATTACHMENTS_FORMAT = 334,$/;"	v
VALIDATE_APIP_COLORATTACHMENTS_IMAGE_VALID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_COLORATTACHMENTS_IMAGE_VALID = 333,$/;"	v
VALIDATE_APIP_COLORATTACHMENTS_VIEW_VALID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_COLORATTACHMENTS_VIEW_VALID = 332,$/;"	v
VALIDATE_APIP_COMPUTEPASS_EXPECTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_COMPUTEPASS_EXPECTED = 324,$/;"	v
VALIDATE_APIP_DEPTHSTENCILATTACHMENT_FORMAT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_DEPTHSTENCILATTACHMENT_FORMAT = 337,$/;"	v
VALIDATE_APIP_DEPTHSTENCILATTACHMENT_IMAGE_VALID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_DEPTHSTENCILATTACHMENT_IMAGE_VALID = 336,$/;"	v
VALIDATE_APIP_DEPTHSTENCILATTACHMENT_VIEW_VALID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_DEPTHSTENCILATTACHMENT_VIEW_VALID = 335,$/;"	v
VALIDATE_APIP_PASS_EXPECTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_PASS_EXPECTED = 321,$/;"	v
VALIDATE_APIP_PIPELINE_EXISTS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_PIPELINE_EXISTS = 319,$/;"	v
VALIDATE_APIP_PIPELINE_SHADER_ALIVE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_PIPELINE_SHADER_ALIVE = 322,$/;"	v
VALIDATE_APIP_PIPELINE_SHADER_VALID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_PIPELINE_SHADER_VALID = 323,$/;"	v
VALIDATE_APIP_PIPELINE_VALID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_PIPELINE_VALID = 320,$/;"	v
VALIDATE_APIP_PIPELINE_VALID_ID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_PIPELINE_VALID_ID = 318,$/;"	v
VALIDATE_APIP_RENDERPASS_EXPECTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_RENDERPASS_EXPECTED = 325,$/;"	v
VALIDATE_APIP_SWAPCHAIN_COLOR_COUNT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_SWAPCHAIN_COLOR_COUNT = 326,$/;"	v
VALIDATE_APIP_SWAPCHAIN_COLOR_FORMAT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_SWAPCHAIN_COLOR_FORMAT = 327,$/;"	v
VALIDATE_APIP_SWAPCHAIN_DEPTH_FORMAT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_SWAPCHAIN_DEPTH_FORMAT = 328,$/;"	v
VALIDATE_APIP_SWAPCHAIN_SAMPLE_COUNT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APIP_SWAPCHAIN_SAMPLE_COUNT = 329,$/;"	v
VALIDATE_APPENDBUF_SIZE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APPENDBUF_SIZE = 413,$/;"	v
VALIDATE_APPENDBUF_UPDATE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APPENDBUF_UPDATE = 414,$/;"	v
VALIDATE_APPENDBUF_USAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_APPENDBUF_USAGE = 412,$/;"	v
VALIDATE_ASR_RENDERPASS_EXPECTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_ASR_RENDERPASS_EXPECTED = 317,$/;"	v
VALIDATE_AU_NO_PIPELINE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_AU_NO_PIPELINE = 382,$/;"	v
VALIDATE_AU_NO_UNIFORMBLOCK_AT_SLOT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_AU_NO_UNIFORMBLOCK_AT_SLOT = 387,$/;"	v
VALIDATE_AU_PASS_EXPECTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_AU_PASS_EXPECTED = 381,$/;"	v
VALIDATE_AU_PIPELINE_ALIVE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_AU_PIPELINE_ALIVE = 383,$/;"	v
VALIDATE_AU_PIPELINE_SHADER_ALIVE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_AU_PIPELINE_SHADER_ALIVE = 385,$/;"	v
VALIDATE_AU_PIPELINE_SHADER_VALID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_AU_PIPELINE_SHADER_VALID = 386,$/;"	v
VALIDATE_AU_PIPELINE_VALID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_AU_PIPELINE_VALID = 384,$/;"	v
VALIDATE_AU_SIZE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_AU_SIZE = 388,$/;"	v
VALIDATE_AVP_RENDERPASS_EXPECTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_AVP_RENDERPASS_EXPECTED = 316,$/;"	v
VALIDATE_BEGINPASS_ATTACHMENTS_EXPECTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_ATTACHMENTS_EXPECTED = 315,$/;"	v
VALIDATE_BEGINPASS_CANARY	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_CANARY = 262,$/;"	v
VALIDATE_BEGINPASS_COLORATTACHMENTVIEWS_CONTINUOUS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_COLORATTACHMENTVIEWS_CONTINUOUS = 292,$/;"	v
VALIDATE_BEGINPASS_COLORATTACHMENTVIEW_ALIVE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_COLORATTACHMENTVIEW_ALIVE = 293,$/;"	v
VALIDATE_BEGINPASS_COLORATTACHMENTVIEW_IMAGE_ALIVE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_COLORATTACHMENTVIEW_IMAGE_ALIVE = 296,$/;"	v
VALIDATE_BEGINPASS_COLORATTACHMENTVIEW_IMAGE_VALID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_COLORATTACHMENTVIEW_IMAGE_VALID = 297,$/;"	v
VALIDATE_BEGINPASS_COLORATTACHMENTVIEW_SAMPLECOUNTS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_COLORATTACHMENTVIEW_SAMPLECOUNTS = 299,$/;"	v
VALIDATE_BEGINPASS_COLORATTACHMENTVIEW_SIZES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_COLORATTACHMENTVIEW_SIZES = 298,$/;"	v
VALIDATE_BEGINPASS_COLORATTACHMENTVIEW_TYPE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_COLORATTACHMENTVIEW_TYPE = 295,$/;"	v
VALIDATE_BEGINPASS_COLORATTACHMENTVIEW_VALID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_COLORATTACHMENTVIEW_VALID = 294,$/;"	v
VALIDATE_BEGINPASS_COMPUTEPASS_EXPECT_NO_ATTACHMENTS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_COMPUTEPASS_EXPECT_NO_ATTACHMENTS = 263,$/;"	v
VALIDATE_BEGINPASS_DEPTHSTENCILATTACHMENTVIEWS_CONTINUOUS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_DEPTHSTENCILATTACHMENTVIEWS_CONTINUOUS = 307,$/;"	v
VALIDATE_BEGINPASS_DEPTHSTENCILATTACHMENTVIEW_ALIVE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_DEPTHSTENCILATTACHMENTVIEW_ALIVE = 308,$/;"	v
VALIDATE_BEGINPASS_DEPTHSTENCILATTACHMENTVIEW_IMAGE_ALIVE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_DEPTHSTENCILATTACHMENTVIEW_IMAGE_ALIVE = 311,$/;"	v
VALIDATE_BEGINPASS_DEPTHSTENCILATTACHMENTVIEW_IMAGE_VALID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_DEPTHSTENCILATTACHMENTVIEW_IMAGE_VALID = 312,$/;"	v
VALIDATE_BEGINPASS_DEPTHSTENCILATTACHMENTVIEW_SAMPLECOUNT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_DEPTHSTENCILATTACHMENTVIEW_SAMPLECOUNT = 314,$/;"	v
VALIDATE_BEGINPASS_DEPTHSTENCILATTACHMENTVIEW_SIZES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_DEPTHSTENCILATTACHMENTVIEW_SIZES = 313,$/;"	v
VALIDATE_BEGINPASS_DEPTHSTENCILATTACHMENTVIEW_TYPE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_DEPTHSTENCILATTACHMENTVIEW_TYPE = 310,$/;"	v
VALIDATE_BEGINPASS_DEPTHSTENCILATTACHMENTVIEW_VALID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_DEPTHSTENCILATTACHMENTVIEW_VALID = 309,$/;"	v
VALIDATE_BEGINPASS_RESOLVEATTACHMENTVIEW_ALIVE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_RESOLVEATTACHMENTVIEW_ALIVE = 301,$/;"	v
VALIDATE_BEGINPASS_RESOLVEATTACHMENTVIEW_IMAGE_ALIVE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_RESOLVEATTACHMENTVIEW_IMAGE_ALIVE = 304,$/;"	v
VALIDATE_BEGINPASS_RESOLVEATTACHMENTVIEW_IMAGE_VALID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_RESOLVEATTACHMENTVIEW_IMAGE_VALID = 305,$/;"	v
VALIDATE_BEGINPASS_RESOLVEATTACHMENTVIEW_NO_COLORATTACHMENTVIEW	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_RESOLVEATTACHMENTVIEW_NO_COLORATTACHMENTVIEW = 300,$/;"	v
VALIDATE_BEGINPASS_RESOLVEATTACHMENTVIEW_SIZES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_RESOLVEATTACHMENTVIEW_SIZES = 306,$/;"	v
VALIDATE_BEGINPASS_RESOLVEATTACHMENTVIEW_TYPE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_RESOLVEATTACHMENTVIEW_TYPE = 303,$/;"	v
VALIDATE_BEGINPASS_RESOLVEATTACHMENTVIEW_VALID	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_RESOLVEATTACHMENTVIEW_VALID = 302,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_D3D11_EXPECT_DEPTHSTENCILVIEW	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_D3D11_EXPECT_DEPTHSTENCILVIEW = 283,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_D3D11_EXPECT_DEPTHSTENCILVIEW_NOTSET	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_D3D11_EXPECT_DEPTHSTENCILVIEW_NOTSET = 284,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_D3D11_EXPECT_RENDERVIEW	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_D3D11_EXPECT_RENDERVIEW = 279,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_D3D11_EXPECT_RENDERVIEW_NOTSET	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_D3D11_EXPECT_RENDERVIEW_NOTSET = 280,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_D3D11_EXPECT_RESOLVEVIEW	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_D3D11_EXPECT_RESOLVEVIEW = 281,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_D3D11_EXPECT_RESOLVEVIEW_NOTSET	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_D3D11_EXPECT_RESOLVEVIEW_NOTSET = 282,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_EXPECT_COLORFORMAT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_EXPECT_COLORFORMAT = 270,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_EXPECT_COLORFORMAT_NOTSET	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_EXPECT_COLORFORMAT_NOTSET = 271,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_EXPECT_DEPTHFORMAT_NOTSET	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_EXPECT_DEPTHFORMAT_NOTSET = 272,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_EXPECT_HEIGHT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_EXPECT_HEIGHT = 266,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_EXPECT_HEIGHT_NOTSET	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_EXPECT_HEIGHT_NOTSET = 267,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_EXPECT_SAMPLECOUNT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_EXPECT_SAMPLECOUNT = 268,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_EXPECT_SAMPLECOUNT_NOTSET	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_EXPECT_SAMPLECOUNT_NOTSET = 269,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_EXPECT_WIDTH	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_EXPECT_WIDTH = 264,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_EXPECT_WIDTH_NOTSET	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_EXPECT_WIDTH_NOTSET = 265,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_GL_EXPECT_FRAMEBUFFER_NOTSET	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_GL_EXPECT_FRAMEBUFFER_NOTSET = 291,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_METAL_EXPECT_CURRENTDRAWABLE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_METAL_EXPECT_CURRENTDRAWABLE = 273,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_METAL_EXPECT_CURRENTDRAWABLE_NOTSET	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_METAL_EXPECT_CURRENTDRAWABLE_NOTSET = 274,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_METAL_EXPECT_DEPTHSTENCILTEXTURE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_METAL_EXPECT_DEPTHSTENCILTEXTURE = 275,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_METAL_EXPECT_DEPTHSTENCILTEXTURE_NOTSET	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_METAL_EXPECT_DEPTHSTENCILTEXTURE_NOTSET = 276,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_METAL_EXPECT_MSAACOLORTEXTURE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_METAL_EXPECT_MSAACOLORTEXTURE = 277,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_METAL_EXPECT_MSAACOLORTEXTURE_NOTSET	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_METAL_EXPECT_MSAACOLORTEXTURE_NOTSET = 278,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_WGPU_EXPECT_DEPTHSTENCILVIEW	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_WGPU_EXPECT_DEPTHSTENCILVIEW = 289,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_WGPU_EXPECT_DEPTHSTENCILVIEW_NOTSET	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_WGPU_EXPECT_DEPTHSTENCILVIEW_NOTSET = 290,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_WGPU_EXPECT_RENDERVIEW	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_WGPU_EXPECT_RENDERVIEW = 285,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_WGPU_EXPECT_RENDERVIEW_NOTSET	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_WGPU_EXPECT_RENDERVIEW_NOTSET = 286,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_WGPU_EXPECT_RESOLVEVIEW	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_WGPU_EXPECT_RESOLVEVIEW = 287,$/;"	v
VALIDATE_BEGINPASS_SWAPCHAIN_WGPU_EXPECT_RESOLVEVIEW_NOTSET	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BEGINPASS_SWAPCHAIN_WGPU_EXPECT_RESOLVEVIEW_NOTSET = 288,$/;"	v
VALIDATE_BUFFERDESC_CANARY	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BUFFERDESC_CANARY = 137,$/;"	v
VALIDATE_BUFFERDESC_EXPECT_DATA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BUFFERDESC_EXPECT_DATA = 144,$/;"	v
VALIDATE_BUFFERDESC_EXPECT_MATCHING_DATA_SIZE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BUFFERDESC_EXPECT_MATCHING_DATA_SIZE = 141,$/;"	v
VALIDATE_BUFFERDESC_EXPECT_NONZERO_SIZE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BUFFERDESC_EXPECT_NONZERO_SIZE = 140,$/;"	v
VALIDATE_BUFFERDESC_EXPECT_NO_DATA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BUFFERDESC_EXPECT_NO_DATA = 143,$/;"	v
VALIDATE_BUFFERDESC_EXPECT_ZERO_DATA_SIZE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BUFFERDESC_EXPECT_ZERO_DATA_SIZE = 142,$/;"	v
VALIDATE_BUFFERDESC_IMMUTABLE_DYNAMIC_STREAM	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BUFFERDESC_IMMUTABLE_DYNAMIC_STREAM = 138,$/;"	v
VALIDATE_BUFFERDESC_SEPARATE_BUFFER_TYPES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BUFFERDESC_SEPARATE_BUFFER_TYPES = 139,$/;"	v
VALIDATE_BUFFERDESC_STORAGEBUFFER_SIZE_MULTIPLE_4	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BUFFERDESC_STORAGEBUFFER_SIZE_MULTIPLE_4 = 146,$/;"	v
VALIDATE_BUFFERDESC_STORAGEBUFFER_SUPPORTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_BUFFERDESC_STORAGEBUFFER_SUPPORTED = 145,$/;"	v
VALIDATE_DISPATCH_COMPUTEPASS_EXPECTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_DISPATCH_COMPUTEPASS_EXPECTED = 403,$/;"	v
VALIDATE_DISPATCH_NUMGROUPSX	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_DISPATCH_NUMGROUPSX = 404,$/;"	v
VALIDATE_DISPATCH_NUMGROUPSY	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_DISPATCH_NUMGROUPSY = 405,$/;"	v
VALIDATE_DISPATCH_NUMGROUPSZ	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_DISPATCH_NUMGROUPSZ = 406,$/;"	v
VALIDATE_DISPATCH_REQUIRED_BINDINGS_OR_UNIFORMS_MISSING	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_DISPATCH_REQUIRED_BINDINGS_OR_UNIFORMS_MISSING = 407,$/;"	v
VALIDATE_DRAW_BASEELEMENT_GE_ZERO	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_DRAW_BASEELEMENT_GE_ZERO = 390,$/;"	v
VALIDATE_DRAW_EX_BASEELEMENT_GE_ZERO	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_DRAW_EX_BASEELEMENT_GE_ZERO = 394,$/;"	v
VALIDATE_DRAW_EX_BASEINSTANCE_GE_ZERO	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_DRAW_EX_BASEINSTANCE_GE_ZERO = 397,$/;"	v
VALIDATE_DRAW_EX_BASEINSTANCE_NOT_SUPPORTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_DRAW_EX_BASEINSTANCE_NOT_SUPPORTED = 401,$/;"	v
VALIDATE_DRAW_EX_BASEINSTANCE_VS_INSTANCED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_DRAW_EX_BASEINSTANCE_VS_INSTANCED = 399,$/;"	v
VALIDATE_DRAW_EX_BASEVERTEX_NOT_SUPPORTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_DRAW_EX_BASEVERTEX_NOT_SUPPORTED = 400,$/;"	v
VALIDATE_DRAW_EX_BASEVERTEX_VS_INDEXED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_DRAW_EX_BASEVERTEX_VS_INDEXED = 398,$/;"	v
VALIDATE_DRAW_EX_NUMELEMENTS_GE_ZERO	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_DRAW_EX_NUMELEMENTS_GE_ZERO = 395,$/;"	v
VALIDATE_DRAW_EX_NUMINSTANCES_GE_ZERO	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_DRAW_EX_NUMINSTANCES_GE_ZERO = 396,$/;"	v
VALIDATE_DRAW_EX_RENDERPASS_EXPECTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_DRAW_EX_RENDERPASS_EXPECTED = 393,$/;"	v
VALIDATE_DRAW_NUMELEMENTS_GE_ZERO	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_DRAW_NUMELEMENTS_GE_ZERO = 391,$/;"	v
VALIDATE_DRAW_NUMINSTANCES_GE_ZERO	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_DRAW_NUMINSTANCES_GE_ZERO = 392,$/;"	v
VALIDATE_DRAW_RENDERPASS_EXPECTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_DRAW_RENDERPASS_EXPECTED = 389,$/;"	v
VALIDATE_DRAW_REQUIRED_BINDINGS_OR_UNIFORMS_MISSING	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_DRAW_REQUIRED_BINDINGS_OR_UNIFORMS_MISSING = 402,$/;"	v
VALIDATE_IMAGEDATA_DATA_SIZE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDATA_DATA_SIZE = 148,$/;"	v
VALIDATE_IMAGEDATA_NODATA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDATA_NODATA = 147,$/;"	v
VALIDATE_IMAGEDESC_ATTACHMENT_EXPECT_IMMUTABLE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_ATTACHMENT_EXPECT_IMMUTABLE = 161,$/;"	v
VALIDATE_IMAGEDESC_ATTACHMENT_EXPECT_NO_DATA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_ATTACHMENT_EXPECT_NO_DATA = 162,$/;"	v
VALIDATE_IMAGEDESC_ATTACHMENT_MSAA_3D_IMAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_ATTACHMENT_MSAA_3D_IMAGE = 167,$/;"	v
VALIDATE_IMAGEDESC_ATTACHMENT_MSAA_ARRAY_IMAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_ATTACHMENT_MSAA_ARRAY_IMAGE = 169,$/;"	v
VALIDATE_IMAGEDESC_ATTACHMENT_MSAA_CUBE_IMAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_ATTACHMENT_MSAA_CUBE_IMAGE = 168,$/;"	v
VALIDATE_IMAGEDESC_ATTACHMENT_MSAA_NUM_MIPMAPS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_ATTACHMENT_MSAA_NUM_MIPMAPS = 166,$/;"	v
VALIDATE_IMAGEDESC_ATTACHMENT_NO_MSAA_SUPPORT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_ATTACHMENT_NO_MSAA_SUPPORT = 165,$/;"	v
VALIDATE_IMAGEDESC_ATTACHMENT_PIXELFORMAT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_ATTACHMENT_PIXELFORMAT = 163,$/;"	v
VALIDATE_IMAGEDESC_ATTACHMENT_RESOLVE_EXPECT_NO_MSAA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_ATTACHMENT_RESOLVE_EXPECT_NO_MSAA = 164,$/;"	v
VALIDATE_IMAGEDESC_CANARY	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_CANARY = 149,$/;"	v
VALIDATE_IMAGEDESC_COMPRESSED_IMMUTABLE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_COMPRESSED_IMMUTABLE = 174,$/;"	v
VALIDATE_IMAGEDESC_DEPTH_3D_IMAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_DEPTH_3D_IMAGE = 160,$/;"	v
VALIDATE_IMAGEDESC_DYNAMIC_NO_DATA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_DYNAMIC_NO_DATA = 173,$/;"	v
VALIDATE_IMAGEDESC_HEIGHT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_HEIGHT = 157,$/;"	v
VALIDATE_IMAGEDESC_IMAGETYPE_2D_NUMSLICES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_IMAGETYPE_2D_NUMSLICES = 151,$/;"	v
VALIDATE_IMAGEDESC_IMAGETYPE_3D_NUMSLICES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_IMAGETYPE_3D_NUMSLICES = 154,$/;"	v
VALIDATE_IMAGEDESC_IMAGETYPE_ARRAY_NUMSLICES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_IMAGETYPE_ARRAY_NUMSLICES = 153,$/;"	v
VALIDATE_IMAGEDESC_IMAGETYPE_CUBE_NUMSLICES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_IMAGETYPE_CUBE_NUMSLICES = 152,$/;"	v
VALIDATE_IMAGEDESC_IMMUTABLE_DYNAMIC_STREAM	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_IMMUTABLE_DYNAMIC_STREAM = 150,$/;"	v
VALIDATE_IMAGEDESC_INJECTED_NO_DATA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_INJECTED_NO_DATA = 172,$/;"	v
VALIDATE_IMAGEDESC_MSAA_BUT_NO_ATTACHMENT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_MSAA_BUT_NO_ATTACHMENT = 159,$/;"	v
VALIDATE_IMAGEDESC_NONRT_PIXELFORMAT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_NONRT_PIXELFORMAT = 158,$/;"	v
VALIDATE_IMAGEDESC_NUMSLICES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_NUMSLICES = 155,$/;"	v
VALIDATE_IMAGEDESC_STORAGEIMAGE_EXPECT_NO_MSAA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_STORAGEIMAGE_EXPECT_NO_MSAA = 171,$/;"	v
VALIDATE_IMAGEDESC_STORAGEIMAGE_PIXELFORMAT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_STORAGEIMAGE_PIXELFORMAT = 170,$/;"	v
VALIDATE_IMAGEDESC_WIDTH	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_IMAGEDESC_WIDTH = 156,$/;"	v
VALIDATE_PIPELINEDESC_ATTR_BASETYPE_MISMATCH	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_PIPELINEDESC_ATTR_BASETYPE_MISMATCH = 230,$/;"	v
VALIDATE_PIPELINEDESC_ATTR_SEMANTICS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_PIPELINEDESC_ATTR_SEMANTICS = 232,$/;"	v
VALIDATE_PIPELINEDESC_BLENDOP_MINMAX_REQUIRES_BLENDFACTOR_ONE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_PIPELINEDESC_BLENDOP_MINMAX_REQUIRES_BLENDFACTOR_ONE = 234,$/;"	v
VALIDATE_PIPELINEDESC_CANARY	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_PIPELINEDESC_CANARY = 225,$/;"	v
VALIDATE_PIPELINEDESC_COMPUTE_SHADER_EXPECTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_PIPELINEDESC_COMPUTE_SHADER_EXPECTED = 227,$/;"	v
VALIDATE_PIPELINEDESC_LAYOUT_STRIDE4	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_PIPELINEDESC_LAYOUT_STRIDE4 = 231,$/;"	v
VALIDATE_PIPELINEDESC_NO_COMPUTE_SHADER_EXPECTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_PIPELINEDESC_NO_COMPUTE_SHADER_EXPECTED = 228,$/;"	v
VALIDATE_PIPELINEDESC_NO_CONT_ATTRS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_PIPELINEDESC_NO_CONT_ATTRS = 229,$/;"	v
VALIDATE_PIPELINEDESC_SHADER	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_PIPELINEDESC_SHADER = 226,$/;"	v
VALIDATE_PIPELINEDESC_SHADER_READONLY_STORAGEBUFFERS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_PIPELINEDESC_SHADER_READONLY_STORAGEBUFFERS = 233,$/;"	v
VALIDATE_SAMPLERDESC_ANISTROPIC_REQUIRES_LINEAR_FILTERING	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SAMPLERDESC_ANISTROPIC_REQUIRES_LINEAR_FILTERING = 176,$/;"	v
VALIDATE_SAMPLERDESC_CANARY	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SAMPLERDESC_CANARY = 175,$/;"	v
VALIDATE_SHADERDESC_ATTR_STRING_TOO_LONG	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_ATTR_STRING_TOO_LONG = 224,$/;"	v
VALIDATE_SHADERDESC_CANARY	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_CANARY = 177,$/;"	v
VALIDATE_SHADERDESC_COMPARISON_SAMPLER_REQUIRED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_COMPARISON_SAMPLER_REQUIRED = 221,$/;"	v
VALIDATE_SHADERDESC_COMPUTE_SOURCE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_COMPUTE_SOURCE = 180,$/;"	v
VALIDATE_SHADERDESC_COMPUTE_SOURCE_OR_BYTECODE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_COMPUTE_SOURCE_OR_BYTECODE = 183,$/;"	v
VALIDATE_SHADERDESC_FRAGMENT_SOURCE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_FRAGMENT_SOURCE = 179,$/;"	v
VALIDATE_SHADERDESC_FRAGMENT_SOURCE_OR_BYTECODE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_FRAGMENT_SOURCE_OR_BYTECODE = 182,$/;"	v
VALIDATE_SHADERDESC_INVALID_SHADER_COMBO	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_INVALID_SHADER_COMBO = 184,$/;"	v
VALIDATE_SHADERDESC_METAL_THREADS_PER_THREADGROUP_INITIALIZED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_METAL_THREADS_PER_THREADGROUP_INITIALIZED = 186,$/;"	v
VALIDATE_SHADERDESC_METAL_THREADS_PER_THREADGROUP_MULTIPLE_32	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_METAL_THREADS_PER_THREADGROUP_MULTIPLE_32 = 187,$/;"	v
VALIDATE_SHADERDESC_NONFILTERING_SAMPLER_REQUIRED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_NONFILTERING_SAMPLER_REQUIRED = 220,$/;"	v
VALIDATE_SHADERDESC_NO_BYTECODE_SIZE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_NO_BYTECODE_SIZE = 185,$/;"	v
VALIDATE_SHADERDESC_SAMPLER_HLSL_REGISTER_S_COLLISION	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_SAMPLER_HLSL_REGISTER_S_COLLISION = 212,$/;"	v
VALIDATE_SHADERDESC_SAMPLER_METAL_SAMPLER_SLOT_COLLISION	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_SAMPLER_METAL_SAMPLER_SLOT_COLLISION = 211,$/;"	v
VALIDATE_SHADERDESC_SAMPLER_NOT_REFERENCED_BY_TEXTURE_SAMPLER_PAIRS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_SAMPLER_NOT_REFERENCED_BY_TEXTURE_SAMPLER_PAIRS = 223,$/;"	v
VALIDATE_SHADERDESC_SAMPLER_WGSL_GROUP1_BINDING_COLLISION	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_SAMPLER_WGSL_GROUP1_BINDING_COLLISION = 213,$/;"	v
VALIDATE_SHADERDESC_TEXTURE_SAMPLER_PAIR_EXPECT_TEXTURE_VIEW	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_TEXTURE_SAMPLER_PAIR_EXPECT_TEXTURE_VIEW = 217,$/;"	v
VALIDATE_SHADERDESC_TEXTURE_SAMPLER_PAIR_GLSL_NAME	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_TEXTURE_SAMPLER_PAIR_GLSL_NAME = 219,$/;"	v
VALIDATE_SHADERDESC_TEXTURE_SAMPLER_PAIR_SAMPLER_SLOT_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_TEXTURE_SAMPLER_PAIR_SAMPLER_SLOT_OUT_OF_RANGE = 215,$/;"	v
VALIDATE_SHADERDESC_TEXTURE_SAMPLER_PAIR_SAMPLER_STAGE_MISMATCH	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_TEXTURE_SAMPLER_PAIR_SAMPLER_STAGE_MISMATCH = 218,$/;"	v
VALIDATE_SHADERDESC_TEXTURE_SAMPLER_PAIR_TEXTURE_STAGE_MISMATCH	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_TEXTURE_SAMPLER_PAIR_TEXTURE_STAGE_MISMATCH = 216,$/;"	v
VALIDATE_SHADERDESC_TEXTURE_SAMPLER_PAIR_VIEW_SLOT_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_TEXTURE_SAMPLER_PAIR_VIEW_SLOT_OUT_OF_RANGE = 214,$/;"	v
VALIDATE_SHADERDESC_TEXVIEW_NOT_REFERENCED_BY_TEXTURE_SAMPLER_PAIRS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_TEXVIEW_NOT_REFERENCED_BY_TEXTURE_SAMPLER_PAIRS = 222,$/;"	v
VALIDATE_SHADERDESC_UNIFORMBLOCK_ARRAY_COUNT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_UNIFORMBLOCK_ARRAY_COUNT = 196,$/;"	v
VALIDATE_SHADERDESC_UNIFORMBLOCK_HLSL_REGISTER_B_COLLISION	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_UNIFORMBLOCK_HLSL_REGISTER_B_COLLISION = 191,$/;"	v
VALIDATE_SHADERDESC_UNIFORMBLOCK_METAL_BUFFER_SLOT_COLLISION	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_UNIFORMBLOCK_METAL_BUFFER_SLOT_COLLISION = 190,$/;"	v
VALIDATE_SHADERDESC_UNIFORMBLOCK_NO_CONT_MEMBERS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_UNIFORMBLOCK_NO_CONT_MEMBERS = 188,$/;"	v
VALIDATE_SHADERDESC_UNIFORMBLOCK_NO_MEMBERS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_UNIFORMBLOCK_NO_MEMBERS = 193,$/;"	v
VALIDATE_SHADERDESC_UNIFORMBLOCK_SIZE_IS_ZERO	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_UNIFORMBLOCK_SIZE_IS_ZERO = 189,$/;"	v
VALIDATE_SHADERDESC_UNIFORMBLOCK_SIZE_MISMATCH	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_UNIFORMBLOCK_SIZE_MISMATCH = 195,$/;"	v
VALIDATE_SHADERDESC_UNIFORMBLOCK_STD140_ARRAY_TYPE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_UNIFORMBLOCK_STD140_ARRAY_TYPE = 197,$/;"	v
VALIDATE_SHADERDESC_UNIFORMBLOCK_UNIFORM_GLSL_NAME	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_UNIFORMBLOCK_UNIFORM_GLSL_NAME = 194,$/;"	v
VALIDATE_SHADERDESC_UNIFORMBLOCK_WGSL_GROUP0_BINDING_COLLISION	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_UNIFORMBLOCK_WGSL_GROUP0_BINDING_COLLISION = 192,$/;"	v
VALIDATE_SHADERDESC_VERTEX_SOURCE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_VERTEX_SOURCE = 178,$/;"	v
VALIDATE_SHADERDESC_VERTEX_SOURCE_OR_BYTECODE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_VERTEX_SOURCE_OR_BYTECODE = 181,$/;"	v
VALIDATE_SHADERDESC_VIEW_STORAGEBUFFER_GLSL_BINDING_COLLISION	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_VIEW_STORAGEBUFFER_GLSL_BINDING_COLLISION = 201,$/;"	v
VALIDATE_SHADERDESC_VIEW_STORAGEBUFFER_HLSL_REGISTER_T_COLLISION	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_VIEW_STORAGEBUFFER_HLSL_REGISTER_T_COLLISION = 199,$/;"	v
VALIDATE_SHADERDESC_VIEW_STORAGEBUFFER_HLSL_REGISTER_U_COLLISION	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_VIEW_STORAGEBUFFER_HLSL_REGISTER_U_COLLISION = 200,$/;"	v
VALIDATE_SHADERDESC_VIEW_STORAGEBUFFER_METAL_BUFFER_SLOT_COLLISION	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_VIEW_STORAGEBUFFER_METAL_BUFFER_SLOT_COLLISION = 198,$/;"	v
VALIDATE_SHADERDESC_VIEW_STORAGEBUFFER_WGSL_GROUP1_BINDING_COLLISION	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_VIEW_STORAGEBUFFER_WGSL_GROUP1_BINDING_COLLISION = 202,$/;"	v
VALIDATE_SHADERDESC_VIEW_STORAGEIMAGE_EXPECT_COMPUTE_STAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_VIEW_STORAGEIMAGE_EXPECT_COMPUTE_STAGE = 203,$/;"	v
VALIDATE_SHADERDESC_VIEW_STORAGEIMAGE_GLSL_BINDING_COLLISION	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_VIEW_STORAGEIMAGE_GLSL_BINDING_COLLISION = 206,$/;"	v
VALIDATE_SHADERDESC_VIEW_STORAGEIMAGE_HLSL_REGISTER_U_COLLISION	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_VIEW_STORAGEIMAGE_HLSL_REGISTER_U_COLLISION = 205,$/;"	v
VALIDATE_SHADERDESC_VIEW_STORAGEIMAGE_METAL_TEXTURE_SLOT_COLLISION	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_VIEW_STORAGEIMAGE_METAL_TEXTURE_SLOT_COLLISION = 204,$/;"	v
VALIDATE_SHADERDESC_VIEW_STORAGEIMAGE_WGSL_GROUP1_BINDING_COLLISION	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_VIEW_STORAGEIMAGE_WGSL_GROUP1_BINDING_COLLISION = 207,$/;"	v
VALIDATE_SHADERDESC_VIEW_TEXTURE_HLSL_REGISTER_T_COLLISION	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_VIEW_TEXTURE_HLSL_REGISTER_T_COLLISION = 209,$/;"	v
VALIDATE_SHADERDESC_VIEW_TEXTURE_METAL_TEXTURE_SLOT_COLLISION	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_VIEW_TEXTURE_METAL_TEXTURE_SLOT_COLLISION = 208,$/;"	v
VALIDATE_SHADERDESC_VIEW_TEXTURE_WGSL_GROUP1_BINDING_COLLISION	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_SHADERDESC_VIEW_TEXTURE_WGSL_GROUP1_BINDING_COLLISION = 210,$/;"	v
VALIDATE_UPDATEBUF_APPEND	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_UPDATEBUF_APPEND = 411,$/;"	v
VALIDATE_UPDATEBUF_ONCE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_UPDATEBUF_ONCE = 410,$/;"	v
VALIDATE_UPDATEBUF_SIZE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_UPDATEBUF_SIZE = 409,$/;"	v
VALIDATE_UPDATEBUF_USAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_UPDATEBUF_USAGE = 408,$/;"	v
VALIDATE_UPDIMG_ONCE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_UPDIMG_ONCE = 416,$/;"	v
VALIDATE_UPDIMG_USAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_UPDIMG_USAGE = 415,$/;"	v
VALIDATE_VIEWDESC_ANY_VIEWTYPE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_ANY_VIEWTYPE = 237,$/;"	v
VALIDATE_VIEWDESC_CANARY	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_CANARY = 235,$/;"	v
VALIDATE_VIEWDESC_COLORATTACHMENT_PIXELFORMAT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_COLORATTACHMENT_PIXELFORMAT = 259,$/;"	v
VALIDATE_VIEWDESC_COLORATTACHMENT_USAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_COLORATTACHMENT_USAGE = 244,$/;"	v
VALIDATE_VIEWDESC_DEPTHSTENCILATTACHMENT_PIXELFORMAT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_DEPTHSTENCILATTACHMENT_PIXELFORMAT = 260,$/;"	v
VALIDATE_VIEWDESC_DEPTHSTENCILATTACHMENT_USAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_DEPTHSTENCILATTACHMENT_USAGE = 246,$/;"	v
VALIDATE_VIEWDESC_IMAGE_2D_SLICE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_IMAGE_2D_SLICE = 248,$/;"	v
VALIDATE_VIEWDESC_IMAGE_3D_SLICE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_IMAGE_3D_SLICE = 251,$/;"	v
VALIDATE_VIEWDESC_IMAGE_ARRAY_SLICE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_IMAGE_ARRAY_SLICE = 250,$/;"	v
VALIDATE_VIEWDESC_IMAGE_CUBEMAP_SLICE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_IMAGE_CUBEMAP_SLICE = 249,$/;"	v
VALIDATE_VIEWDESC_IMAGE_MIPLEVEL	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_IMAGE_MIPLEVEL = 247,$/;"	v
VALIDATE_VIEWDESC_RESOLVEATTACHMENT_SAMPLECOUNT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_RESOLVEATTACHMENT_SAMPLECOUNT = 261,$/;"	v
VALIDATE_VIEWDESC_RESOLVEATTACHMENT_USAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_RESOLVEATTACHMENT_USAGE = 245,$/;"	v
VALIDATE_VIEWDESC_RESOURCE_ALIVE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_RESOURCE_ALIVE = 238,$/;"	v
VALIDATE_VIEWDESC_RESOURCE_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_RESOURCE_FAILED = 239,$/;"	v
VALIDATE_VIEWDESC_STORAGEBUFFER_OFFSET_MULTIPLE_256	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_STORAGEBUFFER_OFFSET_MULTIPLE_256 = 241,$/;"	v
VALIDATE_VIEWDESC_STORAGEBUFFER_OFFSET_VS_BUFFER_SIZE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_STORAGEBUFFER_OFFSET_VS_BUFFER_SIZE = 240,$/;"	v
VALIDATE_VIEWDESC_STORAGEBUFFER_USAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_STORAGEBUFFER_USAGE = 242,$/;"	v
VALIDATE_VIEWDESC_STORAGEIMAGE_PIXELFORMAT	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_STORAGEIMAGE_PIXELFORMAT = 258,$/;"	v
VALIDATE_VIEWDESC_STORAGEIMAGE_USAGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_STORAGEIMAGE_USAGE = 243,$/;"	v
VALIDATE_VIEWDESC_TEXTURE_2D_SLICES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_TEXTURE_2D_SLICES = 254,$/;"	v
VALIDATE_VIEWDESC_TEXTURE_3D_SLICES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_TEXTURE_3D_SLICES = 257,$/;"	v
VALIDATE_VIEWDESC_TEXTURE_ARRAY_SLICES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_TEXTURE_ARRAY_SLICES = 256,$/;"	v
VALIDATE_VIEWDESC_TEXTURE_CUBEMAP_SLICES	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_TEXTURE_CUBEMAP_SLICES = 255,$/;"	v
VALIDATE_VIEWDESC_TEXTURE_EXPECT_NO_MSAA	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_TEXTURE_EXPECT_NO_MSAA = 252,$/;"	v
VALIDATE_VIEWDESC_TEXTURE_MIPLEVELS	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_TEXTURE_MIPLEVELS = 253,$/;"	v
VALIDATE_VIEWDESC_UNIQUE_VIEWTYPE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATE_VIEWDESC_UNIQUE_VIEWTYPE = 236,$/;"	v
VALIDATION_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VALIDATION_FAILED = 417,$/;"	v
VAR_QUEUED	$C2_ROOT/ir/interference_graph.c2	/^    g.register_map[var_idx] = VAR_QUEUED;$/;"	v
VAR_TODO	$C2_ROOT/ir/interference_graph.c2	/^    g.register_map[var_idx] = VAR_TODO;$/;"	v
VERTEX	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VERTEX = 1,$/;"	v
VIEW_POOL_EXHAUSTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VIEW_POOL_EXHAUSTED = 120,$/;"	v
VOLUMEDOWN	$C2_ROOT/libs/sdl2/sdl.c2i	/^    VOLUMEDOWN = 129,$/;"	v
VOLUMEUP	$C2_ROOT/libs/sdl2/sdl.c2i	/^    VOLUMEUP = 128,$/;"	v
ValType	$C2_ROOT/ast/expr.c2	/^public type ValType enum u8 {$/;"	t
Value	$C2_ROOT/analyser/module_analyser_expr.c2	/^    Value rval;$/;"	v
Value	$C2_ROOT/ast/ast_evaluator.c2	/^    Value right;$/;"	v
Value	$C2_ROOT/ast/builtin_expr.c2	/^    Value value;$/;"	v
Value	$C2_ROOT/ast/enum_constant_decl.c2	/^    Value value;$/;"	v
Value	$C2_ROOT/ast/value.c2	/^public type Value struct {$/;"	t
Value	$C2_ROOT/ast_utils/attr.c2	/^public type Value struct {$/;"	t
Value	$C2_ROOT/common/value_maplist.c2	/^public type Value struct {$/;"	t
Value	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^    Value value;$/;"	v
Value	$C2_ROOT/ir/ref.c2	/^    return r.kind == RefKind.Value;$/;"	v
ValueKind	$C2_ROOT/ast/value.c2	/^public type ValueKind enum u8 {$/;"	t
ValueKind	$C2_ROOT/ast_utils/attr.c2	/^public type ValueKind enum u8 {$/;"	t
Var	$C2_ROOT/analyser/module_analyser_expr.c2	/^            kind = IdentifierKind.Var;$/;"	v
Var	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^            return IdentifierKind.Var;$/;"	v
Var	$C2_ROOT/ast/identifier_expr.c2	/^    Var,$/;"	v
Var	$C2_ROOT/ast/member_expr.c2	/^    return e.getKind() == IdentifierKind.Var;$/;"	v
VarDecl	$C2_ROOT/ast/var_decl.c2	/^public type VarDecl struct @(opaque) {$/;"	t
VarDeclBits	$C2_ROOT/ast/decl.c2	/^        VarDeclBits varDeclBits;$/;"	v
VarDeclBits	$C2_ROOT/ast/var_decl.c2	/^type VarDeclBits struct {$/;"	t
VarDeclInit	$C2_ROOT/ast/var_decl.c2	/^type VarDeclInit struct {$/;"	t
VarDeclKind	$C2_ROOT/ast/var_decl.c2	/^public type VarDeclKind enum u8 {$/;"	t
VarDeclVisitor	$C2_ROOT/ast/ast.c2	/^public type VarDeclVisitor fn void (void* arg, VarDecl* d);$/;"	t
Variable	$C2_ROOT/ast/decl.c2	/^    return d.getKind() == DeclKind.Variable;$/;"	v
Variable	$C2_ROOT/ir/interference_graph.c2	/^type Variable struct {$/;"	t
Variable	$C2_ROOT/ir/live_map.c2	/^type Variable struct {$/;"	t
Vec2	$C2_ROOT/libs/sokol/sokol_math.c2i	/^type Vec2 struct {$/;"	t
Vec3	$C2_ROOT/libs/sokol/sokol_math.c2i	/^type Vec3 struct {$/;"	t
Vec4	$C2_ROOT/libs/sokol/sokol_math.c2i	/^type Vec4 struct {$/;"	t
Vendor	$C2_ROOT/common/target_info.c2	/^public type Vendor enum u8 { Unknown, Apple }$/;"	t
Verify_fn	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Verify_fn fn c_int(void*, X509_crt *, c_int, c_uint*);$/;"	t
Vertex	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^type Vertex struct @(cname="sshape_vertex_t") {$/;"	t
VertexAttrState	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type VertexAttrState struct @(cname="sg_vertex_attr_state") {$/;"	t
VertexBufferLayoutState	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type VertexBufferLayoutState struct @(cname="sg_vertex_buffer_layout_state") {$/;"	t
VertexFormat	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type VertexFormat enum u32 @(cname="sg_vertex_format") {$/;"	t
VertexLayoutState	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type VertexLayoutState struct @(cname="sg_vertex_layout_state") {$/;"	t
VertexStep	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type VertexStep enum u32 @(cname="sg_vertex_step") {$/;"	t
Vertical	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Vertical   = 0x00000002$/;"	v
View	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type View struct @(cname="sg_view") {$/;"	t
ViewDesc	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ViewDesc struct @(cname="sg_view_desc") {$/;"	t
ViewInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ViewInfo struct @(cname="sg_view_info") {$/;"	t
ViewType	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type ViewType enum u32 @(cname="sg_view_type") {$/;"	t
Visitor	$C2_ROOT/common/library_list.c2	/^public type Visitor fn void (void* arg, u32 name, bool is_static);$/;"	t
Visitor	$C2_ROOT/common/module_list.c2	/^public type Visitor fn void (void* arg, ast.Module* m);$/;"	t
Visitor	$C2_ROOT/common/source_mgr.c2	/^public type Visitor fn void (void* arg, u32 start, u32 size, const char* filename, const char* c/;"	t
Visitor	$C2_ROOT/generator/ast_visitor.c2	/^public type Visitor struct @(opaque) {$/;"	t
Void	$C2_ROOT/ast/builtin_type.c2	/^    return b.base.builtinTypeBits.kind == BuiltinKind.Void;$/;"	v
Void	$C2_ROOT/ast/type_ref.c2	/^    return r.isBuiltin() && r.flags.num_ptrs == 0 && r.getBuiltinKind() == BuiltinKind.Void;$/;"	v
Void	$C2_ROOT/generator/c/c_generator_expr.c2	/^    [BuiltinKind.Void] = false,$/;"	v
Void	$C2_ROOT/generator/ir/ir_generator.c2	/^    [BuiltinKind.Void]    = None,$/;"	v
WASAPI_AUDIO_CLIENT_GET_BUFFER_SIZE_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    WASAPI_AUDIO_CLIENT_GET_BUFFER_SIZE_FAILED = 14,$/;"	v
WASAPI_AUDIO_CLIENT_GET_SERVICE_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    WASAPI_AUDIO_CLIENT_GET_SERVICE_FAILED = 15,$/;"	v
WASAPI_AUDIO_CLIENT_INITIALIZE_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    WASAPI_AUDIO_CLIENT_INITIALIZE_FAILED = 13,$/;"	v
WASAPI_AUDIO_CLIENT_SET_EVENT_HANDLE_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    WASAPI_AUDIO_CLIENT_SET_EVENT_HANDLE_FAILED = 16,$/;"	v
WASAPI_CREATE_DEVICE_ENUMERATOR_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    WASAPI_CREATE_DEVICE_ENUMERATOR_FAILED = 10,$/;"	v
WASAPI_CREATE_EVENT_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    WASAPI_CREATE_EVENT_FAILED = 9,$/;"	v
WASAPI_CREATE_THREAD_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    WASAPI_CREATE_THREAD_FAILED = 17,$/;"	v
WASAPI_DEVICE_ACTIVATE_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    WASAPI_DEVICE_ACTIVATE_FAILED = 12,$/;"	v
WASAPI_GET_DEFAULT_AUDIO_ENDPOINT_FAILED	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    WASAPI_GET_DEFAULT_AUDIO_ENDPOINT_FAILED = 11,$/;"	v
WGPU	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WGPU = 6,$/;"	v
WGPU_BINDGROUPSCACHE_SIZE_GREATER_ONE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WGPU_BINDGROUPSCACHE_SIZE_GREATER_ONE = 71,$/;"	v
WGPU_BINDGROUPSCACHE_SIZE_POW2	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WGPU_BINDGROUPSCACHE_SIZE_POW2 = 72,$/;"	v
WGPU_BINDGROUPS_POOL_EXHAUSTED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WGPU_BINDGROUPS_POOL_EXHAUSTED = 70,$/;"	v
WGPU_CREATEBINDGROUP_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WGPU_CREATEBINDGROUP_FAILED = 73,$/;"	v
WGPU_CREATE_BUFFER_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WGPU_CREATE_BUFFER_FAILED = 74,$/;"	v
WGPU_CREATE_COMPUTE_PIPELINE_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WGPU_CREATE_COMPUTE_PIPELINE_FAILED = 87,$/;"	v
WGPU_CREATE_INSTANCE_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WGPU_CREATE_INSTANCE_FAILED = 100,$/;"	v
WGPU_CREATE_PIPELINE_LAYOUT_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WGPU_CREATE_PIPELINE_LAYOUT_FAILED = 85,$/;"	v
WGPU_CREATE_RENDER_PIPELINE_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WGPU_CREATE_RENDER_PIPELINE_FAILED = 86,$/;"	v
WGPU_CREATE_SAMPLER_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WGPU_CREATE_SAMPLER_FAILED = 77,$/;"	v
WGPU_CREATE_SHADER_MODULE_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WGPU_CREATE_SHADER_MODULE_FAILED = 78,$/;"	v
WGPU_CREATE_TEXTURE_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WGPU_CREATE_TEXTURE_FAILED = 75,$/;"	v
WGPU_CREATE_TEXTURE_VIEW_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WGPU_CREATE_TEXTURE_VIEW_FAILED = 76,$/;"	v
WGPU_DEVICE_LOG	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WGPU_DEVICE_LOG = 86,$/;"	v
WGPU_DEVICE_LOST	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WGPU_DEVICE_LOST = 85,$/;"	v
WGPU_DEVICE_UNCAPTURED_ERROR	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WGPU_DEVICE_UNCAPTURED_ERROR = 87,$/;"	v
WGPU_REQUEST_ADAPTER_STATUS_ERROR	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WGPU_REQUEST_ADAPTER_STATUS_ERROR = 98,$/;"	v
WGPU_REQUEST_ADAPTER_STATUS_UNAVAILABLE	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WGPU_REQUEST_ADAPTER_STATUS_UNAVAILABLE = 97,$/;"	v
WGPU_REQUEST_ADAPTER_STATUS_UNKNOWN	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WGPU_REQUEST_ADAPTER_STATUS_UNKNOWN = 99,$/;"	v
WGPU_REQUEST_DEVICE_STATUS_ERROR	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WGPU_REQUEST_DEVICE_STATUS_ERROR = 95,$/;"	v
WGPU_REQUEST_DEVICE_STATUS_UNKNOWN	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WGPU_REQUEST_DEVICE_STATUS_UNKNOWN = 96,$/;"	v
WGPU_SAMPLER_WGSL_GROUP1_BINDING_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WGPU_SAMPLER_WGSL_GROUP1_BINDING_OUT_OF_RANGE = 84,$/;"	v
WGPU_SHADER_CREATE_BINDGROUP_LAYOUT_FAILED	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WGPU_SHADER_CREATE_BINDGROUP_LAYOUT_FAILED = 79,$/;"	v
WGPU_STORAGEBUFFER_WGSL_GROUP1_BINDING_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WGPU_STORAGEBUFFER_WGSL_GROUP1_BINDING_OUT_OF_RANGE = 82,$/;"	v
WGPU_STORAGEIMAGE_WGSL_GROUP1_BINDING_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WGPU_STORAGEIMAGE_WGSL_GROUP1_BINDING_OUT_OF_RANGE = 83,$/;"	v
WGPU_SWAPCHAIN_CREATE_DEPTH_STENCIL_TEXTURE_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WGPU_SWAPCHAIN_CREATE_DEPTH_STENCIL_TEXTURE_FAILED = 90,$/;"	v
WGPU_SWAPCHAIN_CREATE_DEPTH_STENCIL_VIEW_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WGPU_SWAPCHAIN_CREATE_DEPTH_STENCIL_VIEW_FAILED = 91,$/;"	v
WGPU_SWAPCHAIN_CREATE_MSAA_TEXTURE_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WGPU_SWAPCHAIN_CREATE_MSAA_TEXTURE_FAILED = 92,$/;"	v
WGPU_SWAPCHAIN_CREATE_MSAA_VIEW_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WGPU_SWAPCHAIN_CREATE_MSAA_VIEW_FAILED = 93,$/;"	v
WGPU_SWAPCHAIN_CREATE_SURFACE_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WGPU_SWAPCHAIN_CREATE_SURFACE_FAILED = 88,$/;"	v
WGPU_SWAPCHAIN_GETCURRENTTEXTURE_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WGPU_SWAPCHAIN_GETCURRENTTEXTURE_FAILED = 94,$/;"	v
WGPU_SWAPCHAIN_SURFACE_GET_CAPABILITIES_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WGPU_SWAPCHAIN_SURFACE_GET_CAPABILITIES_FAILED = 89,$/;"	v
WGPU_TEXTURE_WGSL_GROUP1_BINDING_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WGPU_TEXTURE_WGSL_GROUP1_BINDING_OUT_OF_RANGE = 81,$/;"	v
WGPU_UNIFORMBLOCK_WGSL_GROUP0_BINDING_OUT_OF_RANGE	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WGPU_UNIFORMBLOCK_WGSL_GROUP0_BINDING_OUT_OF_RANGE = 80,$/;"	v
WIN32	$C2_ROOT/common/target_info.c2	/^        info.abi = Abi.WIN32;$/;"	v
WIN32_CREATE_DUMMY_CONTEXT_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_CREATE_DUMMY_CONTEXT_FAILED = 7,$/;"	v
WIN32_CREATE_HELPER_WINDOW_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_CREATE_HELPER_WINDOW_FAILED = 4,$/;"	v
WIN32_D3D11_CREATE_DEVICE_AND_SWAPCHAIN_WITH_DEBUG_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_D3D11_CREATE_DEVICE_AND_SWAPCHAIN_WITH_DEBUG_FAILED = 19,$/;"	v
WIN32_D3D11_GET_IDXGIADAPTER_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_D3D11_GET_IDXGIADAPTER_FAILED = 21,$/;"	v
WIN32_D3D11_GET_IDXGIFACTORY_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_D3D11_GET_IDXGIFACTORY_FAILED = 20,$/;"	v
WIN32_D3D11_QUERY_INTERFACE_IDXGIDEVICE1_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_D3D11_QUERY_INTERFACE_IDXGIDEVICE1_FAILED = 22,$/;"	v
WIN32_DESTROYICON_FOR_CURSOR_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_DESTROYICON_FOR_CURSOR_FAILED = 26,$/;"	v
WIN32_DUMMY_CONTEXT_MAKE_CURRENT_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_DUMMY_CONTEXT_MAKE_CURRENT_FAILED = 8,$/;"	v
WIN32_DUMMY_CONTEXT_SET_PIXELFORMAT_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_DUMMY_CONTEXT_SET_PIXELFORMAT_FAILED = 6,$/;"	v
WIN32_GET_PIXELFORMAT_ATTRIB_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_GET_PIXELFORMAT_ATTRIB_FAILED = 9,$/;"	v
WIN32_GET_RAW_INPUT_DATA_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_GET_RAW_INPUT_DATA_FAILED = 25,$/;"	v
WIN32_HELPER_WINDOW_GETDC_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_HELPER_WINDOW_GETDC_FAILED = 5,$/;"	v
WIN32_LOAD_OPENGL32_DLL_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_LOAD_OPENGL32_DLL_FAILED = 3,$/;"	v
WIN32_REGISTER_RAW_INPUT_DEVICES_FAILED_MOUSE_LOCK	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_REGISTER_RAW_INPUT_DEVICES_FAILED_MOUSE_LOCK = 23,$/;"	v
WIN32_REGISTER_RAW_INPUT_DEVICES_FAILED_MOUSE_UNLOCK	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_REGISTER_RAW_INPUT_DEVICES_FAILED_MOUSE_UNLOCK = 24,$/;"	v
WIN32_WGL_ARB_CREATE_CONTEXT_PROFILE_REQUIRED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_WGL_ARB_CREATE_CONTEXT_PROFILE_REQUIRED = 14,$/;"	v
WIN32_WGL_ARB_CREATE_CONTEXT_REQUIRED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_WGL_ARB_CREATE_CONTEXT_REQUIRED = 13,$/;"	v
WIN32_WGL_CREATE_CONTEXT_ATTRIBS_FAILED_OTHER	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_WGL_CREATE_CONTEXT_ATTRIBS_FAILED_OTHER = 18,$/;"	v
WIN32_WGL_DESCRIBE_PIXELFORMAT_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_WGL_DESCRIBE_PIXELFORMAT_FAILED = 11,$/;"	v
WIN32_WGL_FIND_PIXELFORMAT_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_WGL_FIND_PIXELFORMAT_FAILED = 10,$/;"	v
WIN32_WGL_INCOMPATIBLE_DEVICE_CONTEXT	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_WGL_INCOMPATIBLE_DEVICE_CONTEXT = 17,$/;"	v
WIN32_WGL_OPENGL_PROFILE_NOT_SUPPORTED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_WGL_OPENGL_PROFILE_NOT_SUPPORTED = 16,$/;"	v
WIN32_WGL_OPENGL_VERSION_NOT_SUPPORTED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_WGL_OPENGL_VERSION_NOT_SUPPORTED = 15,$/;"	v
WIN32_WGL_SET_PIXELFORMAT_FAILED	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WIN32_WGL_SET_PIXELFORMAT_FAILED = 12,$/;"	v
WORLD_1	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WORLD_1 = 161,$/;"	v
WORLD_2	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    WORLD_2 = 162,$/;"	v
WRITE	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    WRITE,$/;"	v
WRITEV	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    WRITEV,$/;"	v
WRITE_FIXED	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    WRITE_FIXED,$/;"	v
WWW	$C2_ROOT/libs/sdl2/sdl.c2i	/^    WWW = 264,$/;"	v
Warning	$C2_ROOT/common/diagnostics.c2	/^    Warning,$/;"	v
Warning	$C2_ROOT/parser/c2_tokenizer.c2	/^        result.kind = Kind.Warning;$/;"	v
Warning	$C2_ROOT/parser/token.c2	/^    [Kind.Warning]          = "warning",$/;"	v
Warnings	$C2_ROOT/compiler/c2recipe_parser.c2	/^    Warnings,$/;"	v
Weak	$C2_ROOT/ast_utils/attr.c2	/^    [AttrKind.Weak]         = AttrReq.NoArg,$/;"	v
WgpuBufferInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type WgpuBufferInfo struct @(cname="sg_wgpu_buffer_info") {$/;"	t
WgpuEnvironment	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type WgpuEnvironment struct @(cname="sg_wgpu_environment") {$/;"	t
WgpuImageInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type WgpuImageInfo struct @(cname="sg_wgpu_image_info") {$/;"	t
WgpuPipelineInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type WgpuPipelineInfo struct @(cname="sg_wgpu_pipeline_info") {$/;"	t
WgpuSamplerInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type WgpuSamplerInfo struct @(cname="sg_wgpu_sampler_info") {$/;"	t
WgpuShaderInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type WgpuShaderInfo struct @(cname="sg_wgpu_shader_info") {$/;"	t
WgpuSwapchain	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type WgpuSwapchain struct @(cname="sg_wgpu_swapchain") {$/;"	t
WgpuViewInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type WgpuViewInfo struct @(cname="sg_wgpu_view_info") {$/;"	t
While	$C2_ROOT/ast/stmt.c2	/^    While,$/;"	v
WhileBody	$C2_ROOT/ir/block.c2	/^    WhileBody,$/;"	v
WhileCond	$C2_ROOT/ir/block.c2	/^    WhileCond,$/;"	v
WhileJoin	$C2_ROOT/ir/block.c2	/^    WhileJoin,$/;"	v
WhileStmt	$C2_ROOT/ast/while_stmt.c2	/^public type WhileStmt struct @(opaque) {$/;"	t
White	$C2_ROOT/ir/print.c2	/^const char* col_Name = color.White;$/;"	v
Window	$C2_ROOT/libs/sdl2/sdl.c2i	/^type Window struct @(opaque, cname="SDL_Window");$/;"	t
WindowEvent	$C2_ROOT/libs/sdl2/sdl.c2i	/^type WindowEvent struct {$/;"	t
WindowEventId	$C2_ROOT/libs/sdl2/sdl.c2i	/^type WindowEventId enum u8 {$/;"	t
Words	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^type Words struct {$/;"	t
WorkQueue	$C2_ROOT/ir/work_queue.c2	/^type WorkQueue struct {$/;"	t
Wrap	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^type Wrap enum u32 @(cname="sg_wrap") {$/;"	t
Wrapper	$C2_ROOT/generator/generator_utils.c2	/^type Wrapper struct {$/;"	t
WriteSlotAccess	$C2_ROOT/ir/slot_collector.c2	/^type WriteSlotAccess struct {$/;"	t
Writer	$C2_ROOT/libs/lua/lua.c2i	/^type Writer fn void* (State *L, const void *p, c_size sz, void *ud) @(cname="lua_Writer");$/;"	t
X509_buf	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type X509_buf Asn1_buf @(cname="mbedtls_x509_buf");$/;"	t
X509_crl	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type X509_crl struct @(cname="mbedtls_x509_crl") {$/;"	t
X509_crl_entry	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type X509_crl_entry struct @(cname="mbedtls_x509_crl_entry") {$/;"	t
X509_crt	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type X509_crt struct @(cname="mbedtls_x509_crt") {$/;"	t
X509_crt_profile	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type X509_crt_profile struct @(cname="mbedtls_x509_crt_profile") {$/;"	t
X509_name	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type X509_name Asn1_named_data @(cname="mbedtls_x509_name");$/;"	t
X509_sequence	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type X509_sequence Asn1_sequence @(cname="mbedtls_x509_sequence");$/;"	t
X509_time	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type X509_time struct @(cname="mbedtls_x509_time") {$/;"	t
Xor	$C2_ROOT/ast/binary_operator.c2	/^    Xor,$/;"	v
Xor	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.Xor]         = Bitwise,$/;"	v
Xor	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.Xor]         = Xor,$/;"	v
Xor	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        kind = InstrKind.Xor;$/;"	v
Xor	$C2_ROOT/ir/instr_kind.c2	/^    Xor,$/;"	v
XorAssign	$C2_ROOT/ast/binary_operator.c2	/^    XorAssign,$/;"	v
XorAssign	$C2_ROOT/common/c2_prec.c2	/^    [BinaryOpcode.XorAssign]   = Assignment,$/;"	v
XorAssign	$C2_ROOT/common/c_prec.c2	/^    [BinaryOpcode.XorAssign]   = Assignment,$/;"	v
Yellow	$C2_ROOT/ir/print.c2	/^const char* col_Unknown = color.Yellow;$/;"	v
ZERO	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ZERO = 2,$/;"	v
Zone	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^type Zone struct {$/;"	t
_Bool	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool warn_on_unused;$/;"	v
_Exit	$C2_ROOT/libs/libc/stdlib.c2i	/^fn void _Exit(c_int __status) @(noreturn);$/;"	f
_IO_marker	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct _IO_marker_ _IO_marker;$/;"	v
__align	$C2_ROOT/libs/pthread/pthread.c2i	/^    c_long __align;$/;"	v
__d_padding	$C2_ROOT/libs/libc/libc_dirent.c2i	/^    u8[4] __d_padding;$/;"	v
__errno	$C2_ROOT/libs/libc/c_errno.c2i	/^fn c_int* __errno();$/;"	f
__errno_location	$C2_ROOT/libs/libc/c_errno.c2i	/^fn c_int* __errno_location();$/;"	f
__error	$C2_ROOT/libs/libc/c_errno.c2i	/^fn c_int* __error();$/;"	f
__getdelim	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_ssize __getdelim(c_char** __lineptr, c_size* __n, c_int __delimiter, FILE* __stream);$/;"	f
__jmp_buf_tag	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct __jmp_buf_tag_ __jmp_buf_tag;$/;"	v
__pad	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  u8[28] __pad;$/;"	v
__pad2	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u64[2]   __pad2;$/;"	v
__pad2	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  u16 __pad2;$/;"	v
__stderrp	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^> extern FILE* __stderrp;$/;"	v
__stderrp	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^> extern FILE* __stderrp;$/;"	v
__stderrp	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^> extern FILE* __stderrp;$/;"	v
__stdoutp	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^> extern FILE* __stdoutp;$/;"	v
__stdoutp	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^> extern FILE* __stdoutp;$/;"	v
__stdoutp	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^> extern FILE* __stdoutp;$/;"	v
__val	$C2_ROOT/libs/libc/csignal.c2i	/^    u64[SIGSET_NWORDS] __val;$/;"	v
__xuname	$C2_ROOT/libs/libc/sys_utsname.c2i	/^fn c_int __xuname(c_int len, void *);       \/* Variable record size. *\/$/;"	f
_base	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    uint8_t* _base;$/;"	v
_base	$C2_ROOT/libs/libc/stdio.c2i	/^    u8 *_base;$/;"	v
_bf	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    Sbuf__ _bf;$/;"	v
_bf	$C2_ROOT/libs/libc/stdio.c2i	/^    Sbuf__ _bf;$/;"	v
_blksize	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    c_int _blksize;$/;"	v
_blksize	$C2_ROOT/libs/libc/stdio.c2i	/^    c_int _blksize;$/;"	v
_close	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    void* _close;$/;"	v
_cookie	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    void* _cookie;$/;"	v
_cookie	$C2_ROOT/libs/libc/stdio.c2i	/^    void *_cookie;$/;"	v
_end_canary	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 _end_canary;$/;"	v
_exit	$C2_ROOT/libs/libc/stdlib.c2i	/^fn void _exit(c_int __status) @(noreturn);$/;"	f
_ext	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    Sbuf__ _ext;$/;"	v
_ext	$C2_ROOT/libs/libc/stdio.c2i	/^    Sbuf__ _ext;$/;"	v
_file	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    c_short _file;$/;"	v
_file	$C2_ROOT/libs/libc/stdio.c2i	/^    c_short _file;$/;"	v
_flags	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    c_short _flags;$/;"	v
_flags	$C2_ROOT/libs/libc/stdio.c2i	/^    c_short _flags;$/;"	v
_lb	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    Sbuf__ _lb;$/;"	v
_lb	$C2_ROOT/libs/libc/stdio.c2i	/^    Sbuf__ _lb;$/;"	v
_lbfsize	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    c_int _lbfsize;$/;"	v
_lbfsize	$C2_ROOT/libs/libc/stdio.c2i	/^    c_int _lbfsize;$/;"	v
_nbuf	$C2_ROOT/libs/libc/stdio.c2i	/^    u8[1] _nbuf;$/;"	v
_offset	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    int64_t _offset;$/;"	v
_offset	$C2_ROOT/libs/libc/stdio.c2i	/^    i64 _offset;$/;"	v
_p	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    uint8_t* _p;$/;"	v
_p	$C2_ROOT/libs/libc/stdio.c2i	/^    u8 *_p;$/;"	v
_pos	$C2_ROOT/bootstrap/bootstrap.c	/^   int32_t _pos;$/;"	v
_pos	$C2_ROOT/libs/libc/stdio.c2i	/^    i32 _pos;$/;"	v
_r	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    c_int _r;$/;"	v
_r	$C2_ROOT/libs/libc/stdio.c2i	/^    c_int _r;$/;"	v
_read	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    void* _read;$/;"	v
_seek	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    void* _seek;$/;"	v
_setjmp	$C2_ROOT/libs/libc/csetjmp.c2i	/^fn i32 _setjmp(JmpBuf __env);$/;"	f
_size	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    c_int _size;$/;"	v
_size	$C2_ROOT/libs/libc/stdio.c2i	/^    c_int _size;$/;"	v
_start_canary	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 _start_canary;$/;"	v
_ubuf	$C2_ROOT/libs/libc/stdio.c2i	/^    u8[3] _ubuf;$/;"	v
_up	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    uint8_t* _up;$/;"	v
_up	$C2_ROOT/libs/libc/stdio.c2i	/^    u8 *_up;$/;"	v
_ur	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    c_int _ur;$/;"	v
_ur	$C2_ROOT/libs/libc/stdio.c2i	/^    c_int _ur;$/;"	v
_w	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    c_int _w;$/;"	v
_w	$C2_ROOT/libs/libc/stdio.c2i	/^    c_int _w;$/;"	v
_write	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    void* _write;$/;"	v
a64l	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_long a64l(const c_char* s);$/;"	f
a8	$C2_ROOT/analyser/size_analyser.c2	/^                u32 ofs = ((pos * 8 + bit_pos) % a8 + bit_size + a8 - 1) \/ a8;$/;"	v
a8	$C2_ROOT/bootstrap/bootstrap.c	/^                  bit_pos -= a8;$/;"	v
abi	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Abi abi;$/;"	v
abi	$C2_ROOT/common/target_info.c2	/^    Abi abi;$/;"	v
abi_str	$C2_ROOT/common/target_info.c2	/^    char[32] abi_str;$/;"	v
abort	$C2_ROOT/libs/libc/stdlib.c2i	/^fn void abort() @(noreturn);$/;"	f
abs	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int abs(c_int __x);$/;"	f
absindex	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int absindex(State* L, c_int idx) @(cname="lua_absindex");$/;"	f
abuf	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^    u8* abuf;$/;"	v
accept	$C2_ROOT/libs/libc/sys_socket.c2i	/^fn c_int accept(c_int sockfd, Sockaddr *addr, u32 *addrlen);$/;"	f
accept4	$C2_ROOT/libs/libc/sys_socket.c2i	/^fn c_int accept4(c_int sockfd, Sockaddr* addr, u32* addrlen, c_int flags);$/;"	f
accept_flags	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        u32       accept_flags;$/;"	v
access_format	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    PixelFormat access_format;$/;"	v
accumulator_started	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    c_int accumulator_started;$/;"	v
acos	$C2_ROOT/libs/math/math.c2i	/^fn c_double acos(c_double);$/;"	f
acosf	$C2_ROOT/libs/math/math.c2i	/^fn c_float acosf(c_float);$/;"	f
acosh	$C2_ROOT/libs/math/math.c2i	/^fn c_double acosh(c_double);$/;"	f
acoshf	$C2_ROOT/libs/math/math.c2i	/^fn c_float acoshf(c_float);$/;"	f
actOnAliasType	$C2_ROOT/parser/ast_builder.c2	/^public fn Decl* Builder.actOnAliasType(Builder* b,$/;"	f
actOnArrayDesignatedInit	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnArrayDesignatedInit(Builder* b,$/;"	f
actOnArraySubscriptExpr	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnArraySubscriptExpr(Builder* b, SrcLoc loc, u32 src_len, Expr* base,/;"	f
actOnArrayType	$C2_ROOT/parser/ast_builder.c2	/^public fn QualType Builder.actOnArrayType(Builder* b,$/;"	f
actOnArrayValue	$C2_ROOT/parser/ast_builder.c2	/^public fn void Builder.actOnArrayValue(Builder* b,$/;"	f
actOnAsmStmt	$C2_ROOT/parser/ast_builder.c2	/^public fn Stmt* Builder.actOnAsmStmt(Builder* b,$/;"	f
actOnAssertStmt	$C2_ROOT/parser/ast_builder.c2	/^public fn Stmt* Builder.actOnAssertStmt(Builder* b, SrcLoc loc, Expr* inner) {$/;"	f
actOnAttr	$C2_ROOT/parser/ast_builder.c2	/^public fn void Builder.actOnAttr(Builder* b, attr.Attr* a) {$/;"	f
actOnBinaryOperator	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnBinaryOperator(Builder* b,$/;"	f
actOnBitOffsetExpr	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnBitOffsetExpr(Builder* b, SrcLoc loc, Expr* lhs, Expr* rhs) {$/;"	f
actOnBooleanConstant	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnBooleanConstant(Builder* b, SrcLoc loc, bool value) {$/;"	f
actOnBreakStmt	$C2_ROOT/parser/ast_builder.c2	/^public fn Stmt* Builder.actOnBreakStmt(Builder* b, SrcLoc loc) {$/;"	f
actOnBuiltinExpr	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnBuiltinExpr(Builder* b,$/;"	f
actOnBuiltinType	$C2_ROOT/parser/ast_builder.c2	/^public fn QualType Builder.actOnBuiltinType(Builder*, BuiltinKind kind) {$/;"	f
actOnCallExpr	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnCallExpr(Builder* b,$/;"	f
actOnCase	$C2_ROOT/parser/ast_builder.c2	/^public fn SwitchCase* Builder.actOnCase(Builder* b,$/;"	f
actOnCharLiteral	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnCharLiteral(Builder* b, SrcLoc loc, u32 src_len, u8 value, Radix ra/;"	f
actOnCompoundStmt	$C2_ROOT/parser/ast_builder.c2	/^public fn CompoundStmt* Builder.actOnCompoundStmt(Builder* b,$/;"	f
actOnConditionalOperator	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnConditionalOperator(Builder* b,$/;"	f
actOnContinueStmt	$C2_ROOT/parser/ast_builder.c2	/^public fn Stmt* Builder.actOnContinueStmt(Builder* b, SrcLoc loc) {$/;"	f
actOnDeclStmt	$C2_ROOT/parser/ast_builder.c2	/^public fn Stmt* Builder.actOnDeclStmt(Builder* b, VarDecl** decl, u32 count)$/;"	f
actOnEnumConstant	$C2_ROOT/parser/ast_builder.c2	/^public fn EnumConstantDecl* Builder.actOnEnumConstant(Builder* b,$/;"	f
actOnEnumType	$C2_ROOT/parser/ast_builder.c2	/^public fn Decl* Builder.actOnEnumType(Builder* b,$/;"	f
actOnExplicitCast	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnExplicitCast(Builder* b,$/;"	f
actOnFallthroughStmt	$C2_ROOT/parser/ast_builder.c2	/^public fn Stmt* Builder.actOnFallthroughStmt(Builder* b, SrcLoc loc) {$/;"	f
actOnFieldDesignatedInit	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnFieldDesignatedInit(Builder* b,$/;"	f
actOnFieldInitInfo	$C2_ROOT/parser/ast_builder.c2	/^public fn FieldInitInfo* Builder.actOnFieldInitInfo(Builder* b, StructTypeDecl* std) {$/;"	f
actOnFloatLiteral	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnFloatLiteral(Builder* b, SrcLoc loc, u32 src_len, f64 value, Radix /;"	f
actOnForStmt	$C2_ROOT/parser/ast_builder.c2	/^public fn Stmt* Builder.actOnForStmt(Builder* b,$/;"	f
actOnFunctionAttr	$C2_ROOT/parser/ast_builder.c2	/^fn void Builder.actOnFunctionAttr(Builder* b, Decl* d, const Attr* a) {$/;"	f
actOnFunctionBody	$C2_ROOT/parser/ast_builder.c2	/^public fn void Builder.actOnFunctionBody(Builder*, FunctionDecl* f, CompoundStmt* body) {$/;"	f
actOnFunctionDecl	$C2_ROOT/parser/ast_builder.c2	/^public fn FunctionDecl* Builder.actOnFunctionDecl(Builder* b,$/;"	f
actOnFunctionParam	$C2_ROOT/parser/ast_builder.c2	/^public fn VarDecl* Builder.actOnFunctionParam(Builder* b,$/;"	f
actOnFunctionTypeDecl	$C2_ROOT/parser/ast_builder.c2	/^public fn Decl* Builder.actOnFunctionTypeDecl(Builder* b,$/;"	f
actOnGlobalVarDecl	$C2_ROOT/parser/ast_builder.c2	/^public fn Decl* Builder.actOnGlobalVarDecl(Builder* b,$/;"	f
actOnGotoStmt	$C2_ROOT/parser/ast_builder.c2	/^public fn Stmt* Builder.actOnGotoStmt(Builder* b, u32 name, SrcLoc loc) {$/;"	f
actOnIdentifier	$C2_ROOT/parser/ast_builder.c2	/^public fn IdentifierExpr* Builder.actOnIdentifier(Builder* b, SrcLoc loc, u32 name) {$/;"	f
actOnIfStmt	$C2_ROOT/parser/ast_builder.c2	/^public fn Stmt* Builder.actOnIfStmt(Builder* b, SrcLoc loc, Stmt* cond, Stmt* then, Stmt* else_s/;"	f
actOnImport	$C2_ROOT/parser/ast_builder.c2	/^public fn void Builder.actOnImport(Builder* b,$/;"	f
actOnIncrementalArrayType	$C2_ROOT/parser/ast_builder.c2	/^public fn QualType Builder.actOnIncrementalArrayType(Builder* b, QualType elem) {$/;"	f
actOnInitList	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnInitList(Builder* b,$/;"	f
actOnIntegerLiteral	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnIntegerLiteral(Builder* b, SrcLoc loc, u32 src_len, u64 value, Radi/;"	f
actOnLabelStmt	$C2_ROOT/parser/ast_builder.c2	/^public fn Stmt* Builder.actOnLabelStmt(Builder* b, u32 name, SrcLoc loc, Stmt* stmt) {$/;"	f
actOnMemberExpr	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnMemberExpr(Builder* b, Expr* base, const Ref* refs, u32 refcount) {$/;"	f
actOnModule	$C2_ROOT/parser/ast_builder.c2	/^public fn void Builder.actOnModule(Builder* b,$/;"	f
actOnNilExpr	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnNilExpr(Builder* b, SrcLoc loc) {$/;"	f
actOnOffsetOfExpr	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnOffsetOfExpr(Builder* b,$/;"	f
actOnParamAttr	$C2_ROOT/parser/ast_builder.c2	/^public fn bool Builder.actOnParamAttr(Builder* b,$/;"	f
actOnParenExpr	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnParenExpr(Builder* b, SrcLoc loc, u32 src_len, Expr* inner) {$/;"	f
actOnPointerType	$C2_ROOT/parser/ast_builder.c2	/^public fn QualType Builder.actOnPointerType(Builder*, QualType inner) {$/;"	f
actOnRange	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnRange(Builder* b, SrcLoc loc, Expr* lhs, Expr* rhs) {$/;"	f
actOnReturnStmt	$C2_ROOT/parser/ast_builder.c2	/^public fn Stmt* Builder.actOnReturnStmt(Builder* b, SrcLoc loc, Expr* ret) {$/;"	f
actOnStaticAssert	$C2_ROOT/parser/ast_builder.c2	/^public fn void Builder.actOnStaticAssert(Builder* b, SrcLoc loc, Expr* lhs, Expr* rhs) {$/;"	f
actOnStringLiteral	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnStringLiteral(Builder* b, SrcLoc loc, u32 src_len, u32 value, u32 l/;"	f
actOnStructAttr	$C2_ROOT/parser/ast_builder.c2	/^fn void Builder.actOnStructAttr(Builder* b, Decl* d, const Attr* a) {$/;"	f
actOnStructMember	$C2_ROOT/parser/ast_builder.c2	/^public fn VarDecl* Builder.actOnStructMember(Builder* b,$/;"	f
actOnStructMemberType	$C2_ROOT/parser/ast_builder.c2	/^public fn Decl* Builder.actOnStructMemberType(Builder* b,$/;"	f
actOnStructType	$C2_ROOT/parser/ast_builder.c2	/^public fn StructTypeDecl* Builder.actOnStructType(Builder* b,$/;"	f
actOnSwitchStmt	$C2_ROOT/parser/ast_builder.c2	/^public fn Stmt* Builder.actOnSwitchStmt(Builder* b,$/;"	f
actOnTemplateCallExpr	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnTemplateCallExpr(Builder* b,$/;"	f
actOnTemplateFunctionDecl	$C2_ROOT/parser/ast_builder.c2	/^public fn FunctionDecl* Builder.actOnTemplateFunctionDecl(Builder* b,$/;"	f
actOnToContainerExpr	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnToContainerExpr(Builder* b,$/;"	f
actOnTypeAttr	$C2_ROOT/parser/ast_builder.c2	/^fn bool Builder.actOnTypeAttr(Builder* b, Decl* d, const Attr* a) {$/;"	f
actOnTypeExpr	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnTypeExpr(Builder* b, SrcLoc loc, u32 src_len, const TypeRefHolder* /;"	f
actOnUnaryOperator	$C2_ROOT/parser/ast_builder.c2	/^public fn Expr* Builder.actOnUnaryOperator(Builder* b, SrcLoc loc, UnaryOpcode opcode, Expr* inn/;"	f
actOnVarAttr	$C2_ROOT/parser/ast_builder.c2	/^fn void Builder.actOnVarAttr(Builder* b, Decl* d, const Attr* a) {$/;"	f
actOnVarDecl	$C2_ROOT/parser/ast_builder.c2	/^public fn VarDecl* Builder.actOnVarDecl(Builder* b,$/;"	f
actOnWhileStmt	$C2_ROOT/parser/ast_builder.c2	/^public fn Stmt* Builder.actOnWhileStmt(Builder* b, SrcLoc loc, Stmt* cond, Stmt* then) {$/;"	f
action	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    PassAction action;$/;"	v
active_blocks	$C2_ROOT/bootstrap/bootstrap.c	/^   bit_array_BitArray active_blocks;$/;"	v
active_blocks	$C2_ROOT/ir/context.c2	/^    bit_array.BitArray active_blocks;$/;"	v
active_slot	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 active_slot;$/;"	v
add	$C2_ROOT/analyser/incr_array_list.c2	/^public fn void List.add(List* v, u32 name, SrcLoc loc, ast.Expr* value) {$/;"	f
add	$C2_ROOT/analyser/init_checker.c2	/^public fn void Checker.add(Checker* c, u32 index, SrcLoc loc) {$/;"	f
add	$C2_ROOT/analyser/label_vector.c2	/^public fn u32 LabelVector.add(LabelVector* v, Label label) {$/;"	f
add	$C2_ROOT/analyser/name_vector.c2	/^public fn u32 NameVector.add(NameVector* v, u32 name_idx) {$/;"	f
add	$C2_ROOT/analyser/scope.c2	/^public fn bool Scope.add(Scope* s, ast.Decl* d) {$/;"	f
add	$C2_ROOT/analyser/struct_field_init_checker.c2	/^fn SrcLoc StructFieldInitChecker.add(StructFieldInitChecker* c, u32 idx, SrcLoc loc) {$/;"	f
add	$C2_ROOT/ast/array_value_list.c2	/^fn void ArrayValueList.add(ArrayValueList* l, ArrayValue* v) {$/;"	f
add	$C2_ROOT/ast/decl_list.c2	/^public fn void DeclList.add(DeclList* l, Decl* d) {$/;"	f
add	$C2_ROOT/ast/expr_list.c2	/^public fn void ExprList.add(ExprList* l, Expr* d) {$/;"	f
add	$C2_ROOT/ast/function_decl_list.c2	/^public fn void FunctionDeclList.add(FunctionDeclList* l, FunctionDecl* d) {$/;"	f
add	$C2_ROOT/ast/import_decl_list.c2	/^fn void ImportDeclList.add(ImportDeclList* l, ImportDecl* d) {$/;"	f
add	$C2_ROOT/ast/instance_table.c2	/^fn u16 TemplateFunction.add(TemplateFunction* f, QualType qt, FunctionDecl* instance) {$/;"	f
add	$C2_ROOT/ast/module.c2	/^public fn ast.AST* Module.add(Module* m, string_pool.Pool* auxPool, u32 filename, bool is_interf/;"	f
add	$C2_ROOT/ast/static_assert_list.c2	/^fn void StaticAssertList.add(StaticAssertList* l, StaticAssert* v) {$/;"	f
add	$C2_ROOT/ast/symbol_table.c2	/^fn void SymbolTable.add(SymbolTable* t, u32 name_idx, ast.Decl* d) {$/;"	f
add	$C2_ROOT/ast/value.c2	/^fn Value Value.add(const Value* v1, const Value* v2) {$/;"	f
add	$C2_ROOT/ast_utils/attr_table.c2	/^public fn void Table.add(Table* t,$/;"	f
add	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void Buf.add(Buf* buf, const char* text) {$/;"	f
add	$C2_ROOT/ast_utils/string_pool.c2	/^public fn u32 Pool.add(Pool* p, const char* text, usize len, bool filter) {$/;"	f
add	$C2_ROOT/common/build_target.c2	/^public fn void PluginList.add(PluginList* l, u32 name, u32 options, SrcLoc loc) {$/;"	f
add	$C2_ROOT/common/component.c2	/^public fn void List.add(List* l, Component* c) {$/;"	f
add	$C2_ROOT/common/index_list.c2	/^public fn void List.add(List* l, u32 item) {$/;"	f
add	$C2_ROOT/common/library_list.c2	/^public fn void List.add(List* l, u32 name, bool is_static) {$/;"	f
add	$C2_ROOT/common/module_list.c2	/^public fn void List.add(List* list, ast.Module* m) {$/;"	f
add	$C2_ROOT/common/string_list.c2	/^public fn void List.add(List* l, u32 name_idx) {$/;"	f
add	$C2_ROOT/common/value_maplist.c2	/^public fn void List.add(List* l, u32 key, u32 value) {$/;"	f
add	$C2_ROOT/generator/c/c_generator_trace.c2	/^fn u32 TraceCallList.add(TraceCallList *cl, TraceCall call) {$/;"	f
add	$C2_ROOT/generator/c2refs.c2	/^fn void Files.add(Files** f_ptr, u32 start, u32 size, const char* filename, u32 len_start, u32 l/;"	f
add	$C2_ROOT/generator/ir/array_init_sorter.c2	/^public fn void Sorter.add(Sorter* s, const ast.Expr* e) {$/;"	f
add	$C2_ROOT/generator/ir/basic_struct_layouter.c2	/^fn void BasicStructLayouter.add(BasicStructLayouter* l,$/;"	f
add	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^fn void FieldStructLayouter.add(FieldStructLayouter* l,$/;"	f
add	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^public fn void Locals.add(Locals* l, ast.VarDecl* vd, u32 width, u32 align, u32 size, ir.Ref slo/;"	f
add	$C2_ROOT/generator/ir/ref_list.c2	/^public fn void RefList.add(RefList* l, ir.Ref ref) {$/;"	f
add	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^public fn void Tree.add(Tree* t, const char* text, u32 len, u32 value) {$/;"	f
add	$C2_ROOT/ir/block_list.c2	/^public fn BlockId BlockList.add(BlockList* l, BlockKind kind) {$/;"	f
add	$C2_ROOT/ir/constant_list.c2	/^fn u32 ConstantList.add(ConstantList* l, const Constant* c) {$/;"	f
add	$C2_ROOT/ir/copy_list.c2	/^public fn void CopyList.add(CopyList* l, u32 idx, Ref ref) {$/;"	f
add	$C2_ROOT/ir/init_value_list.c2	/^fn InitValue* InitValueList.add(InitValueList* l) {$/;"	f
add	$C2_ROOT/ir/instr_list.c2	/^public fn Instr* InstrList.add(InstrList* l) {$/;"	f
add	$C2_ROOT/ir/interference_graph.c2	/^public fn void InterferenceGraph.add(InterferenceGraph* g, u16 var1, u16 var2) {$/;"	f
add	$C2_ROOT/ir/live_map.c2	/^public fn void Map.add(Map* g, u16 var1, u16 var2) {$/;"	f
add	$C2_ROOT/ir/phi_list.c2	/^public fn void PhiList.add(PhiList* l, u32 dest, BlockId src, Ref ref) {$/;"	f
add	$C2_ROOT/ir/register_alloc.c2	/^fn void LiveVector.add(LiveVector* v, u32 idx) {$/;"	f
add	$C2_ROOT/ir/slot_writes_map.c2	/^public fn void Map.add(Map* m, u16 blk_id, u16 slot, ir.Ref ref) {$/;"	f
add	$C2_ROOT/ir/symbol_list.c2	/^fn SymbolId SymbolList.add(SymbolList* l, u32 name, bool is_function, u32 align, bool is_externa/;"	f
add	$C2_ROOT/ir/work_queue.c2	/^fn void WorkQueue.add(WorkQueue* q, ir.FunctionInfo* fi) {$/;"	f
add	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec4 Vec4.add(const Vec4* a, const Vec4* b) {$/;"	f
add	$C2_ROOT/parser/case_list.c2	/^public fn void List.add(List* l, SwitchCase* s) {$/;"	f
add	$C2_ROOT/parser/expr_list.c2	/^public fn void List.add(List* l, Expr* e) {$/;"	f
add	$C2_ROOT/parser/stmt_list.c2	/^public fn void List.add(List* l, Stmt* s) {$/;"	f
add	$C2_ROOT/plugins/refs_generator.c2	/^fn void LineCounter.add(LineCounter* l, u32 len) {$/;"	f
add1	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void Buf.add1(Buf* buf, char c) {$/;"	f
add1	$C2_ROOT/ir_examples/global_vars.c2	/^fn void add1(i32 a) {$/;"	f
add2	$C2_ROOT/analyser/init_checker.c2	/^public fn void Checker.add2(Checker* c, u32 index1, u32 index2, SrcLoc loc) {$/;"	f
add2	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void Buf.add2(Buf* buf, const char* text, u32 len) {$/;"	f
add2	$C2_ROOT/ir_examples/global_vars.c2	/^fn void add2(i32 a) {$/;"	f
addAST	$C2_ROOT/ast/utils.c2	/^fn u32 addAST(AST* ast_) {$/;"	f
addArg	$C2_ROOT/ir/function_info.c2	/^public fn void FunctionInfo.addArg(FunctionInfo* fi, ir.Type t) {$/;"	f
addArray	$C2_ROOT/ast/type_ref.c2	/^public fn void TypeRefHolder.addArray(TypeRefHolder* h, Expr* array) {$/;"	f
addArrayValue	$C2_ROOT/ast/ast.c2	/^public fn void AST.addArrayValue(AST* a, ArrayValue* v) {$/;"	f
addArrayValue	$C2_ROOT/ast/statistics.c2	/^fn void Stats.addArrayValue(u32 size) {$/;"	f
addAsmFile	$C2_ROOT/common/build_target.c2	/^public fn bool Target.addAsmFile(Target* t, u32 filename, SrcLoc loc) {$/;"	f
addAt	$C2_ROOT/generator/ir/array_init_sorter.c2	/^public fn void Sorter.addAt(Sorter* s, u32 index, const ast.Expr* e) {$/;"	f
addBinaryInstr	$C2_ROOT/ir/context.c2	/^public fn Ref Context.addBinaryInstr(Context* c, InstrKind k, Ref left, Ref right) {$/;"	f
addBlock	$C2_ROOT/ir/inserter.c2	/^public fn BlockId Inserter.addBlock(Inserter* ins, BlockKind kind) {$/;"	f
addBlockWritesToArenaHead	$C2_ROOT/ir/slot_writes_map.c2	/^fn void Map.addBlockWritesToArenaHead(Map* m, Arena* a, u16 blk_id) {$/;"	f
addBlockWritesToArenaTail	$C2_ROOT/ir/slot_writes_map.c2	/^fn void Map.addBlockWritesToArenaTail(Map* m, Arena* a, u16 blk_id) {$/;"	f
addCache	$C2_ROOT/ir/phi_list.c2	/^public fn u32 PhiList.addCache(PhiList* l, u32 dest, const PhiClauses* cache) {$/;"	f
addCall	$C2_ROOT/generator/c/c_generator_trace.c2	/^fn u32 Generator.addCall(Generator* gen, const char* funcname, SrcLoc loc) {$/;"	f
addCallInstr	$C2_ROOT/ir/context.c2	/^public fn Ref Context.addCallInstr(Context* c, Ref name, const Ref* args, u32 num_args, bool has/;"	f
addCheckPoints	$C2_ROOT/common/source_mgr.c2	/^fn void File.addCheckPoints(File* f) {$/;"	f
addComment	$C2_ROOT/ir/context.c2	/^public fn void Context.addComment(Context* c, const char* text) {$/;"	f
addCommitListener	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn bool addCommitListener(CommitListener listener) @(cname="sg_add_commit_listener");$/;"	f
addDecl	$C2_ROOT/analyser/struct_func_list.c2	/^public fn void List.addDecl(List* v, ast.Decl* decl) {$/;"	f
addDecl	$C2_ROOT/ast/statistics.c2	/^fn void Stats.addDecl(DeclKind kind, u32 size) {$/;"	f
addDep	$C2_ROOT/common/component.c2	/^public fn void Component.addDep(Component* c, const char* dep) {$/;"	f
addExport	$C2_ROOT/common/build_target.c2	/^public fn void Target.addExport(Target* t, u32 export) {$/;"	f
addExpr	$C2_ROOT/ast/statistics.c2	/^fn void Stats.addExpr(ExprKind kind, u32 size) {$/;"	f
addFeature	$C2_ROOT/common/build_target.c2	/^public fn void Target.addFeature(Target* t, u32 feature) {$/;"	f
addFeature	$C2_ROOT/compiler/compiler.c2	/^fn void Compiler.addFeature(Compiler* c, const char* str, const char* value) {$/;"	f
addFile	$C2_ROOT/common/build_target.c2	/^public fn bool Target.addFile(Target* t, u32 filename, SrcLoc loc) {$/;"	f
addFile	$C2_ROOT/common/source_mgr.c2	/^fn i32 SourceMgr.addFile(SourceMgr* sm, const char* filename, void* data, u32 size,$/;"	f
addFile	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn bool Set.addFile(Set* s, u32 filename, SrcLoc loc) {$/;"	f
addFiltered	$C2_ROOT/ir/live_map.c2	/^public fn void Map.addFiltered(Map* g, u16 var1, u16 var2) {$/;"	f
addFragment	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.addFragment(Generator* gen, Fragment* f, bool is_public) {$/;"	f
addFront	$C2_ROOT/common/linked_list.c2	/^public fn void Element.addFront(Element* src, Element* item) @(unused) {$/;"	f
addFunc	$C2_ROOT/analyser/struct_func_list.c2	/^public fn void List.addFunc(List* v, u32 index, ast.FunctionDecl* fd) {$/;"	f
addFunc	$C2_ROOT/ast/ast.c2	/^public fn void AST.addFunc(AST* a, FunctionDecl* d) {$/;"	f
addFuncArg	$C2_ROOT/ir/context.c2	/^public fn Ref Context.addFuncArg(Context* c, Type t) {$/;"	f
addFunction	$C2_ROOT/ir/context.c2	/^public fn SymbolId Context.addFunction(Context* c, const char* name, bool is_external) {$/;"	f
addGenerated	$C2_ROOT/common/source_mgr.c2	/^public fn i32 SourceMgr.addGenerated(SourceMgr* sm, const char* name, void* data, u32 size) @(un/;"	f
addGlobalDefine	$C2_ROOT/compiler/compiler.c2	/^fn void Compiler.addGlobalDefine(Compiler* c, const char* prefix, const char* tail) {$/;"	f
addGlobalFeature	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn bool Parser.addGlobalFeature(Parser* p, u32 feature) {$/;"	f
addGlobalVar	$C2_ROOT/ir/context.c2	/^public fn SymbolId Context.addGlobalVar(Context* c, const char* name, u32 align, bool is_externa/;"	f
addImplicitImport	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.addImplicitImport(Parser* p, u32 mod_name, bool islocal) {$/;"	f
addImport	$C2_ROOT/ast/ast.c2	/^public fn void AST.addImport(AST* a, ImportDecl* d) {$/;"	f
addImports	$C2_ROOT/analyser/scope.c2	/^fn void Scope.addImports(Scope* s) {$/;"	f
addInitString	$C2_ROOT/ir/context.c2	/^public fn void Context.addInitString(Context* c, const char* text, u32 size) {$/;"	f
addInitSymbol	$C2_ROOT/ir/context.c2	/^public fn void Context.addInitSymbol(Context* c, SymbolId id) {$/;"	f
addInitValueU16	$C2_ROOT/ir/context.c2	/^public fn void Context.addInitValueU16(Context* c, u16 value) {$/;"	f
addInitValueU32	$C2_ROOT/ir/context.c2	/^public fn void Context.addInitValueU32(Context* c, u32 value) {$/;"	f
addInitValueU64	$C2_ROOT/ir/context.c2	/^public fn void Context.addInitValueU64(Context* c, u64 value) {$/;"	f
addInitValueU8	$C2_ROOT/ir/context.c2	/^public fn void Context.addInitValueU8(Context* c, u8 value) {$/;"	f
addInitZero	$C2_ROOT/ir/context.c2	/^public fn void Context.addInitZero(Context* c, u32 size) {$/;"	f
addInstance	$C2_ROOT/ast/module.c2	/^public fn u16 Module.addInstance(Module* m, ast.FunctionDecl* fd, QualType qt, ast.FunctionDecl*/;"	f
addInstr	$C2_ROOT/ir/inserter.c2	/^public fn u32 Inserter.addInstr(Inserter* ins, u32 loc) {$/;"	f
addIntegerConstant	$C2_ROOT/ir/context.c2	/^public fn Ref Context.addIntegerConstant(Context* c, i64 size) {$/;"	f
addInterfere	$C2_ROOT/ir/register_alloc.c2	/^fn void LiveVector.addInterfere(LiveVector* v, u16 idx) {$/;"	f
addInterfereFilter	$C2_ROOT/ir/register_alloc.c2	/^fn void LiveVector.addInterfereFilter(LiveVector* v, u32 idx) {$/;"	f
addInternal	$C2_ROOT/ir/interference_graph.c2	/^fn void InterferenceGraph.addInternal(InterferenceGraph* g, u16 var1, u16 var2) {$/;"	f
addJmpIfInstr	$C2_ROOT/ir/context.c2	/^public fn void Context.addJmpIfInstr(Context* c, Ref cond, BlockId dest1, BlockId dest2) {$/;"	f
addJmpInstr	$C2_ROOT/ir/context.c2	/^public fn void Context.addJmpInstr(Context* c, BlockId dest) {$/;"	f
addLib	$C2_ROOT/common/build_target.c2	/^public fn void Target.addLib(Target* t, u32 lib, bool is_static) {$/;"	f
addLoadInstr	$C2_ROOT/ir/context.c2	/^public fn Ref Context.addLoadInstr(Context* c, Type t, Ref src) {$/;"	f
addLocalVar	$C2_ROOT/generator/ir/ir_generator.c2	/^fn void Generator.addLocalVar(Generator* gen, VarDecl* vd) {$/;"	f
addPath	$C2_ROOT/compiler/plugin_mgr.c2	/^public fn void Mgr.addPath(Mgr* m, u32 path) {$/;"	f
addPhi2Instr	$C2_ROOT/ir/context.c2	/^public fn Ref Context.addPhi2Instr(Context* c, BlockId b1, Ref r1, BlockId b2, Ref r2) {$/;"	f
addPhiInstr	$C2_ROOT/ir/ssa.c2	/^fn Ref Tools.addPhiInstr(Tools* t, FunctionInfo* fi, const PhiClauses* cache, u32 loc, u16 slot)/;"	f
addPlugin	$C2_ROOT/common/build_file.c2	/^fn void Info.addPlugin(Info* info, const char* name, const char* options, SrcLoc loc) {$/;"	f
addPlugin	$C2_ROOT/common/build_target.c2	/^public fn void Target.addPlugin(Target* t, u32 name, u32 options, SrcLoc loc) {$/;"	f
addPlugin	$C2_ROOT/compiler/c2recipe.c2	/^fn void Recipe.addPlugin(Recipe* r, u32 name, u32 options, SrcLoc loc) {$/;"	f
addPlugin	$C2_ROOT/compiler/plugin_mgr.c2	/^fn void Mgr.addPlugin(Mgr* m, Plugin* p) {$/;"	f
addPointer	$C2_ROOT/ast/type_ref.c2	/^public fn void TypeRefHolder.addPointer(TypeRefHolder* h) {$/;"	f
addResource	$C2_ROOT/common/source_mgr.c2	/^public fn i32 SourceMgr.addResource(SourceMgr* sm, const char* name, const void* data, u32 size)/;"	f
addRet0Instr	$C2_ROOT/ir/context.c2	/^public fn void Context.addRet0Instr(Context* c) {$/;"	f
addRet1Instr	$C2_ROOT/ir/context.c2	/^public fn void Context.addRet1Instr(Context* c, Ref ref) {$/;"	f
addSource	$C2_ROOT/bootstrap/bootstrap.c	/^   plugin_info_AddSourceFn addSource;$/;"	v
addSource	$C2_ROOT/plugins/plugin_info.c2	/^    AddSourceFn addSource;$/;"	v
addSplitEdge	$C2_ROOT/ir/inserter.c2	/^public fn void Inserter.addSplitEdge(Inserter* ins, u32 src, u32 dest, u32 blk_id) {$/;"	f
addStackSlot	$C2_ROOT/ir/context.c2	/^public fn Ref Context.addStackSlot(Context* c, u32 align, Ref size) {$/;"	f
addStaticAssert	$C2_ROOT/ast/ast.c2	/^public fn void AST.addStaticAssert(AST* a, StaticAssert* s) {$/;"	f
addStaticAssert	$C2_ROOT/ast/statistics.c2	/^fn void Stats.addStaticAssert(u32 size) {$/;"	f
addStaticSlot	$C2_ROOT/ir/slot_collector.c2	/^fn void SlotCollector.addStaticSlot(SlotCollector* c, u16 slot) {$/;"	f
addStmt	$C2_ROOT/ast/statistics.c2	/^fn void Stats.addStmt(StmtKind kind, u32 size) {$/;"	f
addStoreInstr	$C2_ROOT/ir/context.c2	/^public fn void Context.addStoreInstr(Context* c, Type t, Ref src, Ref dest) {$/;"	f
addStr	$C2_ROOT/ast_utils/string_pool.c2	/^public fn u32 Pool.addStr(Pool* p, const char* text, bool filter) {$/;"	f
addStr	$C2_ROOT/common/string_list.c2	/^public fn void List.addStr(List* l, const char* str) {$/;"	f
addStringLiteral	$C2_ROOT/ir/context.c2	/^public fn SymbolId Context.addStringLiteral(Context* c, const char* name, const char* text, u32 /;"	f
addSwitchCase	$C2_ROOT/ast/statistics.c2	/^fn void Stats.addSwitchCase(u32 size) {$/;"	f
addSwitchInstr	$C2_ROOT/ir/context.c2	/^public fn CaseId Context.addSwitchInstr(Context* c, Ref cond, BlockId join_blk, u32 num_cases) {$/;"	f
addSymbol	$C2_ROOT/ast/module.c2	/^public fn void Module.addSymbol(Module* m, u32 name_idx, ast.Decl* d) {$/;"	f
addSymbol	$C2_ROOT/parser/ast_builder.c2	/^fn void Builder.addSymbol(Builder* b, u32 name_idx, Decl* d) {$/;"	f
addTail	$C2_ROOT/common/linked_list.c2	/^public fn void Element.addTail(Element* src, Element* item) @(unused) {$/;"	f
addTarget	$C2_ROOT/compiler/c2recipe.c2	/^public fn build_target.Target* Recipe.addTarget(Recipe* r, u32 name, SrcLoc loc, build_target.Ki/;"	f
addTemp	$C2_ROOT/ir/print.c2	/^fn u32 PrintHelper.addTemp(PrintHelper* ph, u32 local_instr_idx) {$/;"	f
addTimer	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn TimerID addTimer(u32 interval, TimerCallback callback, void* param) @(cname="SDL_AddTimer");$/;"	f
addType	$C2_ROOT/ast/statistics.c2	/^fn void Stats.addType(TypeKind kind, u32 size) {$/;"	f
addTypeDecl	$C2_ROOT/ast/ast.c2	/^public fn void AST.addTypeDecl(AST* a, Decl* d) {$/;"	f
addVarDecl	$C2_ROOT/ast/ast.c2	/^public fn void AST.addVarDecl(AST* a, Decl* d) {$/;"	f
addVariableToArenaHead	$C2_ROOT/ir/interference_graph.c2	/^fn void InterferenceGraph.addVariableToArenaHead(InterferenceGraph* g, Arena* a, u16 var_idx) {$/;"	f
addVariableToArenaHead	$C2_ROOT/ir/live_map.c2	/^fn void Map.addVariableToArenaHead(Map* g, Arena* a, u16 var_idx) {$/;"	f
addVariableToArenaTail	$C2_ROOT/ir/interference_graph.c2	/^fn void InterferenceGraph.addVariableToArenaTail(InterferenceGraph* g, Arena* a, u16 var_idx) {$/;"	f
addVariableToArenaTail	$C2_ROOT/ir/live_map.c2	/^fn void Map.addVariableToArenaTail(Map* g, Arena* a, u16 var_idx) {$/;"	f
add_char	$C2_ROOT/ast_utils/string_buffer.c2	/^        case '\\v':  c = 'v'; goto add_char;$/;"	v
add_char	$C2_ROOT/bootstrap/bootstrap.c	/^      goto add_char;$/;"	v
add_char	$C2_ROOT/parser/c2_tokenizer.c2	/^    case 'v':  c = '\\v'; goto add_char;$/;"	v
add_dep	$C2_ROOT/common/dsm_sorter.c2	/^public fn void Sorter.add_dep(Sorter* s, u32 src, u32 dst) {$/;"	f
add_file	$C2_ROOT/generator/c2refs.c2	/^public fn void Refs.add_file(Refs* r, u32 start, u32 size, const char* filename, u32 len_start, /;"	f
add_gen_warning	$C2_ROOT/generator/c/c_generator.c2	/^fn void add_gen_warning(string_buffer.Buf* out) {$/;"	f
add_line_lengths	$C2_ROOT/generator/c2refs.c2	/^public fn u32 Refs.add_line_lengths(Refs* r, u32 count, const u8* lengths) {$/;"	f
add_link	$C2_ROOT/generator/c2refs.c2	/^public fn void Refs.add_link(Refs* r, u32 src, u32 dest, u32 len) {$/;"	f
add_node	$C2_ROOT/common/yaml/yaml_data.c2	/^fn Node* Data.add_node(Data* d, NodeKind kind, u32 name_idx) {$/;"	f
add_node	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^fn u32 Tree.add_node(Tree* t, u32 num_children, u32 word_idx, u32 value) {$/;"	f
add_node	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^fn u32 Trimmer.add_node(Trimmer* tr, u32 num_children, u32 word_idx) {$/;"	f
add_scalar_value	$C2_ROOT/common/yaml/yaml_parser.c2	/^fn void Parser.add_scalar_value(Parser* p, u32 value_idx) {$/;"	f
add_source	$C2_ROOT/compiler/compiler.c2	/^fn void Compiler.add_source(void* arg, const char* name, string_buffer.Buf* content) {$/;"	f
add_symbol	$C2_ROOT/generator/c2refs.c2	/^public fn void Refs.add_symbol(Refs* r, const char* symbol_name, u32 src_loc) {$/;"	f
add_text	$C2_ROOT/common/yaml/yaml_data.c2	/^fn u32 Data.add_text(Data* d, const char* text, u32 len) {$/;"	f
add_utf8	$C2_ROOT/bootstrap/bootstrap.c	/^      goto add_utf8;$/;"	v
add_utf8	$C2_ROOT/parser/c2_tokenizer.c2	/^        goto add_utf8;$/;"	v
add_word	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^fn u32 Tree.add_word(Tree* t, const char* text, u32 len) {$/;"	f
add_word	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^fn u32 Trimmer.add_word(Trimmer* tr, const char* word) {$/;"	f
addr	$C2_ROOT/libs/io_uring/io_uring.c2i	/^	sqe.addr = (u64)addr;$/;"	v
addr2	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        u64   addr2;$/;"	v
addr_used	$C2_ROOT/ast/var_decl.c2	/^    return d.base.varDeclBits.addr_used;$/;"	v
addr_used	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->base.varDeclBits.addr_used;$/;"	v
address	$C2_ROOT/ast/ast_evaluator.c2	/^    void* address;$/;"	v
address	$C2_ROOT/ast/function_decl.c2	/^    return d.address;$/;"	v
address	$C2_ROOT/bootstrap/bootstrap.c	/^   void* address;$/;"	v
advice	$C2_ROOT/libs/io_uring/io_uring.c2i	/^	sqe->fadvise_advice = (__u32) advice;$/;"	v
after	$C2_ROOT/ast/function_decl.c2	/^    QualType rt;          \/\/ return type after analysis$/;"	t
after_analysis	$C2_ROOT/bootstrap/bootstrap.c	/^   compiler_PluginFn after_analysis;$/;"	v
after_parsing	$C2_ROOT/bootstrap/bootstrap.c	/^   compiler_PluginFn after_parsing;$/;"	v
ahead	$C2_ROOT/bootstrap/bootstrap.c	/^         return ahead;$/;"	v
ahead	$C2_ROOT/parser/c2_parser_expr.c2	/^            return ahead;$/;"	v
ahead	$C2_ROOT/parser/c2_parser_stmt.c2	/^    return ahead;$/;"	v
alen	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^    u32 alen;$/;"	v
alias_idx	$C2_ROOT/ast/import_decl.c2	/^    u32 alias_idx;$/;"	v
alias_idx	$C2_ROOT/ast/member_expr.c2	/^            if (alias_idx) return alias_idx;$/;"	v
alias_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t alias_idx;$/;"	v
alias_loc	$C2_ROOT/ast/import_decl.c2	/^    if (d.alias_idx) return d.alias_loc;$/;"	v
alias_loc	$C2_ROOT/bootstrap/bootstrap.c	/^   src_loc_SrcLoc alias_loc;$/;"	v
alias_loc	$C2_ROOT/parser/ast_builder.c2	/^                                      alias_loc,$/;"	v
alias_name	$C2_ROOT/ast/import_decl.c2	/^    d.alias_idx = alias_name;$/;"	v
alias_name	$C2_ROOT/bootstrap/bootstrap.c	/^   d->alias_idx = alias_name;$/;"	v
alias_name	$C2_ROOT/parser/ast_builder.c2	/^                                      alias_name,$/;"	v
align	$C2_ROOT/analyser/size_analyser.c2	/^        if (max_align < align) max_align = align;$/;"	v
align	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t align;$/;"	v
align	$C2_ROOT/generator/ir/ir_generator.c2	/^    u32 align;$/;"	v
align	$C2_ROOT/ir/symbol_list.c2	/^    s.align = align;$/;"	v
align	$C2_ROOT/libs/pthread/pthread.c2i	/^    c_long align;$/;"	v
aligned_alloc	$C2_ROOT/libs/libc/stdlib.c2i	/^fn void* aligned_alloc(c_int __alignment, c_size __size);$/;"	f
alignment	$C2_ROOT/ast/struct_type_decl.c2	/^    u32 alignment;$/;"	v
alignment	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t alignment;$/;"	v
allbits	$C2_ROOT/ast/switch_case.c2	/^    dst.allbits = src.allbits;$/;"	v
allbits	$C2_ROOT/bootstrap/bootstrap.c	/^   dst->allbits = src->allbits;$/;"	v
allmodules	$C2_ROOT/analyser/module_analyser.c2	/^    module_list.List* allmodules;$/;"	v
allmodules	$C2_ROOT/analyser/scope.c2	/^    s.allmodules = allmodules;$/;"	v
allmodules	$C2_ROOT/bootstrap/bootstrap.c	/^   s->allmodules = allmodules;$/;"	v
allmodules	$C2_ROOT/common/component.c2	/^    c.allmodules = allmodules;$/;"	v
allmodules	$C2_ROOT/compiler/compiler.c2	/^    module_list.List allmodules;$/;"	v
alloc	$C2_ROOT/ast_utils/context.c2	/^public fn void* Context.alloc(Context* c, u32 len) {$/;"	f
allocBuffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn Buffer allocBuffer() @(cname="sg_alloc_buffer");$/;"	f
allocImage	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn Image allocImage() @(cname="sg_alloc_image");$/;"	f
allocPipeline	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn Pipeline allocPipeline() @(cname="sg_alloc_pipeline");$/;"	f
allocSampler	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn Sampler allocSampler() @(cname="sg_alloc_sampler");$/;"	f
allocShader	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn Shader allocShader() @(cname="sg_alloc_shader");$/;"	f
allocView	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn View allocView() @(cname="sg_alloc_view");$/;"	f
alloc_fn	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    AllocCb alloc_fn;$/;"	v
alloc_fn	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    AllocCb alloc_fn;$/;"	v
alloc_fn	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    AllocCb alloc_fn;$/;"	v
alloc_fn	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    AllocCb alloc_fn;$/;"	v
alloc_fn	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    AllocCb alloc_fn;$/;"	v
allocate	$C2_ROOT/ir/interference_graph.c2	/^public fn void InterferenceGraph.allocate(InterferenceGraph* g, u32 num_args) {$/;"	f
allocateRegisters	$C2_ROOT/ir/register_alloc.c2	/^fn void Tools.allocateRegisters(Tools* t, FunctionInfo* fi) {$/;"	f
allocateVariable	$C2_ROOT/ir/interference_graph.c2	/^fn void InterferenceGraph.allocateVariable(InterferenceGraph* g, u16 var_idx) {$/;"	f
allocate_node	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^fn u32 Tree.allocate_node(Tree* t, u32 node_size) {$/;"	f
allocated	$C2_ROOT/ast_utils/context.c2	/^    u32 allocated;$/;"	v
allocated	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t allocated;$/;"	v
allocated	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^    c_int allocated;$/;"	v
allocated	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 allocated;$/;"	v
allocator	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    Allocator allocator;$/;"	v
allocator	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    Allocator allocator;$/;"	v
allocator	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    Allocator allocator;$/;"	v
allocator	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    Allocator allocator;$/;"	v
allocator	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    Allocator allocator;$/;"	v
allowBreak	$C2_ROOT/analyser/scope.c2	/^public fn bool Scope.allowBreak(const Scope* s) {$/;"	f
allowContinue	$C2_ROOT/analyser/scope.c2	/^public fn bool Scope.allowContinue(const Scope* s) {$/;"	f
alpha	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool alpha;$/;"	v
alpha_to_coverage_enabled	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool alpha_to_coverage_enabled;$/;"	v
alphasort	$C2_ROOT/libs/libc/libc_dirent.c2i	/^fn c_int alphasort(const Dirent**, const Dirent**);$/;"	f
ambiguous	$C2_ROOT/analyser/scope.c2	/^                ambiguous = true;$/;"	v
ambiguous	$C2_ROOT/bootstrap/bootstrap.c	/^         ambiguous = false;$/;"	v
ambiguous	$C2_ROOT/parser/c2_parser_expr.c2	/^    The reason we test brackets [] inside a sizeof is that it is potentially ambiguous;$/;"	v
analyseAliasType	$C2_ROOT/analyser/module_analyser_type.c2	/^fn void Analyser.analyseAliasType(Analyser* ma, AliasTypeDecl* a) {$/;"	f
analyseArrayDesignatedInit	$C2_ROOT/analyser/module_analyser_init.c2	/^fn bool Analyser.analyseArrayDesignatedInit(Analyser* ma, Expr* e, QualType expectedType) {$/;"	f
analyseArraySubscriptExpr	$C2_ROOT/analyser/module_analyser_expr.c2	/^fn QualType Analyser.analyseArraySubscriptExpr(Analyser* ma, Expr** e_ptr, u32 side) {$/;"	f
analyseAsmStmt	$C2_ROOT/analyser/module_analyser_stmt.c2	/^fn void Analyser.analyseAsmStmt(Analyser* ma, Stmt* s) {$/;"	f
analyseAssertStmt	$C2_ROOT/analyser/module_analyser_stmt.c2	/^fn void Analyser.analyseAssertStmt(Analyser* ma, Stmt* s) {$/;"	f
analyseBaseType	$C2_ROOT/analyser/module_analyser_member.c2	/^fn TypeKind Analyser.analyseBaseType(Analyser* ma, QualType baseType) {$/;"	f
analyseBinaryOperator	$C2_ROOT/analyser/module_analyser_binop.c2	/^fn QualType Analyser.analyseBinaryOperator(Analyser* ma, Expr** e_ptr) {$/;"	f
analyseBitOffsetExpr	$C2_ROOT/analyser/module_analyser_expr.c2	/^fn QualType Analyser.analyseBitOffsetExpr(Analyser* ma, QualType ltype, Expr* base, Expr* e) {$/;"	f
analyseBitOffsetIndex	$C2_ROOT/analyser/module_analyser_expr.c2	/^fn bool Analyser.analyseBitOffsetIndex(Analyser* ma, Expr** e_ptr, QualType baseType, Value* res/;"	f
analyseBreakStmt	$C2_ROOT/analyser/module_analyser_stmt.c2	/^fn void Analyser.analyseBreakStmt(Analyser* ma, Stmt* s) {$/;"	f
analyseBuiltin	$C2_ROOT/analyser/module_analyser_builtin.c2	/^fn QualType Analyser.analyseBuiltin(Analyser* ma, Expr** e_ptr) {$/;"	f
analyseCallExpr	$C2_ROOT/analyser/module_analyser_call.c2	/^fn QualType Analyser.analyseCallExpr(Analyser* ma, Expr** e_ptr) {$/;"	f
analyseCase	$C2_ROOT/analyser/module_analyser_switch.c2	/^fn FlowBits Analyser.analyseCase(Analyser* ma,$/;"	f
analyseCaseCondition	$C2_ROOT/analyser/module_analyser_switch.c2	/^fn bool Analyser.analyseCaseCondition(Analyser* ma,$/;"	f
analyseCaseExpr	$C2_ROOT/analyser/module_analyser_switch.c2	/^fn bool Analyser.analyseCaseExpr(Analyser* ma,$/;"	f
analyseCompoundStmt	$C2_ROOT/analyser/module_analyser_stmt.c2	/^fn FlowBits Analyser.analyseCompoundStmt(Analyser* ma, CompoundStmt* c) {$/;"	f
analyseCondition	$C2_ROOT/analyser/module_analyser_stmt.c2	/^fn QualType Analyser.analyseCondition(Analyser* ma, Stmt** s_ptr, bool check_assign) {$/;"	f
analyseConditionalOperator	$C2_ROOT/analyser/module_analyser_expr.c2	/^fn QualType Analyser.analyseConditionalOperator(Analyser* ma, Expr** e_ptr) {$/;"	f
analyseContinueStmt	$C2_ROOT/analyser/module_analyser_stmt.c2	/^fn void Analyser.analyseContinueStmt(Analyser* ma, Stmt* s) {$/;"	f
analyseDecl	$C2_ROOT/analyser/module_analyser_stmt.c2	/^fn QualType Analyser.analyseDecl(Analyser* ma, VarDecl* vd) {$/;"	f
analyseDeclStmt	$C2_ROOT/analyser/module_analyser_stmt.c2	/^fn QualType Analyser.analyseDeclStmt(Analyser* ma, Stmt* s) {$/;"	f
analyseElemsof	$C2_ROOT/analyser/module_analyser_builtin.c2	/^fn QualType Analyser.analyseElemsof(Analyser* ma, BuiltinExpr* b) {$/;"	f
analyseEnumMinMax	$C2_ROOT/analyser/module_analyser_builtin.c2	/^fn QualType Analyser.analyseEnumMinMax(Analyser* ma, BuiltinExpr* b) {$/;"	f
analyseEnumType	$C2_ROOT/analyser/module_analyser_type.c2	/^fn void Analyser.analyseEnumType(Analyser* ma, EnumTypeDecl* d) {$/;"	f
analyseExplicitCast	$C2_ROOT/analyser/module_analyser_expr.c2	/^fn QualType Analyser.analyseExplicitCast(Analyser* ma, Expr** e_ptr) {$/;"	f
analyseExpr	$C2_ROOT/analyser/module_analyser_expr.c2	/^fn QualType Analyser.analyseExpr(Analyser* ma, Expr** e_ptr, bool need_rvalue, u32 side) {$/;"	f
analyseExprInner	$C2_ROOT/analyser/module_analyser_expr.c2	/^fn QualType Analyser.analyseExprInner(Analyser* ma, Expr** e_ptr, u32 side) {$/;"	f
analyseFallthroughStmt	$C2_ROOT/analyser/module_analyser_stmt.c2	/^fn void Analyser.analyseFallthroughStmt(Analyser* ma, Stmt* s) {$/;"	f
analyseForStmt	$C2_ROOT/analyser/module_analyser_stmt.c2	/^fn FlowBits Analyser.analyseForStmt(Analyser* ma, Stmt* s) {$/;"	f
analyseFunction	$C2_ROOT/analyser/module_analyser_function.c2	/^fn void Analyser.analyseFunction(Analyser* ma, FunctionDecl* fd) {$/;"	f
analyseFunctionBodies	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.analyseFunctionBodies(void* arg, FunctionDecl* d) {$/;"	f
analyseFunctionBody	$C2_ROOT/analyser/module_analyser_function.c2	/^fn void Analyser.analyseFunctionBody(Analyser* ma, FunctionDecl* fd, scope.Scope* s) {$/;"	f
analyseFunctionProto	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.analyseFunctionProto(void* arg, FunctionDecl* d) {$/;"	f
analyseFunctionType	$C2_ROOT/analyser/module_analyser_type.c2	/^fn void Analyser.analyseFunctionType(Analyser* ma, Decl* d) {$/;"	f
analyseGlobalDecl	$C2_ROOT/analyser/module_analyser.c2	/^fn bool Analyser.analyseGlobalDecl(Analyser* ma, Decl* d) {$/;"	f
analyseGlobalVarDecl	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.analyseGlobalVarDecl(Analyser* ma, VarDecl* v) {$/;"	f
analyseGotoStmt	$C2_ROOT/analyser/module_analyser_stmt.c2	/^fn void Analyser.analyseGotoStmt(Analyser* ma, Stmt* s) {$/;"	f
analyseIdentifier	$C2_ROOT/analyser/module_analyser_expr.c2	/^fn Decl* Analyser.analyseIdentifier(Analyser* ma, Expr** e_ptr, u32 side) {$/;"	f
analyseIfStmt	$C2_ROOT/analyser/module_analyser_stmt.c2	/^fn FlowBits Analyser.analyseIfStmt(Analyser* ma, Stmt* s) {$/;"	f
analyseIncrTypeRef	$C2_ROOT/analyser/module_analyser_type.c2	/^fn QualType Analyser.analyseIncrTypeRef(Analyser* ma, TypeRef* ref, u32 size) {$/;"	f
analyseInitExpr	$C2_ROOT/analyser/module_analyser_init.c2	/^fn bool Analyser.analyseInitExpr(Analyser* ma, Expr** e_ptr, QualType expectedType, SrcLoc assig/;"	f
analyseInitListArray	$C2_ROOT/analyser/module_analyser_init.c2	/^fn bool Analyser.analyseInitListArray(Analyser* ma, InitListExpr* ile, QualType expectedType) {$/;"	f
analyseInitListExpr	$C2_ROOT/analyser/module_analyser_init.c2	/^fn bool Analyser.analyseInitListExpr(Analyser* ma, InitListExpr* ile, QualType expectedType) {$/;"	f
analyseInitListStruct	$C2_ROOT/analyser/module_analyser_init.c2	/^fn bool Analyser.analyseInitListStruct(Analyser* ma, InitListExpr* ile, QualType expectedType) {$/;"	f
analyseLabelStmt	$C2_ROOT/analyser/module_analyser_stmt.c2	/^fn FlowBits Analyser.analyseLabelStmt(Analyser* ma, Stmt* s) {$/;"	f
analyseMemberExpr	$C2_ROOT/analyser/module_analyser_member.c2	/^fn QualType Analyser.analyseMemberExpr(Analyser* ma, Expr** e_ptr, u32 side) {$/;"	f
analyseModule	$C2_ROOT/compiler/compiler.c2	/^fn void Compiler.analyseModule(void* arg, ast.Module* m) {$/;"	f
analyseOffsetOf	$C2_ROOT/analyser/module_analyser_builtin.c2	/^fn QualType Analyser.analyseOffsetOf(Analyser* ma, BuiltinExpr* b) {$/;"	f
analysePureCallExpr	$C2_ROOT/analyser/module_analyser_call.c2	/^fn QualType Analyser.analysePureCallExpr(Analyser* ma, Expr* e) {$/;"	f
analyseReturnStmt	$C2_ROOT/analyser/module_analyser_stmt.c2	/^fn void Analyser.analyseReturnStmt(Analyser* ma, Stmt* s) {$/;"	f
analyseSizeof	$C2_ROOT/analyser/module_analyser_builtin.c2	/^fn QualType Analyser.analyseSizeof(Analyser* ma, BuiltinExpr* e) {$/;"	f
analyseStmt	$C2_ROOT/analyser/module_analyser_stmt.c2	/^fn FlowBits Analyser.analyseStmt(Analyser* ma, Stmt* s, bool checkEffect) {$/;"	f
analyseStructFieldInit	$C2_ROOT/analyser/module_analyser_init.c2	/^fn bool Analyser.analyseStructFieldInit(Analyser* ma, StructTypeDecl* std, InitListExpr* ile, Qu/;"	f
analyseStructMember	$C2_ROOT/analyser/module_analyser_struct.c2	/^fn void Analyser.analyseStructMember(Analyser* ma, VarDecl* v) {$/;"	f
analyseStructMemberAccess	$C2_ROOT/analyser/module_analyser_member.c2	/^fn Decl* Analyser.analyseStructMemberAccess(Analyser* ma, StructTypeDecl* std, u32 name_idx, Src/;"	f
analyseStructMemberTypeRef	$C2_ROOT/analyser/module_analyser_type.c2	/^fn QualType Analyser.analyseStructMemberTypeRef(Analyser* ma, TypeRef* ref) {$/;"	f
analyseStructMembers	$C2_ROOT/analyser/module_analyser_struct.c2	/^fn void Analyser.analyseStructMembers(Analyser* ma, StructTypeDecl* d) {$/;"	f
analyseStructNames	$C2_ROOT/analyser/module_analyser_struct.c2	/^fn void Analyser.analyseStructNames(Analyser* ma, StructTypeDecl* d, NameVector* names, NameVect/;"	f
analyseStructType	$C2_ROOT/analyser/module_analyser_struct.c2	/^fn void Analyser.analyseStructType(Analyser* ma, StructTypeDecl* d) {$/;"	f
analyseSwitchStmt	$C2_ROOT/analyser/module_analyser_switch.c2	/^fn FlowBits Analyser.analyseSwitchStmt(Analyser* ma, Stmt* s) {$/;"	f
analyseToContainer	$C2_ROOT/analyser/module_analyser_builtin.c2	/^fn QualType Analyser.analyseToContainer(Analyser* ma, BuiltinExpr* b) {$/;"	f
analyseTypeRef	$C2_ROOT/analyser/module_analyser_type.c2	/^fn QualType Analyser.analyseTypeRef(Analyser* ma, TypeRef* ref) {$/;"	f
analyseUnaryOperator	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^fn QualType Analyser.analyseUnaryOperator(Analyser* ma, Expr** e_ptr, u32 side) {$/;"	f
analyseUsedModule	$C2_ROOT/compiler/compiler.c2	/^fn void Compiler.analyseUsedModule(void* arg, ast.Module* m) {$/;"	f
analyseUserTypeRef	$C2_ROOT/analyser/module_analyser_type.c2	/^fn QualType Analyser.analyseUserTypeRef(Analyser* ma, TypeRef* ref) {$/;"	f
analyseWhileStmt	$C2_ROOT/analyser/module_analyser_stmt.c2	/^fn FlowBits Analyser.analyseWhileStmt(Analyser* ma, Stmt* s) {$/;"	f
analyse_lib	$C2_ROOT/compiler/compiler_libs.c2	/^fn void Compiler.analyse_lib(Compiler* c, Component* comp) {$/;"	f
analyser	$C2_ROOT/bootstrap/bootstrap.c	/^   module_analyser_Analyser* analyser;$/;"	v
analyser	$C2_ROOT/compiler/compiler.c2	/^    module_analyser.Analyser* analyser;$/;"	v
and	$C2_ROOT/ast/value.c2	/^fn Value Value.and(const Value* v1, const Value* v2) {$/;"	f
androidGetNativeActivity	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* androidGetNativeActivity() @(cname="sapp_android_get_native_activity");$/;"	f
android_tooltype	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    AndroidTooltype android_tooltype;$/;"	v
angle	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn f32 Vec2.angle(const Vec2* v) {$/;"	f
any	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    bool any;$/;"	v
appendBuffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn i32 appendBuffer(Buffer buf, Range* data) @(cname="sg_append_buffer");$/;"	f
append_frame_index	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 append_frame_index;$/;"	v
append_overflow	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool append_overflow;$/;"	v
append_pos	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 append_pos;$/;"	v
applyAttribute	$C2_ROOT/parser/ast_builder.c2	/^fn void Builder.applyAttribute(Builder* b, Decl* d, const Attr* a) {$/;"	f
applyAttributes	$C2_ROOT/parser/ast_builder.c2	/^public fn void Builder.applyAttributes(Builder* b, Decl* d) {$/;"	f
applyBindings	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void applyBindings(Bindings* bindings) @(cname="sg_apply_bindings");$/;"	f
applyPipeline	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void applyPipeline(Pipeline pip) @(cname="sg_apply_pipeline");$/;"	f
applyScissorRect	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void applyScissorRect(i32 x, i32 y, i32 width, i32 height, bool origin_top_left) @(cname="sg_/;"	f
applyScissorRectf	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void applyScissorRectf(f32 x, f32 y, f32 width, f32 height, bool origin_top_left) @(cname="sg/;"	f
applyUniforms	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void applyUniforms(i32 ub_slot, Range* data) @(cname="sg_apply_uniforms");$/;"	f
applyViewport	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void applyViewport(i32 x, i32 y, i32 width, i32 height, bool origin_top_left) @(cname="sg_app/;"	f
applyViewportf	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void applyViewportf(f32 x, f32 y, f32 width, f32 height, bool origin_top_left) @(cname="sg_ap/;"	f
appropriately	$C2_ROOT/libs/io_uring/io_uring.c2i	/^ *               from fd_in starting from the file offset and it is adjust appropriately;$/;"	v
arch	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Arch arch;$/;"	v
arch	$C2_ROOT/common/target_info.c2	/^    Arch arch;$/;"	v
arch_str	$C2_ROOT/common/target_info.c2	/^    char[32] arch_str;$/;"	v
are_errors	$C2_ROOT/bootstrap/bootstrap.c	/^   diags->promote_warnings = are_errors;$/;"	v
are_errors	$C2_ROOT/common/diagnostics.c2	/^    diags.promote_warnings = are_errors;$/;"	v
are_errors	$C2_ROOT/common/warning_flags.c2	/^    bool are_errors;$/;"	v
arenas	$C2_ROOT/ir/interference_graph.c2	/^    Arena[NumArenas] arenas;$/;"	v
arenas	$C2_ROOT/ir/live_map.c2	/^    Arena[NumArenas] arenas;$/;"	v
arenas	$C2_ROOT/ir/slot_writes_map.c2	/^    Arena[NumArenas] arenas;$/;"	v
arg	$C2_ROOT/analyser/module_analyser.c2	/^    MainMarker* m = arg;$/;"	v
arg	$C2_ROOT/analyser/module_analyser_call.c2	/^    Analyser* ma = arg;$/;"	v
arg	$C2_ROOT/analyser/module_analyser_stmt.c2	/^    UnaryOperator* uo = (UnaryOperator*)arg;$/;"	v
arg	$C2_ROOT/analyser/module_sorter.c2	/^    ModuleSorter* s = arg;$/;"	v
arg	$C2_ROOT/analyser/unused_checker.c2	/^    Checker* c = arg;$/;"	v
arg	$C2_ROOT/ast/function_decl.c2	/^    d.attr_printf_arg = arg;$/;"	v
arg	$C2_ROOT/ast/instantiator.c2	/^    void* arg;$/;"	v
arg	$C2_ROOT/bootstrap/bootstrap.c	/^   void* arg;$/;"	v
arg	$C2_ROOT/common/attr_handler.c2	/^    void* arg;$/;"	v
arg	$C2_ROOT/common/manifest_writer.c2	/^    string_buffer.Buf* out = arg;$/;"	v
arg	$C2_ROOT/compiler/compiler.c2	/^    void* arg;$/;"	v
arg	$C2_ROOT/compiler/compiler_libs.c2	/^    Compiler* c = arg;$/;"	v
arg	$C2_ROOT/compiler/main.c2	/^    plugin_mgr.Mgr* plugins = arg;$/;"	v
arg	$C2_ROOT/generator/ast_visitor.c2	/^    void* arg;$/;"	v
arg	$C2_ROOT/generator/c/dep_finder.c2	/^    void* arg;$/;"	v
arg	$C2_ROOT/generator/c2i/c2i_generator.c2	/^    Generator* gen = arg;$/;"	v
arg	$C2_ROOT/generator/ir/ir_generator.c2	/^    Generator* gen = arg;$/;"	v
arg	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    void* arg;$/;"	v
arg	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^    u32* count = arg;$/;"	v
arg	$C2_ROOT/ir/work_queue.c2	/^    QueueWorker* w = arg;$/;"	v
arg	$C2_ROOT/ir_examples/builtins.c2	/^    void* arg;$/;"	v
arg	$C2_ROOT/parser/c2_parser.c2	/^    Parser* p = arg;$/;"	v
arg	$C2_ROOT/plugins/deps_generator.c2	/^    Generator* gen = arg;$/;"	v
arg	$C2_ROOT/plugins/deps_generator_plugin.c2	/^    Plugin* p = arg;$/;"	v
arg	$C2_ROOT/plugins/git_version_plugin.c2	/^    Plugin* p = arg;$/;"	v
arg	$C2_ROOT/plugins/refs_generator.c2	/^    Generator* gen = arg;$/;"	v
arg	$C2_ROOT/plugins/refs_generator_plugin.c2	/^    Plugin* p = arg;$/;"	v
arg	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^    Plugin* p = arg;$/;"	v
arg	$C2_ROOT/plugins/unit_test_plugin.c2	/^    Plugin* p = arg;$/;"	v
arg1	$C2_ROOT/ir/context.c2	/^    t.arg1 = arg1;$/;"	v
argbuf	$C2_ROOT/common/process_utils.c2	/^        char[MAX_ARG_LEN] argbuf;$/;"	v
argc	$C2_ROOT/bootstrap/bootstrap.c	/^   return argc;$/;"	v
argc	$C2_ROOT/common/process_utils.c2	/^    return argc;$/;"	v
argc	$C2_ROOT/ir_examples/cond_decl.c2	/^    i32 loops = argc;$/;"	v
args	$C2_ROOT/analyser/module_analyser.c2	/^    va_list args;$/;"	v
args	$C2_ROOT/analyser/module_analyser_call.c2	/^    Expr** args;$/;"	v
args	$C2_ROOT/ast/ast_evaluator.c2	/^    Value[16] args;$/;"	v
args	$C2_ROOT/ast/call_expr.c2	/^    return e.args;$/;"	v
args	$C2_ROOT/ast_utils/string_buffer.c2	/^    va_list args;$/;"	v
args	$C2_ROOT/bootstrap/bootstrap.c	/^   va_list args;$/;"	v
args	$C2_ROOT/common/console.c2	/^    va_list args;$/;"	v
args	$C2_ROOT/common/diagnostics.c2	/^    va_list args;$/;"	v
args	$C2_ROOT/common/process_utils.c2	/^    va_list args;$/;"	v
args	$C2_ROOT/common/yaml/yaml_parser.c2	/^    va_list args;$/;"	v
args	$C2_ROOT/compiler/c2recipe_parser.c2	/^    va_list args;$/;"	v
args	$C2_ROOT/generator/c/c_generator_expr.c2	/^    Expr** args;$/;"	v
args	$C2_ROOT/parser/c2_parser.c2	/^    va_list args;$/;"	v
args	$C2_ROOT/parser/c2_tokenizer.c2	/^    va_list args;$/;"	v
args	$C2_ROOT/plugins/unit_test1.c2	/^  va_list args;$/;"	v
args	$C2_ROOT/plugins/unit_test2.c2	/^  va_list args;$/;"	v
args_off	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^    const char* args = cmd.cmd + args_off;$/;"	v
args_ref	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Ref args_ref;$/;"	v
argv	$C2_ROOT/common/process_utils.c2	/^        char*[MAX_ARGS + 2] argv;$/;"	v
arith	$C2_ROOT/libs/lua/lua.c2i	/^fn void arith(State *L, c_int op) @(cname="lua_arith");$/;"	f
arr	$C2_ROOT/ast_utils/string_buffer.c2	/^                char[4] arr;$/;"	v
array	$C2_ROOT/ast/type_ref.c2	/^    h.arrays[r.flags.num_arrays] = array;$/;"	v
array	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t* array;$/;"	v
array	$C2_ROOT/common/dsm_sorter.c2	/^    u8* array;$/;"	v
array	$C2_ROOT/generator/c/c_generator_trace.c2	/^    TraceCall* array;$/;"	v
array	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32* array;$/;"	v
array2	$C2_ROOT/bootstrap/bootstrap.c	/^      cl->array = array2;$/;"	v
array2	$C2_ROOT/generator/c/c_generator_trace.c2	/^        cl.array = array2;$/;"	v
array2	$C2_ROOT/ir_examples/global_arrays.c2	/^void* ptr = array2;$/;"	v
array3	$C2_ROOT/ir_examples/global_arrays.c2	/^void* ptr2 = array3;$/;"	v
arraySubscriptExprBits	$C2_ROOT/ast/stmt.c2	/^        ArraySubscriptExprBits arraySubscriptExprBits;$/;"	v
arraySubscriptExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_ArraySubscriptExprBits arraySubscriptExprBits;$/;"	v
arrayTypeBits	$C2_ROOT/ast/type.c2	/^        ArrayTypeBits arrayTypeBits;$/;"	v
arrayTypeBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_ArrayTypeBits arrayTypeBits;$/;"	v
array_count	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u16 array_count;$/;"	v
array_init_sorter	$C2_ROOT/generator/ir/array_init_sorter.c2	/^module array_init_sorter;$/;"	v
array_init_sorter	$C2_ROOT/generator/ir/ir_generator.c2	/^import array_init_sorter;$/;"	v
array_init_sorter_InitEntry	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct array_init_sorter_InitEntry_ array_init_sorter_InitEntry;$/;"	v
array_init_sorter_Sorter	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct array_init_sorter_Sorter_ array_init_sorter_Sorter;$/;"	v
array_size	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t array_size;$/;"	v
array_size	$C2_ROOT/generator/ir/array_init_sorter.c2	/^    u32 array_size;$/;"	v
array_values	$C2_ROOT/ast/ast.c2	/^    ArrayValueList array_values;$/;"	v
array_values	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ArrayValueList array_values;$/;"	v
as	$C2_ROOT/ast/function_decl.c2	/^    TypeRef rtype;        \/\/ return type as in code. note: variable size!$/;"	t
asDecl	$C2_ROOT/ast/alias_type_decl.c2	/^public fn Decl* AliasTypeDecl.asDecl(AliasTypeDecl* d) {$/;"	f
asDecl	$C2_ROOT/ast/enum_constant_decl.c2	/^public fn Decl* EnumConstantDecl.asDecl(EnumConstantDecl* d) {$/;"	f
asDecl	$C2_ROOT/ast/enum_type_decl.c2	/^public fn Decl* EnumTypeDecl.asDecl(EnumTypeDecl* d) { return &d.base; }$/;"	f
asDecl	$C2_ROOT/ast/function_decl.c2	/^public fn Decl* FunctionDecl.asDecl(FunctionDecl* d) {$/;"	f
asDecl	$C2_ROOT/ast/function_type_decl.c2	/^public fn Decl* FunctionTypeDecl.asDecl(FunctionTypeDecl* t) {$/;"	f
asDecl	$C2_ROOT/ast/import_decl.c2	/^public fn Decl* ImportDecl.asDecl(ImportDecl* d) { return &d.base; }$/;"	f
asDecl	$C2_ROOT/ast/struct_type_decl.c2	/^public fn Decl* StructTypeDecl.asDecl(StructTypeDecl* d) {$/;"	f
asDecl	$C2_ROOT/ast/var_decl.c2	/^public fn Decl* VarDecl.asDecl(VarDecl* d) {$/;"	f
asExpr	$C2_ROOT/ast/identifier_expr.c2	/^public fn Expr* IdentifierExpr.asExpr(IdentifierExpr* e) { return &e.base; }$/;"	f
asStmt	$C2_ROOT/ast/expr.c2	/^public fn Stmt* Expr.asStmt(Expr* e) { return &e.base; }$/;"	f
asType	$C2_ROOT/ast/function_type.c2	/^fn Type* FunctionType.asType(FunctionType* t) { return &t.base; }$/;"	f
asType	$C2_ROOT/ast/struct_type.c2	/^fn Type* StructType.asType(StructType* t) { return &t.base; }$/;"	f
as_i32	$C2_ROOT/ast/value.c2	/^public fn i32 Value.as_i32(const Value* v) @(unused) {$/;"	f
as_u16	$C2_ROOT/ast/value.c2	/^public fn u16 Value.as_u16(const Value* v) {$/;"	f
as_u32	$C2_ROOT/ast/value.c2	/^public fn u32 Value.as_u32(const Value* v) {$/;"	f
as_u64	$C2_ROOT/ast/value.c2	/^public fn u64 Value.as_u64(const Value* v) {$/;"	f
as_u8	$C2_ROOT/ast/value.c2	/^public fn u8 Value.as_u8(const Value* v) {$/;"	f
asan	$C2_ROOT/bootstrap/bootstrap.c	/^   gen.asan = asan;$/;"	v
asan	$C2_ROOT/compiler/compiler.c2	/^    bool asan;$/;"	v
asan	$C2_ROOT/generator/c/c_generator.c2	/^    gen.asan = asan;$/;"	v
asctime	$C2_ROOT/libs/libc/libc_time.c2i	/^fn c_char* asctime(const Tm* tm);$/;"	f
asctime_r	$C2_ROOT/libs/libc/libc_time.c2i	/^fn c_char* asctime_r(const Tm* tm, c_char* buf);$/;"	f
asin	$C2_ROOT/libs/math/math.c2i	/^fn c_double asin(c_double);$/;"	f
asinf	$C2_ROOT/libs/math/math.c2i	/^fn c_float asinf(c_float);$/;"	f
asinh	$C2_ROOT/libs/math/math.c2i	/^fn c_double asinh(c_double);$/;"	f
asinhf	$C2_ROOT/libs/math/math.c2i	/^fn c_float asinhf(c_float);$/;"	f
asmStmtBits	$C2_ROOT/ast/stmt.c2	/^        AsmStmtBits asmStmtBits;$/;"	v
asmStmtBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_AsmStmtBits asmStmtBits;$/;"	v
asm_file_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t asm_file_count;$/;"	v
asm_file_count	$C2_ROOT/common/build_target.c2	/^    u32 asm_file_count;$/;"	v
asm_file_max	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t asm_file_max;$/;"	v
asm_file_max	$C2_ROOT/common/build_target.c2	/^    u32 asm_file_max;$/;"	v
asm_files	$C2_ROOT/bootstrap/bootstrap.c	/^   build_target_File* asm_files;$/;"	v
asm_files	$C2_ROOT/common/build_target.c2	/^    File* asm_files;$/;"	v
asm_files	$C2_ROOT/compiler/compiler.c2	/^        string_list.List asm_files;$/;"	v
asm_string	$C2_ROOT/ast/asm_stmt.c2	/^    return s.asm_string;$/;"	v
asm_string	$C2_ROOT/bootstrap/bootstrap.c	/^   return s->asm_string;$/;"	v
asmflags	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t asmflags;$/;"	v
asmflags	$C2_ROOT/common/build_file.c2	/^    u32 asmflags;$/;"	v
aspect	$C2_ROOT/libs/sokol/sokol_math.c2i	/^    m.m[0] = f \/ aspect;$/;"	v
asprintf	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int asprintf(c_char**, const c_char* @(printf_format), ...);$/;"	f
assert_generated	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool assert_generated;$/;"	v
assert_generated	$C2_ROOT/generator/ir/ir_generator.c2	/^    bool assert_generated;$/;"	v
asserts	$C2_ROOT/ast/static_assert_list.c2	/^    return l.asserts;$/;"	v
asserts	$C2_ROOT/bootstrap/bootstrap.c	/^   return l->asserts;$/;"	v
asserts2	$C2_ROOT/ast/static_assert_list.c2	/^        l.asserts = asserts2;$/;"	v
asserts2	$C2_ROOT/bootstrap/bootstrap.c	/^      l->asserts = asserts2;$/;"	v
assignLoc	$C2_ROOT/ast/var_decl.c2	/^        init.loc = assignLoc;$/;"	v
assignLoc	$C2_ROOT/bootstrap/bootstrap.c	/^      init->loc = assignLoc;$/;"	v
assignLoc	$C2_ROOT/parser/ast_builder.c2	/^                          assignLoc,$/;"	v
assignee	$C2_ROOT/analyser/module_analyser_expr.c2	/^            MemberExpr* m = (MemberExpr*)assignee;$/;"	v
ast	$C2_ROOT/analyser/incr_array_list.c2	/^import ast;$/;"	v
ast	$C2_ROOT/analyser/label_vector.c2	/^import ast;$/;"	v
ast	$C2_ROOT/analyser/module_sorter.c2	/^import ast;$/;"	v
ast	$C2_ROOT/analyser/scope.c2	/^import ast;$/;"	v
ast	$C2_ROOT/analyser/struct_func_list.c2	/^import ast;$/;"	v
ast	$C2_ROOT/ast/alias_type.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/alias_type_decl.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/array_designated_init_expr.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/array_subscript_expr.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/array_type.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/array_value.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/array_value_list.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/asm_stmt.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/assert_stmt.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/ast.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/ast_evaluator.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/binary_operator.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/bitoffset_expr.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/boolean_literal.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/break_stmt.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/builtin_expr.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/builtin_type.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/call_expr.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/char_literal.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/compound_stmt.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/conditional_operator.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/continue_stmt.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/decl.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/decl_list.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/decl_stmt.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/enum_constant_decl.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/enum_type.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/enum_type_decl.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/explicit_cast_expr.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/expr.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/expr_list.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/fallthrough_stmt.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/field_designated_init_expr.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/float_literal.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/for_stmt.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/function_decl.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/function_decl_list.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/function_type.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/function_type_decl.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/goto_stmt.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/identifier_expr.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/if_stmt.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/implicit_cast_expr.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/import_decl.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/import_decl_list.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/init_list_expr.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/instance_table.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/instantiator.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/integer_literal.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/label_stmt.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/member_expr.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/module.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/module_type.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/nil_expr.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/paren_expr.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/pointer_pool.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/pointer_type.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/qualtype.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/range_expr.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/return_stmt.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/static_assert.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/static_assert_list.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/statistics.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/stmt.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/string_literal.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/string_type_pool.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/struct_type.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/struct_type_decl.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/switch_case.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/switch_stmt.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/symbol_table.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/type.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/type_expr.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/type_ref.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/unary_operator.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/utils.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/value.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/var_decl.c2	/^module ast;$/;"	v
ast	$C2_ROOT/ast/while_stmt.c2	/^module ast;$/;"	v
ast	$C2_ROOT/common/attr_handler.c2	/^import ast;$/;"	v
ast	$C2_ROOT/common/component.c2	/^import ast;$/;"	v
ast	$C2_ROOT/common/manifest_writer.c2	/^import ast;$/;"	v
ast	$C2_ROOT/common/module_list.c2	/^import ast;$/;"	v
ast	$C2_ROOT/compiler/compiler.c2	/^import ast;$/;"	v
ast	$C2_ROOT/compiler/compiler_libs.c2	/^import ast;$/;"	v
ast	$C2_ROOT/generator/c/c_generator_special.c2	/^import ast;$/;"	v
ast	$C2_ROOT/generator/ir/array_init_sorter.c2	/^import ast;$/;"	v
ast	$C2_ROOT/generator/ir/basic_struct_layouter.c2	/^import ast;$/;"	v
ast	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^import ast;$/;"	v
ast	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^import ast;$/;"	v
ast	$C2_ROOT/parser/ast_builder.c2	/^    AST* ast;$/;"	v
ast	$C2_ROOT/plugins/deps_generator_plugin.c2	/^import ast;$/;"	v
ast	$C2_ROOT/plugins/git_version_plugin.c2	/^import ast;$/;"	v
ast	$C2_ROOT/plugins/plugin_info.c2	/^import ast;$/;"	v
ast	$C2_ROOT/plugins/refs_generator_plugin.c2	/^import ast;$/;"	v
ast	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^import ast;$/;"	v
ast2idx	$C2_ROOT/ast/utils.c2	/^public fn u32 ast2idx(const AST* ast_) {$/;"	f
astPool	$C2_ROOT/analyser/module_analyser.c2	/^    string_pool.Pool* astPool;$/;"	v
astPool	$C2_ROOT/ast/utils.c2	/^    globals.names_pool = astPool;$/;"	v
astPool	$C2_ROOT/bootstrap/bootstrap.c	/^   string_pool_Pool* astPool;$/;"	v
astPool	$C2_ROOT/compiler/compiler.c2	/^    string_pool.Pool* astPool;$/;"	v
astPool	$C2_ROOT/generator/c/c_generator.c2	/^    string_pool.Pool* astPool;$/;"	v
astPool	$C2_ROOT/generator/c2i/c2i_generator.c2	/^    string_pool.Pool* astPool;$/;"	v
astPool	$C2_ROOT/plugins/plugin_info.c2	/^    string_pool.Pool* astPool;$/;"	v
ast_	$C2_ROOT/ast/utils.c2	/^    globals.ast_list[idx] = ast_;$/;"	v
ast_	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_globals->ast_list[idx] = ast_;$/;"	v
ast_AST	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_AST_ ast_AST;$/;"	v
ast_AliasType	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_AliasType_ ast_AliasType;$/;"	v
ast_AliasTypeDecl	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_AliasTypeDecl_ ast_AliasTypeDecl;$/;"	v
ast_ArrayDesignatedInitExpr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ArrayDesignatedInitExpr_ ast_ArrayDesignatedInitExpr;$/;"	v
ast_ArraySubscriptExpr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ArraySubscriptExpr_ ast_ArraySubscriptExpr;$/;"	v
ast_ArraySubscriptExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ArraySubscriptExprBits_ ast_ArraySubscriptExprBits;$/;"	v
ast_ArrayType	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ArrayType_ ast_ArrayType;$/;"	v
ast_ArrayTypeBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ArrayTypeBits_ ast_ArrayTypeBits;$/;"	v
ast_ArrayValue	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ArrayValue_ ast_ArrayValue;$/;"	v
ast_ArrayValueList	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ArrayValueList_ ast_ArrayValueList;$/;"	v
ast_AsmStmt	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_AsmStmt_ ast_AsmStmt;$/;"	v
ast_AsmStmtBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_AsmStmtBits_ ast_AsmStmtBits;$/;"	v
ast_AssertStmt	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_AssertStmt_ ast_AssertStmt;$/;"	v
ast_AttrHandlerFn	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_AttrHandlerFn func;$/;"	v
ast_AutoAttr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint32_t ast_AutoAttr;$/;"	v
ast_AutoAttr_File	$C2_ROOT/bootstrap/bootstrap.c	/^   d->base.varDeclBits.auto_attr = ast_AutoAttr_File;$/;"	v
ast_AutoAttr_Func	$C2_ROOT/bootstrap/bootstrap.c	/^   d->base.varDeclBits.auto_attr = ast_AutoAttr_Func;$/;"	v
ast_AutoAttr_Line	$C2_ROOT/bootstrap/bootstrap.c	/^   d->base.varDeclBits.auto_attr = ast_AutoAttr_Line;$/;"	v
ast_AutoAttr_None	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_AutoAttr_None,$/;"	v
ast_BinaryOpcode	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ast_BinaryOpcode;$/;"	v
ast_BinaryOpcode_Add	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_Add,$/;"	v
ast_BinaryOpcode_AddAssign	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_AddAssign,$/;"	v
ast_BinaryOpcode_And	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_And,$/;"	v
ast_BinaryOpcode_AndAssign	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_AndAssign,$/;"	v
ast_BinaryOpcode_Assign	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_Assign,$/;"	v
ast_BinaryOpcode_DivAssign	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_DivAssign,$/;"	v
ast_BinaryOpcode_Divide	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_Divide,$/;"	v
ast_BinaryOpcode_Equal	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_Equal,$/;"	v
ast_BinaryOpcode_GreaterEqual	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_GreaterEqual,$/;"	v
ast_BinaryOpcode_GreaterThan	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_GreaterThan,$/;"	v
ast_BinaryOpcode_LAnd	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_LAnd,$/;"	v
ast_BinaryOpcode_LOr	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_LOr,$/;"	v
ast_BinaryOpcode_LessEqual	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_LessEqual,$/;"	v
ast_BinaryOpcode_LessThan	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_LessThan,$/;"	v
ast_BinaryOpcode_MulAssign	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_MulAssign,$/;"	v
ast_BinaryOpcode_Multiply	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_Multiply,$/;"	v
ast_BinaryOpcode_NotEqual	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_NotEqual,$/;"	v
ast_BinaryOpcode_Or	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_Or,$/;"	v
ast_BinaryOpcode_OrAssign	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_OrAssign,$/;"	v
ast_BinaryOpcode_RemAssign	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_RemAssign,$/;"	v
ast_BinaryOpcode_Remainder	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_Remainder,$/;"	v
ast_BinaryOpcode_ShiftLeft	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_ShiftLeft,$/;"	v
ast_BinaryOpcode_ShiftRight	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_ShiftRight,$/;"	v
ast_BinaryOpcode_ShlAssign	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_ShlAssign,$/;"	v
ast_BinaryOpcode_ShrAssign	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_ShrAssign,$/;"	v
ast_BinaryOpcode_SubAssign	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_SubAssign,$/;"	v
ast_BinaryOpcode_Subtract	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_Subtract,$/;"	v
ast_BinaryOpcode_Xor	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_Xor,$/;"	v
ast_BinaryOpcode_XorAssign	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BinaryOpcode_XorAssign,$/;"	v
ast_BinaryOperator	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_BinaryOperator_ ast_BinaryOperator;$/;"	v
ast_BinaryOperatorBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_BinaryOperatorBits_ ast_BinaryOperatorBits;$/;"	v
ast_BitFieldInfo	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_BitFieldInfo_ ast_BitFieldInfo;$/;"	v
ast_BitFieldLayout	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_BitFieldLayout_ ast_BitFieldLayout;$/;"	v
ast_BitOffsetExpr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_BitOffsetExpr_ ast_BitOffsetExpr;$/;"	v
ast_BitOffsetExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_BitOffsetExprBits_ ast_BitOffsetExprBits;$/;"	v
ast_BooleanLiteral	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_BooleanLiteral_ ast_BooleanLiteral;$/;"	v
ast_BooleanLiteralBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_BooleanLiteralBits_ ast_BooleanLiteralBits;$/;"	v
ast_BreakStmt	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_BreakStmt_ ast_BreakStmt;$/;"	v
ast_BuiltinExpr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_BuiltinExpr_ ast_BuiltinExpr;$/;"	v
ast_BuiltinExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_BuiltinExprBits_ ast_BuiltinExprBits;$/;"	v
ast_BuiltinExprKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ast_BuiltinExprKind;$/;"	v
ast_BuiltinExprKind_Elemsof	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BuiltinExprKind_Elemsof,$/;"	v
ast_BuiltinExprKind_EnumMax	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BuiltinExprKind_EnumMax,$/;"	v
ast_BuiltinExprKind_EnumMin	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BuiltinExprKind_EnumMin,$/;"	v
ast_BuiltinExprKind_OffsetOf	$C2_ROOT/bootstrap/bootstrap.c	/^   e->base.base.builtinExprBits.kind = ast_BuiltinExprKind_OffsetOf;$/;"	v
ast_BuiltinExprKind_Sizeof	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BuiltinExprKind_Sizeof,$/;"	v
ast_BuiltinExprKind_ToContainer	$C2_ROOT/bootstrap/bootstrap.c	/^   e->base.base.builtinExprBits.kind = ast_BuiltinExprKind_ToContainer;$/;"	v
ast_BuiltinKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ast_BuiltinKind;$/;"	v
ast_BuiltinKind_Bool	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BuiltinKind_Bool,$/;"	v
ast_BuiltinKind_Char	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BuiltinKind_Char,$/;"	v
ast_BuiltinKind_Float32	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BuiltinKind_Float32,$/;"	v
ast_BuiltinKind_Float64	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BuiltinKind_Float64,$/;"	v
ast_BuiltinKind_ISize	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BuiltinKind_ISize,$/;"	v
ast_BuiltinKind_Int16	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BuiltinKind_Int16,$/;"	v
ast_BuiltinKind_Int32	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BuiltinKind_Int32,$/;"	v
ast_BuiltinKind_Int64	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BuiltinKind_Int64,$/;"	v
ast_BuiltinKind_Int8	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BuiltinKind_Int8,$/;"	v
ast_BuiltinKind_UInt16	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BuiltinKind_UInt16,$/;"	v
ast_BuiltinKind_UInt32	$C2_ROOT/bootstrap/bootstrap.c	/^   return (ast_globals->wordsize == 8) ? ast_BuiltinKind_UInt64 : ast_BuiltinKind_UInt32;$/;"	v
ast_BuiltinKind_UInt64	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BuiltinKind_UInt64,$/;"	v
ast_BuiltinKind_UInt8	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BuiltinKind_UInt8,$/;"	v
ast_BuiltinKind_USize	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BuiltinKind_USize,$/;"	v
ast_BuiltinKind_Void	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BuiltinKind_Void,$/;"	v
ast_BuiltinType	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_BuiltinType_ ast_BuiltinType;$/;"	v
ast_BuiltinTypeBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_BuiltinTypeBits_ ast_BuiltinTypeBits;$/;"	v
ast_CallExpr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_CallExpr_ ast_CallExpr;$/;"	v
ast_CallExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_CallExprBits_ ast_CallExprBits;$/;"	v
ast_CallKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ast_CallKind;$/;"	v
ast_CallKind_Invalid	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_CallKind_Invalid,$/;"	v
ast_CallKind_Normal	$C2_ROOT/bootstrap/bootstrap.c	/^   d->base.functionDeclBits.call_kind = prefix ? ast_CallKind_StaticTypeFunc : ast_CallKind_Norm/;"	v
ast_CallKind_StaticTypeFunc	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_CallKind_StaticTypeFunc,$/;"	v
ast_CallKind_TypeFunc	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_CallKind_TypeFunc,$/;"	v
ast_CharLiteral	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_CharLiteral_ ast_CharLiteral;$/;"	v
ast_CharLiteralBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_CharLiteralBits_ ast_CharLiteralBits;$/;"	v
ast_CompoundStmt	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_CompoundStmt_ ast_CompoundStmt;$/;"	v
ast_CompoundStmtBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_CompoundStmtBits_ ast_CompoundStmtBits;$/;"	v
ast_ConditionalOperator	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ConditionalOperator_ ast_ConditionalOperator;$/;"	v
ast_Cont	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ast_Cont;$/;"	v
ast_Cont_Abort	$C2_ROOT/bootstrap/bootstrap.c	/^   return ast_Cont_Abort;$/;"	v
ast_Cont_Break	$C2_ROOT/bootstrap/bootstrap.c	/^   return ast_Cont_Break;$/;"	v
ast_Cont_Continue	$C2_ROOT/bootstrap/bootstrap.c	/^   return ast_Cont_Continue;$/;"	v
ast_Cont_Error	$C2_ROOT/bootstrap/bootstrap.c	/^   if (ast_Value_isError(&sf->result)) return ast_Cont_Error;$/;"	v
ast_Cont_Goto	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_Cont_Goto,$/;"	v
ast_Cont_Normal	$C2_ROOT/bootstrap/bootstrap.c	/^   return s1 ? ast_Stmt_eval(s1, sf) : ast_Cont_Normal;$/;"	v
ast_Cont_Return	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_Cont_Return,$/;"	v
ast_ContinueStmt	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ContinueStmt_ ast_ContinueStmt;$/;"	v
ast_Decl	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_Decl_ ast_Decl;$/;"	v
ast_DeclBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_DeclBits_ ast_DeclBits;$/;"	v
ast_DeclCheckState	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ast_DeclCheckState;$/;"	v
ast_DeclCheckState_Checked	$C2_ROOT/bootstrap/bootstrap.c	/^   d->declBits.check_state = ast_DeclCheckState_Checked;$/;"	v
ast_DeclCheckState_InProgress	$C2_ROOT/bootstrap/bootstrap.c	/^   d->declBits.check_state = ast_DeclCheckState_InProgress;$/;"	v
ast_DeclCheckState_Unchecked	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_DeclCheckState_Unchecked,$/;"	v
ast_DeclKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ast_DeclKind;$/;"	v
ast_DeclKind_AliasType	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_DeclKind_AliasType,$/;"	v
ast_DeclKind_EnumConstant	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_DeclKind_EnumConstant,$/;"	v
ast_DeclKind_EnumType	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_DeclKind_EnumType,$/;"	v
ast_DeclKind_Function	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_DeclKind_Function,$/;"	v
ast_DeclKind_FunctionType	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_DeclKind_FunctionType,$/;"	v
ast_DeclKind_Import	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_DeclKind_Import,$/;"	v
ast_DeclKind_StructType	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_DeclKind_StructType,$/;"	v
ast_DeclKind_Variable	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_DeclKind_Variable,$/;"	v
ast_DeclList	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_DeclList_ ast_DeclList;$/;"	v
ast_DeclStmt	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_DeclStmt_ ast_DeclStmt;$/;"	v
ast_DeclStmtBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_DeclStmtBits_ ast_DeclStmtBits;$/;"	v
ast_Decl_getName	$C2_ROOT/bootstrap/bootstrap.c	/^   string_buffer_Buf_print(out, "type %s fn ", ast_Decl_getName(d));$/;"	f
ast_EnumConstantDecl	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_EnumConstantDecl_ ast_EnumConstantDecl;$/;"	v
ast_EnumConstantDeclBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_EnumConstantDeclBits_ ast_EnumConstantDeclBits;$/;"	v
ast_EnumType	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_EnumType_ ast_EnumType;$/;"	v
ast_EnumTypeDecl	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_EnumTypeDecl_ ast_EnumTypeDecl;$/;"	v
ast_EnumTypeDeclBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_EnumTypeDeclBits_ ast_EnumTypeDeclBits;$/;"	v
ast_Evaluator	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_Evaluator_ ast_Evaluator;$/;"	v
ast_ExplicitCastExpr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ExplicitCastExpr_ ast_ExplicitCastExpr;$/;"	v
ast_ExplicitCastExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ExplicitCastExprBits_ ast_ExplicitCastExprBits;$/;"	v
ast_Expr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_Expr_ ast_Expr;$/;"	v
ast_ExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ExprBits_ ast_ExprBits;$/;"	v
ast_ExprKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ast_ExprKind;$/;"	v
ast_ExprKind_ArrayDesignatedInit	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_ArrayDesignatedInit,$/;"	v
ast_ExprKind_ArraySubscript	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_ArraySubscript,$/;"	v
ast_ExprKind_BinaryOperator	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_BinaryOperator,$/;"	v
ast_ExprKind_BitOffset	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_BitOffset,$/;"	v
ast_ExprKind_BooleanLiteral	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_BooleanLiteral,$/;"	v
ast_ExprKind_Builtin	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_Builtin,$/;"	v
ast_ExprKind_Call	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_Call,$/;"	v
ast_ExprKind_CharLiteral	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_CharLiteral,$/;"	v
ast_ExprKind_ConditionalOperator	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_ConditionalOperator,$/;"	v
ast_ExprKind_ExplicitCast	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_ExplicitCast,$/;"	v
ast_ExprKind_FieldDesignatedInit	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_FieldDesignatedInit,$/;"	v
ast_ExprKind_FloatLiteral	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_FloatLiteral,$/;"	v
ast_ExprKind_Identifier	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_Identifier,$/;"	v
ast_ExprKind_ImplicitCast	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_ImplicitCast,$/;"	v
ast_ExprKind_InitList	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_InitList,$/;"	v
ast_ExprKind_IntegerLiteral	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_IntegerLiteral,$/;"	v
ast_ExprKind_Member	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_Member,$/;"	v
ast_ExprKind_Nil	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_Nil,$/;"	v
ast_ExprKind_Paren	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_Paren,$/;"	v
ast_ExprKind_Range	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_Range,$/;"	v
ast_ExprKind_StringLiteral	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_StringLiteral,$/;"	v
ast_ExprKind_Type	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_Type,$/;"	v
ast_ExprKind_UnaryOperator	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ExprKind_UnaryOperator,$/;"	v
ast_ExprList	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ExprList_ ast_ExprList;$/;"	v
ast_FP64	$C2_ROOT/bootstrap/bootstrap.c	/^typedef union ast_FP64_ ast_FP64;$/;"	v
ast_FallthroughStmt	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_FallthroughStmt_ ast_FallthroughStmt;$/;"	v
ast_FieldDesignatedInitExpr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_FieldDesignatedInitExpr_ ast_FieldDesignatedInitExpr;$/;"	v
ast_FieldInitField	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_FieldInitField_ ast_FieldInitField;$/;"	v
ast_FieldInitInfo	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_FieldInitInfo_ ast_FieldInitInfo;$/;"	v
ast_FloatLiteral	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_FloatLiteral_ ast_FloatLiteral;$/;"	v
ast_FloatLiteralBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_FloatLiteralBits_ ast_FloatLiteralBits;$/;"	v
ast_ForStmt	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ForStmt_ ast_ForStmt;$/;"	v
ast_Fun	$C2_ROOT/bootstrap/bootstrap.c	/^typedef union ast_Fun_ ast_Fun;$/;"	v
ast_FunDD	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_FunDD funDD;$/;"	v
ast_FunII	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_FunII funII;$/;"	v
ast_FunctionDecl	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_FunctionDecl_ ast_FunctionDecl;$/;"	v
ast_FunctionDeclBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_FunctionDeclBits_ ast_FunctionDeclBits;$/;"	v
ast_FunctionDeclFlags	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_FunctionDeclFlags_ ast_FunctionDeclFlags;$/;"	v
ast_FunctionDeclList	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_FunctionDeclList_ ast_FunctionDeclList;$/;"	v
ast_FunctionType	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_FunctionType_ ast_FunctionType;$/;"	v
ast_FunctionTypeDecl	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_FunctionTypeDecl_ ast_FunctionTypeDecl;$/;"	v
ast_Globals	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_Globals_ ast_Globals;$/;"	v
ast_GotoStmt	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_GotoStmt_ ast_GotoStmt;$/;"	v
ast_IdentifierExpr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_IdentifierExpr_ ast_IdentifierExpr;$/;"	v
ast_IdentifierExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_IdentifierExprBits_ ast_IdentifierExprBits;$/;"	v
ast_IdentifierKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ast_IdentifierKind;$/;"	v
ast_IdentifierKind_EnumConstant	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_IdentifierKind_EnumConstant,$/;"	v
ast_IdentifierKind_Function	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_IdentifierKind_Function,$/;"	v
ast_IdentifierKind_Label	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_IdentifierKind_Label,$/;"	v
ast_IdentifierKind_Module	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_IdentifierKind_Module,$/;"	v
ast_IdentifierKind_StructMember	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_IdentifierKind_StructMember,$/;"	v
ast_IdentifierKind_Type	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_IdentifierKind_Type,$/;"	v
ast_IdentifierKind_Unresolved	$C2_ROOT/bootstrap/bootstrap.c	/^   return ast_IdentifierKind_Unresolved;$/;"	v
ast_IdentifierKind_Var	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_IdentifierKind_Var,$/;"	v
ast_IfStmt	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_IfStmt_ ast_IfStmt;$/;"	v
ast_IfStmtBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_IfStmtBits_ ast_IfStmtBits;$/;"	v
ast_ImplicitCastBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ImplicitCastBits_ ast_ImplicitCastBits;$/;"	v
ast_ImplicitCastExpr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ImplicitCastExpr_ ast_ImplicitCastExpr;$/;"	v
ast_ImplicitCastKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ast_ImplicitCastKind;$/;"	v
ast_ImplicitCastKind_ArrayToPointerDecay	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ImplicitCastKind_ArrayToPointerDecay,$/;"	v
ast_ImplicitCastKind_BitCast	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ImplicitCastKind_BitCast,$/;"	v
ast_ImplicitCastKind_IntegralCast	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ImplicitCastKind_IntegralCast,$/;"	v
ast_ImplicitCastKind_LValueToRValue	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ImplicitCastKind_LValueToRValue,$/;"	v
ast_ImplicitCastKind_PointerToBoolean	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ImplicitCastKind_PointerToBoolean,$/;"	v
ast_ImplicitCastKind_PointerToInteger	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ImplicitCastKind_PointerToInteger,$/;"	v
ast_ImportDecl	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ImportDecl_ ast_ImportDecl;$/;"	v
ast_ImportDeclBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ImportDeclBits_ ast_ImportDeclBits;$/;"	v
ast_ImportDeclList	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ImportDeclList_ ast_ImportDeclList;$/;"	v
ast_InitListExpr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_InitListExpr_ ast_InitListExpr;$/;"	v
ast_InitListExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_InitListExprBits_ ast_InitListExprBits;$/;"	v
ast_InstanceTable	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_InstanceTable_ ast_InstanceTable;$/;"	v
ast_Instantiator	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_Instantiator_ ast_Instantiator;$/;"	v
ast_IntegerLiteral	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_IntegerLiteral_ ast_IntegerLiteral;$/;"	v
ast_IntegerLiteralBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_IntegerLiteralBits_ ast_IntegerLiteralBits;$/;"	v
ast_LabelStmt	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_LabelStmt_ ast_LabelStmt;$/;"	v
ast_LabelStmtBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_LabelStmtBits_ ast_LabelStmtBits;$/;"	v
ast_MemberConversion	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ast_MemberConversion;$/;"	v
ast_MemberConversion_Addr	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_MemberConversion_Addr,$/;"	v
ast_MemberConversion_Deref	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_MemberConversion_Deref,$/;"	v
ast_MemberConversion_None	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_MemberConversion_None,$/;"	v
ast_MemberExpr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_MemberExpr_ ast_MemberExpr;$/;"	v
ast_MemberExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_MemberExprBits_ ast_MemberExprBits;$/;"	v
ast_MemberRef	$C2_ROOT/bootstrap/bootstrap.c	/^typedef union ast_MemberRef_ ast_MemberRef;$/;"	v
ast_Module	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_Module_ ast_Module;$/;"	v
ast_ModuleType	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ModuleType_ ast_ModuleType;$/;"	v
ast_NilExpr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_NilExpr_ ast_NilExpr;$/;"	v
ast_OffsetOfData	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_OffsetOfData_ ast_OffsetOfData;$/;"	v
ast_OpaqueErrorfn	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_OpaqueErrorfn on_error;$/;"	v
ast_ParenExpr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ParenExpr_ ast_ParenExpr;$/;"	v
ast_ParenExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ParenExprBits_ ast_ParenExprBits;$/;"	v
ast_PointerPool	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_PointerPool_ ast_PointerPool;$/;"	v
ast_PointerPoolSlot	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_PointerPoolSlot_ ast_PointerPoolSlot;$/;"	v
ast_PointerType	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_PointerType_ ast_PointerType;$/;"	v
ast_QualType	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_QualType_ ast_QualType;$/;"	v
ast_QualType_Const	$C2_ROOT/bootstrap/bootstrap.c	/^   qt->ptr |= ast_QualType_Const;$/;"	v
ast_QualType_Invalid	$C2_ROOT/bootstrap/bootstrap.c	/^   return ast_QualType_Invalid;$/;"	v
ast_QualType_Mask	$C2_ROOT/bootstrap/bootstrap.c	/^   qt->ptr &= ~ast_QualType_Mask;$/;"	v
ast_QualType_Volatile	$C2_ROOT/bootstrap/bootstrap.c	/^   qt->ptr |= ast_QualType_Volatile;$/;"	v
ast_RangeExpr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_RangeExpr_ ast_RangeExpr;$/;"	v
ast_Ref	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_Ref_ ast_Ref;$/;"	v
ast_ReturnStmt	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ReturnStmt_ ast_ReturnStmt;$/;"	v
ast_ReturnStmtBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ReturnStmtBits_ ast_ReturnStmtBits;$/;"	v
ast_Stat	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_Stat_ ast_Stat;$/;"	v
ast_StaticAssert	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_StaticAssert_ ast_StaticAssert;$/;"	v
ast_StaticAssertList	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_StaticAssertList_ ast_StaticAssertList;$/;"	v
ast_Stats	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_Stats_ ast_Stats;$/;"	v
ast_Stmt	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_Stmt_ ast_Stmt;$/;"	v
ast_StmtBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_StmtBits_ ast_StmtBits;$/;"	v
ast_StmtKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ast_StmtKind;$/;"	v
ast_StmtKind_Asm	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_StmtKind_Asm,$/;"	v
ast_StmtKind_Assert	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_StmtKind_Assert,$/;"	v
ast_StmtKind_Break	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_StmtKind_Break,$/;"	v
ast_StmtKind_Compound	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_StmtKind_Compound,$/;"	v
ast_StmtKind_Continue	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_StmtKind_Continue,$/;"	v
ast_StmtKind_Decl	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_StmtKind_Decl,$/;"	v
ast_StmtKind_Expr	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_StmtKind_Expr,$/;"	v
ast_StmtKind_Fallthrough	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_StmtKind_Fallthrough,$/;"	v
ast_StmtKind_For	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_StmtKind_For,$/;"	v
ast_StmtKind_Goto	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_StmtKind_Goto,$/;"	v
ast_StmtKind_If	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_StmtKind_If,$/;"	v
ast_StmtKind_Label	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_StmtKind_Label,$/;"	v
ast_StmtKind_Return	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_StmtKind_Return,$/;"	v
ast_StmtKind_Switch	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_StmtKind_Switch,$/;"	v
ast_StmtKind_While	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_StmtKind_While,$/;"	v
ast_StringLiteral	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_StringLiteral_ ast_StringLiteral;$/;"	v
ast_StringLiteralBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_StringLiteralBits_ ast_StringLiteralBits;$/;"	v
ast_StringTypePool	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_StringTypePool_ ast_StringTypePool;$/;"	v
ast_StringTypeSlot	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_StringTypeSlot_ ast_StringTypeSlot;$/;"	v
ast_StructLayout	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_StructLayout_ ast_StructLayout;$/;"	v
ast_StructMemberLayout	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_StructMemberLayout_ ast_StructMemberLayout;$/;"	v
ast_StructType	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_StructType_ ast_StructType;$/;"	v
ast_StructTypeDecl	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_StructTypeDecl_ ast_StructTypeDecl;$/;"	v
ast_StructTypeDeclBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_StructTypeDeclBits_ ast_StructTypeDeclBits;$/;"	v
ast_SwitchCase	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_SwitchCase_ ast_SwitchCase;$/;"	v
ast_SwitchCaseBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_SwitchCaseBits_ ast_SwitchCaseBits;$/;"	v
ast_SwitchStmt	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_SwitchStmt_ ast_SwitchStmt;$/;"	v
ast_SwitchStmtBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_SwitchStmtBits_ ast_SwitchStmtBits;$/;"	v
ast_SymbolTable	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_SymbolTable_ ast_SymbolTable;$/;"	v
ast_TemplateFunction	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_TemplateFunction_ ast_TemplateFunction;$/;"	v
ast_TemplateInstance	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_TemplateInstance_ ast_TemplateInstance;$/;"	v
ast_ToContainerData	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_ToContainerData_ ast_ToContainerData;$/;"	v
ast_Type	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_Type_ ast_Type;$/;"	v
ast_TypeBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_TypeBits_ ast_TypeBits;$/;"	v
ast_TypeExpr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_TypeExpr_ ast_TypeExpr;$/;"	v
ast_TypeExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_TypeExprBits_ ast_TypeExprBits;$/;"	v
ast_TypeKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ast_TypeKind;$/;"	v
ast_TypeKind_Alias	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_TypeKind_Alias,$/;"	v
ast_TypeKind_Array	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_TypeKind_Array,$/;"	v
ast_TypeKind_Builtin	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_TypeKind_Builtin,$/;"	v
ast_TypeKind_Enum	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_TypeKind_Enum,$/;"	v
ast_TypeKind_Function	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_TypeKind_Function,$/;"	v
ast_TypeKind_Module	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_TypeKind_Module,$/;"	v
ast_TypeKind_Pointer	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_TypeKind_Pointer,$/;"	v
ast_TypeKind_Struct	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_TypeKind_Struct,$/;"	v
ast_TypeRef	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_TypeRef_ ast_TypeRef;$/;"	v
ast_TypeRefBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_TypeRefBits_ ast_TypeRefBits;$/;"	v
ast_TypeRefHolder	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_TypeRefHolder_ ast_TypeRefHolder;$/;"	v
ast_UnaryOpcode	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ast_UnaryOpcode;$/;"	v
ast_UnaryOpcode_AddrOf	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_UnaryOpcode_AddrOf,$/;"	v
ast_UnaryOpcode_Deref	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_UnaryOpcode_Deref,$/;"	v
ast_UnaryOpcode_LNot	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_UnaryOpcode_LNot,$/;"	v
ast_UnaryOpcode_Minus	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_UnaryOpcode_Minus,$/;"	v
ast_UnaryOpcode_Not	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_UnaryOpcode_Not,$/;"	v
ast_UnaryOpcode_Plus	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_UnaryOpcode_Plus,$/;"	v
ast_UnaryOpcode_PostDec	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_UnaryOpcode_PostDec,$/;"	v
ast_UnaryOpcode_PostInc	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_UnaryOpcode_PostInc,$/;"	v
ast_UnaryOpcode_PreDec	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_UnaryOpcode_PreDec,$/;"	v
ast_UnaryOpcode_PreInc	$C2_ROOT/bootstrap/bootstrap.c	/^   return ast_UnaryOpcode_PreInc;$/;"	v
ast_UnaryOperator	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_UnaryOperator_ ast_UnaryOperator;$/;"	v
ast_UnaryOperatorBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_UnaryOperatorBits_ ast_UnaryOperatorBits;$/;"	v
ast_ValType	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ast_ValType;$/;"	v
ast_ValType_LValue	$C2_ROOT/bootstrap/bootstrap.c	/^   e->base.exprBits.valtype = ast_ValType_LValue;$/;"	v
ast_ValType_NValue	$C2_ROOT/bootstrap/bootstrap.c	/^   return ast_ValType_NValue;$/;"	v
ast_ValType_RValue	$C2_ROOT/bootstrap/bootstrap.c	/^   e->base.exprBits.valtype = ast_ValType_RValue;$/;"	v
ast_Value	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_Value_ ast_Value;$/;"	v
ast_ValueKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ast_ValueKind;$/;"	v
ast_ValueKind_Error	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ValueKind_Error,$/;"	v
ast_ValueKind_Float	$C2_ROOT/bootstrap/bootstrap.c	/^   v->kind = ast_ValueKind_Float;$/;"	v
ast_ValueKind_Integer	$C2_ROOT/bootstrap/bootstrap.c	/^   v->kind = ast_ValueKind_Integer;$/;"	v
ast_VarDecl	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_VarDecl_ ast_VarDecl;$/;"	v
ast_VarDeclBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_VarDeclBits_ ast_VarDeclBits;$/;"	v
ast_VarDeclInit	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_VarDeclInit_ ast_VarDeclInit;$/;"	v
ast_VarDeclKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ast_VarDeclKind;$/;"	v
ast_VarDeclKind_FunctionParam	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_VarDeclKind_FunctionParam,$/;"	v
ast_VarDeclKind_GlobalVar	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_VarDeclKind_GlobalVar,$/;"	v
ast_VarDeclKind_LocalVar	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_VarDeclKind_LocalVar,$/;"	v
ast_VarDeclKind_StructMember	$C2_ROOT/bootstrap/bootstrap.c	/^   d->base.varDeclBits.kind = ast_VarDeclKind_StructMember;$/;"	v
ast_WhileStmt	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_WhileStmt_ ast_WhileStmt;$/;"	v
ast_builder	$C2_ROOT/analyser/conversion_checker.c2	/^import ast_builder;$/;"	v
ast_builder	$C2_ROOT/analyser/module_analyser.c2	/^import ast_builder;$/;"	v
ast_builder	$C2_ROOT/analyser/module_analyser_expr.c2	/^import ast_builder;$/;"	v
ast_builder	$C2_ROOT/compiler/compiler.c2	/^import ast_builder;$/;"	v
ast_builder	$C2_ROOT/parser/ast_builder.c2	/^module ast_builder;$/;"	v
ast_builder	$C2_ROOT/plugins/plugin_info.c2	/^import ast_builder;$/;"	v
ast_builder_Builder	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_builder_Builder_ ast_builder_Builder;$/;"	v
ast_builtins	$C2_ROOT/bootstrap/bootstrap.c	/^   info->ast_builtins = ast_builtins;$/;"	v
ast_builtins	$C2_ROOT/plugins/deps_generator_plugin.c2	/^    ast.builtins = info.ast_builtins;$/;"	v
ast_builtins	$C2_ROOT/plugins/git_version_plugin.c2	/^    ast.builtins = p.info.ast_builtins;$/;"	v
ast_builtins	$C2_ROOT/plugins/plugin_info.c2	/^    ast.QualType* ast_builtins;$/;"	v
ast_builtins	$C2_ROOT/plugins/refs_generator_plugin.c2	/^    ast.builtins = info.ast_builtins;$/;"	v
ast_builtins	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^    ast.builtins = info.ast_builtins;$/;"	v
ast_builtins	$C2_ROOT/plugins/unit_test_plugin.c2	/^    ast.builtins = info.ast_builtins;$/;"	v
ast_capacity	$C2_ROOT/ast/utils.c2	/^    u32 ast_capacity;$/;"	v
ast_capacity	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t ast_capacity;$/;"	v
ast_clear_generated	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.ast_clear_generated(void* arg, AST* a) {$/;"	f
ast_context	$C2_ROOT/analyser/module_analyser.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/alias_type.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/alias_type_decl.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/array_designated_init_expr.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/array_subscript_expr.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/array_type.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/array_value.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/asm_stmt.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/assert_stmt.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/binary_operator.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/bitoffset_expr.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/boolean_literal.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/break_stmt.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/builtin_expr.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/builtin_type.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/call_expr.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/char_literal.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/compound_stmt.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/conditional_operator.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/continue_stmt.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/decl_stmt.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/enum_constant_decl.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/enum_type.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/enum_type_decl.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/explicit_cast_expr.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/fallthrough_stmt.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/field_designated_init_expr.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/float_literal.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/for_stmt.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/function_decl.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/function_type.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/function_type_decl.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/goto_stmt.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/identifier_expr.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/if_stmt.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/implicit_cast_expr.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/import_decl.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/init_list_expr.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/instantiator.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/integer_literal.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/label_stmt.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/member_expr.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/module.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/module_type.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/nil_expr.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/paren_expr.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/pointer_pool.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/pointer_type.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/range_expr.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/return_stmt.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/static_assert.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/string_literal.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/string_type_pool.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/struct_type.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/struct_type_decl.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/switch_case.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/switch_stmt.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/type_expr.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/unary_operator.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/var_decl.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast/while_stmt.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/ast_utils/context.c2	/^module ast_context;$/;"	v
ast_context	$C2_ROOT/common/component.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/compiler/compiler.c2	/^import ast_context;$/;"	v
ast_context	$C2_ROOT/plugins/plugin_info.c2	/^import ast_context;$/;"	v
ast_context_Block	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_context_Block_ ast_context_Block;$/;"	v
ast_context_Context	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_context_Context_ ast_context_Context;$/;"	v
ast_count	$C2_ROOT/ast/utils.c2	/^    u32 idx = globals.ast_count;$/;"	v
ast_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t idx = ast_globals->ast_count;$/;"	v
ast_globals	$C2_ROOT/bootstrap/bootstrap.c	/^   return ast_globals;$/;"	v
ast_globals	$C2_ROOT/plugins/plugin_info.c2	/^    ast.Globals* ast_globals;$/;"	v
ast_idx	$C2_ROOT/ast/call_expr.c2	/^    e.instance_ast_idx = (u16)ast_idx;$/;"	v
ast_idx	$C2_ROOT/ast/decl.c2	/^    d.ast_idx = (u16)ast_idx;$/;"	v
ast_idx	$C2_ROOT/ast/static_assert.c2	/^    d.ast_idx = ast_idx;$/;"	v
ast_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t ast_idx;$/;"	v
ast_idx	$C2_ROOT/parser/ast_builder.c2	/^    u32 ast_idx;$/;"	v
ast_list	$C2_ROOT/ast/utils.c2	/^    AST** ast_list;$/;"	v
ast_list	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_AST** ast_list;$/;"	v
ast_mark_generated	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.ast_mark_generated(void* arg, AST* a) {$/;"	f
ast_visitor	$C2_ROOT/generator/ast_visitor.c2	/^module ast_visitor;$/;"	v
ast_visitor	$C2_ROOT/generator/ast_visitor_expr.c2	/^module ast_visitor;$/;"	v
ast_visitor	$C2_ROOT/generator/generator_utils.c2	/^import ast_visitor;$/;"	v
ast_visitor	$C2_ROOT/plugins/deps_generator.c2	/^import ast_visitor;$/;"	v
ast_visitor	$C2_ROOT/plugins/refs_generator.c2	/^import ast_visitor;$/;"	v
ast_visitor_OnRef	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_visitor_OnRef on_ref;$/;"	v
ast_visitor_Visitor	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ast_visitor_Visitor_ ast_visitor_Visitor;$/;"	v
at	$C2_ROOT/common/module_list.c2	/^public fn ast.Module* List.at(const List* l, u32 idx) {$/;"	f
at_bol	$C2_ROOT/bootstrap/bootstrap.c	/^         at_bol = true;$/;"	v
at_bol	$C2_ROOT/parser/c2_tokenizer.c2	/^fn bool Tokenizer.at_bol(Tokenizer* t) {$/;"	f
at_quick_exit	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int at_quick_exit(AtExitFn __func);$/;"	f
atan	$C2_ROOT/libs/math/math.c2i	/^fn c_double atan(c_double);$/;"	f
atan2	$C2_ROOT/libs/math/math.c2i	/^fn c_double atan2(c_double, c_double);$/;"	f
atan2f	$C2_ROOT/libs/math/math.c2i	/^fn c_float atan2f(c_float, c_float);$/;"	f
atanf	$C2_ROOT/libs/math/math.c2i	/^fn c_float atanf(c_float);$/;"	f
atanh	$C2_ROOT/libs/math/math.c2i	/^fn c_double atanh(c_double);$/;"	f
atanhf	$C2_ROOT/libs/math/math.c2i	/^fn c_float atanhf(c_float);$/;"	f
atexit	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int atexit(AtExitFn __func);$/;"	f
atof	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_double atof(const c_char* nptr);$/;"	f
atoi	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int atoi(const c_char* nptr);$/;"	f
atol	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_long atol(const c_char* nptr);$/;"	f
atoll	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_longlong atoll(const c_char* nptr);$/;"	f
atpanic	$C2_ROOT/libs/lua/lua.c2i	/^fn CFunction atpanic(State *L, CFunction panicf) @(cname="lua_atpanic");$/;"	f
attachments	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    Attachments attachments;$/;"	v
attr	$C2_ROOT/analyser/module_analyser.c2	/^import attr;$/;"	v
attr	$C2_ROOT/ast/ast.c2	/^import attr;$/;"	v
attr	$C2_ROOT/ast/decl.c2	/^import attr;$/;"	v
attr	$C2_ROOT/ast/utils.c2	/^import attr;$/;"	v
attr	$C2_ROOT/ast_utils/attr.c2	/^module attr;$/;"	v
attr	$C2_ROOT/ast_utils/attr_table.c2	/^import attr;$/;"	v
attr	$C2_ROOT/common/attr_handler.c2	/^import attr;$/;"	v
attr	$C2_ROOT/parser/c2_parser.c2	/^import attr;$/;"	v
attr	$C2_ROOT/plugins/unit_test_plugin.c2	/^import attr;$/;"	v
attr_Attr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct attr_Attr_ attr_Attr;$/;"	v
attr_AttrKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t attr_AttrKind;$/;"	v
attr_AttrKind_Aligned	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_Aligned,$/;"	v
attr_AttrKind_AutoFile	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_AutoFile,$/;"	v
attr_AttrKind_AutoFunc	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_AutoFunc,$/;"	v
attr_AttrKind_AutoLine	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_AutoLine,$/;"	v
attr_AttrKind_CDef	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_CDef,$/;"	v
attr_AttrKind_CName	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_CName,$/;"	v
attr_AttrKind_Constructor	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_Constructor,$/;"	v
attr_AttrKind_Destructor	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_Destructor,$/;"	v
attr_AttrKind_Embed	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_Embed,$/;"	v
attr_AttrKind_Export	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_Export,$/;"	v
attr_AttrKind_Inline	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_Inline,$/;"	v
attr_AttrKind_NoReturn	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_NoReturn,$/;"	v
attr_AttrKind_NoTypeDef	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_NoTypeDef,$/;"	v
attr_AttrKind_Opaque	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_Opaque,$/;"	v
attr_AttrKind_Packed	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_Packed,$/;"	v
attr_AttrKind_PrintfFormat	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_PrintfFormat,$/;"	v
attr_AttrKind_Pure	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_Pure,$/;"	v
attr_AttrKind_Section	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_Section,$/;"	v
attr_AttrKind_Unknown	$C2_ROOT/bootstrap/bootstrap.c	/^   return attr_AttrKind_Unknown;$/;"	v
attr_AttrKind_Unused	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_Unused,$/;"	v
attr_AttrKind_UnusedParams	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_UnusedParams,$/;"	v
attr_AttrKind_Weak	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrKind_Weak,$/;"	v
attr_AttrReq	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t attr_AttrReq;$/;"	v
attr_AttrReq_Arg	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrReq_Arg,$/;"	v
attr_AttrReq_NoArg	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrReq_NoArg = 0,$/;"	v
attr_AttrReq_Number	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrReq_Number,$/;"	v
attr_AttrReq_Ok	$C2_ROOT/bootstrap/bootstrap.c	/^   return attr_AttrReq_Ok;$/;"	v
attr_AttrReq_Power2	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrReq_Power2,$/;"	v
attr_AttrReq_String	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_AttrReq_String,$/;"	v
attr_Value	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct attr_Value_ attr_Value;$/;"	v
attr_ValueKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t attr_ValueKind;$/;"	v
attr_ValueKind_None	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_ValueKind_None,$/;"	v
attr_ValueKind_Number	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_ValueKind_Number,$/;"	v
attr_ValueKind_String	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_ValueKind_String,$/;"	v
attr_alignment	$C2_ROOT/ast/struct_type_decl.c2	/^    return layout.attr_alignment;$/;"	v
attr_alignment	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t attr_alignment;$/;"	v
attr_constructor	$C2_ROOT/ast/function_decl.c2	/^    return d.flags.attr_constructor;$/;"	v
attr_constructor	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->flags.attr_constructor;$/;"	v
attr_destructor	$C2_ROOT/ast/function_decl.c2	/^    return d.flags.attr_destructor;$/;"	v
attr_destructor	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->flags.attr_destructor;$/;"	v
attr_export	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->declBits.attr_export;$/;"	v
attr_handler	$C2_ROOT/common/attr_handler.c2	/^module attr_handler;$/;"	v
attr_handler	$C2_ROOT/compiler/compiler.c2	/^import attr_handler;$/;"	v
attr_handler	$C2_ROOT/parser/ast_builder.c2	/^import attr_handler;$/;"	v
attr_handler_	$C2_ROOT/bootstrap/bootstrap.c	/^   b->attr_handler = attr_handler_;$/;"	v
attr_handler_	$C2_ROOT/parser/ast_builder.c2	/^    b.attr_handler = attr_handler_;$/;"	v
attr_handler_Entry	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct attr_handler_Entry_ attr_handler_Entry;$/;"	v
attr_handler_Handler	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct attr_handler_Handler_ attr_handler_Handler;$/;"	v
attr_inline	$C2_ROOT/ast/function_decl.c2	/^    return d.flags.attr_inline;$/;"	v
attr_inline	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->flags.attr_inline;$/;"	v
attr_name	$C2_ROOT/plugins/unit_test_plugin.c2	/^    u32 attr_name;$/;"	v
attr_name_indexes	$C2_ROOT/ast/utils.c2	/^    u32[elemsof(attr.AttrKind)] attr_name_indexes;$/;"	v
attr_name_indexes	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_name_indexes = indexes;$/;"	v
attr_noreturn	$C2_ROOT/ast/function_decl.c2	/^    return d.flags.attr_noreturn;$/;"	v
attr_noreturn	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->flags.attr_noreturn;$/;"	v
attr_notypedef	$C2_ROOT/ast/struct_type_decl.c2	/^    return d.base.structTypeDeclBits.attr_notypedef;$/;"	v
attr_notypedef	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->base.structTypeDeclBits.attr_notypedef;$/;"	v
attr_opaque	$C2_ROOT/ast/struct_type_decl.c2	/^    return d.base.structTypeDeclBits.attr_opaque;$/;"	v
attr_opaque	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->base.structTypeDeclBits.attr_opaque;$/;"	v
attr_packed	$C2_ROOT/ast/struct_type_decl.c2	/^    return d.base.structTypeDeclBits.attr_packed;$/;"	v
attr_packed	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->base.structTypeDeclBits.attr_packed;$/;"	v
attr_printf_arg	$C2_ROOT/ast/function_decl.c2	/^    return d.attr_printf_arg;$/;"	v
attr_printf_arg	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t attr_printf_arg;$/;"	v
attr_pure	$C2_ROOT/ast/function_decl.c2	/^    return d.flags.attr_pure;$/;"	v
attr_pure	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->flags.attr_pure;$/;"	v
attr_table	$C2_ROOT/ast/ast.c2	/^import attr_table;$/;"	v
attr_table	$C2_ROOT/ast_utils/attr_table.c2	/^module attr_table;$/;"	v
attr_table_Attr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct attr_table_Attr_ attr_table_Attr;$/;"	v
attr_table_Table	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct attr_table_Table_ attr_table_Table;$/;"	v
attr_unused	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->declBits.attr_unused;$/;"	v
attr_unused_params	$C2_ROOT/ast/function_decl.c2	/^    return d.flags.attr_unused_params;$/;"	v
attr_unused_params	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->flags.attr_unused_params;$/;"	v
attr_weak	$C2_ROOT/ast/function_decl.c2	/^    return d.flags.attr_weak;$/;"	v
attr_weak	$C2_ROOT/ast/var_decl.c2	/^    return d.base.varDeclBits.attr_weak;$/;"	v
attr_weak	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->flags.attr_weak;$/;"	v
attrs	$C2_ROOT/ast/ast.c2	/^    attr_table.Table* attrs;$/;"	v
attrs	$C2_ROOT/ast_utils/attr_table.c2	/^    Attr* attrs;$/;"	v
attrs	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_table_Table* attrs;$/;"	v
attrs	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VertexAttrState[16] attrs;$/;"	v
attrs	$C2_ROOT/parser/ast_builder.c2	/^    Attr[8] attrs;$/;"	v
attrs2	$C2_ROOT/ast_utils/attr_table.c2	/^    t.attrs = attrs2;$/;"	v
attrs2	$C2_ROOT/bootstrap/bootstrap.c	/^   t->attrs = attrs2;$/;"	v
auxPool	$C2_ROOT/ast/ast.c2	/^    string_pool.Pool* auxPool;$/;"	v
auxPool	$C2_ROOT/bootstrap/bootstrap.c	/^   string_pool_Pool* auxPool;$/;"	v
auxPool	$C2_ROOT/common/component.c2	/^    c.auxPool = auxPool;$/;"	v
auxPool	$C2_ROOT/compiler/compiler.c2	/^    info.auxPool = c.auxPool;$/;"	v
auxPool	$C2_ROOT/compiler/main.c2	/^    string_pool.Pool* auxPool;$/;"	v
auxPool	$C2_ROOT/compiler/plugin_mgr.c2	/^    string_pool.Pool* auxPool;$/;"	v
auxPool	$C2_ROOT/generator/c/c_generator.c2	/^    string_pool.Pool* auxPool;$/;"	v
auxPool	$C2_ROOT/parser/ast_builder.c2	/^    b.auxPool = auxPool;$/;"	v
auxPool	$C2_ROOT/plugins/plugin_info.c2	/^    string_pool.Pool* auxPool;$/;"	v
avail	$C2_ROOT/ast_utils/context.c2	/^        slack += avail;$/;"	v
avail	$C2_ROOT/bootstrap/bootstrap.c	/^      slack += avail;$/;"	v
available_dynamic	$C2_ROOT/bootstrap/bootstrap.c	/^   return c->available_dynamic;$/;"	v
available_static	$C2_ROOT/bootstrap/bootstrap.c	/^   return c->available_static;$/;"	v
b_id	$C2_ROOT/bootstrap/bootstrap.c	/^   return b_id;$/;"	v
b_id	$C2_ROOT/generator/ir/ir_generator.c2	/^    return b_id;$/;"	v
back	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    StencilFaceState back;$/;"	v
back	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec3 Vec3.back() {$/;"	f
backend	$C2_ROOT/bootstrap/bootstrap.c	/^   return t->backend;$/;"	v
backend	$C2_ROOT/common/build_target.c2	/^    return t.backend;$/;"	v
backend_fast	$C2_ROOT/bootstrap/bootstrap.c	/^   return t->backend_fast;$/;"	v
backend_fast	$C2_ROOT/common/build_target.c2	/^    return t.backend_fast;$/;"	v
backend_no_build	$C2_ROOT/bootstrap/bootstrap.c	/^   return t->backend_no_build;$/;"	v
backend_no_build	$C2_ROOT/common/build_target.c2	/^    return t.backend_no_build;$/;"	v
base	$C2_ROOT/analyser/module_analyser_type.c2	/^    QualType resolved = base;$/;"	v
base	$C2_ROOT/ast/alias_type.c2	/^    Type base;$/;"	v
base	$C2_ROOT/ast/alias_type_decl.c2	/^    return &d.base;$/;"	v
base	$C2_ROOT/ast/array_designated_init_expr.c2	/^    Expr base;$/;"	v
base	$C2_ROOT/ast/array_subscript_expr.c2	/^    Expr base;$/;"	v
base	$C2_ROOT/ast/array_type.c2	/^    Type base;$/;"	v
base	$C2_ROOT/ast/asm_stmt.c2	/^    Stmt base;$/;"	v
base	$C2_ROOT/ast/assert_stmt.c2	/^    Stmt base;$/;"	v
base	$C2_ROOT/ast/binary_operator.c2	/^    Expr base;$/;"	v
base	$C2_ROOT/ast/bitoffset_expr.c2	/^    Expr base;$/;"	v
base	$C2_ROOT/ast/boolean_literal.c2	/^    Expr base;$/;"	v
base	$C2_ROOT/ast/break_stmt.c2	/^    Stmt base;$/;"	v
base	$C2_ROOT/ast/builtin_expr.c2	/^    Expr base;$/;"	v
base	$C2_ROOT/ast/builtin_type.c2	/^    Type base;$/;"	v
base	$C2_ROOT/ast/call_expr.c2	/^    e2.base = e.base;$/;"	v
base	$C2_ROOT/ast/char_literal.c2	/^    Expr base;$/;"	v
base	$C2_ROOT/ast/compound_stmt.c2	/^    s2.base = s.base;$/;"	v
base	$C2_ROOT/ast/conditional_operator.c2	/^    Expr base;$/;"	v
base	$C2_ROOT/ast/continue_stmt.c2	/^    Stmt base;$/;"	v
base	$C2_ROOT/ast/decl_stmt.c2	/^    Stmt base;$/;"	v
base	$C2_ROOT/ast/enum_constant_decl.c2	/^    return &d.base;$/;"	v
base	$C2_ROOT/ast/enum_type.c2	/^    Type base;$/;"	v
base	$C2_ROOT/ast/enum_type_decl.c2	/^    Decl base;$/;"	v
base	$C2_ROOT/ast/explicit_cast_expr.c2	/^    e2.base = e.base;$/;"	v
base	$C2_ROOT/ast/expr.c2	/^    Stmt base;$/;"	v
base	$C2_ROOT/ast/fallthrough_stmt.c2	/^    Stmt base;$/;"	v
base	$C2_ROOT/ast/field_designated_init_expr.c2	/^    Expr base;$/;"	v
base	$C2_ROOT/ast/float_literal.c2	/^    Expr base;$/;"	v
base	$C2_ROOT/ast/for_stmt.c2	/^    Stmt base;$/;"	v
base	$C2_ROOT/ast/function_decl.c2	/^    return &d.base;$/;"	v
base	$C2_ROOT/ast/function_type.c2	/^    Type base;$/;"	v
base	$C2_ROOT/ast/function_type_decl.c2	/^    return &t.base;$/;"	v
base	$C2_ROOT/ast/goto_stmt.c2	/^    Stmt base;$/;"	v
base	$C2_ROOT/ast/identifier_expr.c2	/^    Expr base;$/;"	v
base	$C2_ROOT/ast/if_stmt.c2	/^    Stmt base;$/;"	v
base	$C2_ROOT/ast/implicit_cast_expr.c2	/^    Expr base;$/;"	v
base	$C2_ROOT/ast/import_decl.c2	/^    Decl base;$/;"	v
base	$C2_ROOT/ast/init_list_expr.c2	/^    e2.base = e.base;$/;"	v
base	$C2_ROOT/ast/integer_literal.c2	/^    Expr base;$/;"	v
base	$C2_ROOT/ast/label_stmt.c2	/^    Stmt base;$/;"	v
base	$C2_ROOT/ast/member_expr.c2	/^    Expr base;$/;"	v
base	$C2_ROOT/ast/module_type.c2	/^    Type base;$/;"	v
base	$C2_ROOT/ast/nil_expr.c2	/^    Expr base;$/;"	v
base	$C2_ROOT/ast/paren_expr.c2	/^    Expr base;$/;"	v
base	$C2_ROOT/ast/pointer_type.c2	/^    Type base;$/;"	v
base	$C2_ROOT/ast/range_expr.c2	/^    Expr base;$/;"	v
base	$C2_ROOT/ast/return_stmt.c2	/^    Stmt base;$/;"	v
base	$C2_ROOT/ast/string_literal.c2	/^    Expr base;$/;"	v
base	$C2_ROOT/ast/struct_type.c2	/^    Type base;$/;"	v
base	$C2_ROOT/ast/struct_type_decl.c2	/^    return &d.base;$/;"	v
base	$C2_ROOT/ast/switch_stmt.c2	/^    s2.base = s.base;$/;"	v
base	$C2_ROOT/ast/type_expr.c2	/^    e2.base = e.base;$/;"	v
base	$C2_ROOT/ast/unary_operator.c2	/^    Expr base;$/;"	v
base	$C2_ROOT/ast/var_decl.c2	/^    vd2.base = vd.base;$/;"	v
base	$C2_ROOT/ast/while_stmt.c2	/^    Stmt base;$/;"	v
base	$C2_ROOT/bootstrap/bootstrap.c	/^   vd2->base = vd->base;$/;"	v
base	$C2_ROOT/common/file/file_utils.c2	/^    return base;$/;"	v
base	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^    ir.Ref dest = base;$/;"	v
base	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 base;$/;"	v
baseLoc	$C2_ROOT/analyser/module_analyser_member.c2	/^        baseLoc = loc;$/;"	v
baseLoc	$C2_ROOT/bootstrap/bootstrap.c	/^      baseLoc = loc;$/;"	v
baseType	$C2_ROOT/analyser/module_analyser_call.c2	/^    QualType baseType;$/;"	v
baseType	$C2_ROOT/analyser/module_analyser_member.c2	/^    return baseType;$/;"	v
baseType	$C2_ROOT/bootstrap/bootstrap.c	/^   return baseType;$/;"	v
base_addr	$C2_ROOT/libs/libc/net_if.c2i	/^    c_ushort base_addr;$/;"	v
base_element	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    i32 base_element;$/;"	v
base_path	$C2_ROOT/common/utils.c2	/^    char[file_utils.Max_path] base_path;$/;"	v
base_ref	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Ref base_ref;$/;"	v
base_ref	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^    Ref dest_ref = base_ref;$/;"	v
base_ref	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        ir.Ref base_ref;$/;"	v
base_ref	$C2_ROOT/generator/ir/ir_generator_member.c2	/^    ir.Ref base_ref;$/;"	v
base_size	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        u32 offset = v.as_u32() * base_size;$/;"	v
base_type	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_QualType base_type;$/;"	v
base_type	$C2_ROOT/generator/ir/ir_generator_member.c2	/^    QualType base_type;$/;"	v
base_type	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ShaderAttrBaseType base_type;$/;"	v
basename	$C2_ROOT/libs/libc/libgen.c2i	/^fn c_char* basename(c_char* path);$/;"	f
basic_mode	$C2_ROOT/plugins/deps_generator.c2	/^    gen.basic_mode = basic_mode;$/;"	v
bcmp	$C2_ROOT/libs/libc/strings.c2i	/^fn c_int bcmp(const void* s1, const void* s2, c_size n);$/;"	f
begin	$C2_ROOT/common/quicksort.c2	/^    u8* left = begin;$/;"	v
begin	$C2_ROOT/ir_examples/label.c2	/^            goto begin;$/;"	v
beginLineStrip	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void beginLineStrip() @(cname="sgl_begin_line_strip");$/;"	f
beginLines	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void beginLines() @(cname="sgl_begin_lines");$/;"	f
beginPass	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void beginPass(Pass* pass) @(cname="sg_begin_pass");$/;"	f
beginPoints	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void beginPoints() @(cname="sgl_begin_points");$/;"	f
beginQuads	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void beginQuads() @(cname="sgl_begin_quads");$/;"	f
beginTarget	$C2_ROOT/compiler/plugin_mgr.c2	/^public fn void Mgr.beginTarget(Mgr* m, plugin_info.Info* info) {$/;"	f
beginTriangleStrip	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void beginTriangleStrip() @(cname="sgl_begin_triangle_strip");$/;"	f
beginTriangles	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void beginTriangles() @(cname="sgl_begin_triangles");$/;"	f
bgid	$C2_ROOT/libs/io_uring/io_uring.c2i	/^	sqe->buf_group = (__u16) bgid;$/;"	v
bgl	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* bgl;$/;"	v
bi	$C2_ROOT/ast/builtin_expr.c2	/^    return (Expr*)bi;$/;"	v
bias	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    f32 bias;$/;"	v
bias_clamp	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    f32 bias_clamp;$/;"	v
bias_slope_scale	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    f32 bias_slope_scale;$/;"	v
binaryOperatorBits	$C2_ROOT/ast/stmt.c2	/^        BinaryOperatorBits binaryOperatorBits;$/;"	v
binaryOperatorBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_BinaryOperatorBits binaryOperatorBits;$/;"	v
bind	$C2_ROOT/libs/libc/sys_socket.c2i	/^fn c_int bind(c_int sockfd, const Sockaddr* addr, u32 addrlen);$/;"	f
bindMouseCursorImage	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn MouseCursor bindMouseCursorImage(MouseCursor cursor, ImageDesc* desc) @(cname="sapp_bind_mous/;"	f
bindings	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FrameStatsWgpuBindings bindings;$/;"	v
bitOffsetBits	$C2_ROOT/ast/stmt.c2	/^        BitOffsetExprBits bitOffsetBits;$/;"	v
bitOffsetBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_BitOffsetExprBits bitOffsetBits;$/;"	v
bit_array	$C2_ROOT/common/bit_array.c2	/^module bit_array;$/;"	v
bit_array	$C2_ROOT/ir/context.c2	/^import bit_array;$/;"	v
bit_array_BitArray	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct bit_array_BitArray_ bit_array_BitArray;$/;"	v
bit_offset	$C2_ROOT/ast/var_decl.c2	/^    u8 bit_offset;$/;"	v
bit_offset	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t bit_offset;$/;"	v
bit_pos	$C2_ROOT/analyser/size_analyser.c2	/^            bit_pos = 0;$/;"	v
bit_pos	$C2_ROOT/bootstrap/bootstrap.c	/^         bit_pos = 0;$/;"	v
bit_size	$C2_ROOT/analyser/size_analyser.c2	/^                    bit_pos = bit_size;$/;"	v
bit_size	$C2_ROOT/bootstrap/bootstrap.c	/^               bit_pos = bit_size;$/;"	v
bit_utils	$C2_ROOT/common/bit_utils.c2	/^module bit_utils;$/;"	v
bit_utils	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^import bit_utils;$/;"	v
bit_utils	$C2_ROOT/generator/ir/ir_generator_member.c2	/^import bit_utils;$/;"	v
bit_width	$C2_ROOT/analyser/size_analyser.c2	/^            u32 bit_size = bit_layout.bit_width;$/;"	v
bit_width	$C2_ROOT/ast/var_decl.c2	/^    u8 bit_width;$/;"	v
bit_width	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t bit_width;$/;"	v
bitfield	$C2_ROOT/ast/var_decl.c2	/^        info.expr = bitfield;$/;"	v
bitfield	$C2_ROOT/bootstrap/bootstrap.c	/^      info->expr = bitfield;$/;"	v
bitfield_base_size	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t bitfield_base_size;$/;"	v
bitfield_base_size	$C2_ROOT/generator/ir/basic_struct_layouter.c2	/^    u32 bitfield_base_size;$/;"	v
bitfield_base_size	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^        cur_offset += bitfield_base_size;$/;"	v
bitfield_offset	$C2_ROOT/analyser/module_analyser_init.c2	/^            f.bitfield_offset = ml.bitfield_offset;$/;"	v
bitfield_offset	$C2_ROOT/ast/struct_type_decl.c2	/^    u8 bitfield_offset;$/;"	v
bitfield_offset	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t bitfield_offset;$/;"	v
bitfield_signed	$C2_ROOT/analyser/module_analyser_init.c2	/^            f.bitfield_signed = ml.bitfield_signed;$/;"	v
bitfield_signed	$C2_ROOT/bootstrap/bootstrap.c	/^         f->bitfield_signed = ml->bitfield_signed;$/;"	v
bitfield_value	$C2_ROOT/bootstrap/bootstrap.c	/^   uint64_t bitfield_value;$/;"	v
bitfield_value	$C2_ROOT/generator/ir/basic_struct_layouter.c2	/^    u64 bitfield_value;$/;"	v
bitfield_value	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^                bitfield_value = 0;$/;"	v
bitfield_width	$C2_ROOT/analyser/module_analyser_init.c2	/^            f.bitfield_width = ml.bitfield_width;$/;"	v
bitfield_width	$C2_ROOT/ast/struct_type_decl.c2	/^    u8 bitfield_width;$/;"	v
bitfield_width	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t bitfield_width;$/;"	v
bitnot	$C2_ROOT/ast/value.c2	/^fn Value Value.bitnot(const Value* v) {$/;"	f
bits	$C2_ROOT/ast/decl.c2	/^        u32 bits;$/;"	v
bits	$C2_ROOT/ast/stmt.c2	/^        u32 bits;$/;"	v
bits	$C2_ROOT/ast/switch_case.c2	/^        SwitchCaseBits bits;$/;"	v
bits	$C2_ROOT/ast/type.c2	/^        u32 bits;$/;"	v
bits	$C2_ROOT/bootstrap/bootstrap.c	/^   uint64_t bits;$/;"	v
bits	$C2_ROOT/ir/instr.c2	/^        u32 bits;$/;"	v
blend	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool blend;$/;"	v
blend_color	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    Color blend_color;$/;"	v
blit	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void Surface.blit(Surface* src, const Rect* srcrect,$/;"	f
blitScaled	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void Surface.blitScaled(Surface* src, const Rect* srcrect,$/;"	f
blk_head	$C2_ROOT/ast_utils/context.c2	/^    Block* blk_head;$/;"	v
blk_head	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_context_Block* blk_head;$/;"	v
blk_id	$C2_ROOT/bootstrap/bootstrap.c	/^   clause->src = blk_id;$/;"	v
blk_id	$C2_ROOT/ir/inserter.c2	/^    return ins.new_blk_id + blk_id;$/;"	v
blk_id	$C2_ROOT/ir/phi_list.c2	/^    clause.src = blk_id;$/;"	v
blk_id	$C2_ROOT/ir/register_alloc.c2	/^                    cur.dests[0] = blk_id;$/;"	v
blk_id	$C2_ROOT/ir/slot_collector.c2	/^    c.cur_blk = blk_id;$/;"	v
blk_id	$C2_ROOT/ir/slot_writes_map.c2	/^    a.last_var = blk_id;$/;"	v
blk_instr_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t blk_instr_count;$/;"	v
blk_instr_count	$C2_ROOT/ir/print.c2	/^    u32 blk_instr_count;$/;"	v
blk_instr_start	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t blk_instr_start;$/;"	v
blk_instr_start	$C2_ROOT/ir/print.c2	/^    u32 blk_instr_start;$/;"	v
blk_size	$C2_ROOT/ast_utils/context.c2	/^    u32 blk_size;$/;"	v
blk_size	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t blk_size;$/;"	v
blk_start_instr	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t blk_start_instr;$/;"	v
blk_tail	$C2_ROOT/ast_utils/context.c2	/^    Block* blk_tail;$/;"	v
blk_tail	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_context_Block* blk_tail;$/;"	v
block	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockId block;$/;"	v
block	$C2_ROOT/ir/case_list.c2	/^    c.block = block;$/;"	v
block_capacity	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t block_capacity;$/;"	v
block_capacity	$C2_ROOT/ir/rev_list.c2	/^    u32 block_capacity;$/;"	v
block_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t block_count;$/;"	v
block_count	$C2_ROOT/ir/rev_list.c2	/^    u32 block_count;$/;"	v
block_has_dest	$C2_ROOT/ir/common.c2	/^public fn bool block_has_dest(const Block* b, const CaseList* cases, u32 dest) {$/;"	f
block_order	$C2_ROOT/bootstrap/bootstrap.c	/^   index_list_List block_order;$/;"	v
block_order	$C2_ROOT/ir/context.c2	/^    index_list.List block_order;$/;"	v
block_terminated	$C2_ROOT/bootstrap/bootstrap.c	/^   return c->b.block_terminated;$/;"	v
block_terminated	$C2_ROOT/ir/context.c2	/^    return c.b.block_terminated;$/;"	v
blocks	$C2_ROOT/bootstrap/bootstrap.c	/^   ph->blocks = &info->blocks;$/;"	v
blocks	$C2_ROOT/ir/function_info.c2	/^    BlockList blocks;$/;"	v
blocks	$C2_ROOT/ir/print.c2	/^    ph.blocks = &info.blocks;$/;"	v
blocks	$C2_ROOT/ir/rpo.c2	/^    u16* blocks;$/;"	v
blocks	$C2_ROOT/ir/slot_writes_map.c2	/^    BlockWrites* blocks;$/;"	v
blocks2	$C2_ROOT/bootstrap/bootstrap.c	/^   l->blocks = blocks2;$/;"	v
blocks2	$C2_ROOT/ir/block_list.c2	/^    l.blocks = blocks2;$/;"	v
body	$C2_ROOT/ast/for_stmt.c2	/^    s.body = body;$/;"	v
body	$C2_ROOT/ast/function_decl.c2	/^    if (d.base.functionDeclBits.has_body) return d.body;$/;"	v
body	$C2_ROOT/ast/while_stmt.c2	/^    s.body = body;$/;"	v
body	$C2_ROOT/bootstrap/bootstrap.c	/^   s->body = body;$/;"	v
body_blk	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^    char[32] body_blk;$/;"	v
bol	$C2_ROOT/bootstrap/bootstrap.c	/^               bol = p;$/;"	v
bol	$C2_ROOT/parser/c2_tokenizer.c2	/^                    bol = p;$/;"	v
bool	$C2_ROOT/analyser/conversion_checker_expr.c2	/^    bool is_signed;$/;"	v
bool	$C2_ROOT/analyser/label_vector.c2	/^    bool used;$/;"	v
bool	$C2_ROOT/analyser/module_analyser.c2	/^    bool usedPublic;$/;"	v
bool	$C2_ROOT/analyser/module_analyser_call.c2	/^    bool change_format;$/;"	v
bool	$C2_ROOT/analyser/module_analyser_stmt.c2	/^        bool need_rvalue;$/;"	v
bool	$C2_ROOT/analyser/module_analyser_switch.c2	/^                                 bool is_string,$/;"	v
bool	$C2_ROOT/analyser/scope.c2	/^    bool warn_on_unused;$/;"	v
bool	$C2_ROOT/ast/alias_type_decl.c2	/^                                                bool is_public,$/;"	v
bool	$C2_ROOT/ast/array_type.c2	/^                                        bool has_size,$/;"	v
bool	$C2_ROOT/ast/asm_stmt.c2	/^                                    bool is_volatile,$/;"	v
bool	$C2_ROOT/ast/ast.c2	/^    bool is_interface;$/;"	v
bool	$C2_ROOT/ast/enum_constant_decl.c2	/^                                                      bool is_public,$/;"	v
bool	$C2_ROOT/ast/enum_type_decl.c2	/^                                              bool is_public,$/;"	v
bool	$C2_ROOT/ast/expr.c2	/^                  bool has_effect,$/;"	v
bool	$C2_ROOT/ast/function_decl.c2	/^                                              bool is_variadic,$/;"	v
bool	$C2_ROOT/ast/instantiator.c2	/^    bool used_opaque;$/;"	v
bool	$C2_ROOT/ast/module.c2	/^    bool is_used;$/;"	v
bool	$C2_ROOT/ast/struct_type_decl.c2	/^                                                  bool is_struct,$/;"	v
bool	$C2_ROOT/ast/switch_case.c2	/^                                        bool is_default,$/;"	v
bool	$C2_ROOT/ast/utils.c2	/^    bool use_color;$/;"	v
bool	$C2_ROOT/ast/var_decl.c2	/^                                    bool is_public,$/;"	v
bool	$C2_ROOT/ast_utils/string_buffer.c2	/^    bool truncated;$/;"	v
bool	$C2_ROOT/bootstrap/bootstrap.c	/^typedef unsigned char bool;$/;"	v
bool	$C2_ROOT/common/build_target.c2	/^    bool no_libc;$/;"	v
bool	$C2_ROOT/common/diagnostics.c2	/^    bool promote_warnings;$/;"	v
bool	$C2_ROOT/common/library_list.c2	/^    bool is_static;$/;"	v
bool	$C2_ROOT/common/module_list.c2	/^    bool owns_modules;$/;"	v
bool	$C2_ROOT/common/source_mgr.c2	/^    bool is_generated;$/;"	v
bool	$C2_ROOT/common/warning_flags.c2	/^    bool no_unused_variable;$/;"	v
bool	$C2_ROOT/common/yaml/yaml_parser.c2	/^    bool in_document;$/;"	v
bool	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    bool same_line;$/;"	v
bool	$C2_ROOT/compiler/c2recipe_parser.c2	/^    bool targets_started;$/;"	v
bool	$C2_ROOT/compiler/compiler.c2	/^    bool ubsan;$/;"	v
bool	$C2_ROOT/compiler/main.c2	/^    bool use_ir_backend;$/;"	v
bool	$C2_ROOT/compiler/plugin_mgr.c2	/^    bool no_plugins;$/;"	v
bool	$C2_ROOT/generator/c/c_generator.c2	/^    bool ubsan;$/;"	v
bool	$C2_ROOT/generator/c/c_generator_special.c2	/^                                 bool enable_asserts,$/;"	v
bool	$C2_ROOT/generator/c2i/c2i_generator.c2	/^    bool in_body;$/;"	v
bool	$C2_ROOT/generator/ir/ir_generator.c2	/^    bool print;$/;"	v
bool	$C2_ROOT/ir/context.c2	/^    bool single_thread;$/;"	v
bool	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool win32_console_utf8;$/;"	v
bool	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool writeonly;$/;"	v
bool	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    bool vertices_full;$/;"	v
bool	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    bool valid;$/;"	v
bool	$C2_ROOT/parser/ast_builder.c2	/^    bool is_interface;$/;"	v
bool	$C2_ROOT/parser/c2_parser.c2	/^    bool is_interface;$/;"	v
bool	$C2_ROOT/plugins/deps_generator.c2	/^    bool show_files;$/;"	v
bool	$C2_ROOT/plugins/unit_test2.c2	/^bool color_output;$/;"	v
bool	$C2_ROOT/plugins/unit_test_plugin.c2	/^    bool teardown;$/;"	v
booleanLiteralBits	$C2_ROOT/ast/stmt.c2	/^        BooleanLiteralBits booleanLiteralBits;$/;"	v
booleanLiteralBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_BooleanLiteralBits booleanLiteralBits;$/;"	v
border_color	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BorderColor border_color;$/;"	v
boxSizes	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn Sizes boxSizes(u32 tiles) @(cname="sshape_box_sizes");$/;"	f
break	$C2_ROOT/analyser/conversion_checker.c2	/^        break;$/;"	v
break	$C2_ROOT/analyser/conversion_checker_expr.c2	/^        break;$/;"	v
break	$C2_ROOT/analyser/module_analyser.c2	/^        break;$/;"	v
break	$C2_ROOT/analyser/module_analyser_binop.c2	/^        break;$/;"	v
break	$C2_ROOT/analyser/module_analyser_call.c2	/^        if (func_arg_index >= func_num_args) break;$/;"	v
break	$C2_ROOT/analyser/module_analyser_expr.c2	/^        if (!d) break;$/;"	v
break	$C2_ROOT/analyser/module_analyser_member.c2	/^        break;$/;"	v
break	$C2_ROOT/analyser/module_analyser_stmt.c2	/^        break;$/;"	v
break	$C2_ROOT/analyser/module_analyser_switch.c2	/^                            break;$/;"	v
break	$C2_ROOT/analyser/module_analyser_type.c2	/^        break;$/;"	v
break	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^        break;$/;"	v
break	$C2_ROOT/analyser/scope.c2	/^            if (decl) break;$/;"	v
break	$C2_ROOT/analyser/size_analyser.c2	/^        break;$/;"	v
break	$C2_ROOT/analyser/unused_checker.c2	/^        break;$/;"	v
break	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^        break;$/;"	v
break	$C2_ROOT/analyser_utils/printf_utils.c2	/^        break;$/;"	v
break	$C2_ROOT/ast/ast_evaluator.c2	/^        if (!index.isBitOffset()) break;$/;"	v
break	$C2_ROOT/ast/builtin_expr.c2	/^        break;$/;"	v
break	$C2_ROOT/ast/decl.c2	/^    case Variable:     break;$/;"	v
break	$C2_ROOT/ast/expr.c2	/^        break;$/;"	v
break	$C2_ROOT/ast/float_literal.c2	/^        break;$/;"	v
break	$C2_ROOT/ast/implicit_cast_expr.c2	/^        break;$/;"	v
break	$C2_ROOT/ast/integer_literal.c2	/^        break;$/;"	v
break	$C2_ROOT/ast/member_expr.c2	/^        break;$/;"	v
break	$C2_ROOT/ast/module.c2	/^        if (result) break;$/;"	v
break	$C2_ROOT/ast/stmt.c2	/^        break;$/;"	v
break	$C2_ROOT/ast/type.c2	/^        break;$/;"	v
break	$C2_ROOT/ast/type_ref.c2	/^        break;$/;"	v
break	$C2_ROOT/ast/utils.c2	/^        break;$/;"	v
break	$C2_ROOT/ast/value.c2	/^        break;$/;"	v
break	$C2_ROOT/ast/var_decl.c2	/^    case None: break;$/;"	v
break	$C2_ROOT/ast_utils/attr.c2	/^        break;$/;"	v
break	$C2_ROOT/ast_utils/string_buffer.c2	/^            break;$/;"	v
break	$C2_ROOT/ast_utils/string_pool.c2	/^                    break;$/;"	v
break	$C2_ROOT/bootstrap/bootstrap.c	/^      if (result) break;$/;"	v
break	$C2_ROOT/common/build_target.c2	/^        break;$/;"	v
break	$C2_ROOT/common/dsm_sorter.c2	/^                break;$/;"	v
break	$C2_ROOT/common/file/file_utils.c2	/^        break;$/;"	v
break	$C2_ROOT/common/manifest_writer.c2	/^        break;$/;"	v
break	$C2_ROOT/common/process_utils.c2	/^            break;$/;"	v
break	$C2_ROOT/common/quicksort.c2	/^        if (left > right) break;$/;"	v
break	$C2_ROOT/common/target_info.c2	/^        break;$/;"	v
break	$C2_ROOT/common/yaml/yaml_dump.c2	/^        break;$/;"	v
break	$C2_ROOT/common/yaml/yaml_parser.c2	/^        if (top.indent <= indent) break;$/;"	v
break	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^        break;$/;"	v
break	$C2_ROOT/compiler/c2recipe_parser.c2	/^        break;$/;"	v
break	$C2_ROOT/compiler/c2recipe_yaml.c2	/^        if (*input == '.') break;$/;"	v
break	$C2_ROOT/compiler/compiler.c2	/^        break;$/;"	v
break	$C2_ROOT/compiler/main.c2	/^        break;$/;"	v
break	$C2_ROOT/compiler/manifest.c2	/^            break;$/;"	v
break	$C2_ROOT/generator/ast_visitor.c2	/^        break;$/;"	v
break	$C2_ROOT/generator/ast_visitor_expr.c2	/^        break;$/;"	v
break	$C2_ROOT/generator/c/c_generator.c2	/^        if (fd.isTemplate()) break;$/;"	v
break	$C2_ROOT/generator/c/c_generator_call.c2	/^        if (func_index == func_num_args && call_index == call_num_args) break;$/;"	v
break	$C2_ROOT/generator/c/c_generator_expr.c2	/^        break;$/;"	v
break	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^        break;$/;"	v
break	$C2_ROOT/generator/c/c_generator_special.c2	/^        break;$/;"	v
break	$C2_ROOT/generator/c/c_generator_stmt.c2	/^        break;$/;"	v
break	$C2_ROOT/generator/c/c_generator_trace.c2	/^            if (i == 0) break;$/;"	v
break	$C2_ROOT/generator/c/dep_finder.c2	/^        break;$/;"	v
break	$C2_ROOT/generator/c2_trace.c2	/^        if (c != ',') break;$/;"	v
break	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^        break;$/;"	v
break	$C2_ROOT/generator/c2i/c2i_generator_expr.c2	/^        break;$/;"	v
break	$C2_ROOT/generator/c2i/c2i_generator_stmt.c2	/^        break;$/;"	v
break	$C2_ROOT/generator/c2refs.c2	/^        if (offset < len) break;$/;"	v
break	$C2_ROOT/generator/ir/array_init_sorter.c2	/^        if (index > ie.index) break;$/;"	v
break	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^        if (info.member_idx >= fi.info.member_idx) break;$/;"	v
break	$C2_ROOT/generator/ir/ir_generator.c2	/^        break;$/;"	v
break	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        break;$/;"	v
break	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        break;$/;"	v
break	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^        break;$/;"	v
break	$C2_ROOT/generator/ir/ir_generator_switch.c2	/^                    if (l.isUsed()) break;$/;"	v
break	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^        if (c != s2[match]) break;$/;"	v
break	$C2_ROOT/ir/context.c2	/^        break;$/;"	v
break	$C2_ROOT/ir/inserter.c2	/^        if (ins.ins[prev].location <= location) break;$/;"	v
break	$C2_ROOT/ir/instr_list.c2	/^        else break;$/;"	v
break	$C2_ROOT/ir/print.c2	/^        break;$/;"	v
break	$C2_ROOT/ir/register_alloc.c2	/^        if (i == first) break;$/;"	v
break	$C2_ROOT/ir/rpo.c2	/^            if (!dest_id) break;$/;"	v
break	$C2_ROOT/ir/slot_collector.c2	/^            break;$/;"	v
break	$C2_ROOT/ir/ssa.c2	/^            break;$/;"	v
break	$C2_ROOT/ir/types.c2	/^    case None:  break;$/;"	v
break	$C2_ROOT/ir/work_queue.c2	/^        if (!fi) break;$/;"	v
break	$C2_ROOT/ir_examples/while.c2	/^        if (i == 5) break;$/;"	v
break	$C2_ROOT/parser/ast_builder.c2	/^        if (d.hasAutoAttr()) break;$/;"	v
break	$C2_ROOT/parser/c2_parser.c2	/^        if (p.tok.kind != Kind.Comma) break;$/;"	v
break	$C2_ROOT/parser/c2_parser_expr.c2	/^        if (p.tok.kind != Kind.Comma) break;$/;"	v
break	$C2_ROOT/parser/c2_parser_stmt.c2	/^        break;$/;"	v
break	$C2_ROOT/parser/c2_parser_switch.c2	/^        if (p.tok.kind == Kind.Colon) break;$/;"	v
break	$C2_ROOT/parser/c2_parser_type.c2	/^        if (p.tok.kind == Kind.RBrace) break;$/;"	v
break	$C2_ROOT/parser/c2_tokenizer.c2	/^        if (*end == '\\r' || *end == '\\n') break;$/;"	v
break	$C2_ROOT/plugins/deps_generator.c2	/^        break;$/;"	v
break	$C2_ROOT/plugins/deps_generator_utils.c2	/^        break;$/;"	v
break	$C2_ROOT/plugins/refs_generator.c2	/^        if (offset < line_len) break;$/;"	v
break_block	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t break_block;$/;"	v
break_block	$C2_ROOT/generator/ir/ir_generator.c2	/^    s.break_block = break_block;$/;"	v
broadcast	$C2_ROOT/libs/pthread/pthread.c2i	/^fn c_int Cond.broadcast(Cond* cond) @(cname="pthread_cond_broadcast");$/;"	f
bs	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* bs;$/;"	v
bsearch	$C2_ROOT/libs/libc/stdlib.c2i	/^fn void* bsearch(const void* __key, const void* __base, c_size __nmemb, c_size __size, StdlibCom/;"	f
buf	$C2_ROOT/ast/float_literal.c2	/^        char[32] buf;$/;"	v
buf	$C2_ROOT/ast/module.c2	/^    m.files = buf;$/;"	v
buf	$C2_ROOT/ast/utils.c2	/^        globals.ast_list = buf;$/;"	v
buf	$C2_ROOT/ast/value.c2	/^    char[32] buf;$/;"	v
buf	$C2_ROOT/ast_utils/string_buffer.c2	/^    return buf;$/;"	v
buf	$C2_ROOT/bootstrap/bootstrap.c	/^   t->buf = buf;$/;"	v
buf	$C2_ROOT/common/console.c2	/^    char[BUF_SIZE] buf;$/;"	v
buf	$C2_ROOT/common/file/file_utils.c2	/^        if (pos < size) return buf;$/;"	v
buf	$C2_ROOT/common/module_list.c2	/^    l.mods = buf;$/;"	v
buf	$C2_ROOT/common/string_utils.c2	/^    return buf;$/;"	v
buf	$C2_ROOT/common/utils.c2	/^    Stat buf;$/;"	v
buf	$C2_ROOT/generator/c/c_generator.c2	/^    string_buffer.Buf* out = f.buf;$/;"	v
buf	$C2_ROOT/ir/ref.c2	/^    local char[4][24] buf;$/;"	v
buf	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void*[2] buf;$/;"	v
buf	$C2_ROOT/parser/c2_parser.c2	/^    string_buffer.Buf* out = p.tokenizer.buf;$/;"	v
buf	$C2_ROOT/parser/c2_tokenizer.c2	/^    t.buf = buf;$/;"	v
buf	$C2_ROOT/plugins/deps_generator.c2	/^    string_buffer.Buf* buf;$/;"	v
buf_group	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        u16   buf_group;$/;"	v
buf_index	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        u16   buf_index;$/;"	v
buffer	$C2_ROOT/common/utils.c2	/^    char[file_utils.Max_path] buffer;$/;"	v
buffer	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    Range buffer;$/;"	v
buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    Buffer buffer;$/;"	v
buffer	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    Range buffer;$/;"	v
bufferFrames	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^fn i32 bufferFrames() @(cname="saudio_buffer_frames");$/;"	f
buffer_frames	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    i32 buffer_frames;$/;"	v
buffer_index	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 buffer_index;$/;"	v
buffer_pool_size	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 buffer_pool_size;$/;"	v
buffers	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VertexBufferLayoutState[8] buffers;$/;"	v
build	$C2_ROOT/compiler/compiler.c2	/^public fn void build(string_pool.Pool* auxPool,$/;"	f
build	$C2_ROOT/generator/c/c_generator.c2	/^public fn void build(const char* output_dir)$/;"	f
build	$C2_ROOT/ir/rev_list.c2	/^public fn void RevList.build(RevList* r, FunctionInfo* info) {$/;"	f
buildBox	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn Buffer buildBox(Buffer* buf, Box* params) @(cname="sshape_build_box");$/;"	f
buildCylinder	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn Buffer buildCylinder(Buffer* buf, Cylinder* params) @(cname="sshape_build_cylinder");$/;"	f
buildPlane	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn Buffer buildPlane(Buffer* buf, Plane* params) @(cname="sshape_build_plane");$/;"	f
buildSphere	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn Buffer buildSphere(Buffer* buf, Sphere* params) @(cname="sshape_build_sphere");$/;"	f
buildTorus	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn Buffer buildTorus(Buffer* buf, Torus* params) @(cname="sshape_build_torus");$/;"	f
build_file	$C2_ROOT/common/build_file.c2	/^module build_file;$/;"	v
build_file	$C2_ROOT/compiler/compiler.c2	/^import build_file;$/;"	v
build_file	$C2_ROOT/compiler/main.c2	/^import build_file;$/;"	v
build_file	$C2_ROOT/generator/c/c_generator.c2	/^import build_file;$/;"	v
build_file	$C2_ROOT/generator/c/c_generator_special.c2	/^import build_file;$/;"	v
build_file_Info	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct build_file_Info_ build_file_Info;$/;"	v
build_file_Plugin	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct build_file_Plugin_ build_file_Plugin;$/;"	v
build_info	$C2_ROOT/bootstrap/bootstrap.c	/^   gen->build_info = build_info;$/;"	v
build_info	$C2_ROOT/compiler/compiler.c2	/^    c.build_info = build_info;$/;"	v
build_info	$C2_ROOT/compiler/main.c2	/^    build_file.Info* build_info;$/;"	v
build_info	$C2_ROOT/generator/c/c_generator.c2	/^    gen.build_info = build_info;$/;"	v
build_info	$C2_ROOT/generator/c/c_generator_special.c2	/^        const build_file.Info* info = gen.build_info;$/;"	v
build_target	$C2_ROOT/common/build_target.c2	/^module build_target;$/;"	v
build_target	$C2_ROOT/compiler/c2recipe.c2	/^import build_target;$/;"	v
build_target	$C2_ROOT/compiler/c2recipe_parser.c2	/^import build_target;$/;"	v
build_target	$C2_ROOT/compiler/compiler.c2	/^import build_target;$/;"	v
build_target	$C2_ROOT/compiler/main.c2	/^import build_target;$/;"	v
build_target	$C2_ROOT/generator/c/c_generator.c2	/^import build_target;$/;"	v
build_target	$C2_ROOT/generator/c/c_generator_special.c2	/^import build_target;$/;"	v
build_target	$C2_ROOT/plugins/plugin_info.c2	/^import build_target;$/;"	v
build_target_BackEndKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t build_target_BackEndKind;$/;"	v
build_target_BackEndKind_C	$C2_ROOT/bootstrap/bootstrap.c	/^   build_target_BackEndKind_C,$/;"	v
build_target_BackEndKind_IR	$C2_ROOT/bootstrap/bootstrap.c	/^   build_target_BackEndKind_IR,$/;"	v
build_target_BackEndKind_None	$C2_ROOT/bootstrap/bootstrap.c	/^   build_target_BackEndKind_None,$/;"	v
build_target_File	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct build_target_File_ build_target_File;$/;"	v
build_target_Kind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t build_target_Kind;$/;"	v
build_target_Kind_DynamicLibrary	$C2_ROOT/bootstrap/bootstrap.c	/^   build_target_Kind_DynamicLibrary,$/;"	v
build_target_Kind_Executable	$C2_ROOT/bootstrap/bootstrap.c	/^   build_target_Kind_Executable,$/;"	v
build_target_Kind_Image	$C2_ROOT/bootstrap/bootstrap.c	/^   build_target_Kind_Image,$/;"	v
build_target_Kind_StaticLibrary	$C2_ROOT/bootstrap/bootstrap.c	/^   build_target_Kind_StaticLibrary,$/;"	v
build_target_Plugin	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct build_target_Plugin_ build_target_Plugin;$/;"	v
build_target_PluginList	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct build_target_PluginList_ build_target_PluginList;$/;"	v
build_target_Target	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct build_target_Target_ build_target_Target;$/;"	v
build_targets	$C2_ROOT/compiler/main.c2	/^fn bool Context.build_targets(Context* c) {$/;"	f
builder	$C2_ROOT/analyser/conversion_checker.c2	/^    c.builder = builder;$/;"	v
builder	$C2_ROOT/analyser/module_analyser.c2	/^    ma.builder = builder;$/;"	v
builder	$C2_ROOT/bootstrap/bootstrap.c	/^   p->builder = builder;$/;"	v
builder	$C2_ROOT/compiler/compiler.c2	/^    info.builder = c.builder;$/;"	v
builder	$C2_ROOT/parser/c2_parser.c2	/^    p.builder = builder;$/;"	v
builder	$C2_ROOT/plugins/plugin_info.c2	/^    ast_builder.Builder* builder;$/;"	v
buildfile_name	$C2_ROOT/common/utils.c2	/^    return constants.buildfile_name;$/;"	v
builtin2irtype	$C2_ROOT/generator/ir/ir_generator.c2	/^fn ir.Type builtin2irtype(BuiltinKind k) {$/;"	f
builtinExprBits	$C2_ROOT/ast/stmt.c2	/^        BuiltinExprBits builtinExprBits;$/;"	v
builtinExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_BuiltinExprBits builtinExprBits;$/;"	v
builtinKind2Signed	$C2_ROOT/ast/builtin_type.c2	/^public fn bool builtinKind2Signed(BuiltinKind kind) {$/;"	f
builtinTypeBits	$C2_ROOT/ast/type.c2	/^        BuiltinTypeBits builtinTypeBits;$/;"	v
builtinTypeBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_BuiltinTypeBits builtinTypeBits;$/;"	v
builtinType_baseTypes	$C2_ROOT/ast/utils.c2	/^    BuiltinKind[elemsof(BuiltinKind)] builtinType_baseTypes;$/;"	v
builtinType_sizes	$C2_ROOT/ast/utils.c2	/^    u32[elemsof(BuiltinKind)] builtinType_sizes;$/;"	v
builtinType_width	$C2_ROOT/ast/utils.c2	/^    u32[elemsof(BuiltinKind)] builtinType_width;$/;"	v
builtin_kind	$C2_ROOT/ast/type_ref.c2	/^    return (BuiltinKind)r.flags.builtin_kind;$/;"	v
builtins	$C2_ROOT/ast/utils.c2	/^public QualType* builtins;$/;"	v
builtins	$C2_ROOT/compiler/compiler.c2	/^    info.ast_builtins = ast.builtins;$/;"	v
bytecode	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    Range bytecode;$/;"	v
bytes_per_pixel	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 bytes_per_pixel;$/;"	v
c1i	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void c1i(u32 rgba) @(cname="sgl_c1i");$/;"	f
c2	$C2_ROOT/generator/c2_trace.c2	/^        char c1, c2;$/;"	v
c2	$C2_ROOT/ir/usage_counter.c2	/^import c2;$/;"	v
c2	$C2_ROOT/libs/c2/c2.c2i	/^module c2;$/;"	v
c2_filenames	$C2_ROOT/libs/c2/c2_trace_tables.c2i	/^const char*[] c2_filenames;$/;"	v
c2_func_data	$C2_ROOT/libs/c2/c2_trace_tables.c2i	/^c2_func_t[] c2_func_data;$/;"	v
c2_func_t	$C2_ROOT/libs/c2/c2_trace_tables.c2i	/^type c2_func_t struct {$/;"	t
c2_idx	$C2_ROOT/compiler/compiler.c2	/^                                   c2_idx,$/;"	v
c2_max_u64	$C2_ROOT/bootstrap/bootstrap.c	/^         value = c2_max_u64;$/;"	v
c2_name	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t c2_name;$/;"	v
c2_name	$C2_ROOT/parser/ast_builder.c2	/^    u32 c2_name;$/;"	v
c2_parser	$C2_ROOT/compiler/compiler.c2	/^import c2_parser;$/;"	v
c2_parser	$C2_ROOT/parser/c2_parser.c2	/^module c2_parser;$/;"	v
c2_parser	$C2_ROOT/parser/c2_parser_expr.c2	/^module c2_parser;$/;"	v
c2_parser	$C2_ROOT/parser/c2_parser_stmt.c2	/^module c2_parser;$/;"	v
c2_parser	$C2_ROOT/parser/c2_parser_switch.c2	/^module c2_parser;$/;"	v
c2_parser	$C2_ROOT/parser/c2_parser_type.c2	/^module c2_parser;$/;"	v
c2_parser_Parser	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct c2_parser_Parser_ c2_parser_Parser;$/;"	v
c2_prec	$C2_ROOT/common/c2_prec.c2	/^module c2_prec;$/;"	v
c2_prec_C_Prec	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t c2_prec_C_Prec;$/;"	v
c2_prec_C_Prec_Additive	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_C_Prec_Additive,$/;"	v
c2_prec_C_Prec_And	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_C_Prec_And,$/;"	v
c2_prec_C_Prec_Assignment	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_C_Prec_Assignment,$/;"	v
c2_prec_C_Prec_Comma	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_C_Prec_Comma,$/;"	v
c2_prec_C_Prec_Conditional	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_C_Prec_Conditional,$/;"	v
c2_prec_C_Prec_Equality	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_C_Prec_Equality,$/;"	v
c2_prec_C_Prec_LogicalAnd	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_C_Prec_LogicalAnd,$/;"	v
c2_prec_C_Prec_LogicalOr	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_C_Prec_LogicalOr,$/;"	v
c2_prec_C_Prec_Multiplicative	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_C_Prec_Multiplicative,$/;"	v
c2_prec_C_Prec_Or	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_C_Prec_Or,$/;"	v
c2_prec_C_Prec_Relative	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_C_Prec_Relative,$/;"	v
c2_prec_C_Prec_Shift	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_C_Prec_Shift,$/;"	v
c2_prec_C_Prec_Unknown	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_C_Prec_Unknown,$/;"	v
c2_prec_C_Prec_Xor	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_C_Prec_Xor,$/;"	v
c2_prec_Prec	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t c2_prec_Prec;$/;"	v
c2_prec_Prec_Additive	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_Prec_Additive,$/;"	v
c2_prec_Prec_Assignment	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_Prec_Assignment,$/;"	v
c2_prec_Prec_Bitwise	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_Prec_Bitwise,$/;"	v
c2_prec_Prec_Comma	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_Prec_Comma,$/;"	v
c2_prec_Prec_Conditional	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_Prec_Conditional,$/;"	v
c2_prec_Prec_LogicalAndOr	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_Prec_LogicalAndOr,$/;"	v
c2_prec_Prec_Multiplicative	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_Prec_Multiplicative,$/;"	v
c2_prec_Prec_Relational	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_Prec_Relational,$/;"	v
c2_prec_Prec_Shift	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_Prec_Shift,$/;"	v
c2_prec_Prec_Unknown	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_prec_Prec_Unknown,$/;"	v
c2_test	$C2_ROOT/libs/c2/c2_test.c2i	/^module c2_test;$/;"	v
c2_tokenizer	$C2_ROOT/parser/c2_parser.c2	/^import c2_tokenizer;$/;"	v
c2_tokenizer	$C2_ROOT/parser/c2_tokenizer.c2	/^module c2_tokenizer;$/;"	v
c2_tokenizer_Action	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t c2_tokenizer_Action;$/;"	v
c2_tokenizer_Action_AMP	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_AMP,$/;"	v
c2_tokenizer_Action_AT	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_AT,$/;"	v
c2_tokenizer_Action_BQUOTE	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_BQUOTE,$/;"	v
c2_tokenizer_Action_CARET	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_CARET,$/;"	v
c2_tokenizer_Action_COLON	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_COLON,$/;"	v
c2_tokenizer_Action_COMMA	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_COMMA,$/;"	v
c2_tokenizer_Action_CR	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_CR,$/;"	v
c2_tokenizer_Action_DIGIT	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_DIGIT,$/;"	v
c2_tokenizer_Action_DOT	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_DOT,$/;"	v
c2_tokenizer_Action_DQUOTE	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_DQUOTE,$/;"	v
c2_tokenizer_Action_EOF	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_EOF,$/;"	v
c2_tokenizer_Action_EQUAL	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_EQUAL,$/;"	v
c2_tokenizer_Action_EXCLAIM	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_EXCLAIM,$/;"	v
c2_tokenizer_Action_GREATER	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_GREATER,$/;"	v
c2_tokenizer_Action_IDENT	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_IDENT,$/;"	v
c2_tokenizer_Action_INVALID	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_INVALID = 0,$/;"	v
c2_tokenizer_Action_LBRACE	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_LBRACE,$/;"	v
c2_tokenizer_Action_LESS	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_LESS,$/;"	v
c2_tokenizer_Action_LPAREN	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_LPAREN,$/;"	v
c2_tokenizer_Action_LSQUARE	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_LSQUARE,$/;"	v
c2_tokenizer_Action_MINUS	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_MINUS,$/;"	v
c2_tokenizer_Action_NEWLINE	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_NEWLINE,$/;"	v
c2_tokenizer_Action_PERCENT	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_PERCENT,$/;"	v
c2_tokenizer_Action_PIPE	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_PIPE,$/;"	v
c2_tokenizer_Action_PLUS	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_PLUS,$/;"	v
c2_tokenizer_Action_POUND	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_POUND,$/;"	v
c2_tokenizer_Action_QUESTION	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_QUESTION,$/;"	v
c2_tokenizer_Action_RBRACE	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_RBRACE,$/;"	v
c2_tokenizer_Action_RPAREN	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_RPAREN,$/;"	v
c2_tokenizer_Action_RSQUARE	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_RSQUARE,$/;"	v
c2_tokenizer_Action_SEMI_COLON	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_SEMI_COLON,$/;"	v
c2_tokenizer_Action_SLASH	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_SLASH,$/;"	v
c2_tokenizer_Action_SQUOTE	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_SQUOTE,$/;"	v
c2_tokenizer_Action_STAR	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_STAR,$/;"	v
c2_tokenizer_Action_TABSPACE	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_TABSPACE,$/;"	v
c2_tokenizer_Action_TILDE	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Action_TILDE,$/;"	v
c2_tokenizer_Feature	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct c2_tokenizer_Feature_ c2_tokenizer_Feature;$/;"	v
c2_tokenizer_HandlerFn	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_HandlerFn on_warning;$/;"	v
c2_tokenizer_Operand	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct c2_tokenizer_Operand_ c2_tokenizer_Operand;$/;"	v
c2_tokenizer_Tokenizer	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct c2_tokenizer_Tokenizer_ c2_tokenizer_Tokenizer;$/;"	v
c2_trace	$C2_ROOT/generator/c2_trace.c2	/^module c2_trace;$/;"	v
c2_trace_counts	$C2_ROOT/generator/c2_trace.c2	/^    u32 *counts = c2_trace_counts;$/;"	v
c2_trace_counts	$C2_ROOT/libs/c2/c2_trace_tables.c2i	/^u32[] c2_trace_counts;$/;"	v
c2_trace_data	$C2_ROOT/generator/c2_trace.c2	/^    c2_trace_t* data = c2_trace_data;$/;"	v
c2_trace_data	$C2_ROOT/libs/c2/c2_trace_tables.c2i	/^c2_trace_t[] c2_trace_data;$/;"	v
c2_trace_length	$C2_ROOT/generator/c2_trace.c2	/^    u32 n = c2_trace_length;$/;"	v
c2_trace_length	$C2_ROOT/libs/c2/c2_trace_tables.c2i	/^u32 c2_trace_length;$/;"	v
c2_trace_t	$C2_ROOT/libs/c2/c2_trace_tables.c2i	/^type c2_trace_t struct {$/;"	t
c2_trace_tables	$C2_ROOT/libs/c2/c2_trace_tables.c2i	/^module c2_trace_tables;$/;"	v
c2c_main	$C2_ROOT/compiler/main.c2	/^module c2c_main;$/;"	v
c2c_main_Context	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct c2c_main_Context_ c2c_main_Context;$/;"	v
c2c_main_Options	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct c2c_main_Options_ c2c_main_Options;$/;"	v
c2i_generator	$C2_ROOT/compiler/compiler.c2	/^import c2i_generator;$/;"	v
c2i_generator	$C2_ROOT/generator/c2i/c2i_generator.c2	/^module c2i_generator;$/;"	v
c2i_generator	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^module c2i_generator;$/;"	v
c2i_generator	$C2_ROOT/generator/c2i/c2i_generator_expr.c2	/^module c2i_generator;$/;"	v
c2i_generator	$C2_ROOT/generator/c2i/c2i_generator_stmt.c2	/^module c2i_generator;$/;"	v
c2i_generator_Generator	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct c2i_generator_Generator_ c2i_generator_Generator;$/;"	v
c2recipe	$C2_ROOT/compiler/c2recipe.c2	/^module c2recipe;$/;"	v
c2recipe	$C2_ROOT/compiler/c2recipe_parser.c2	/^module c2recipe;$/;"	v
c2recipe	$C2_ROOT/compiler/c2recipe_yaml.c2	/^module c2recipe;$/;"	v
c2recipe	$C2_ROOT/compiler/main.c2	/^import c2recipe;$/;"	v
c2recipe_Kind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t c2recipe_Kind;$/;"	v
c2recipe_Kind_AsmFile	$C2_ROOT/bootstrap/bootstrap.c	/^   c2recipe_Kind_AsmFile,$/;"	v
c2recipe_Kind_Backend	$C2_ROOT/bootstrap/bootstrap.c	/^   c2recipe_Kind_Backend,$/;"	v
c2recipe_Kind_Config	$C2_ROOT/bootstrap/bootstrap.c	/^   c2recipe_Kind_Config,$/;"	v
c2recipe_Kind_DisableAsserts	$C2_ROOT/bootstrap/bootstrap.c	/^   c2recipe_Kind_DisableAsserts,$/;"	v
c2recipe_Kind_End	$C2_ROOT/bootstrap/bootstrap.c	/^   c2recipe_Kind_End,$/;"	v
c2recipe_Kind_Eof	$C2_ROOT/bootstrap/bootstrap.c	/^   c2recipe_Kind_Eof,$/;"	v
c2recipe_Kind_Executable	$C2_ROOT/bootstrap/bootstrap.c	/^   c2recipe_Kind_Executable,$/;"	v
c2recipe_Kind_Export	$C2_ROOT/bootstrap/bootstrap.c	/^   c2recipe_Kind_Export,$/;"	v
c2recipe_Kind_File	$C2_ROOT/bootstrap/bootstrap.c	/^   c2recipe_Kind_File,$/;"	v
c2recipe_Kind_Image	$C2_ROOT/bootstrap/bootstrap.c	/^   c2recipe_Kind_Image,$/;"	v
c2recipe_Kind_Lib	$C2_ROOT/bootstrap/bootstrap.c	/^   c2recipe_Kind_Lib,$/;"	v
c2recipe_Kind_NoLibc	$C2_ROOT/bootstrap/bootstrap.c	/^   c2recipe_Kind_NoLibc,$/;"	v
c2recipe_Kind_Plugin	$C2_ROOT/bootstrap/bootstrap.c	/^   c2recipe_Kind_Plugin,$/;"	v
c2recipe_Kind_PluginOptions	$C2_ROOT/bootstrap/bootstrap.c	/^   c2recipe_Kind_PluginOptions,$/;"	v
c2recipe_Kind_Set	$C2_ROOT/bootstrap/bootstrap.c	/^   c2recipe_Kind_Set,$/;"	v
c2recipe_Kind_SetUse	$C2_ROOT/bootstrap/bootstrap.c	/^   result->kind = c2recipe_Kind_SetUse;$/;"	v
c2recipe_Kind_Text	$C2_ROOT/bootstrap/bootstrap.c	/^   c2recipe_Kind_Text,$/;"	v
c2recipe_Kind_Use	$C2_ROOT/bootstrap/bootstrap.c	/^   c2recipe_Kind_Use,$/;"	v
c2recipe_Kind_Warnings	$C2_ROOT/bootstrap/bootstrap.c	/^   c2recipe_Kind_Warnings,$/;"	v
c2recipe_Parser	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct c2recipe_Parser_ c2recipe_Parser;$/;"	v
c2recipe_Recipe	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct c2recipe_Recipe_ c2recipe_Recipe;$/;"	v
c2recipe_Set	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct c2recipe_Set_ c2recipe_Set;$/;"	v
c2recipe_Token	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct c2recipe_Token_ c2recipe_Token;$/;"	v
c2refs	$C2_ROOT/generator/c2refs.c2	/^module c2refs;$/;"	v
c2test	$C2_ROOT/plugins/unit_test1.c2	/^module c2test;$/;"	v
c2test_main	$C2_ROOT/plugins/unit_test_plugin.c2	/^    out.add("module c2test_main;\\n\\n");$/;"	m
c3b	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void c3b(u8 r, u8 g, u8 b) @(cname="sgl_c3b");$/;"	f
c3f	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void c3f(f32 r, f32 g, f32 b) @(cname="sgl_c3f");$/;"	f
c4b	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void c4b(u8 r, u8 g, u8 b, u8 a) @(cname="sgl_c4b");$/;"	f
c4f	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void c4f(f32 r, f32 g, f32 b, f32 a) @(cname="sgl_c4f");$/;"	f
c_char	$C2_ROOT/bootstrap/bootstrap.c	/^typedef char c_char;$/;"	v
c_char	$C2_ROOT/libs/c2/c2.c2i	/^type c_char char;$/;"	t
c_double	$C2_ROOT/bootstrap/bootstrap.c	/^typedef double c_double;$/;"	v
c_double	$C2_ROOT/libs/c2/c2.c2i	/^type c_double f64;$/;"	t
c_double	$C2_ROOT/libs/lua/lua.c2i	/^type LUA_NUMBER c_double;$/;"	v
c_errno	$C2_ROOT/libs/libc/c_errno.c2i	/^module c_errno;$/;"	v
c_errno_ENAMETOOLONG	$C2_ROOT/bootstrap/bootstrap.c	/^      if ((p > &tmp[(512 - 2)])) return c_errno_ENAMETOOLONG;$/;"	v
c_float	$C2_ROOT/bootstrap/bootstrap.c	/^typedef float c_float;$/;"	v
c_float	$C2_ROOT/libs/c2/c2.c2i	/^type c_float f32;$/;"	t
c_generator	$C2_ROOT/compiler/compiler.c2	/^import c_generator;$/;"	v
c_generator	$C2_ROOT/generator/c/c_generator.c2	/^module c_generator;$/;"	v
c_generator	$C2_ROOT/generator/c/c_generator_call.c2	/^module c_generator;$/;"	v
c_generator	$C2_ROOT/generator/c/c_generator_expr.c2	/^module c_generator;$/;"	v
c_generator	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^module c_generator;$/;"	v
c_generator	$C2_ROOT/generator/c/c_generator_special.c2	/^module c_generator;$/;"	v
c_generator	$C2_ROOT/generator/c/c_generator_stmt.c2	/^module c_generator;$/;"	v
c_generator	$C2_ROOT/generator/c/c_generator_trace.c2	/^module c_generator;$/;"	v
c_generator_FormatChanger	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct c_generator_FormatChanger_ c_generator_FormatChanger;$/;"	v
c_generator_Fragment	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct c_generator_Fragment_ c_generator_Fragment;$/;"	v
c_generator_Generator	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct c_generator_Generator_ c_generator_Generator;$/;"	v
c_generator_HASH_BUCKETS	$C2_ROOT/bootstrap/bootstrap.c	/^      sl->hash_count = c_generator_HASH_BUCKETS;$/;"	v
c_generator_HASH_INITIAL	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t hash = c_generator_HASH_INITIAL;$/;"	v
c_generator_HASH_PRIME	$C2_ROOT/bootstrap/bootstrap.c	/^      hash *= c_generator_HASH_PRIME;$/;"	v
c_generator_StringList	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct c_generator_StringList_ c_generator_StringList;$/;"	v
c_generator_TraceCall	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct c_generator_TraceCall_ c_generator_TraceCall;$/;"	v
c_generator_TraceCallList	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct c_generator_TraceCallList_ c_generator_TraceCallList;$/;"	v
c_int	$C2_ROOT/bootstrap/bootstrap.c	/^typedef int32_t c_int;$/;"	v
c_int	$C2_ROOT/libs/c2/c2.c2i	/^type c_int i32;$/;"	t
c_int	$C2_ROOT/libs/io_uring/io_uring.c2i	/^type Kernel_rwf_t c_int;$/;"	v
c_int	$C2_ROOT/libs/libc/csignal.c2i	/^    c_int sa_flags;$/;"	v
c_int	$C2_ROOT/libs/libc/libc_poll.c2i	/^    c_int fd;$/;"	v
c_int	$C2_ROOT/libs/libc/net_if.c2i	/^    c_int ifc_len;$/;"	v
c_int	$C2_ROOT/libs/libc/stdio.c2i	/^    c_int _w;$/;"	v
c_int	$C2_ROOT/libs/libc/stdlib.c2i	/^    c_int rem;$/;"	v
c_int	$C2_ROOT/libs/libc/sys_socket.c2i	/^    c_int sll_ifindex;$/;"	v
c_int	$C2_ROOT/libs/libc/sys_stat.c2i	/^    c_int st_lspare;$/;"	v
c_int	$C2_ROOT/libs/libc/sys_time.c2i	/^    c_int tz_minuteswest;$/;"	v
c_int	$C2_ROOT/libs/libc/unistd.c2i	/^c_int optopt;$/;"	v
c_int	$C2_ROOT/libs/lua/lua.c2i	/^type LUA_INTEGER c_int;$/;"	v
c_int	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Verify_fn fn c_int(void*, X509_crt *, c_int, c_uint*);$/;"	f
c_int	$C2_ROOT/libs/sdl2/sdl.c2i	/^type TimerID c_int;$/;"	v
c_int	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^    c_int allocated;$/;"	v
c_long	$C2_ROOT/bootstrap/bootstrap.c	/^typedef int64_t c_long;$/;"	v
c_long	$C2_ROOT/libs/c2/c2.c2i	/^type c_long i64;$/;"	t
c_long	$C2_ROOT/libs/libc/libc_time.c2i	/^    c_long tm_gmtoff;$/;"	v
c_long	$C2_ROOT/libs/libc/stdlib.c2i	/^    c_long rem;$/;"	v
c_long	$C2_ROOT/libs/libc/sys_stat.c2i	/^    c_long tv_sec;$/;"	v
c_long	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Time_t c_long;$/;"	v
c_long	$C2_ROOT/libs/pthread/pthread.c2i	/^    c_long align;$/;"	v
c_longlong	$C2_ROOT/bootstrap/bootstrap.c	/^typedef int64_t c_longlong;$/;"	v
c_longlong	$C2_ROOT/libs/c2/c2.c2i	/^type c_longlong i64;$/;"	t
c_longlong	$C2_ROOT/libs/libc/libc_dirent.c2i	/^   c_longlong   d_off;$/;"	v
c_longlong	$C2_ROOT/libs/lua/lua.c2i	/^type LUA_KCONTEXT c_longlong;$/;"	v
c_p2	$C2_ROOT/analyser/module_analyser_binop.c2	/^    return c_p1 <= c_p2;$/;"	v
c_prec	$C2_ROOT/common/c_prec.c2	/^module c_prec;$/;"	v
c_short	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^> typedef int16_t c_short;$/;"	v
c_short	$C2_ROOT/libs/c2/c2.c2i	/^type c_short i16;$/;"	t
c_short	$C2_ROOT/libs/libc/net_if.c2i	/^        c_short ifru_flags;$/;"	v
c_short	$C2_ROOT/libs/libc/stdio.c2i	/^    c_short _flags;$/;"	v
c_size	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint64_t c_size;$/;"	v
c_size	$C2_ROOT/libs/c2/c2.c2i	/^type c_size u64;$/;"	t
c_size	$C2_ROOT/libs/libc/regex.c2i	/^    c_size re_nsub;$/;"	v
c_ssize	$C2_ROOT/bootstrap/bootstrap.c	/^typedef int64_t c_ssize;$/;"	v
c_ssize	$C2_ROOT/libs/c2/c2.c2i	/^type c_ssize i64;$/;"	t
c_style	$C2_ROOT/ast/explicit_cast_expr.c2	/^    return e.base.base.explicitCastExprBits.c_style;$/;"	v
c_style	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->base.base.explicitCastExprBits.c_style;$/;"	v
c_uchar	$C2_ROOT/libs/c2/c2.c2i	/^type c_uchar u8;$/;"	t
c_uchar	$C2_ROOT/libs/libc/ctermios.c2i	/^type CC c_uchar;$/;"	v
c_uchar	$C2_ROOT/libs/libc/net_if.c2i	/^    c_uchar port;$/;"	v
c_uchar	$C2_ROOT/libs/libc/sys_socket.c2i	/^    c_uchar sll_pkttype;$/;"	v
c_uint	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint32_t c_uint;$/;"	v
c_uint	$C2_ROOT/libs/c2/c2.c2i	/^type c_uint u32;$/;"	t
c_uint	$C2_ROOT/libs/libc/ctermios.c2i	/^type Speed c_uint;$/;"	v
c_uint	$C2_ROOT/libs/libc/sys_stat.c2i	/^type Mode c_uint;$/;"	v
c_uint	$C2_ROOT/libs/lua/lua.c2i	/^type LUA_UNSIGNED c_uint;$/;"	v
c_ulong	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint64_t c_ulong;$/;"	v
c_ulong	$C2_ROOT/libs/c2/c2.c2i	/^type c_ulong u64;$/;"	t
c_ulong	$C2_ROOT/libs/libc/net_if.c2i	/^    c_ulong mem_start;$/;"	v
c_ulong	$C2_ROOT/libs/libc/sys_stat.c2i	/^    c_ulong st_size;$/;"	v
c_ulonglong	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint64_t c_ulonglong;$/;"	v
c_ulonglong	$C2_ROOT/libs/c2/c2.c2i	/^type c_ulonglong u64;$/;"	t
c_ulonglong	$C2_ROOT/libs/libc/libc_dirent.c2i	/^   c_ulonglong  d_ino;$/;"	v
c_ulonglong	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Mpi_uint c_ulonglong;$/;"	v
c_ushort	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint16_t c_ushort;$/;"	v
c_ushort	$C2_ROOT/libs/c2/c2.c2i	/^type c_ushort u16;$/;"	t
c_ushort	$C2_ROOT/libs/libc/libc_dirent.c2i	/^   c_ushort     d_reclen;$/;"	v
c_ushort	$C2_ROOT/libs/libc/net_if.c2i	/^    c_ushort base_addr;$/;"	v
c_ushort	$C2_ROOT/libs/libc/sys_socket.c2i	/^    c_ushort sll_hatype;$/;"	v
c_ushort	$C2_ROOT/libs/libc/sys_stat.c2i	/^    c_ushort st_padding0;$/;"	v
cache_capacity	$C2_ROOT/analyser/scope.c2	/^    u32 cache_capacity;$/;"	v
cache_capacity	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t cache_capacity;$/;"	v
cache_count	$C2_ROOT/analyser/scope.c2	/^    u32 cache_count;$/;"	v
cache_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t cache_count;$/;"	v
cache_decls	$C2_ROOT/analyser/scope.c2	/^    ast.Decl** cache_decls;$/;"	v
cache_decls	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_Decl** cache_decls;$/;"	v
cache_imports	$C2_ROOT/analyser/scope.c2	/^    ast.ImportDecl** cache_imports;$/;"	v
cache_imports	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_ImportDecl** cache_imports;$/;"	v
cache_resize	$C2_ROOT/analyser/scope.c2	/^fn void Scope.cache_resize(Scope* s, u32 capacity) {$/;"	f
cache_symbols	$C2_ROOT/analyser/scope.c2	/^    u32* cache_symbols;$/;"	v
cache_symbols	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t* cache_symbols;$/;"	v
call	$C2_ROOT/bootstrap/bootstrap.c	/^   cl->array[index] = call;$/;"	v
call	$C2_ROOT/generator/c/c_generator_trace.c2	/^    cl.array[index] = call;$/;"	v
callExprBits	$C2_ROOT/ast/stmt.c2	/^        CallExprBits callExprBits;$/;"	v
callExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_CallExprBits callExprBits;$/;"	v
call_arg_index	$C2_ROOT/analyser/module_analyser_call.c2	/^            printf_call_idx = call_arg_index;$/;"	v
call_arg_index	$C2_ROOT/bootstrap/bootstrap.c	/^         printf_call_idx = call_arg_index;$/;"	v
call_kind	$C2_ROOT/ast/function_decl.c2	/^    return (CallKind)d.base.functionDeclBits.call_kind;$/;"	v
callback	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ResponseCb callback;$/;"	v
callee_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint16_t callee_idx;$/;"	v
callee_idx	$C2_ROOT/generator/c/c_generator_trace.c2	/^    u16 callee_idx;$/;"	v
callee_idx	$C2_ROOT/libs/c2/c2_trace_tables.c2i	/^    u16 callee_idx;$/;"	v
caller	$C2_ROOT/ast/ast_evaluator.c2	/^    eval.prev = caller;$/;"	v
caller	$C2_ROOT/bootstrap/bootstrap.c	/^   eval.prev = caller;$/;"	v
caller_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint16_t caller_idx;$/;"	v
caller_idx	$C2_ROOT/generator/c/c_generator_trace.c2	/^    u16 caller_idx;$/;"	v
caller_idx	$C2_ROOT/libs/c2/c2_trace_tables.c2i	/^    u16 caller_idx;$/;"	v
callk	$C2_ROOT/libs/lua/lua.c2i	/^fn void callk(State *L, c_int nargs, c_int nresults,$/;"	f
calloc	$C2_ROOT/libs/libc/stdlib.c2i	/^fn void* calloc(c_size count, c_size size);$/;"	f
calls	$C2_ROOT/bootstrap/bootstrap.c	/^   c_generator_TraceCallList calls;$/;"	v
calls	$C2_ROOT/generator/c/c_generator.c2	/^    TraceCallList calls;$/;"	v
calls_static_sf	$C2_ROOT/ast/call_expr.c2	/^    return e.base.base.callExprBits.calls_static_sf;$/;"	v
calls_static_sf	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->base.base.callExprBits.calls_static_sf;$/;"	v
calls_type_func	$C2_ROOT/ast/call_expr.c2	/^    return e.base.base.callExprBits.calls_type_func;$/;"	v
calls_type_func	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->base.base.callExprBits.calls_type_func;$/;"	v
canBeNil	$C2_ROOT/ast/function_decl.c2	/^public fn bool FunctionDecl.canBeNil(const FunctionDecl* d) {$/;"	f
cancelQuit	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void cancelQuit() @(cname="sapp_cancel_quit");$/;"	f
cancel_flags	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        u32       cancel_flags;$/;"	v
canon	$C2_ROOT/ast/qualtype.c2	/^    return canon;$/;"	v
canon	$C2_ROOT/bootstrap/bootstrap.c	/^   t->canonicalType = canon;$/;"	v
canon	$C2_ROOT/parser/ast_builder.c2	/^        canon = ptr;$/;"	v
canonicalType	$C2_ROOT/ast/qualtype.c2	/^    QualType canon = t.canonicalType;$/;"	v
canonicalType	$C2_ROOT/ast/type.c2	/^    QualType canonicalType;$/;"	v
canonicalType	$C2_ROOT/bootstrap/bootstrap.c	/^   return t->canonicalType;$/;"	v
canvas	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void canvas(f32 w, f32 h) @(cname="sdtx_canvas");$/;"	f
canvas_height	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    f32 canvas_height;$/;"	v
canvas_width	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    f32 canvas_width;$/;"	v
cap	$C2_ROOT/ast/module.c2	/^    m.max_files = cap;$/;"	v
cap	$C2_ROOT/ast/pointer_pool.c2	/^    p.capacity = cap;$/;"	v
cap	$C2_ROOT/ast/string_type_pool.c2	/^    p.capacity = cap;$/;"	v
cap	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t cap;$/;"	v
cap	$C2_ROOT/common/index_list.c2	/^    l.capacity = cap;$/;"	v
cap	$C2_ROOT/common/library_list.c2	/^    l.capacity = cap;$/;"	v
cap	$C2_ROOT/common/module_list.c2	/^    l.max_mods = cap;$/;"	v
cap	$C2_ROOT/common/value_maplist.c2	/^    l.capacity = cap;$/;"	v
cap	$C2_ROOT/generator/ir/ref_list.c2	/^    l.capacity = cap;$/;"	v
cap	$C2_ROOT/ir/block_list.c2	/^    l.capacity = cap;$/;"	v
cap	$C2_ROOT/ir/init_value_list.c2	/^    l.capacity = cap;$/;"	v
cap	$C2_ROOT/ir/instr_list.c2	/^    l.capacity = cap;$/;"	v
cap	$C2_ROOT/ir/interference_graph.c2	/^    u32 dest_idx = a.map_start + a.max_elems - a.free_slots * cap;$/;"	v
cap	$C2_ROOT/ir/live_map.c2	/^    u32 dest_idx = a.map_start + a.max_elems - a.free_slots * cap;$/;"	v
cap	$C2_ROOT/ir/register_alloc.c2	/^    u32 cap;$/;"	v
cap	$C2_ROOT/ir/slot_writes_map.c2	/^    u32 dest_idx = a.map_start + a.max_elems - a.free_slots * cap;$/;"	v
cap	$C2_ROOT/ir/symbol_list.c2	/^    l.capacity = cap;$/;"	v
cap	$C2_ROOT/ir/usage_counter.c2	/^    c.count = cap;$/;"	v
cap	$C2_ROOT/plugins/refs_generator.c2	/^    u32 cap;$/;"	v
cap2	$C2_ROOT/bootstrap/bootstrap.c	/^         c->capacity = cap2;$/;"	v
cap2	$C2_ROOT/ir/phi_list.c2	/^            c.capacity = cap2;$/;"	v
capacity	$C2_ROOT/analyser/incr_array_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/analyser/init_checker.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/analyser/label_vector.c2	/^    v.capacity = capacity;$/;"	v
capacity	$C2_ROOT/analyser/name_vector.c2	/^    v.capacity = capacity;$/;"	v
capacity	$C2_ROOT/analyser/scope.c2	/^    s.stack_capacity = capacity;$/;"	v
capacity	$C2_ROOT/analyser/struct_func_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ast/array_value_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ast/decl_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ast/expr_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ast/function_decl_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ast/import_decl_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ast/instance_table.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ast/pointer_pool.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ast/static_assert_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ast/string_type_pool.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ast/symbol_table.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ast_utils/attr_table.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ast_utils/string_buffer.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ast_utils/string_pool.c2	/^    p.entry_capacity = capacity;$/;"	v
capacity	$C2_ROOT/bootstrap/bootstrap.c	/^   v->capacity = capacity;$/;"	v
capacity	$C2_ROOT/common/attr_handler.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/common/build_target.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/common/component.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/common/index_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/common/library_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/common/string_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/common/value_maplist.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/generator/c/c_generator_trace.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/generator/c2refs.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/generator/ir/ref_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    w.capacity = capacity;$/;"	v
capacity	$C2_ROOT/ir/block_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ir/case_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ir/constant_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ir/copy_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ir/init_value_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ir/inserter.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ir/instr_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ir/interference_graph.c2	/^    u16 capacity;$/;"	v
capacity	$C2_ROOT/ir/live_map.c2	/^    u16 capacity;$/;"	v
capacity	$C2_ROOT/ir/lookup_table.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ir/phi_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ir/rev_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ir/slot_writes_map.c2	/^    u16 capacity;$/;"	v
capacity	$C2_ROOT/ir/symbol_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ir/usage_counter.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/ir/work_queue.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/parser/case_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/parser/expr_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/parser/stmt_list.c2	/^    u32 capacity;$/;"	v
capacity	$C2_ROOT/plugins/deps_generator.c2	/^    u32 capacity;$/;"	v
capacity2	$C2_ROOT/ast/decl_list.c2	/^            l.capacity = capacity2;$/;"	v
capacity2	$C2_ROOT/ast/expr_list.c2	/^            l.capacity = capacity2;$/;"	v
capacity2	$C2_ROOT/bootstrap/bootstrap.c	/^   t->capacity = capacity2;$/;"	v
capacity2	$C2_ROOT/ir/lookup_table.c2	/^    t.capacity = capacity2;$/;"	v
case_cond	$C2_ROOT/generator/ir/ir_generator_switch.c2	/^            const RangeExpr* r = (RangeExpr*)case_cond;$/;"	v
case_id	$C2_ROOT/bootstrap/bootstrap.c	/^   return case_id;$/;"	v
case_id	$C2_ROOT/ir/context.c2	/^    return case_id;$/;"	v
case_list	$C2_ROOT/parser/c2_parser_switch.c2	/^import case_list;$/;"	v
case_list	$C2_ROOT/parser/case_list.c2	/^module case_list;$/;"	v
case_list_List	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct case_list_List_ case_list_List;$/;"	v
cases	$C2_ROOT/ast/switch_stmt.c2	/^    return s.cases;$/;"	v
cases	$C2_ROOT/bootstrap/bootstrap.c	/^   return s->cases;$/;"	v
cases	$C2_ROOT/ir/case_list.c2	/^    Case* cases;$/;"	v
cases	$C2_ROOT/ir/function_info.c2	/^    CaseList cases;$/;"	v
cases2	$C2_ROOT/bootstrap/bootstrap.c	/^   l->cases = cases2;$/;"	v
cases2	$C2_ROOT/ir/case_list.c2	/^    l.cases = cases2;$/;"	v
castAs	$C2_ROOT/ast/value.c2	/^fn Value Value.castAs(const Value* v, QualType qt) {$/;"	f
cbreak	$C2_ROOT/libs/curses/curses.c2i	/^fn void cbreak();$/;"	f
cbrt	$C2_ROOT/libs/math/math.c2i	/^fn c_double cbrt(c_double);$/;"	f
cbrtf	$C2_ROOT/libs/math/math.c2i	/^fn c_float cbrtf(c_float);$/;"	f
cbufs	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void*[8] cbufs;$/;"	v
cc	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t cc;$/;"	v
cc	$C2_ROOT/common/build_file.c2	/^    u32 cc;$/;"	v
cc	$C2_ROOT/common/utf8.c2	/^            dest[0] = (char)cc;$/;"	v
cc	$C2_ROOT/parser/c2_tokenizer.c2	/^    u32 cc;$/;"	v
ceil	$C2_ROOT/libs/math/math.c2i	/^fn c_double ceil(c_double);$/;"	f
ceilf	$C2_ROOT/libs/math/math.c2i	/^fn c_float ceilf(c_float);$/;"	f
cflags	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t cflags;$/;"	v
cflags	$C2_ROOT/common/build_file.c2	/^    u32 cflags;$/;"	v
cgen_dir	$C2_ROOT/bootstrap/bootstrap.c	/^   const char* cgen_dir;$/;"	v
change_format	$C2_ROOT/analyser/module_analyser_call.c2	/^    bool change_format;$/;"	v
change_format	$C2_ROOT/ast/call_expr.c2	/^    return e.base.base.callExprBits.change_format;$/;"	v
change_format	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->base.base.callExprBits.change_format;$/;"	v
changed	$C2_ROOT/ir/register_alloc.c2	/^        changed = false;$/;"	v
changed	$C2_ROOT/ir/ssa.c2	/^    return changed;$/;"	v
changed	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool changed;$/;"	v
channels	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^fn i32 channels() @(cname="saudio_channels");$/;"	f
char	$C2_ROOT/bootstrap/bootstrap.c	/^   char c;$/;"	v
char	$C2_ROOT/generator/c2_trace.c2	/^        char c;$/;"	v
char	$C2_ROOT/ir_examples/global_vars.c2	/^char c;$/;"	v
char	$C2_ROOT/ir_examples/members.c2	/^    char c;$/;"	v
char	$C2_ROOT/ir_examples/struct_init.c2	/^    char z;$/;"	v
char	$C2_ROOT/ir_examples/struct_init_anonymous.c2	/^    char a;$/;"	v
char	$C2_ROOT/ir_examples/types.c2	/^    char c;$/;"	v
char	$C2_ROOT/libs/c2/c2.c2i	/^type c_char char;$/;"	v
char	$C2_ROOT/libs/c2/char.c2i	/^module char;$/;"	v
char	$C2_ROOT/parser/c2_tokenizer.c2	/^    char c;$/;"	v
charLiteralBits	$C2_ROOT/ast/stmt.c2	/^        CharLiteralBits charLiteralBits;$/;"	v
charLiteralBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_CharLiteralBits charLiteralBits;$/;"	v
char_buf_size	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    i32 char_buf_size;$/;"	v
char_code	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    u32 char_code;$/;"	v
char_value	$C2_ROOT/bootstrap/bootstrap.c	/^      uint8_t char_value;$/;"	v
char_value	$C2_ROOT/parser/c2_parser.c2	/^            char cc = tok.char_value;$/;"	v
char_value	$C2_ROOT/parser/c2_tokenizer.c2	/^                val = result.char_value;$/;"	v
chars	$C2_ROOT/ir_examples/builtins.c2	/^char[7] chars;$/;"	v
chars	$C2_ROOT/ir_examples/global_arrays.c2	/^char[10] chars;$/;"	v
chdir	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int chdir(const c_char* path);$/;"	f
check	$C2_ROOT/analyser/conversion_checker.c2	/^public fn bool Checker.check(Checker* c, QualType lhs, QualType rhs, Expr** e_ptr, SrcLoc loc) {$/;"	f
check	$C2_ROOT/analyser/module_analyser.c2	/^public fn void Analyser.check(Analyser* ma, Module* mod) {$/;"	f
check	$C2_ROOT/analyser/unused_checker.c2	/^public fn void check(diagnostics.Diags* diags,$/;"	f
check	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^public fn bool check(diagnostics.Diags* diags, QualType qt, const Expr* e) {$/;"	f
check	$C2_ROOT/ast_utils/attr.c2	/^public fn AttrReq check(const Attr* a) {$/;"	f
check	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^fn void Evaluator.check(Evaluator* eval, FunctionDecl* fd, u32 num, Expr** args) {$/;"	f
check	$C2_ROOT/generator/c/dep_finder.c2	/^public fn void Finder.check(Finder* s, Decl* d) {$/;"	f
check	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^    ExprRef check;$/;"	v
check	$C2_ROOT/ir_examples/cond_decl.c2	/^fn i32 check(i32* i) {$/;"	f
check2	$C2_ROOT/ir_examples/cond_decl.c2	/^fn i32 check2(i32 other) {$/;"	f
checkAccess	$C2_ROOT/analyser/scope.c2	/^public fn bool Scope.checkAccess(Scope* s, ast.Decl* d, SrcLoc loc) {$/;"	f
checkArrayDesignators	$C2_ROOT/analyser/module_analyser_init.c2	/^fn bool Analyser.checkArrayDesignators(Analyser* ma, InitListExpr* ile, bool has_size, u32 *size/;"	f
checkAssignment	$C2_ROOT/analyser/module_analyser_expr.c2	/^fn bool Analyser.checkAssignment(Analyser* ma, Expr* assignee, QualType tleft, const char* msg, /;"	f
checkAttr	$C2_ROOT/parser/ast_builder.c2	/^fn bool Builder.checkAttr(Builder* b, const Attr* a) {$/;"	f
checkBinopAddArgs	$C2_ROOT/analyser/module_analyser_binop.c2	/^fn QualType Analyser.checkBinopAddArgs(Analyser* ma, BinaryOperator* b, QualType lhs, QualType r/;"	f
checkBinopAddSubAssign	$C2_ROOT/analyser/module_analyser_binop.c2	/^fn QualType Analyser.checkBinopAddSubAssign(Analyser* ma, BinaryOperator* b, QualType lhs, QualT/;"	f
checkBinopComparison	$C2_ROOT/analyser/module_analyser_binop.c2	/^fn QualType Analyser.checkBinopComparison(Analyser* ma, BinaryOperator* b, QualType lhs, QualTyp/;"	f
checkBinopIntArgs	$C2_ROOT/analyser/module_analyser_binop.c2	/^fn QualType Analyser.checkBinopIntArgs(Analyser* ma, BinaryOperator* b, QualType lhs, QualType r/;"	f
checkBinopLogical	$C2_ROOT/analyser/module_analyser_binop.c2	/^fn QualType Analyser.checkBinopLogical(Analyser* ma, BinaryOperator* b, QualType lhs, QualType r/;"	f
checkBinopSubArgs	$C2_ROOT/analyser/module_analyser_binop.c2	/^fn QualType Analyser.checkBinopSubArgs(Analyser* ma, BinaryOperator* b, QualType lhs, QualType r/;"	f
checkBitfield	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^public fn bool checkBitfield(diagnostics.Diags* diags, u8 bitfield_width, bool bitfield_signed, /;"	f
checkBlockLiveness	$C2_ROOT/ir/register_alloc.c2	/^fn void Tools.checkBlockLiveness(Tools* t, u32 blk_id, LiveVector* v) {$/;"	f
checkBlockRead	$C2_ROOT/ir/ssa.c2	/^fn Ref Tools.checkBlockRead(Tools* t, BlockId blk_id, u16 slot) {$/;"	f
checkBuiltin2Pointer	$C2_ROOT/analyser/conversion_checker.c2	/^fn bool Checker.checkBuiltin2Pointer(Checker* c, const Type* lcanon, const Type* rcanon) {$/;"	f
checkBuiltin2PointerCast	$C2_ROOT/analyser/conversion_checker.c2	/^fn bool Checker.checkBuiltin2PointerCast(Checker* c, const Type* lcanon, const Type* rcanon) {$/;"	f
checkBuiltins	$C2_ROOT/analyser/conversion_checker.c2	/^fn bool Checker.checkBuiltins(Checker* c, const Type* lcanon, const Type* rcanon) {$/;"	f
checkCast	$C2_ROOT/analyser/conversion_checker.c2	/^public fn bool Checker.checkCast(Checker* c, QualType lhs, QualType rhs, SrcLoc lhsLoc, SrcLoc r/;"	f
checkDest	$C2_ROOT/ir/context.c2	/^fn BlockId checkDest(FunctionInfo* fi, BlockId id) {$/;"	f
checkEnum	$C2_ROOT/analyser/unused_checker.c2	/^fn void Checker.checkEnum(Checker* c, EnumTypeDecl* d) {$/;"	f
checkEnum2Int	$C2_ROOT/analyser/conversion_checker.c2	/^fn bool Checker.checkEnum2Int(Checker* c, const Type* lcanon, const Type* rcanon) {$/;"	f
checkEnumArg	$C2_ROOT/analyser/module_analyser_init.c2	/^fn bool Analyser.checkEnumArg(Analyser* ma, Expr** e_ptr, QualType expectedType) {$/;"	f
checkEnumConstantCase	$C2_ROOT/analyser/module_analyser_switch.c2	/^fn bool Analyser.checkEnumConstantCase(Analyser* ma,$/;"	f
checkFloat	$C2_ROOT/analyser/module_analyser_binop.c2	/^fn bool Analyser.checkFloat(Analyser* ma, Expr* lhs, Expr* rhs, const char* operation) {$/;"	f
checkFunc2Builtin	$C2_ROOT/analyser/conversion_checker.c2	/^fn bool Checker.checkFunc2Builtin(Checker* c, const Type* lcanon, const Type* rcanon, bool expli/;"	f
checkFunc2Func	$C2_ROOT/analyser/conversion_checker.c2	/^fn bool checkFunc2Func(const FunctionDecl* fdl, const FunctionDecl* fdr) {$/;"	f
checkFunc2Pointer	$C2_ROOT/analyser/conversion_checker.c2	/^fn bool Checker.checkFunc2Pointer(Checker* c, const Type* lcanon, const Type* rcanon) {$/;"	f
checkGlobalSymbol	$C2_ROOT/analyser/scope.c2	/^public fn bool Scope.checkGlobalSymbol(Scope* s, u32 name_idx, SrcLoc loc) {$/;"	f
checkIncrDecr	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^fn bool Analyser.checkIncrDecr(Analyser* ma, Expr* inner, QualType t, bool is_incr, SrcLoc loc) /;"	f
checkIndex	$C2_ROOT/analyser/module_analyser.c2	/^    u32 checkIndex;$/;"	v
checkIndex	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t checkIndex;$/;"	v
checkIntConversion	$C2_ROOT/analyser/conversion_checker.c2	/^fn bool Checker.checkIntConversion(Checker* c, const BuiltinType* bi) {$/;"	f
checkMain	$C2_ROOT/compiler/compiler.c2	/^fn void Compiler.checkMain(Compiler* c) {$/;"	f
checkMemberName	$C2_ROOT/parser/c2_parser_type.c2	/^fn void Parser.checkMemberName(Parser* p) {$/;"	f
checkName	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.checkName(Analyser* ma, Decl* d, bool is_constant) {$/;"	f
checkName	$C2_ROOT/parser/c2_parser.c2	/^fn bool Parser.checkName(Parser* p, u32 name_idx, bool is_interface) {$/;"	f
checkOpaque	$C2_ROOT/analyser/module_analyser_type.c2	/^fn bool Analyser.checkOpaque(Analyser* ma, const StructTypeDecl* std, SrcLoc loc) {$/;"	f
checkPointer2Builtin	$C2_ROOT/analyser/conversion_checker.c2	/^fn bool Checker.checkPointer2Builtin(Checker* c, const Type* lcanon, const Type* rcanon) {$/;"	f
checkPointer2BuiltinCast	$C2_ROOT/analyser/conversion_checker.c2	/^fn bool Checker.checkPointer2BuiltinCast(Checker* c, const Type* lcanon, const Type* rcanon) {$/;"	f
checkPointer2Func	$C2_ROOT/analyser/conversion_checker.c2	/^fn bool Checker.checkPointer2Func(Checker* c, const Type* lcanon, const Type* rcanon) {$/;"	f
checkPointerFuncComparison	$C2_ROOT/analyser/module_analyser_binop.c2	/^fn QualType Analyser.checkPointerFuncComparison(Analyser* ma, BinaryOperator* b, QualType lhs, Q/;"	f
checkPointers	$C2_ROOT/analyser/conversion_checker.c2	/^fn bool Checker.checkPointers(Checker* c, const Type* lcanon, const Type* rcanon) {$/;"	f
checkPredBlock	$C2_ROOT/ir/ssa.c2	/^fn Ref Tools.checkPredBlock(Tools* t, BlockId blk_id, u16 slot, FunctionInfo* fi) {$/;"	f
checkPredessors	$C2_ROOT/ir/ssa.c2	/^            checkPredessors$/;"	v
checkPrintArgs	$C2_ROOT/analyser/module_analyser_call.c2	/^fn void Analyser.checkPrintArgs(Analyser* ma, Expr* format, u32 num_args, Expr** args, bool* cha/;"	f
checkPrintfFormat	$C2_ROOT/analyser/module_analyser_function.c2	/^fn void Analyser.checkPrintfFormat(Analyser* ma, VarDecl* v, QualType qt, u32 idx, FunctionDecl*/;"	f
checkRange	$C2_ROOT/ast/value.c2	/^public fn bool Value.checkRange(const Value* v, i64 min, u64 max) {$/;"	f
checkRef	$C2_ROOT/ir/slot_collector.c2	/^fn void SlotCollector.checkRef(SlotCollector* c, Ref* r) {$/;"	f
checkRef	$C2_ROOT/ir/ssa.c2	/^fn void Tools.checkRef(Tools* t, Ref r) {$/;"	f
checkReturnAddrOfLocal	$C2_ROOT/analyser/module_analyser_stmt.c2	/^fn void Analyser.checkReturnAddrOfLocal(Analyser* ma, Expr* arg) {$/;"	f
checkShiftArgs	$C2_ROOT/analyser/module_analyser_binop.c2	/^fn bool Analyser.checkShiftArgs(Analyser* ma, Expr* lhs, Expr* rhs) {$/;"	f
checkStack	$C2_ROOT/analyser/module_analyser.c2	/^    StackLayer[MaxDepth] checkStack;$/;"	v
checkStaticSlots	$C2_ROOT/ir/slot_collector.c2	/^fn void SlotCollector.checkStaticSlots(SlotCollector* c, FunctionInfo* info) {$/;"	f
checkStructMembers	$C2_ROOT/analyser/unused_checker.c2	/^fn void Checker.checkStructMembers(Checker* c, Decl* d) {$/;"	f
checkTypeRange	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^public fn bool checkTypeRange(diagnostics.Diags* diags, QualType qt, Value* value, SrcLoc loc, c/;"	f
checkTypes	$C2_ROOT/analyser/conversion_checker.c2	/^fn bool Checker.checkTypes(Checker* c, const Type* lcanon, const Type* rcanon) {$/;"	f
checkUnused	$C2_ROOT/compiler/compiler.c2	/^fn void Compiler.checkUnused(void* arg, ast.Module* m) {$/;"	f
checkVarDeclAttributes	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.checkVarDeclAttributes(Analyser* ma, VarDecl* v) {$/;"	f
checkZero	$C2_ROOT/analyser/module_analyser_binop.c2	/^fn bool Analyser.checkZero(Analyser* ma, Expr* e, const char* operation) {$/;"	f
check_between	$C2_ROOT/plugins/unit_test1.c2	/^public fn void check_between(const char* file @(auto_file), u32 line @(auto_line), i64 left, i64/;"	f
check_between_eq	$C2_ROOT/plugins/unit_test1.c2	/^public fn void check_between_eq(const char* file @(auto_file), u32 line @(auto_line), i64 left, /;"	f
check_data	$C2_ROOT/plugins/unit_test1.c2	/^public fn void check_data(const char* file @(auto_file), u32 line @(auto_line), const u8* exp, u/;"	f
check_eq	$C2_ROOT/plugins/unit_test1.c2	/^public fn void check_eq(const char* file @(auto_file), u32 line @(auto_line), i64 expected, i64 /;"	f
check_eq_u	$C2_ROOT/plugins/unit_test1.c2	/^public fn void check_eq_u(const char* file @(auto_file), u32 line @(auto_line), u64 expected, u6/;"	f
check_exported_decls	$C2_ROOT/generator/generator_utils.c2	/^fn void check_exported_decls(void* arg, Decl* d) {$/;"	f
check_exports	$C2_ROOT/compiler/compiler.c2	/^fn bool Compiler.check_exports(Compiler* c) {$/;"	f
check_fail	$C2_ROOT/plugins/unit_test1.c2	/^public fn void check_fail(const char* file @(auto_file), u32 line @(auto_line)) {$/;"	f
check_false	$C2_ROOT/plugins/unit_test1.c2	/^public fn void check_false(const char* file @(auto_file), u32 line @(auto_line), bool real) {$/;"	f
check_ge	$C2_ROOT/plugins/unit_test1.c2	/^public fn void check_ge(const char* file @(auto_file), u32 line @(auto_line), i64 expected, i64 /;"	f
check_gt	$C2_ROOT/plugins/unit_test1.c2	/^public fn void check_gt(const char* file @(auto_file), u32 line @(auto_line), i64 expected, i64 /;"	f
check_idx	$C2_ROOT/analyser/module_analyser.c2	/^    u32 check_idx;$/;"	v
check_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t check_idx;$/;"	v
check_le	$C2_ROOT/plugins/unit_test1.c2	/^public fn void check_le(const char* file @(auto_file), u32 line @(auto_line), i64 expected, i64 /;"	f
check_lt	$C2_ROOT/plugins/unit_test1.c2	/^public fn void check_lt(const char* file @(auto_file), u32 line @(auto_line), i64 expected, i64 /;"	f
check_module	$C2_ROOT/generator/generator_utils.c2	/^fn void check_module(void* arg, ast.Module* m) {$/;"	f
check_nil	$C2_ROOT/plugins/unit_test1.c2	/^public fn void check_nil(const char* file @(auto_file), u32 line @(auto_line), void* real) {$/;"	f
check_not_eq	$C2_ROOT/plugins/unit_test1.c2	/^public fn void check_not_eq(const char* file @(auto_file), u32 line @(auto_line), i64 expected, /;"	f
check_not_nil	$C2_ROOT/plugins/unit_test1.c2	/^public fn void check_not_nil(const char* file @(auto_file), u32 line @(auto_line), void* real) {$/;"	f
check_not_str	$C2_ROOT/plugins/unit_test1.c2	/^public fn void check_not_str(const char* file @(auto_file), u32 line @(auto_line), const char* e/;"	f
check_only	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool check_only;$/;"	v
check_only	$C2_ROOT/compiler/compiler.c2	/^    bool check_only;$/;"	v
check_overflow	$C2_ROOT/bootstrap/bootstrap.c	/^      goto check_overflow;$/;"	v
check_overflow	$C2_ROOT/parser/c2_tokenizer.c2	/^        goto check_overflow;$/;"	v
check_str	$C2_ROOT/plugins/unit_test1.c2	/^public fn void check_str(const char* file @(auto_file), u32 line @(auto_line), const char* expec/;"	f
check_str_contains	$C2_ROOT/plugins/unit_test1.c2	/^public fn void check_str_contains(const char* file @(auto_file), u32 line @(auto_line), const ch/;"	f
check_str_not_contains	$C2_ROOT/plugins/unit_test1.c2	/^public fn void check_str_not_contains(const char* file @(auto_file), u32 line @(auto_line), cons/;"	f
check_true	$C2_ROOT/plugins/unit_test1.c2	/^public fn void check_true(const char* file @(auto_file), u32 line @(auto_line), bool real) {$/;"	f
checker	$C2_ROOT/analyser/module_analyser.c2	/^    conv.Checker checker;$/;"	v
checker	$C2_ROOT/bootstrap/bootstrap.c	/^   conversion_checker_Checker checker;$/;"	v
checkpoint_capacity	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t checkpoint_capacity;$/;"	v
checkpoint_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t right = f->checkpoint_count;$/;"	v
checkpoints	$C2_ROOT/bootstrap/bootstrap.c	/^   source_mgr_CheckPoint* checkpoints;$/;"	v
checkpoints	$C2_ROOT/common/source_mgr.c2	/^    CheckPoint *checkpoints;$/;"	v
checkstack	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int checkstack(State* L, c_int n) @(cname="lua_checkstack");$/;"	f
child_error	$C2_ROOT/common/process_utils.c2	/^fn void child_error(i32 fd, const char* format @(printf_format), ...) @(noreturn) {$/;"	f
child_idx	$C2_ROOT/bootstrap/bootstrap.c	/^      uint32_t child_idx;$/;"	v
child_idx	$C2_ROOT/common/yaml/yaml_iterator.c2	/^                next = node.child_idx;$/;"	v
child_idx	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^            subroot.children[n.num_children] = child_idx;$/;"	v
children	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    u32[0] children;$/;"	v
children	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^    u32[128] children;$/;"	v
chmod	$C2_ROOT/libs/libc/sys_stat.c2i	/^fn c_int chmod(const char* file, Mode mode);$/;"	f
chunk	$C2_ROOT/common/source_mgr.c2	/^    const char* src = f.data + offset - chunk;$/;"	v
clamp	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn f32 clamp(f32 value, f32 min, f32 max) {$/;"	f
clause	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_PhiClause* clause;$/;"	v
clause	$C2_ROOT/ir/phi_list.c2	/^    PhiClause* clause;$/;"	v
clause_start	$C2_ROOT/bootstrap/bootstrap.c	/^   i->phi_clauses.start = clause_start;$/;"	v
clauses	$C2_ROOT/bootstrap/bootstrap.c	/^   return c->clauses;$/;"	v
clauses	$C2_ROOT/ir/phi_list.c2	/^    return c.clauses;$/;"	v
clauses2	$C2_ROOT/bootstrap/bootstrap.c	/^   l->clauses = clauses2;$/;"	v
clauses2	$C2_ROOT/ir/phi_list.c2	/^    l.clauses = clauses2;$/;"	v
cleanup_cb	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    Cb cleanup_cb;$/;"	v
cleanup_userdata_cb	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    DataCb cleanup_userdata_cb;$/;"	v
clear	$C2_ROOT/analyser/init_checker.c2	/^public fn void Checker.clear(Checker* c) {$/;"	f
clear	$C2_ROOT/analyser/name_vector.c2	/^public fn void NameVector.clear(NameVector* v) {$/;"	f
clear	$C2_ROOT/ast/decl_list.c2	/^public fn void DeclList.clear(DeclList* l) {$/;"	f
clear	$C2_ROOT/ast/function_decl_list.c2	/^public fn void FunctionDeclList.clear(FunctionDeclList* l) @(unused) {$/;"	f
clear	$C2_ROOT/ast/pointer_pool.c2	/^fn void PointerPool.clear(PointerPool* p) {$/;"	f
clear	$C2_ROOT/ast/string_type_pool.c2	/^fn void StringTypePool.clear(StringTypePool* p) {$/;"	f
clear	$C2_ROOT/ast_utils/context.c2	/^public fn void Context.clear(Context* c) {$/;"	f
clear	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void Buf.clear(Buf* buf) {$/;"	f
clear	$C2_ROOT/common/bit_array.c2	/^public fn void BitArray.clear(BitArray* a, u32 idx) {$/;"	f
clear	$C2_ROOT/common/diagnostics.c2	/^public fn void Diags.clear(Diags* diags) {$/;"	f
clear	$C2_ROOT/common/index_list.c2	/^public fn void List.clear(List* l) {$/;"	f
clear	$C2_ROOT/common/module_list.c2	/^public fn void List.clear(List* l) {$/;"	f
clear	$C2_ROOT/common/source_mgr.c2	/^public fn void SourceMgr.clear(SourceMgr* sm, i32 handle) {$/;"	f
clear	$C2_ROOT/common/string_list.c2	/^public fn void List.clear(List* l) {$/;"	f
clear	$C2_ROOT/common/value_maplist.c2	/^public fn void List.clear(List* l) {$/;"	f
clear	$C2_ROOT/generator/c/c_generator.c2	/^fn void Fragment.clear(Fragment* f) {$/;"	f
clear	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^public fn void Locals.clear(Locals* l) {$/;"	f
clear	$C2_ROOT/ir/block_list.c2	/^public fn void BlockList.clear(BlockList* l) {$/;"	f
clear	$C2_ROOT/ir/case_list.c2	/^public fn void CaseList.clear(CaseList* l) {$/;"	f
clear	$C2_ROOT/ir/copy_list.c2	/^public fn void CopyList.clear(CopyList* l) {$/;"	f
clear	$C2_ROOT/ir/inserter.c2	/^public fn void Inserter.clear(Inserter* ins, u32 num_blocks, u32 num_instr) {$/;"	f
clear	$C2_ROOT/ir/instr.c2	/^public fn void Instr.clear(Instr* i) {$/;"	f
clear	$C2_ROOT/ir/lookup_table.c2	/^public fn void Table.clear(Table* t, u32 amount) {$/;"	f
clear	$C2_ROOT/ir/phi_list.c2	/^public fn void PhiList.clear(PhiList* l) {$/;"	f
clear	$C2_ROOT/ir/ref.c2	/^public fn void Ref.clear(Ref* r) {$/;"	f
clear	$C2_ROOT/ir/register_alloc.c2	/^fn void LiveVector.clear(LiveVector* v) {$/;"	f
clear	$C2_ROOT/ir/slot_values.c2	/^public fn void SlotValues.clear(SlotValues* v, u32 num_slots) {$/;"	f
clear	$C2_ROOT/ir/slot_writes_map.c2	/^public fn void Map.clear(Map* m) {$/;"	f
clear	$C2_ROOT/ir/usage_counter.c2	/^public fn void Counter.clear(Counter* c, u32 cap) {$/;"	f
clear	$C2_ROOT/libs/curses/curses.c2i	/^fn void clear();$/;"	f
clear	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void Renderer.clear(Renderer* renderer) @(cname="SDL_RenderClear");$/;"	f
clear	$C2_ROOT/parser/stmt_list.c2	/^public fn void List.clear(List* l) {$/;"	f
clearAttributes	$C2_ROOT/parser/ast_builder.c2	/^public fn void Builder.clearAttributes(Builder* b) {$/;"	f
clearComposition	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void clearComposition() @(cname="SDL_ClearComposition");$/;"	f
clearGenerated	$C2_ROOT/ast/decl.c2	/^public fn void Decl.clearGenerated(Decl* d) { d.declBits.is_generated = 0; }$/;"	f
clearQuals	$C2_ROOT/ast/qualtype.c2	/^public fn void QualType.clearQuals(QualType* qt) {$/;"	f
clearUsed	$C2_ROOT/ast/decl.c2	/^public fn void Decl.clearUsed(Decl* d) { d.declBits.is_used = false; }$/;"	f
clear_used_decl	$C2_ROOT/generator/generator_utils.c2	/^fn void clear_used_decl(void* arg, Decl* d) {$/;"	f
clear_used_mod	$C2_ROOT/generator/generator_utils.c2	/^fn void clear_used_mod(void* arg, ast.Module* m) {$/;"	f
clear_value	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u8 clear_value;$/;"	v
clearenv	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int clearenv();$/;"	f
clearerr	$C2_ROOT/libs/libc/stdio.c2i	/^fn void clearerr(FILE* __stream);$/;"	f
clearerr_unlocked	$C2_ROOT/libs/libc/stdio.c2i	/^fn void clearerr_unlocked(FILE* __stream);$/;"	f
clipboard_size	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    i32 clipboard_size;$/;"	v
clobbers	$C2_ROOT/parser/ast_builder.c2	/^                                      clobbers,$/;"	v
close	$C2_ROOT/common/file/file_utils.c2	/^public fn void File.close(File* file) @(unused) {$/;"	f
close	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int close(c_int fd);$/;"	f
close	$C2_ROOT/libs/lua/lua.c2i	/^fn void close(State *L) @(cname="lua_close");$/;"	f
close	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn void Font.close(Font *font) @(cname="TTF_CloseFont");$/;"	f
closeAudioDevice	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void closeAudioDevice(AudioDeviceID dev) @(cname="SDL_CloseAudioDevice");$/;"	f
close_file	$C2_ROOT/generator/c2refs.c2	/^fn void close_file(MapFile f) {$/;"	f
closedir	$C2_ROOT/libs/libc/libc_dirent.c2i	/^fn c_int closedir(DIR* dirp);$/;"	f
cmd_str	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^    char[256] cmd_str;$/;"	v
cmp_calls	$C2_ROOT/generator/c2_trace.c2	/^fn i32 cmp_calls(const void *a, const void *b) {$/;"	f
cmp_funcs	$C2_ROOT/generator/c2_trace.c2	/^fn i32 cmp_funcs(const void *a, const void *b) {$/;"	f
cname	$C2_ROOT/ast/function_decl.c2	/^    return cname;$/;"	v
cname	$C2_ROOT/bootstrap/bootstrap.c	/^   return cname;$/;"	v
co	$C2_ROOT/bootstrap/bootstrap.c	/^      if (component_Component_hasModule(co, m)) return co;$/;"	v
co	$C2_ROOT/compiler/compiler_libs.c2	/^        if (co.hasModule(m)) return co;$/;"	v
col	$C2_ROOT/generator/c2refs.c2	/^    u16 col;$/;"	v
collectIncrementalArrays	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.collectIncrementalArrays(Analyser* ma) {$/;"	f
collectLocalVars	$C2_ROOT/generator/ir/ir_generator.c2	/^fn void Generator.collectLocalVars(Generator* gen, Stmt* s) {$/;"	f
collectTypeFunctions	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.collectTypeFunctions(Analyser* ma) {$/;"	f
collect_temps	$C2_ROOT/ir/print.c2	/^fn void PrintHelper.collect_temps(PrintHelper* ph) {$/;"	f
collector	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_SlotCollector collector;$/;"	v
collector	$C2_ROOT/ir/context.c2	/^    SlotCollector collector;$/;"	v
colonLoc	$C2_ROOT/ast/conditional_operator.c2	/^    e.colonLoc = colonLoc;$/;"	v
colonLoc	$C2_ROOT/bootstrap/bootstrap.c	/^   src_loc_SrcLoc colonLoc;$/;"	v
colonLoc	$C2_ROOT/parser/ast_builder.c2	/^                                                  colonLoc,$/;"	v
colonLoc	$C2_ROOT/parser/c2_parser_expr.c2	/^                                                     colonLoc,$/;"	v
color	$C2_ROOT/ast/module.c2	/^import color;$/;"	v
color	$C2_ROOT/ast/qualtype.c2	/^import color;$/;"	v
color	$C2_ROOT/ast/symbol_table.c2	/^import color;$/;"	v
color	$C2_ROOT/ast/type.c2	/^import color;$/;"	v
color	$C2_ROOT/ast/utils.c2	/^import color;$/;"	v
color	$C2_ROOT/ast_utils/color.c2	/^module color;$/;"	v
color	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void Buf.color(Buf* buf, const char* color) {$/;"	f
color	$C2_ROOT/common/component.c2	/^import color;$/;"	v
color	$C2_ROOT/common/diagnostics.c2	/^import color;$/;"	v
color	$C2_ROOT/common/source_mgr.c2	/^import color;$/;"	v
color	$C2_ROOT/compiler/c2recipe_parser.c2	/^import color;$/;"	v
color	$C2_ROOT/compiler/compiler.c2	/^import color;$/;"	v
color	$C2_ROOT/compiler/compiler_libs.c2	/^import color;$/;"	v
color	$C2_ROOT/compiler/main.c2	/^import color;$/;"	v
color	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    u32 color;$/;"	v
color	$C2_ROOT/parser/c2_parser.c2	/^import color;$/;"	v
color1i	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void color1i(u32 rgba) @(cname="sdtx_color1i");$/;"	f
color3b	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void color3b(u8 r, u8 g, u8 b) @(cname="sdtx_color3b");$/;"	f
color3b	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn u32 color3b(u8 r, u8 g, u8 b) @(cname="sshape_color_3b");$/;"	f
color3f	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void color3f(f32 r, f32 g, f32 b) @(cname="sdtx_color3f");$/;"	f
color3f	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn u32 color3f(f32 r, f32 g, f32 b) @(cname="sshape_color_3f");$/;"	f
color4b	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void color4b(u8 r, u8 g, u8 b, u8 a) @(cname="sdtx_color4b");$/;"	f
color4b	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn u32 color4b(u8 r, u8 g, u8 b, u8 a) @(cname="sshape_color_4b");$/;"	f
color4f	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void color4f(f32 r, f32 g, f32 b, f32 a) @(cname="sdtx_color4f");$/;"	f
color4f	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn u32 color4f(f32 r, f32 g, f32 b, f32 a) @(cname="sshape_color_4f");$/;"	f
colorFormat	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn i32 colorFormat() @(cname="sapp_color_format");$/;"	f
colorVertexAttrState	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn VertexAttrState colorVertexAttrState() @(cname="sshape_color_vertex_attr_state");$/;"	f
color_Bblue	$C2_ROOT/bootstrap/bootstrap.c	/^static const char* ir_col_Symbol = color_Bblue;$/;"	v
color_Bcyan	$C2_ROOT/bootstrap/bootstrap.c	/^static const char* ir_col_Slot = color_Bcyan;$/;"	v
color_Bgreen	$C2_ROOT/bootstrap/bootstrap.c	/^static const char* ir_col_Temp = color_Bgreen;$/;"	v
color_Blue	$C2_ROOT/bootstrap/bootstrap.c	/^static const char* ast_col_Attr = color_Blue;$/;"	v
color_Bmagenta	$C2_ROOT/bootstrap/bootstrap.c	/^static const char* ir_col_Attr = color_Bmagenta;$/;"	v
color_Bred	$C2_ROOT/bootstrap/bootstrap.c	/^static const char* ir_col_PseudoInstr = color_Bred;$/;"	v
color_Cyan	$C2_ROOT/bootstrap/bootstrap.c	/^static const char* ir_col_Block = color_Cyan;$/;"	v
color_Green	$C2_ROOT/bootstrap/bootstrap.c	/^static const char* ir_col_Type = color_Green;$/;"	v
color_Grey	$C2_ROOT/bootstrap/bootstrap.c	/^static const char* ir_col_Comment = color_Grey;$/;"	v
color_Magenta	$C2_ROOT/bootstrap/bootstrap.c	/^static const char* ir_col_Value = color_Magenta;$/;"	v
color_Normal	$C2_ROOT/bootstrap/bootstrap.c	/^static const char* ir_col_Instr = color_Normal;$/;"	v
color_Red	$C2_ROOT/bootstrap/bootstrap.c	/^static const char* ast_col_Error = color_Red;$/;"	v
color_White	$C2_ROOT/bootstrap/bootstrap.c	/^static const char* ir_col_Name = color_White;$/;"	v
color_Yellow	$C2_ROOT/bootstrap/bootstrap.c	/^static const char* ir_col_Unknown = color_Yellow;$/;"	v
color_attachment	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool color_attachment;$/;"	v
color_count	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 color_count;$/;"	v
color_format	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    PixelFormat color_format;$/;"	v
color_format	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    PixelFormat color_format;$/;"	v
color_format	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    PixelFormat color_format;$/;"	v
color_output	$C2_ROOT/plugins/unit_test2.c2	/^bool color_output;$/;"	v
color_print	$C2_ROOT/plugins/unit_test2.c2	/^fn void color_print(const char* color, const char* text) {$/;"	f
colors	$C2_ROOT/ast_utils/string_buffer.c2	/^    buf.colors = colors;$/;"	v
colors	$C2_ROOT/bootstrap/bootstrap.c	/^   buf->colors = colors;$/;"	v
colors	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Color* colors;$/;"	v
colors	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    View[8] colors;$/;"	v
column	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t column;$/;"	v
column	$C2_ROOT/common/diagnostics.c2	/^                range_start_col = startLoc.column;$/;"	v
column	$C2_ROOT/common/source_mgr.c2	/^    u32 column;$/;"	v
column	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    u32 column;$/;"	v
column	$C2_ROOT/generator/c/c_generator_trace.c2	/^    u8 column;$/;"	v
column	$C2_ROOT/libs/c2/c2_trace_tables.c2i	/^    u8 column;$/;"	v
column	$C2_ROOT/plugins/refs_generator.c2	/^    u32 column;$/;"	v
combineConstantFlags	$C2_ROOT/ast/expr.c2	/^public fn void Expr.combineConstantFlags(Expr* e, const Expr* lhs, const Expr* rhs) {$/;"	f
commands_full	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    bool commands_full;$/;"	v
commit	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void commit() @(cname="sg_commit");$/;"	f
comp	$C2_ROOT/analyser/module_sorter.c2	/^    component.Component* comp;$/;"	v
comp	$C2_ROOT/bootstrap/bootstrap.c	/^   component_Component* comp;$/;"	v
comp	$C2_ROOT/compiler/compiler_libs.c2	/^    c.current = comp;$/;"	v
comp	$C2_ROOT/parser/ast_builder.c2	/^    b.comp = comp;$/;"	v
comp_opts	$C2_ROOT/bootstrap/bootstrap.c	/^   compiler_Options comp_opts;$/;"	v
comp_opts	$C2_ROOT/compiler/main.c2	/^    compiler.Options comp_opts;$/;"	v
compare	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int compare(State *L, c_int idx1, c_int idx2, c_int op) @(cname="lua_compare");$/;"	f
compare	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    CompareFunc compare;$/;"	v
compare_word	$C2_ROOT/parser/c2_tokenizer.c2	/^fn bool compare_word(const char* cur, const char* expect) {$/;"	f
compiler	$C2_ROOT/compiler/compiler.c2	/^module compiler;$/;"	v
compiler	$C2_ROOT/compiler/compiler_libs.c2	/^module compiler;$/;"	v
compiler	$C2_ROOT/compiler/main.c2	/^import compiler;$/;"	v
compiler_BeginTargetFn	$C2_ROOT/bootstrap/bootstrap.c	/^   compiler_BeginTargetFn start_target;$/;"	v
compiler_Compiler	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct compiler_Compiler_ compiler_Compiler;$/;"	v
compiler_Compiler_add_source	$C2_ROOT/bootstrap/bootstrap.c	/^   info->addSource = compiler_Compiler_add_source;$/;"	v
compiler_Compiler_register_attr	$C2_ROOT/bootstrap/bootstrap.c	/^   info->register_attr = compiler_Compiler_register_attr;$/;"	v
compiler_Options	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct compiler_Options_ compiler_Options;$/;"	v
compiler_PluginFn	$C2_ROOT/bootstrap/bootstrap.c	/^   compiler_PluginFn end_target;$/;"	v
compiler_PluginHandler	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct compiler_PluginHandler_ compiler_PluginHandler;$/;"	v
complete	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^public fn const char* Tree.complete(Tree* t, const char* text) @(unused) {$/;"	f
complexity	$C2_ROOT/ast/ast_evaluator.c2	/^    u32 complexity;$/;"	v
complexity	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t complexity;$/;"	v
component	$C2_ROOT/analyser/module_sorter.c2	/^import component;$/;"	v
component	$C2_ROOT/common/component.c2	/^module component;$/;"	v
component	$C2_ROOT/common/manifest_writer.c2	/^import component;$/;"	v
component	$C2_ROOT/compiler/compiler.c2	/^import component;$/;"	v
component	$C2_ROOT/compiler/manifest.c2	/^import component;$/;"	v
component	$C2_ROOT/generator/c/c_generator.c2	/^import component;$/;"	v
component	$C2_ROOT/generator/c/c_generator_special.c2	/^import component;$/;"	v
component	$C2_ROOT/generator/c2i/c2i_generator.c2	/^import component;$/;"	v
component	$C2_ROOT/generator/generator_utils.c2	/^import component;$/;"	v
component	$C2_ROOT/generator/ir/ir_generator.c2	/^import component;$/;"	v
component	$C2_ROOT/parser/ast_builder.c2	/^import component;$/;"	v
component	$C2_ROOT/plugins/deps_generator.c2	/^import component;$/;"	v
component	$C2_ROOT/plugins/git_version_plugin.c2	/^import component;$/;"	v
component	$C2_ROOT/plugins/plugin_info.c2	/^import component;$/;"	v
component	$C2_ROOT/plugins/refs_generator.c2	/^import component;$/;"	v
component_Component	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct component_Component_ component_Component;$/;"	v
component_Kind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t component_Kind;$/;"	v
component_Kind_DynamicLibrary	$C2_ROOT/bootstrap/bootstrap.c	/^   component_Kind_DynamicLibrary,$/;"	v
component_Kind_Executable	$C2_ROOT/bootstrap/bootstrap.c	/^   return component_Kind_Executable;$/;"	v
component_Kind_ExternalDynamic	$C2_ROOT/bootstrap/bootstrap.c	/^   component_Kind_ExternalDynamic,$/;"	v
component_Kind_ExternalStatic	$C2_ROOT/bootstrap/bootstrap.c	/^   component_Kind_ExternalStatic,$/;"	v
component_Kind_Image	$C2_ROOT/bootstrap/bootstrap.c	/^   component_Kind_Image,$/;"	v
component_Kind_Internal	$C2_ROOT/bootstrap/bootstrap.c	/^   component_Kind_Internal,$/;"	v
component_Kind_StaticLibrary	$C2_ROOT/bootstrap/bootstrap.c	/^   component_Kind_StaticLibrary,$/;"	v
component_List	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct component_List_ component_List;$/;"	v
component_sorter	$C2_ROOT/common/component_sorter.c2	/^module component_sorter;$/;"	v
component_sorter	$C2_ROOT/compiler/compiler_libs.c2	/^import component_sorter;$/;"	v
components	$C2_ROOT/bootstrap/bootstrap.c	/^   return l->components;$/;"	v
components	$C2_ROOT/common/component.c2	/^    return l.components;$/;"	v
components	$C2_ROOT/compiler/compiler.c2	/^    info.components = &c.components;$/;"	v
components	$C2_ROOT/plugins/plugin_info.c2	/^    component.List* components;$/;"	v
compoundStmtBits	$C2_ROOT/ast/stmt.c2	/^        CompoundStmtBits compoundStmtBits;$/;"	v
compoundStmtBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_CompoundStmtBits compoundStmtBits;$/;"	v
compressed	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool compressed;$/;"	v
comps2	$C2_ROOT/bootstrap/bootstrap.c	/^   l->components = comps2;$/;"	v
comps2	$C2_ROOT/common/component.c2	/^    l.components = comps2;$/;"	v
compute	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool compute;$/;"	v
compute_func	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ShaderFunction compute_func;$/;"	v
compute_pipeline	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* compute_pipeline;$/;"	v
concat	$C2_ROOT/libs/lua/lua.c2i	/^fn void concat(State *L, c_int n) @(cname="lua_concat");$/;"	f
cond	$C2_ROOT/analyser/module_analyser_stmt.c2	/^        if (cond.isExpr()) return (Expr*)cond;$/;"	v
cond	$C2_ROOT/analyser/module_analyser_switch.c2	/^        IdentifierExpr* id = (IdentifierExpr*)cond;$/;"	v
cond	$C2_ROOT/ast/ast_evaluator.c2	/^        e = (Expr*)cond;$/;"	v
cond	$C2_ROOT/ast/conditional_operator.c2	/^    return e.cond;$/;"	v
cond	$C2_ROOT/ast/for_stmt.c2	/^    s.cond = cond;$/;"	v
cond	$C2_ROOT/ast/if_stmt.c2	/^    s.cond = cond;$/;"	v
cond	$C2_ROOT/ast/switch_stmt.c2	/^    s.cond = cond;$/;"	v
cond	$C2_ROOT/ast/while_stmt.c2	/^    s.cond = cond;$/;"	v
cond	$C2_ROOT/bootstrap/bootstrap.c	/^   s->cond = cond;$/;"	v
cond	$C2_ROOT/generator/c/c_generator_stmt.c2	/^            DeclStmt* ds = (DeclStmt*)cond;$/;"	v
cond	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^    Expr* e = (Expr*)cond;$/;"	v
cond	$C2_ROOT/parser/ast_builder.c2	/^                                                  cond,$/;"	v
cond_str	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^    ExprRef cond_str;$/;"	v
connect	$C2_ROOT/libs/libc/sys_socket.c2i	/^fn c_int connect(c_int sockfd, const Sockaddr* addr, u32 addrlen);$/;"	f
console	$C2_ROOT/common/console.c2	/^module console;$/;"	v
console	$C2_ROOT/common/manifest_writer.c2	/^import console;$/;"	v
console	$C2_ROOT/common/target_info.c2	/^import console;$/;"	v
console	$C2_ROOT/compiler/compiler.c2	/^import console;$/;"	v
console	$C2_ROOT/compiler/compiler_libs.c2	/^import console;$/;"	v
console	$C2_ROOT/compiler/main.c2	/^import console;$/;"	v
console	$C2_ROOT/compiler/manifest.c2	/^import console;$/;"	v
console	$C2_ROOT/compiler/plugin_mgr.c2	/^import console;$/;"	v
console	$C2_ROOT/generator/c/c_generator.c2	/^import console;$/;"	v
console	$C2_ROOT/generator/c/c_generator_special.c2	/^import console;$/;"	v
console	$C2_ROOT/generator/c2i/c2i_generator.c2	/^import console;$/;"	v
console	$C2_ROOT/generator/ir/ir_generator.c2	/^import console;$/;"	v
console	$C2_ROOT/plugins/deps_generator_plugin.c2	/^import console;$/;"	v
console	$C2_ROOT/plugins/git_version_plugin.c2	/^import console;$/;"	v
console	$C2_ROOT/plugins/refs_generator.c2	/^import console;$/;"	v
console	$C2_ROOT/plugins/refs_generator_plugin.c2	/^import console;$/;"	v
console	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^import console;$/;"	v
console	$C2_ROOT/plugins/unit_test_plugin.c2	/^import console;$/;"	v
console_debug	$C2_ROOT/bootstrap/bootstrap.c	/^   m->console_debug = console_debug;$/;"	v
console_debug	$C2_ROOT/compiler/plugin_mgr.c2	/^    m.console_debug = console_debug;$/;"	v
console_show_debug	$C2_ROOT/bootstrap/bootstrap.c	/^   console_show_debug = enable;$/;"	v
console_show_timing	$C2_ROOT/bootstrap/bootstrap.c	/^   console_show_timing = enable;$/;"	v
console_timing	$C2_ROOT/bootstrap/bootstrap.c	/^   m->console_timing = console_timing;$/;"	v
console_timing	$C2_ROOT/compiler/plugin_mgr.c2	/^    m.console_timing = console_timing;$/;"	v
const_loc	$C2_ROOT/parser/c2_parser_type.c2	/^                                                                     const_loc,$/;"	v
constants	$C2_ROOT/analyser/scope.c2	/^import constants;$/;"	v
constants	$C2_ROOT/ast/enum_type_decl.c2	/^    return d.constants;$/;"	v
constants	$C2_ROOT/ast_utils/constants.c2	/^module constants;$/;"	v
constants	$C2_ROOT/common/utils.c2	/^import constants;$/;"	v
constants	$C2_ROOT/compiler/compiler.c2	/^import constants;$/;"	v
constants	$C2_ROOT/compiler/compiler_libs.c2	/^import constants;$/;"	v
constants	$C2_ROOT/compiler/main.c2	/^import constants;$/;"	v
constants	$C2_ROOT/generator/c/c_generator.c2	/^import constants;$/;"	v
constants	$C2_ROOT/generator/ir/ir_generator.c2	/^import constants;$/;"	v
constants	$C2_ROOT/ir/constant_list.c2	/^    Constant* constants;$/;"	v
constants	$C2_ROOT/ir/context.c2	/^    ConstantList constants;$/;"	v
constants	$C2_ROOT/ir/function_info.c2	/^import constants;$/;"	v
constants	$C2_ROOT/parser/ast_builder.c2	/^                                          constants,$/;"	v
constants	$C2_ROOT/parser/c2_parser.c2	/^import constants;$/;"	v
constants	$C2_ROOT/parser/c2_parser_expr.c2	/^import constants;$/;"	v
constants	$C2_ROOT/parser/c2_tokenizer.c2	/^import constants;$/;"	v
constants	$C2_ROOT/plugins/refs_generator_plugin.c2	/^import constants;$/;"	v
constants2	$C2_ROOT/bootstrap/bootstrap.c	/^      l->constants = constants2;$/;"	v
constants2	$C2_ROOT/ir/constant_list.c2	/^        l.constants = constants2;$/;"	v
constants_buildfile_name	$C2_ROOT/bootstrap/bootstrap.c	/^   return constants_buildfile_name;$/;"	v
constants_output_dir	$C2_ROOT/bootstrap/bootstrap.c	/^   const char* output_base = constants_output_dir;$/;"	v
constraints	$C2_ROOT/ast/asm_stmt.c2	/^    u8* tail = (u8*)s.constraints;$/;"	v
constraints	$C2_ROOT/parser/ast_builder.c2	/^                                      constraints,$/;"	v
consumeEvent	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void consumeEvent() @(cname="sapp_consume_event");$/;"	f
consumeSemicolon	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.consumeSemicolon(Parser* p, bool need_semi) {$/;"	f
consumeToken	$C2_ROOT/common/yaml/yaml_parser.c2	/^fn void Parser.consumeToken(Parser* p) {$/;"	f
consumeToken	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Parser.consumeToken(Parser* p) {$/;"	f
consumeToken	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.consumeToken(Parser* p) {$/;"	f
cont	$C2_ROOT/ast/ast_evaluator.c2	/^    Cont cont;$/;"	v
cont	$C2_ROOT/ast/for_stmt.c2	/^    s.cont = cont;$/;"	v
cont	$C2_ROOT/bootstrap/bootstrap.c	/^   s->cont = cont;$/;"	v
container	$C2_ROOT/analyser/size_analyser.c2	/^               - it would overflow its base type container and there is no packing$/;"	t
contains	$C2_ROOT/common/library_list.c2	/^public fn bool List.contains(const List* l, u32 name) {$/;"	f
contains	$C2_ROOT/common/module_list.c2	/^public fn bool List.contains(const List* l, const ast.Module* mod) {$/;"	f
contains	$C2_ROOT/common/string_list.c2	/^public fn bool List.contains(const List* l, const char* name) {$/;"	f
contains	$C2_ROOT/ir/live_map.c2	/^public fn bool Iter.contains(const Iter* iter, u16 value) {$/;"	f
contains	$C2_ROOT/ir/phi_list.c2	/^fn bool PhiClauses.contains(const PhiClauses* c, Ref ref) {$/;"	f
contains_idx	$C2_ROOT/common/string_list.c2	/^public fn bool List.contains_idx(const List* l, u32 idx) {$/;"	f
contents	$C2_ROOT/bootstrap/bootstrap.c	/^   f->contents = contents;$/;"	v
contents	$C2_ROOT/common/file/file_utils.c2	/^    void* contents;$/;"	v
contents	$C2_ROOT/common/file/reader.c2	/^    void* data = file.contents;$/;"	v
contents_size	$C2_ROOT/common/file/file_utils.c2	/^    u32 contents_size;$/;"	v
contents_size	$C2_ROOT/common/file/reader.c2	/^    return file.contents_size;$/;"	v
context	$C2_ROOT/analyser/module_analyser.c2	/^    ma.context = context;$/;"	v
context	$C2_ROOT/analyser/module_analyser_call.c2	/^    FormatAnalyser* fa = context;$/;"	v
context	$C2_ROOT/ast/pointer_pool.c2	/^    ast_context.Context* context;$/;"	v
context	$C2_ROOT/ast/string_type_pool.c2	/^    ast_context.Context* context;$/;"	v
context	$C2_ROOT/bootstrap/bootstrap.c	/^   module_analyser_FormatAnalyser* fa = context;$/;"	v
context	$C2_ROOT/common/component.c2	/^    c.context = context;$/;"	v
context	$C2_ROOT/compiler/compiler.c2	/^    info.context = c.context;$/;"	v
context	$C2_ROOT/generator/c/c_generator_expr.c2	/^    FormatChanger* fc = context;$/;"	v
context	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    ContextDesc context;$/;"	v
context	$C2_ROOT/parser/ast_builder.c2	/^    b.context = context;$/;"	v
context	$C2_ROOT/plugins/plugin_info.c2	/^    ast_context.Context* context;$/;"	v
contextDraw	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void contextDraw(Context ctx) @(cname="sdtx_context_draw");$/;"	f
contextDraw	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void contextDraw(Context ctx) @(cname="sgl_context_draw");$/;"	f
contextDrawLayer	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void contextDrawLayer(Context ctx, i32 layer_id) @(cname="sdtx_context_draw_layer");$/;"	f
contextDrawLayer	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void contextDrawLayer(Context ctx, i32 layer_id) @(cname="sgl_context_draw_layer");$/;"	f
contextError	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn Error contextError(Context ctx) @(cname="sgl_context_error");$/;"	f
contextMakePipeline	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn Pipeline contextMakePipeline(Context ctx, PipelineDesc* desc) @(cname="sgl_context_make_pipel/;"	f
context_pool_size	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    i32 context_pool_size;$/;"	v
context_pool_size	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    i32 context_pool_size;$/;"	v
continue	$C2_ROOT/analyser/module_analyser_call.c2	/^            continue;$/;"	v
continue	$C2_ROOT/analyser/module_analyser_function.c2	/^        if (res.isInvalid()) continue;$/;"	v
continue	$C2_ROOT/analyser/module_analyser_init.c2	/^            continue;$/;"	v
continue	$C2_ROOT/analyser/module_analyser_switch.c2	/^            continue;$/;"	v
continue	$C2_ROOT/analyser/scope.c2	/^        if (!d) continue;$/;"	v
continue	$C2_ROOT/analyser_utils/printf_utils.c2	/^            continue;$/;"	v
continue	$C2_ROOT/bootstrap/bootstrap.c	/^      if (ir_Instr_isLoadStore(ii)) continue;$/;"	v
continue	$C2_ROOT/common/file/file_utils.c2	/^        if (c == '\/' && (p[-1] == '\/' || *path == '\\0')) continue;$/;"	v
continue	$C2_ROOT/common/source_mgr.c2	/^            continue;$/;"	v
continue	$C2_ROOT/common/yaml/yaml_iterator.c2	/^                continue;$/;"	v
continue	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^            continue;$/;"	v
continue	$C2_ROOT/compiler/compiler_libs.c2	/^        if (c.has_component(depname)) continue;$/;"	v
continue	$C2_ROOT/compiler/main.c2	/^            if (!c.opts.targets.contains_idx(target_idx)) continue;$/;"	v
continue	$C2_ROOT/compiler/plugin_mgr.c2	/^            continue;$/;"	v
continue	$C2_ROOT/generator/c/c_generator.c2	/^            continue;$/;"	v
continue	$C2_ROOT/generator/c/c_generator_call.c2	/^                continue;$/;"	v
continue	$C2_ROOT/generator/c/c_generator_special.c2	/^            if (!d.isFunction() && !d.isVariable()) continue;$/;"	v
continue	$C2_ROOT/generator/c/c_generator_stmt.c2	/^                continue;$/;"	v
continue	$C2_ROOT/generator/c2_trace.c2	/^        while (p[pos] && p[pos++] != ';') continue;$/;"	v
continue	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^            continue;$/;"	v
continue	$C2_ROOT/ir/context.c2	/^            continue;$/;"	v
continue	$C2_ROOT/ir/interference_graph.c2	/^        if (g.register_map[v] != VAR_TODO) continue;$/;"	v
continue	$C2_ROOT/ir/register_alloc.c2	/^        if (!ref.isConstant()) continue;$/;"	v
continue	$C2_ROOT/ir/slot_collector.c2	/^            if (found) continue;$/;"	v
continue	$C2_ROOT/ir/slot_values.c2	/^        if (r.isNone()) continue;$/;"	v
continue	$C2_ROOT/ir/slot_writes_map.c2	/^        if (iter.count == 0) continue;$/;"	v
continue	$C2_ROOT/ir/ssa.c2	/^        if (!instr.isArithmetic()) continue;$/;"	v
continue	$C2_ROOT/ir_examples/while.c2	/^        if (i == 3) continue;$/;"	v
continue	$C2_ROOT/parser/c2_parser_expr.c2	/^            continue;$/;"	v
continue	$C2_ROOT/parser/c2_parser_type.c2	/^            continue;$/;"	v
continue	$C2_ROOT/parser/c2_tokenizer.c2	/^            if (i < count) continue;$/;"	v
continue	$C2_ROOT/parser/keywords.c2	/^            continue;$/;"	v
continue	$C2_ROOT/plugins/deps_generator.c2	/^        if (gen.is_external && !gen.show_externals) continue;$/;"	v
continue_block	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t continue_block;$/;"	v
continue_block	$C2_ROOT/generator/ir/ir_generator.c2	/^    u32 continue_block;$/;"	v
conv	$C2_ROOT/analyser/module_analyser.c2	/^import conversion_checker as conv;$/;"	v
conversion	$C2_ROOT/analyser/conversion_checker.c2	/^        return c.conversionError("invalid type conversion from");$/;"	t
conversion	$C2_ROOT/ast/member_expr.c2	/^    return (MemberConversion)e.base.base.memberExprBits.conversion;$/;"	v
conversion	$C2_ROOT/bootstrap/bootstrap.c	/^   lookup_table_Table conversion;$/;"	v
conversion	$C2_ROOT/ir/context.c2	/^    ir_lookup_table.Table conversion;$/;"	v
conversionError	$C2_ROOT/analyser/conversion_checker.c2	/^fn bool Checker.conversionError(Checker* c, const char* msg) {$/;"	f
conversion_checker	$C2_ROOT/analyser/conversion_checker.c2	/^module conversion_checker;$/;"	v
conversion_checker	$C2_ROOT/analyser/conversion_checker_expr.c2	/^module conversion_checker;$/;"	v
conversion_checker	$C2_ROOT/analyser/module_analyser_binop.c2	/^import conversion_checker;$/;"	v
conversion_checker	$C2_ROOT/analyser/module_analyser_expr.c2	/^import conversion_checker;$/;"	v
conversion_checker_Checker	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct conversion_checker_Checker_ conversion_checker_Checker;$/;"	v
conversion_checker_ExprWidth	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct conversion_checker_ExprWidth_ conversion_checker_ExprWidth;$/;"	v
convertTokenToUnaryOpcode	$C2_ROOT/parser/c2_parser_expr.c2	/^fn UnaryOpcode convertTokenToUnaryOpcode(Kind kind) {$/;"	f
convert_fn	$C2_ROOT/ir/context.c2	/^fn void Tools.convert_fn(Tools* t) {$/;"	f
convert_functions	$C2_ROOT/ir/context.c2	/^public fn void Context.convert_functions(Context* c) {$/;"	f
convert_switch_linear	$C2_ROOT/ir/switch.c2	/^fn void Tools.convert_switch_linear(Tools* t, FunctionInfo* fi, u32 blk_id, index_list.List* blo/;"	f
convert_switches	$C2_ROOT/ir/switch.c2	/^fn bool Tools.convert_switches(Tools* t) {$/;"	f
copies	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_CopyList copies;$/;"	v
copies	$C2_ROOT/ir/context.c2	/^    CopyList copies;$/;"	v
copies	$C2_ROOT/ir/copy_list.c2	/^    CopyInfo* copies;$/;"	v
copies2	$C2_ROOT/bootstrap/bootstrap.c	/^   l->copies = copies2;$/;"	v
copies2	$C2_ROOT/ir/copy_list.c2	/^    l.copies = copies2;$/;"	v
copy	$C2_ROOT/ast_utils/string_buffer.c2	/^            copy = 0;$/;"	v
copy	$C2_ROOT/bootstrap/bootstrap.c	/^      if (copy) ref = *copy;$/;"	v
copy	$C2_ROOT/ir/block_list.c2	/^public fn BlockId BlockList.copy(BlockList* l, const Block* b2) {$/;"	f
copy	$C2_ROOT/ir/copy_list.c2	/^        if (copy) ref = *copy;$/;"	v
copy	$C2_ROOT/ir/instr.c2	/^public fn void Instr.copy(Instr* i, const Instr* i2) {$/;"	f
copy	$C2_ROOT/ir/ssa.c2	/^                    instr.args[1] = *copy;$/;"	v
copy	$C2_ROOT/libs/lua/lua.c2i	/^fn void copy(State* L, c_int fromidx, c_int toidx) @(cname="lua_copy");$/;"	f
copy	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Renderer.copy(Renderer* renderer, Texture* texture, const Rect* src, const Rect* dst) @/;"	f
copyConstantFlags	$C2_ROOT/ast/expr.c2	/^public fn void Expr.copyConstantFlags(Expr* e, const Expr* other) {$/;"	f
copyCtcFlags	$C2_ROOT/ast/expr.c2	/^public fn void Expr.copyCtcFlags(Expr* e, const Expr* other) {$/;"	f
copyEx	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Renderer.copyEx(Renderer* renderer,$/;"	f
copyQuals	$C2_ROOT/ast/qualtype.c2	/^public fn void QualType.copyQuals(QualType* qt, QualType other) {$/;"	f
copyValType	$C2_ROOT/ast/expr.c2	/^public fn void Expr.copyValType(Expr* e, const Expr* other) {$/;"	f
copy_dirname	$C2_ROOT/common/file/file_utils.c2	/^fn usize copy_dirname(char *buf, usize size, const char* dir) {$/;"	f
copy_node_idx	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^        *parent_idx = copy_node_idx;$/;"	v
copysign	$C2_ROOT/libs/math/math.c2i	/^fn c_double copysign(c_double, c_double);$/;"	f
copysignf	$C2_ROOT/libs/math/math.c2i	/^fn c_float copysignf(c_float, c_float);$/;"	f
cos	$C2_ROOT/libs/math/math.c2i	/^fn c_double cos(c_double);$/;"	f
cosf	$C2_ROOT/libs/math/math.c2i	/^fn c_float cosf(c_float);$/;"	f
cosh	$C2_ROOT/libs/math/math.c2i	/^fn c_double cosh(c_double);$/;"	f
coshf	$C2_ROOT/libs/math/math.c2i	/^fn c_float coshf(c_float);$/;"	f
couldBeTemplateCall	$C2_ROOT/bootstrap/bootstrap.c	/^      couldBeTemplateCall = true;$/;"	v
couldBeTemplateCall	$C2_ROOT/parser/c2_parser_expr.c2	/^        couldBeTemplateCall = true;$/;"	v
count	$C2_ROOT/analyser/incr_array_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/analyser/init_checker.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/analyser/label_vector.c2	/^    u32 index = v.count;$/;"	v
count	$C2_ROOT/analyser/module_sorter.c2	/^    s.num_mods = count;$/;"	v
count	$C2_ROOT/analyser/name_vector.c2	/^    u32 index = v.count;$/;"	v
count	$C2_ROOT/analyser/struct_func_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ast/array_value_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ast/compound_stmt.c2	/^    s.base.compoundStmtBits.count = count;$/;"	v
count	$C2_ROOT/ast/decl_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ast/decl_stmt.c2	/^    u32 size = sizeof(DeclStmt) + sizeof(VarDecl*) * count;$/;"	v
count	$C2_ROOT/ast/enum_type_decl.c2	/^    d.num_enum_functions = count;$/;"	v
count	$C2_ROOT/ast/expr_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ast/function_decl_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ast/import_decl_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ast/instance_table.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ast/pointer_pool.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ast/static_assert_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ast/statistics.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ast/string_type_pool.c2	/^    u32 idx = p.count;$/;"	v
count	$C2_ROOT/ast/struct_type_decl.c2	/^    return count;$/;"	v
count	$C2_ROOT/ast_utils/attr_table.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/bootstrap/bootstrap.c	/^   v->start = v->count;$/;"	v
count	$C2_ROOT/common/attr_handler.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/common/build_target.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/common/component.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/common/dsm_sorter.c2	/^    u32 size = count;$/;"	v
count	$C2_ROOT/common/index_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/common/library_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/common/linked_list.c2	/^    return count;$/;"	v
count	$C2_ROOT/common/string_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/common/value_maplist.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/generator/c/c_generator_trace.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/generator/c2_trace.c2	/^        u32 count2 = cp.count;$/;"	v
count	$C2_ROOT/generator/c2refs.c2	/^    u32 start = f.count;$/;"	v
count	$C2_ROOT/generator/ir/array_init_sorter.c2	/^    u32 idx = s.count;$/;"	v
count	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/generator/ir/ref_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^    return count;$/;"	v
count	$C2_ROOT/ir/block.c2	/^    b.instr.count = count;$/;"	v
count	$C2_ROOT/ir/block_list.c2	/^    u32 total = l1.count + l2.count;$/;"	v
count	$C2_ROOT/ir/case_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ir/constant_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ir/copy_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ir/init_value_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ir/inserter.c2	/^    u32 instr_idx =  ins.new_instr_idx + ins.count;$/;"	v
count	$C2_ROOT/ir/instr_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ir/interference_graph.c2	/^    u32 idx = r.start + r.count;$/;"	v
count	$C2_ROOT/ir/live_map.c2	/^    u32 idx = r.start + r.count;$/;"	v
count	$C2_ROOT/ir/phi_list.c2	/^    u32 start = l.count;$/;"	v
count	$C2_ROOT/ir/print.c2	/^        u32 last = i_idx.start + i_idx.count;$/;"	v
count	$C2_ROOT/ir/register_alloc.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ir/rev_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ir/slot_writes_map.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ir/ssa.c2	/^    u32 rev_end = revs.start + revs.count;$/;"	v
count	$C2_ROOT/ir/symbol_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ir/types.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ir/usage_counter.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/ir/work_queue.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/libs/c2/c2_trace_tables.c2i	/^    u32 count;$/;"	v
count	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 count;$/;"	v
count	$C2_ROOT/parser/c2_tokenizer.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/parser/case_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/parser/expr_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/parser/stmt_list.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/plugins/deps_generator.c2	/^    u32 count;$/;"	v
count	$C2_ROOT/plugins/refs_generator.c2	/^    u32 count;$/;"	v
count_word	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^fn void count_word(void* arg, const char* text, u32 value) {$/;"	f
count_words	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^fn u32 Tree.count_words(const Tree* t) {$/;"	f
counts	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t* counts;$/;"	v
counts	$C2_ROOT/ir/usage_counter.c2	/^    u8* counts;$/;"	v
cp	$C2_ROOT/common/source_mgr.c2	/^    return cp;$/;"	v
cp	$C2_ROOT/ir_examples/arith.c2	/^    i32 i = *cp;$/;"	v
cp	$C2_ROOT/plugins/deps_generator.c2	/^        const char* start = cp;$/;"	v
cq	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    Cq cq;$/;"	v
cq_advance	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void Ring.cq_advance(Ring *ring, u32 nr) @(cname="io_uring_cq_advance")$/;"	f
cq_entries	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32 cq_entries;$/;"	v
cq_off	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    CqringOffsets cq_off;$/;"	v
cqe_seen	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void Ring.cqe_seen(Ring* ring, Cqe* cqe) @(cname="io_uring_cqe_seen")$/;"	f
cqes	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32 cqes;$/;"	v
create	$C2_ROOT/analyser/module_analyser.c2	/^public fn Analyser* create(diagnostics.Diags* diags,$/;"	f
create	$C2_ROOT/analyser/scope.c2	/^public fn Scope* create(module_list.List* allmodules,$/;"	f
create	$C2_ROOT/ast/alias_type.c2	/^fn AliasType* AliasType.create(ast_context.Context* c, AliasTypeDecl* decl) {$/;"	f
create	$C2_ROOT/ast/alias_type_decl.c2	/^public fn AliasTypeDecl* AliasTypeDecl.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/array_designated_init_expr.c2	/^public fn ArrayDesignatedInitExpr* ArrayDesignatedInitExpr.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/array_subscript_expr.c2	/^public fn ArraySubscriptExpr* ArraySubscriptExpr.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/array_type.c2	/^public fn ArrayType* ArrayType.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/array_value.c2	/^public fn ArrayValue* ArrayValue.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/asm_stmt.c2	/^public fn AsmStmt* AsmStmt.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/assert_stmt.c2	/^public fn AssertStmt* AssertStmt.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/ast.c2	/^fn AST* AST.create(string_pool.Pool* auxPool, u32 name, Module* mod, bool is_interface, bool is_/;"	f
create	$C2_ROOT/ast/binary_operator.c2	/^public fn BinaryOperator* BinaryOperator.create(ast_context.Context* c, SrcLoc loc, BinaryOpcode/;"	f
create	$C2_ROOT/ast/bitoffset_expr.c2	/^public fn BitOffsetExpr* BitOffsetExpr.create(ast_context.Context* c, SrcLoc loc, Expr* lhs, Exp/;"	f
create	$C2_ROOT/ast/boolean_literal.c2	/^public fn BooleanLiteral* BooleanLiteral.create(ast_context.Context* c, SrcLoc loc, bool val) {$/;"	f
create	$C2_ROOT/ast/break_stmt.c2	/^public fn BreakStmt* BreakStmt.create(ast_context.Context* c, SrcLoc loc) {$/;"	f
create	$C2_ROOT/ast/builtin_expr.c2	/^public fn BuiltinExpr* BuiltinExpr.create(ast_context.Context* c, SrcLoc loc, u32 src_len, Expr*/;"	f
create	$C2_ROOT/ast/builtin_type.c2	/^fn BuiltinType* BuiltinType.create(ast_context.Context* c, BuiltinKind kind) {$/;"	f
create	$C2_ROOT/ast/call_expr.c2	/^public fn CallExpr* CallExpr.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/char_literal.c2	/^public fn CharLiteral* CharLiteral.create(ast_context.Context* c, SrcLoc loc, u32 src_len, u8 va/;"	f
create	$C2_ROOT/ast/compound_stmt.c2	/^public fn CompoundStmt* CompoundStmt.create(ast_context.Context* c, SrcLoc endLoc, Stmt** stmts,/;"	f
create	$C2_ROOT/ast/conditional_operator.c2	/^public fn ConditionalOperator* ConditionalOperator.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/continue_stmt.c2	/^public fn ContinueStmt* ContinueStmt.create(ast_context.Context* c, SrcLoc loc) {$/;"	f
create	$C2_ROOT/ast/decl_stmt.c2	/^public fn DeclStmt* DeclStmt.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/enum_constant_decl.c2	/^public fn EnumConstantDecl* EnumConstantDecl.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/enum_type.c2	/^fn EnumType* EnumType.create(ast_context.Context* c, EnumTypeDecl* decl) {$/;"	f
create	$C2_ROOT/ast/enum_type_decl.c2	/^public fn EnumTypeDecl* EnumTypeDecl.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/explicit_cast_expr.c2	/^public fn ExplicitCastExpr* ExplicitCastExpr.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/fallthrough_stmt.c2	/^public fn FallthroughStmt* FallthroughStmt.create(ast_context.Context* c, SrcLoc loc) {$/;"	f
create	$C2_ROOT/ast/field_designated_init_expr.c2	/^public fn FieldDesignatedInitExpr* FieldDesignatedInitExpr.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/float_literal.c2	/^public fn FloatLiteral* FloatLiteral.create(ast_context.Context* c, SrcLoc loc, u32 src_len, f64/;"	f
create	$C2_ROOT/ast/for_stmt.c2	/^public fn ForStmt* ForStmt.create(ast_context.Context* c, SrcLoc loc, Stmt* init, Expr* cond, Ex/;"	f
create	$C2_ROOT/ast/function_decl.c2	/^public fn FunctionDecl* FunctionDecl.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/function_type.c2	/^fn FunctionType* FunctionType.create(ast_context.Context* c, FunctionDecl* decl) {$/;"	f
create	$C2_ROOT/ast/function_type_decl.c2	/^public fn FunctionTypeDecl* FunctionTypeDecl.create(ast_context.Context* c, FunctionDecl* func) /;"	f
create	$C2_ROOT/ast/goto_stmt.c2	/^public fn GotoStmt* GotoStmt.create(ast_context.Context* c, u32 name, SrcLoc loc) {$/;"	f
create	$C2_ROOT/ast/identifier_expr.c2	/^public fn IdentifierExpr* IdentifierExpr.create(ast_context.Context* c, SrcLoc loc, u32 name) {$/;"	f
create	$C2_ROOT/ast/if_stmt.c2	/^public fn IfStmt* IfStmt.create(ast_context.Context* c, SrcLoc loc, Stmt* cond, Stmt* then, Stmt/;"	f
create	$C2_ROOT/ast/implicit_cast_expr.c2	/^public fn ImplicitCastExpr* ImplicitCastExpr.create(ast_context.Context* c, SrcLoc loc, Implicit/;"	f
create	$C2_ROOT/ast/import_decl.c2	/^public fn ImportDecl* ImportDecl.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/init_list_expr.c2	/^public fn InitListExpr* InitListExpr.create(ast_context.Context* c, SrcLoc loc, SrcLoc endLoc, E/;"	f
create	$C2_ROOT/ast/integer_literal.c2	/^public fn IntegerLiteral* IntegerLiteral.create(ast_context.Context* c, SrcLoc loc, u32 src_len,/;"	f
create	$C2_ROOT/ast/label_stmt.c2	/^public fn LabelStmt* LabelStmt.create(ast_context.Context* c, u32 name, SrcLoc loc, Stmt *stmt) /;"	f
create	$C2_ROOT/ast/member_expr.c2	/^public fn MemberExpr* MemberExpr.create(ast_context.Context* c, Expr* base, const Ref* refs, u32/;"	f
create	$C2_ROOT/ast/module.c2	/^public fn Module* Module.create(ast_context.Context* c, u32 name_idx, bool is_external, bool is_/;"	f
create	$C2_ROOT/ast/module_type.c2	/^fn ModuleType* ModuleType.create(ast_context.Context* c, Module* mod) {$/;"	f
create	$C2_ROOT/ast/nil_expr.c2	/^public fn NilExpr* NilExpr.create(ast_context.Context* c, SrcLoc loc) {$/;"	f
create	$C2_ROOT/ast/paren_expr.c2	/^public fn ParenExpr* ParenExpr.create(ast_context.Context* c, SrcLoc loc, u32 src_len, Expr* inn/;"	f
create	$C2_ROOT/ast/pointer_type.c2	/^fn PointerType* PointerType.create(ast_context.Context* c, QualType inner) {$/;"	f
create	$C2_ROOT/ast/qualtype.c2	/^public fn QualType QualType.create(Type* t) {$/;"	f
create	$C2_ROOT/ast/range_expr.c2	/^public fn RangeExpr* RangeExpr.create(ast_context.Context* c, SrcLoc loc, Expr* lhs, Expr* rhs) /;"	f
create	$C2_ROOT/ast/return_stmt.c2	/^public fn ReturnStmt* ReturnStmt.create(ast_context.Context* c, SrcLoc loc, Expr* value) {$/;"	f
create	$C2_ROOT/ast/static_assert.c2	/^public fn StaticAssert* StaticAssert.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/string_literal.c2	/^public fn StringLiteral* StringLiteral.create(ast_context.Context* c, SrcLoc loc, u32 src_len, u/;"	f
create	$C2_ROOT/ast/struct_type.c2	/^fn StructType* StructType.create(ast_context.Context* c, StructTypeDecl* decl) {$/;"	f
create	$C2_ROOT/ast/struct_type_decl.c2	/^public fn StructTypeDecl* StructTypeDecl.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/switch_case.c2	/^public fn SwitchCase* SwitchCase.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/switch_stmt.c2	/^public fn SwitchStmt* SwitchStmt.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/type_expr.c2	/^public fn TypeExpr* TypeExpr.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/unary_operator.c2	/^public fn UnaryOperator* UnaryOperator.create(ast_context.Context* c, SrcLoc loc, UnaryOpcode ki/;"	f
create	$C2_ROOT/ast/var_decl.c2	/^public fn VarDecl* VarDecl.create(ast_context.Context* c,$/;"	f
create	$C2_ROOT/ast/while_stmt.c2	/^public fn WhileStmt* WhileStmt.create(ast_context.Context* c, SrcLoc loc,$/;"	f
create	$C2_ROOT/ast_utils/attr_table.c2	/^public fn Table* create() {$/;"	f
create	$C2_ROOT/ast_utils/context.c2	/^public fn Context* create(u32 blk_size) {$/;"	f
create	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn Buf* create(u32 capacity, bool use_colors, u32 indent_step) {$/;"	f
create	$C2_ROOT/ast_utils/string_pool.c2	/^public fn Pool* create(u32 data_capacity, u32 hash_size) {$/;"	f
create	$C2_ROOT/common/attr_handler.c2	/^public fn Handler* create(diagnostics.Diags* diags) {$/;"	f
create	$C2_ROOT/common/build_target.c2	/^public fn Target* create(u32 name_idx, SrcLoc loc, Kind kind, string_pool.Pool* pool) {$/;"	f
create	$C2_ROOT/common/component.c2	/^public fn Component* create(ast_context.Context* context,$/;"	f
create	$C2_ROOT/common/diagnostics.c2	/^public fn Diags* create(source_mgr.SourceMgr* sm, bool use_color, const utils.PathInfo* path_inf/;"	f
create	$C2_ROOT/common/source_mgr.c2	/^public fn SourceMgr* create(string_pool.Pool* pool) {$/;"	f
create	$C2_ROOT/common/yaml/yaml_parser.c2	/^public fn Parser* Parser.create() {$/;"	f
create	$C2_ROOT/compiler/c2recipe.c2	/^public fn Recipe* create(source_mgr.SourceMgr* sm, string_pool.Pool* pool) {$/;"	f
create	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn Set* Set.create(u32 name, SrcLoc loc, Set* next) {$/;"	f
create	$C2_ROOT/compiler/plugin_mgr.c2	/^public fn Mgr* create(string_pool.Pool* auxPool, bool console_timing, bool console_debug, bool n/;"	f
create	$C2_ROOT/generator/ast_visitor.c2	/^public fn Visitor* create(void* arg, OnRef on_ref) {$/;"	f
create	$C2_ROOT/generator/c/c_generator.c2	/^fn Fragment* Fragment.create() {$/;"	f
create	$C2_ROOT/generator/c2refs.c2	/^public fn Refs* Refs.create(u32 num_files) {$/;"	f
create	$C2_ROOT/generator/ir/array_init_sorter.c2	/^public fn Sorter create(u32 allocate, u32 array_size, u32 elem_size) {$/;"	f
create	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^public fn Tree* create(u32 initial_nodes, u32 initial_words) {$/;"	f
create	$C2_ROOT/ir/context.c2	/^public fn Context* create(bool print) {$/;"	f
create	$C2_ROOT/ir/function_info.c2	/^public fn FunctionInfo* FunctionInfo.create(u32 num_blks, u32 num_instr, u32 num_refs) {$/;"	f
create	$C2_ROOT/ir/inserter.c2	/^public fn void Inserter.create(Inserter* ins) {$/;"	f
create	$C2_ROOT/ir/interference_graph.c2	/^public fn InterferenceGraph* create(u32 max_elems, u16 num_variables) {$/;"	f
create	$C2_ROOT/ir/live_map.c2	/^public fn Map* create(u32 max_elems, u16 num_variables) {$/;"	f
create	$C2_ROOT/ir/rev_list.c2	/^public fn void RevList.create(RevList* r, u32 num_blocks) {$/;"	f
create	$C2_ROOT/ir/rpo.c2	/^public fn void Rpo.create(Rpo* rpo, const FunctionInfo* fi) {$/;"	f
create	$C2_ROOT/ir/slot_collector.c2	/^public fn void SlotCollector.create(SlotCollector* c) {$/;"	f
create	$C2_ROOT/ir/slot_values.c2	/^public fn void SlotValues.create(SlotValues* v) {$/;"	f
create	$C2_ROOT/ir/slot_writes_map.c2	/^public fn Map* create(u32 max_elems, u16 num_blocks) {$/;"	f
create	$C2_ROOT/ir/work_queue.c2	/^fn WorkQueue* WorkQueue.create() {$/;"	f
create	$C2_ROOT/ir_examples/struct_func.c2	/^fn A A.create(i32 y) {$/;"	f
create	$C2_ROOT/libs/pthread/pthread.c2i	/^fn c_int create(Pthread* __newthread,$/;"	f
create	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec4 Vec4.create(f32 x, f32 y, f32 z, f32 w) {$/;"	f
create	$C2_ROOT/parser/ast_builder.c2	/^public fn Builder* create(Context* context,$/;"	f
create	$C2_ROOT/parser/c2_parser.c2	/^public fn Parser* create(SourceMgr* sm,$/;"	f
createBlock	$C2_ROOT/ir/context.c2	/^public fn BlockId Context.createBlock(Context* c, BlockKind kind) {$/;"	f
createBlockInterferences	$C2_ROOT/ir/register_alloc.c2	/^fn void Tools.createBlockInterferences(Tools* t, u32 blk_id, FunctionInfo* fi, LiveVector* v) {$/;"	f
createBool	$C2_ROOT/ast/value.c2	/^fn Value Value.createBool(bool value) {$/;"	f
createComponent	$C2_ROOT/compiler/compiler_libs.c2	/^fn void Compiler.createComponent(Compiler* c, u32 name, bool is_direct, bool is_static) {$/;"	f
createExportsFile	$C2_ROOT/generator/c/c_generator_special.c2	/^fn void Generator.createExportsFile(Generator* gen, const char* output_dir, component.Component*/;"	f
createFieldInfo	$C2_ROOT/ast/struct_type_decl.c2	/^public fn FieldInitInfo* StructTypeDecl.createFieldInfo(StructTypeDecl* d, ast_context.Context* /;"	f
createFloat	$C2_ROOT/ast/value.c2	/^fn Value Value.createFloat(f64 fvalue) {$/;"	f
createGlobalScope	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.createGlobalScope(void* arg, AST* a) {$/;"	f
createIncremental	$C2_ROOT/ast/array_type.c2	/^public fn ArrayType* ArrayType.createIncremental(ast_context.Context* c,$/;"	f
createLocalName	$C2_ROOT/generator/ir/ir_generator.c2	/^fn const char* Generator.createLocalName(Generator* gen, const Decl* d) {$/;"	f
createMakefile	$C2_ROOT/generator/c/c_generator_special.c2	/^fn void Generator.createMakefile(Generator* gen,$/;"	f
createModule	$C2_ROOT/common/component.c2	/^public fn ast.Module* Component.createModule(Component* c, u32 name_idx) @(unused) {$/;"	f
createOffsetOf	$C2_ROOT/ast/builtin_expr.c2	/^public fn BuiltinExpr* BuiltinExpr.createOffsetOf(ast_context.Context* c, SrcLoc loc, u32 src_le/;"	f
createRGBSurface	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn Surface* createRGBSurface(u32 flags, c_int width, c_int height, c_int depth,$/;"	f
createRenderer	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn Renderer* Window.createRenderer(Window* window, c_int index, u32 flags) @(cname="SDL_CreateRe/;"	f
createSSA	$C2_ROOT/ir/ssa.c2	/^fn void Tools.createSSA(Tools* t) {$/;"	f
createSigned	$C2_ROOT/ast/value.c2	/^fn Value Value.createSigned(i64 svalue) {$/;"	f
createStringVar	$C2_ROOT/generator/ir/ir_generator.c2	/^fn const char* Generator.createStringVar(Generator* gen) {$/;"	f
createStructMember	$C2_ROOT/ast/var_decl.c2	/^public fn VarDecl* VarDecl.createStructMember(ast_context.Context* c,$/;"	f
createSymbol	$C2_ROOT/generator/ir/ir_generator.c2	/^fn SymbolId Generator.createSymbol(Generator* gen, Decl* d) {$/;"	f
createSymbolName	$C2_ROOT/generator/ir/ir_generator.c2	/^fn const char* Generator.createSymbolName(Generator* gen, const Decl* d) {$/;"	f
createTemplate	$C2_ROOT/ast/call_expr.c2	/^public fn CallExpr* CallExpr.createTemplate(ast_context.Context* c,$/;"	f
createTemplate	$C2_ROOT/ast/function_decl.c2	/^public fn FunctionDecl* FunctionDecl.createTemplate(ast_context.Context* c,$/;"	f
createTexture	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn Texture* createTexture(Renderer* renderer, u32 format, c_int access, c_int w, c_int h) @(cnam/;"	f
createTextureFromSurface	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn Texture* createTextureFromSurface(Renderer* renderer, Surface* surface) @(cname="SDL_CreateTe/;"	f
createThread	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn Thread* createThread(ThreadFunction func, const char* name, void* data,$/;"	f
createToContainer	$C2_ROOT/ast/builtin_expr.c2	/^public fn BuiltinExpr* BuiltinExpr.createToContainer(ast_context.Context* c, SrcLoc loc, u32 src/;"	f
createUnsigned	$C2_ROOT/ast/value.c2	/^fn Value Value.createUnsigned(u64 uvalue) {$/;"	f
createWindow	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn Window* createWindow(const char* title, c_int x, c_int y, c_int w, c_int h, u32 flags) @(cnam/;"	f
create_basic	$C2_ROOT/plugins/deps_generator.c2	/^fn void Generator.create_basic(Generator* gen, component.Component* c) {$/;"	f
create_interface_decls	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.create_interface_decls(void* arg, AST* a) {$/;"	f
create_interface_imports	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.create_interface_imports(void* arg, AST* a) {$/;"	f
create_path	$C2_ROOT/common/file/file_utils.c2	/^public fn i32 create_path(const char* path) {$/;"	f
create_project	$C2_ROOT/compiler/main.c2	/^fn void create_project(const char* name) {$/;"	f
create_template_name	$C2_ROOT/analyser/module_analyser_call.c2	/^fn void create_template_name(char* name, const char* orig, u16 idx) {$/;"	f
createtable	$C2_ROOT/libs/lua/lua.c2i	/^fn void  createtable(State *L, c_int narr, c_int nrec) @(cname="lua_createtable");$/;"	f
crl_ext	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    X509_buf crl_ext;$/;"	v
crlf	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void crlf() @(cname="sdtx_crlf");$/;"	f
cross	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec3 Vec3.cross(const Vec3* a, const Vec3* b) {$/;"	f
csetjmp	$C2_ROOT/libs/libc/csetjmp.c2i	/^module csetjmp;$/;"	v
csignal	$C2_ROOT/libs/io_uring/io_uring.c2i	/^import csignal;$/;"	v
csignal	$C2_ROOT/libs/libc/csignal.c2i	/^module csignal;$/;"	v
csignal	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^import csignal;$/;"	v
ctc	$C2_ROOT/ast/expr.c2	/^    e.base.exprBits.is_ctc = ctc;$/;"	v
ctc	$C2_ROOT/bootstrap/bootstrap.c	/^   e->base.exprBits.is_ctc = ctc;$/;"	v
ctermid	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_char* ctermid(c_char* __s);$/;"	f
ctermid_r	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_char* ctermid_r(c_char*);$/;"	f
ctermios	$C2_ROOT/libs/libc/ctermios.c2i	/^module ctermios;$/;"	v
ctime	$C2_ROOT/libs/libc/libc_time.c2i	/^fn c_char* ctime(const Time* timep);$/;"	f
ctime_r	$C2_ROOT/libs/libc/libc_time.c2i	/^fn c_char* ctime_r(const Time* timep, char* buf);$/;"	f
ctr_drbg_init	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void ctr_drbg_init( Ctr_drbg_context *ctx ) @(cname="mbedtls_ctr_drbg_init");$/;"	f
ctr_drbg_random	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int ctr_drbg_random( void *p_rng, c_uchar *output, c_size output_len) @(cname="mbedtls_ctr_/;"	f
ctr_drbg_seed	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int ctr_drbg_seed( Ctr_drbg_context *ctx,$/;"	f
ctv	$C2_ROOT/analyser/module_analyser_type.c2	/^            value = ctv;$/;"	v
ctv	$C2_ROOT/ast/expr.c2	/^    e.base.exprBits.is_ctv = ctv;$/;"	v
ctv	$C2_ROOT/bootstrap/bootstrap.c	/^   e->base.exprBits.is_ctv = ctv;$/;"	v
ctv_analyser	$C2_ROOT/analyser/conversion_checker.c2	/^import ctv_analyser;$/;"	v
ctv_analyser	$C2_ROOT/analyser/conversion_checker_expr.c2	/^import ctv_analyser;$/;"	v
ctv_analyser	$C2_ROOT/analyser/module_analyser.c2	/^import ctv_analyser;$/;"	v
ctv_analyser	$C2_ROOT/analyser/module_analyser_binop.c2	/^import ctv_analyser;$/;"	v
ctv_analyser	$C2_ROOT/analyser/module_analyser_expr.c2	/^import ctv_analyser;$/;"	v
ctv_analyser	$C2_ROOT/analyser/module_analyser_init.c2	/^import ctv_analyser;$/;"	v
ctv_analyser	$C2_ROOT/analyser/module_analyser_stmt.c2	/^import ctv_analyser;$/;"	v
ctv_analyser	$C2_ROOT/analyser/module_analyser_struct.c2	/^import ctv_analyser;$/;"	v
ctv_analyser	$C2_ROOT/analyser/module_analyser_switch.c2	/^import ctv_analyser;$/;"	v
ctv_analyser	$C2_ROOT/analyser/module_analyser_type.c2	/^import ctv_analyser;$/;"	v
ctv_analyser	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^module ctv_analyser;$/;"	v
ctv_analyser	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^import ctv_analyser;$/;"	v
ctv_analyser	$C2_ROOT/generator/ir/basic_struct_layouter.c2	/^import ctv_analyser;$/;"	v
ctv_analyser	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^import ctv_analyser;$/;"	v
ctv_analyser	$C2_ROOT/generator/ir/ir_generator.c2	/^import ctv_analyser;$/;"	v
ctv_analyser	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^import ctv_analyser;$/;"	v
ctv_analyser	$C2_ROOT/generator/ir/ir_generator_switch.c2	/^import ctv_analyser;$/;"	v
ctv_analyser_Limit	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ctv_analyser_Limit_ ctv_analyser_Limit;$/;"	v
ctx	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Context* ctx;$/;"	v
ctx	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^    ir_context.Context* ctx = l.gen.ctx;$/;"	v
ctx	$C2_ROOT/generator/ir/ir_generator.c2	/^    ir_context.Context* ctx;$/;"	v
ctx	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^    ir_context.Context* c = gen.ctx;$/;"	v
ctx	$C2_ROOT/generator/ir/ir_generator_call.c2	/^    ir_context.Context* c = gen.ctx;$/;"	v
ctx	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^    ir_context.Context* ctx = gen.ctx;$/;"	v
ctx	$C2_ROOT/generator/ir/ir_generator_member.c2	/^    ir_context.Context* c = gen.ctx;$/;"	v
ctx	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^    ir_context.Context* c = gen.ctx;$/;"	v
ctx	$C2_ROOT/generator/ir/ir_generator_switch.c2	/^    ir_context.Context* c = gen.ctx;$/;"	v
ctype	$C2_ROOT/analyser/module_analyser.c2	/^import ctype;$/;"	v
ctype	$C2_ROOT/analyser/module_analyser_member.c2	/^import ctype;$/;"	v
ctype	$C2_ROOT/analyser_utils/printf_utils.c2	/^import ctype;$/;"	v
ctype	$C2_ROOT/compiler/c2recipe_parser.c2	/^import ctype;$/;"	v
ctype	$C2_ROOT/compiler/compiler.c2	/^import ctype;$/;"	v
ctype	$C2_ROOT/libs/libc/ctype.c2i	/^module ctype;$/;"	v
cull_mode	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    CullMode cull_mode;$/;"	v
cur	$C2_ROOT/ast_utils/context.c2	/^    return cur;$/;"	v
cur	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t cur;$/;"	v
cur	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    const char* start = t.cur;$/;"	v
cur	$C2_ROOT/compiler/c2recipe_parser.c2	/^    const char* start = p.cur;$/;"	v
cur	$C2_ROOT/parser/c2_tokenizer.c2	/^    const char* start = t.cur;$/;"	v
curFunction	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_FunctionDecl* curFunction;$/;"	v
cur_allocated	$C2_ROOT/ast_utils/context.c2	/^    u32 cur_allocated;$/;"	v
cur_allocated	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t cur_allocated;$/;"	v
cur_blk	$C2_ROOT/ir/slot_collector.c2	/^    BlockId cur_blk;$/;"	v
cur_block	$C2_ROOT/bootstrap/bootstrap.c	/^   return c->b.cur_block;$/;"	v
cur_block	$C2_ROOT/ir/context.c2	/^    return c.b.cur_block;$/;"	v
cur_block	$C2_ROOT/ir/print.c2	/^    const Block* cur_block;$/;"	v
cur_data	$C2_ROOT/ast_utils/context.c2	/^    u8* cur_data;$/;"	v
cur_data	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t* cur_data;$/;"	v
cur_external	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool cur_external;$/;"	v
cur_file_idx2	$C2_ROOT/generator/c2refs.c2	/^    u32 cur_file_idx2;$/;"	v
cur_func	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_SymbolId cur_func;$/;"	v
cur_func	$C2_ROOT/ir/context.c2	/^    SymbolId cur_func;$/;"	v
cur_function	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_FunctionDecl* cur_function;$/;"	v
cur_function	$C2_ROOT/generator/ir/ir_generator.c2	/^    FunctionDecl* cur_function;$/;"	v
cur_global	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_SymbolId cur_global;$/;"	v
cur_global	$C2_ROOT/ir/context.c2	/^    SymbolId cur_global;$/;"	v
cur_indent	$C2_ROOT/bootstrap/bootstrap.c	/^   int32_t indent = p->cur_indent;$/;"	v
cur_indent	$C2_ROOT/common/yaml/yaml_parser.c2	/^    i32 indent = p.cur_indent;$/;"	v
cur_indent	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    i32 cur_indent;$/;"	v
cur_info	$C2_ROOT/bootstrap/bootstrap.c	/^   const ir_FunctionInfo* cur_info;$/;"	v
cur_info	$C2_ROOT/ir/print.c2	/^    const FunctionInfo* cur_info;$/;"	v
cur_match	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    return t.idx2word(n.word_idx) + cur_match;$/;"	v
cur_mod_idx	$C2_ROOT/analyser/module_sorter.c2	/^    u32 cur_mod_idx;$/;"	v
cur_mod_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t cur_mod_idx;$/;"	v
cur_offset	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t cur_offset;$/;"	v
cur_offset	$C2_ROOT/generator/ir/basic_struct_layouter.c2	/^    u32 pad = offset - l.cur_offset;$/;"	v
cur_offset	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^        u32 pad = l.size - cur_offset;$/;"	v
cur_prefix	$C2_ROOT/plugins/unit_test_plugin.c2	/^    u32 cur_prefix;$/;"	v
cur_size	$C2_ROOT/ast_utils/context.c2	/^    void* cur = c.cur_data + c.cur_size;$/;"	v
cur_size	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t cur_size;$/;"	v
curfile	$C2_ROOT/plugins/deps_generator.c2	/^    const char* curfile;$/;"	v
curfile	$C2_ROOT/plugins/refs_generator.c2	/^    const char* curfile;$/;"	v
current	$C2_ROOT/bootstrap/bootstrap.c	/^   component_Component* current;$/;"	v
current	$C2_ROOT/generator/c/dep_finder.c2	/^    Decl* current;$/;"	v
current_drawable	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* current_drawable;$/;"	v
current_index	$C2_ROOT/analyser/module_analyser_init.c2	/^        if (current_index > max_index) max_index = current_index;$/;"	v
current_index	$C2_ROOT/bootstrap/bootstrap.c	/^   current_index = numValues;$/;"	v
currently	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int WANT_READ                         = -0x6900;  \/**< No data of requested type curren/;"	t
curses	$C2_ROOT/libs/curses/curses.c2i	/^module curses;$/;"	v
cursor_hotspot_x	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    i32 cursor_hotspot_x;$/;"	v
cursor_hotspot_y	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    i32 cursor_hotspot_y;$/;"	v
cylinderSizes	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn Sizes cylinderSizes(u32 slices, u32 stacks) @(cname="sshape_cylinder_sizes");$/;"	f
d3d11	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FrameStatsD3d11 d3d11;$/;"	v
d3d11Device	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void* d3d11Device() @(cname="sg_d3d11_device");$/;"	f
d3d11DeviceContext	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void* d3d11DeviceContext() @(cname="sg_d3d11_device_context");$/;"	f
d3d11GetDepthStencilView	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* d3d11GetDepthStencilView() @(cname="sapp_d3d11_get_depth_stencil_view");$/;"	f
d3d11GetDevice	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* d3d11GetDevice() @(cname="sapp_d3d11_get_device");$/;"	f
d3d11GetDeviceContext	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* d3d11GetDeviceContext() @(cname="sapp_d3d11_get_device_context");$/;"	f
d3d11GetRenderView	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* d3d11GetRenderView() @(cname="sapp_d3d11_get_render_view");$/;"	f
d3d11GetResolveView	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* d3d11GetResolveView() @(cname="sapp_d3d11_get_resolve_view");$/;"	f
d3d11GetSwapChain	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* d3d11GetSwapChain() @(cname="sapp_d3d11_get_swap_chain");$/;"	f
d3d11QueryBufferInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn D3d11BufferInfo d3d11QueryBufferInfo(Buffer buf) @(cname="sg_d3d11_query_buffer_info");$/;"	f
d3d11QueryImageInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn D3d11ImageInfo d3d11QueryImageInfo(Image img) @(cname="sg_d3d11_query_image_info");$/;"	f
d3d11QueryPipelineInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn D3d11PipelineInfo d3d11QueryPipelineInfo(Pipeline pip) @(cname="sg_d3d11_query_pipeline_info"/;"	f
d3d11QuerySamplerInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn D3d11SamplerInfo d3d11QuerySamplerInfo(Sampler smp) @(cname="sg_d3d11_query_sampler_info");$/;"	f
d3d11QueryShaderInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn D3d11ShaderInfo d3d11QueryShaderInfo(Shader shd) @(cname="sg_d3d11_query_shader_info");$/;"	f
d3d11QueryViewInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn D3d11ViewInfo d3d11QueryViewInfo(View view) @(cname="sg_d3d11_query_view_info");$/;"	f
d3d11_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* d3d11_buffer;$/;"	v
d3d11_filepath	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    const char* d3d11_filepath;$/;"	v
d3d11_max_unordered_access_views	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 d3d11_max_unordered_access_views;$/;"	v
d3d11_sampler	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* d3d11_sampler;$/;"	v
d3d11_shader_debugging	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool d3d11_shader_debugging;$/;"	v
d3d11_target	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    const char* d3d11_target;$/;"	v
d3d11_texture	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* d3d11_texture;$/;"	v
d_ino	$C2_ROOT/bootstrap/bootstrap.c	/^   c_ulonglong d_ino;$/;"	v
d_ino	$C2_ROOT/libs/libc/libc_dirent.c2i	/^   c_ulonglong  d_ino;$/;"	v
d_name	$C2_ROOT/bootstrap/bootstrap.c	/^   const char* filename = entry->d_name;$/;"	v
d_name	$C2_ROOT/compiler/compiler_libs.c2	/^        const char* name = entry.d_name;$/;"	v
d_name	$C2_ROOT/compiler/plugin_mgr.c2	/^    const char* filename = entry.d_name;$/;"	v
d_name	$C2_ROOT/libs/libc/libc_dirent.c2i	/^   char[256]    d_name;$/;"	v
d_namlen	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^>    c_ushort d_namlen;$/;"	v
d_namlen	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^>    c_ushort d_namlen;$/;"	v
d_namlen	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    uint16_t d_namlen;$/;"	v
d_namlen	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    uint8_t d_namlen;$/;"	v
d_namlen	$C2_ROOT/libs/libc/libc_dirent.c2i	/^    u8 d_namlen;$/;"	v
d_off	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^<    c_longlong d_off;$/;"	v
d_off	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^<    c_longlong d_off;$/;"	v
d_off	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^<    c_longlong d_off;$/;"	v
d_off	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^<    c_longlong d_off;$/;"	v
d_off	$C2_ROOT/bootstrap/bootstrap.c	/^   c_longlong d_off;$/;"	v
d_off	$C2_ROOT/libs/libc/libc_dirent.c2i	/^   c_longlong   d_off;$/;"	v
d_pad0	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    uint8_t d_pad0;$/;"	v
d_pad0	$C2_ROOT/libs/libc/libc_dirent.c2i	/^    u8 d_pad0;$/;"	v
d_pad1	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    uint16_t d_pad1;$/;"	v
d_pad1	$C2_ROOT/libs/libc/libc_dirent.c2i	/^    u16 d_pad1;$/;"	v
d_reclen	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    uint16_t d_reclen;$/;"	v
d_reclen	$C2_ROOT/bootstrap/bootstrap.c	/^   c_ushort d_reclen;$/;"	v
d_reclen	$C2_ROOT/libs/libc/libc_dirent.c2i	/^   c_ushort     d_reclen;$/;"	v
d_seekoff	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^>    c_ulonglong d_seekoff;$/;"	v
d_seekoff	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^>    c_ulonglong d_seekoff;$/;"	v
d_seekoff	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    c_ulonglong d_seekoff;$/;"	v
d_seekoff	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    c_ulonglong d_seekoff;$/;"	v
d_seekoff	$C2_ROOT/libs/libc/libc_dirent.c2i	/^    c_ulonglong d_seekoff;$/;"	v
d_type	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t d_type;$/;"	v
d_type	$C2_ROOT/libs/libc/libc_dirent.c2i	/^   u8           d_type;$/;"	v
data	$C2_ROOT/analyser/label_vector.c2	/^    return v.data;$/;"	v
data	$C2_ROOT/analyser/name_vector.c2	/^    u32* data;$/;"	v
data	$C2_ROOT/analyser/struct_func_list.c2	/^    Info* data;$/;"	v
data	$C2_ROOT/ast_utils/context.c2	/^        c.cur_data = newb.data;$/;"	v
data	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn const char* Buf.data(const Buf* buf) {$/;"	f
data	$C2_ROOT/ast_utils/string_pool.c2	/^    const char* cp = p.data;$/;"	v
data	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_Data* data;$/;"	v
data	$C2_ROOT/common/bit_array.c2	/^    u64[MaxBits \/ 64] data;$/;"	v
data	$C2_ROOT/common/file/reader.c2	/^public fn const void* File.data(File* file) @(unused) {$/;"	f
data	$C2_ROOT/common/file/writer.c2	/^    const u8* p = data;$/;"	v
data	$C2_ROOT/common/index_list.c2	/^    u32* data;$/;"	v
data	$C2_ROOT/common/source_mgr.c2	/^    return sm.files[handle].data;$/;"	v
data	$C2_ROOT/common/yaml/yaml_iterator.c2	/^    const void* data;$/;"	v
data	$C2_ROOT/common/yaml/yaml_parser.c2	/^    Data data;$/;"	v
data	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    Data* data;$/;"	v
data	$C2_ROOT/compiler/c2recipe_parser.c2	/^    p.input_start = data;$/;"	v
data	$C2_ROOT/generator/c2refs.c2	/^    const Link* links = r.links.data;$/;"	v
data	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    char[0] data;$/;"	v
data	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    void* section = input.data;$/;"	v
data	$C2_ROOT/ir/lookup_table.c2	/^    u32* data;$/;"	v
data	$C2_ROOT/libs/io_uring/io_uring.c2i	/^	sqe.user_data = data;$/;"	v
data	$C2_ROOT/libs/libc/csetjmp.c2i	/^    char[200] data;$/;"	v
data	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    Range data;$/;"	v
data	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    Range data;$/;"	v
data	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    Range data;$/;"	v
data	$C2_ROOT/parser/expr_list.c2	/^    return l.data;$/;"	v
data	$C2_ROOT/parser/stmt_list.c2	/^    return l.data;$/;"	v
data2	$C2_ROOT/analyser/label_vector.c2	/^    v.data = data2;$/;"	v
data2	$C2_ROOT/analyser/name_vector.c2	/^    v.data = data2;$/;"	v
data2	$C2_ROOT/analyser/struct_func_list.c2	/^    v.data = data2;$/;"	v
data2	$C2_ROOT/ast_utils/string_buffer.c2	/^    buf.data_ = data2;$/;"	v
data2	$C2_ROOT/ast_utils/string_pool.c2	/^    p.data = data2;$/;"	v
data2	$C2_ROOT/bootstrap/bootstrap.c	/^   v->data = data2;$/;"	v
data2	$C2_ROOT/common/index_list.c2	/^    l.data = data2;$/;"	v
data2	$C2_ROOT/ir/lookup_table.c2	/^    t.data = data2;$/;"	v
data2	$C2_ROOT/parser/expr_list.c2	/^        l.data = data2;$/;"	v
data2	$C2_ROOT/parser/stmt_list.c2	/^        l.data = data2;$/;"	v
data_	$C2_ROOT/ast_utils/string_buffer.c2	/^    return buf.data_;$/;"	v
data_	$C2_ROOT/bootstrap/bootstrap.c	/^   return buf->data_;$/;"	v
data_capacity	$C2_ROOT/ast_utils/string_pool.c2	/^    u32 data_capacity;$/;"	v
data_capacity	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t data_capacity;$/;"	v
data_size	$C2_ROOT/ast_utils/string_pool.c2	/^    u32 idx = p.data_size;$/;"	v
data_size	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t idx = p->data_size;$/;"	v
data_size	$C2_ROOT/common/file/reader.c2	/^public fn u32 File.data_size(File* file) @(unused) {$/;"	f
data_size	$C2_ROOT/common/source_mgr.c2	/^    u32 data_size;$/;"	v
data_size	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    usize data_size;$/;"	v
dd	$C2_ROOT/bootstrap/bootstrap.c	/^   return dd;$/;"	v
dd	$C2_ROOT/parser/ast_builder.c2	/^    return dd;$/;"	v
deallocBuffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void deallocBuffer(Buffer buf) @(cname="sg_dealloc_buffer");$/;"	f
deallocImage	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void deallocImage(Image img) @(cname="sg_dealloc_image");$/;"	f
deallocPipeline	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void deallocPipeline(Pipeline pip) @(cname="sg_dealloc_pipeline");$/;"	f
deallocSampler	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void deallocSampler(Sampler smp) @(cname="sg_dealloc_sampler");$/;"	f
deallocShader	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void deallocShader(Shader shd) @(cname="sg_dealloc_shader");$/;"	f
deallocView	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void deallocView(View view) @(cname="sg_dealloc_view");$/;"	f
deallocated	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 deallocated;$/;"	v
debug	$C2_ROOT/common/console.c2	/^public fn void debug(const char* format @(printf_format), ...) {$/;"	f
decl	$C2_ROOT/analyser/module_analyser.c2	/^    Decl* decl;$/;"	v
decl	$C2_ROOT/analyser/module_analyser_function.c2	/^        const Decl* pd = prefix.decl;$/;"	v
decl	$C2_ROOT/analyser/module_analyser_init.c2	/^        Decl* member = fif.decl;$/;"	v
decl	$C2_ROOT/analyser/module_analyser_type.c2	/^    FunctionDecl* fd = (FunctionDecl*)member.decl;$/;"	v
decl	$C2_ROOT/analyser/scope.c2	/^    return decl;$/;"	v
decl	$C2_ROOT/analyser/struct_func_list.c2	/^    return v.data[index].decl;$/;"	v
decl	$C2_ROOT/analyser_utils/printf_utils.c2	/^        VarDecl* vd = (VarDecl*)decl;$/;"	v
decl	$C2_ROOT/ast/alias_type.c2	/^    t.decl = decl;$/;"	v
decl	$C2_ROOT/ast/decl_stmt.c2	/^    VarDecl*[0] decl;$/;"	v
decl	$C2_ROOT/ast/enum_type.c2	/^    t.decl = decl;$/;"	v
decl	$C2_ROOT/ast/field_designated_init_expr.c2	/^    if (e.fif) return e.fif.decl;$/;"	v
decl	$C2_ROOT/ast/function_type.c2	/^    t.decl = decl;$/;"	v
decl	$C2_ROOT/ast/identifier_expr.c2	/^    return e.decl;$/;"	v
decl	$C2_ROOT/ast/member_expr.c2	/^    return e.refs[ref_idx + e.hasExpr()].decl;$/;"	v
decl	$C2_ROOT/ast/struct_type.c2	/^    t.decl = decl;$/;"	v
decl	$C2_ROOT/ast/type_ref.c2	/^    if (r.isUser()) return r.refs[0].decl;$/;"	v
decl	$C2_ROOT/ast/utils.c2	/^        d = (Decl*)st.decl;$/;"	v
decl	$C2_ROOT/ast_utils/attr_table.c2	/^    void* decl;$/;"	v
decl	$C2_ROOT/bootstrap/bootstrap.c	/^   void* decl;$/;"	v
decl	$C2_ROOT/generator/generator_utils.c2	/^    Decl* d = ref.decl;$/;"	v
decl	$C2_ROOT/plugins/deps_generator.c2	/^    Decl* d = ref.decl;$/;"	v
decl2valtype	$C2_ROOT/analyser/module_analyser_member.c2	/^fn ValType decl2valtype(const Decl* d) {$/;"	f
declBits	$C2_ROOT/ast/decl.c2	/^        DeclBits declBits;$/;"	v
declBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_DeclBits declBits;$/;"	v
declStmtBits	$C2_ROOT/ast/stmt.c2	/^        DeclStmtBits declStmtBits;$/;"	v
declStmtBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_DeclStmtBits declStmtBits;$/;"	v
decl_clear_generated	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.decl_clear_generated(void* \/*arg*\/, Decl* d) {$/;"	f
decl_mark_generated	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.decl_mark_generated(void* \/*arg*\/, Decl* d) {$/;"	f
decls	$C2_ROOT/analyser/scope.c2	/^    s.stack_decls = decls;$/;"	v
decls	$C2_ROOT/ast/decl_list.c2	/^    return l.decls;$/;"	v
decls	$C2_ROOT/ast/enum_type_decl.c2	/^    d.incr_constants[0] = decls;$/;"	v
decls	$C2_ROOT/ast/function_decl_list.c2	/^    return l.decls;$/;"	v
decls	$C2_ROOT/ast/import_decl_list.c2	/^    return l.decls;$/;"	v
decls	$C2_ROOT/ast/statistics.c2	/^    Stat[elemsof(DeclKind)] decls;$/;"	v
decls	$C2_ROOT/ast/symbol_table.c2	/^    t.decls = decls;$/;"	v
decls	$C2_ROOT/bootstrap/bootstrap.c	/^   t->decls = decls;$/;"	v
decls	$C2_ROOT/generator/c/c_generator.c2	/^    DeclList decls;$/;"	v
decls	$C2_ROOT/parser/c2_parser_stmt.c2	/^    VarDecl*[MaxMultiDecl] decls;$/;"	v
decls	$C2_ROOT/plugins/unit_test_plugin.c2	/^    DeclList decls;$/;"	v
decls2	$C2_ROOT/ast/decl_list.c2	/^            l.decls = decls2;$/;"	v
decls2	$C2_ROOT/ast/function_decl_list.c2	/^        l.decls = decls2;$/;"	v
decls2	$C2_ROOT/ast/import_decl_list.c2	/^        l.decls = decls2;$/;"	v
decls2	$C2_ROOT/bootstrap/bootstrap.c	/^      l->decls = decls2;$/;"	v
decode	$C2_ROOT/common/utf8.c2	/^public fn u32 decode(const char *p, u32 max_len, u32* pc) {$/;"	f
decr	$C2_ROOT/ast/value.c2	/^public fn void Value.decr(Value* v) {$/;"	f
decr	$C2_ROOT/ir/usage_counter.c2	/^public fn void Counter.decr(Counter* c, u32 idx) {$/;"	f
defaultCase	$C2_ROOT/analyser/module_analyser_switch.c2	/^            defaultCase = c;$/;"	v
defaultCase	$C2_ROOT/bootstrap/bootstrap.c	/^         defaultCase = c;$/;"	v
defaultContext	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn Context defaultContext() @(cname="sdtx_default_context");$/;"	f
defaultContext	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn Context defaultContext() @(cname="sgl_default_context");$/;"	f
defaults	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    EnvironmentDefaults defaults;$/;"	v
defaults	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void defaults() @(cname="sgl_defaults");$/;"	f
deg	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn f32 deg(f32 rad) @(cname="sgl_deg");$/;"	f
degrees	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn f32 degrees(f32 _radians) {$/;"	f
deinit	$C2_ROOT/ast/utils.c2	/^public fn void deinit(bool print_stats) {$/;"	f
deinit	$C2_ROOT/ast_utils/string_buffer.c2	/^fn void Buf.deinit(Buf* buf) {$/;"	f
del	$C2_ROOT/common/string_list.c2	/^public fn u32 List.del(List* l, u32 idx) {$/;"	f
delay	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void delay(u32 ms) @(cname="SDL_Delay");$/;"	f
deleteScope	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.deleteScope(void* \/*arg*\/, AST* a) {$/;"	f
dep_finder	$C2_ROOT/generator/c/c_generator.c2	/^import dep_finder;$/;"	v
dep_finder	$C2_ROOT/generator/c/dep_finder.c2	/^module dep_finder;$/;"	v
dep_finder_Finder	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct dep_finder_Finder_ dep_finder_Finder;$/;"	v
dep_finder_OnDecl	$C2_ROOT/bootstrap/bootstrap.c	/^   dep_finder_OnDecl on_decl;$/;"	v
dependencies	$C2_ROOT/generator/c/dep_finder.c2	/^    if (d.getModule() != s.mod) return; \/\/ we're only interested in same module dependencies$/;"	m
deps	$C2_ROOT/bootstrap/bootstrap.c	/^   string_list_List deps;$/;"	v
deps	$C2_ROOT/common/component.c2	/^    string_list.List deps;$/;"	v
deps	$C2_ROOT/generator/c/c_generator.c2	/^    dep_finder.Finder deps;$/;"	v
deps	$C2_ROOT/plugins/deps_generator.c2	/^    gen.deps = deps;$/;"	v
deps_add	$C2_ROOT/plugins/deps_generator.c2	/^fn void Generator.deps_add(Generator* gen, Decl* d) {$/;"	f
deps_capacity	$C2_ROOT/plugins/deps_generator.c2	/^    u32 deps_capacity;$/;"	v
deps_count	$C2_ROOT/plugins/deps_generator.c2	/^    u32 deps_count;$/;"	v
deps_generator	$C2_ROOT/plugins/deps_generator.c2	/^module deps_generator;$/;"	v
deps_generator	$C2_ROOT/plugins/deps_generator_plugin.c2	/^import deps_generator;$/;"	v
deps_generator_utils	$C2_ROOT/plugins/deps_generator.c2	/^import deps_generator_utils;$/;"	v
deps_generator_utils	$C2_ROOT/plugins/deps_generator_utils.c2	/^module deps_generator_utils;$/;"	v
deps_resize	$C2_ROOT/plugins/deps_generator.c2	/^fn void Generator.deps_resize(Generator* gen, u32 capacity) {$/;"	f
depth	$C2_ROOT/ast/ast_evaluator.c2	/^    u32 depth;$/;"	v
depth	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t depth;$/;"	v
depth	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool depth;$/;"	v
depth	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    f32 depth;$/;"	v
depthFormat	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn i32 depthFormat() @(cname="sapp_depth_format");$/;"	f
depth_fail_op	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    StencilOp depth_fail_op;$/;"	v
depth_format	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    PixelFormat depth_format;$/;"	v
depth_format	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    PixelFormat depth_format;$/;"	v
depth_format	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    PixelFormat depth_format;$/;"	v
depth_stencil	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    View depth_stencil;$/;"	v
depth_stencil_attachment	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool depth_stencil_attachment;$/;"	v
depth_stencil_texture	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* depth_stencil_texture;$/;"	v
depth_stencil_view	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* depth_stencil_view;$/;"	v
designator	$C2_ROOT/ast/array_designated_init_expr.c2	/^    return e.designator;$/;"	v
designator	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->designator;$/;"	v
dest	$C2_ROOT/ast/enum_type_decl.c2	/^    d.enum_functions = dest;$/;"	v
dest	$C2_ROOT/ast/explicit_cast_expr.c2	/^    return &e.dest;$/;"	v
dest	$C2_ROOT/ast/import_decl.c2	/^    Module* dest;$/;"	v
dest	$C2_ROOT/ast/struct_type_decl.c2	/^    d.struct_functions = dest;$/;"	v
dest	$C2_ROOT/ast/type_ref.c2	/^    r.dest = dest;$/;"	v
dest	$C2_ROOT/ast/value.c2	/^    return dest;$/;"	v
dest	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^>       if (((((size_t)(len3)) < size) && (stat64(dest, &statbuf) == 0))) return dest;$/;"	v
dest	$C2_ROOT/bootstrap/bootstrap.c	/^   return dest;$/;"	v
dest	$C2_ROOT/common/process_utils.c2	/^            return dest;$/;"	v
dest	$C2_ROOT/generator/c/c_generator_call.c2	/^    return (FunctionDecl*)dest;$/;"	v
dest	$C2_ROOT/generator/c2refs.c2	/^    u32 dest;$/;"	v
dest	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        ir.Ref dest;$/;"	v
dest	$C2_ROOT/ir/inserter.c2	/^    e.dest = dest;$/;"	v
dest	$C2_ROOT/ir/phi_list.c2	/^    c.dest_idx = dest;$/;"	v
dest	$C2_ROOT/ir/register_alloc.c2	/^                b2.dests[1] = dest;$/;"	v
dest1	$C2_ROOT/bootstrap/bootstrap.c	/^   b->dests[0] = dest1;$/;"	v
dest1	$C2_ROOT/ir/block.c2	/^    b.dests[0] = dest1;$/;"	v
dest2	$C2_ROOT/bootstrap/bootstrap.c	/^   b->dests[1] = dest2;$/;"	v
dest2	$C2_ROOT/ir/block.c2	/^    b.dests[1] = dest2;$/;"	v
destType	$C2_ROOT/analyser/module_analyser_expr.c2	/^    return destType;$/;"	v
destType	$C2_ROOT/bootstrap/bootstrap.c	/^   return destType;$/;"	v
dest_file_idx	$C2_ROOT/generator/c2refs.c2	/^    u16 dest_file_idx;$/;"	v
dest_file_ptr	$C2_ROOT/generator/c2refs.c2	/^    const char* dest_file_ptr;$/;"	v
dest_id	$C2_ROOT/ir/context.c2	/^                blocks2[head++] = dest_id;$/;"	v
dest_id	$C2_ROOT/ir/rpo.c2	/^                rpo.blocks[todo--] = (u16)dest_id;$/;"	v
dest_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t dest_idx;$/;"	v
dest_idx	$C2_ROOT/ir/interference_graph.c2	/^    r.start = (u16)dest_idx;$/;"	v
dest_idx	$C2_ROOT/ir/live_map.c2	/^    r.start = (u16)dest_idx;$/;"	v
dest_idx	$C2_ROOT/ir/slot_writes_map.c2	/^    r.start = (u16)dest_idx;$/;"	v
dest_type	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->dest_type;$/;"	v
destroy	$C2_ROOT/common/yaml/yaml_data.c2	/^fn void Data.destroy(Data* d) {$/;"	f
destroy	$C2_ROOT/common/yaml/yaml_parser.c2	/^public fn void Parser.destroy(Parser* p) {$/;"	f
destroy	$C2_ROOT/ir/work_queue.c2	/^fn void QueueWorker.destroy(QueueWorker* w) {$/;"	f
destroy	$C2_ROOT/libs/pthread/pthread.c2i	/^fn c_int Mutex.destroy(Mutex* mutex) @(cname="pthread_mutex_destroy");$/;"	f
destroy	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void Window.destroy(Window* window) @(cname="SDL_DestroyWindow");$/;"	f
destroyBuffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void destroyBuffer(Buffer buf) @(cname="sg_destroy_buffer");$/;"	f
destroyContext	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void destroyContext(Context ctx) @(cname="sdtx_destroy_context");$/;"	f
destroyContext	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void destroyContext(Context ctx) @(cname="sgl_destroy_context");$/;"	f
destroyImage	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void destroyImage(Image img) @(cname="sg_destroy_image");$/;"	f
destroyPipeline	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void destroyPipeline(Pipeline pip) @(cname="sg_destroy_pipeline");$/;"	f
destroyPipeline	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void destroyPipeline(Pipeline pip) @(cname="sgl_destroy_pipeline");$/;"	f
destroySampler	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void destroySampler(Sampler smp) @(cname="sg_destroy_sampler");$/;"	f
destroyShader	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void destroyShader(Shader shd) @(cname="sg_destroy_shader");$/;"	f
destroyView	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void destroyView(View view) @(cname="sg_destroy_view");$/;"	f
detach	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void* Buf.detach(Buf* buf, u32 *psize) {$/;"	f
detach	$C2_ROOT/common/file/reader.c2	/^public fn void* File.detach(File* file, u32 *psize) @(unused) {$/;"	f
determinant	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn f32 Mat4.determinant(const Mat4* m) {$/;"	f
device	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* device;$/;"	v
device_context	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* device_context;$/;"	v
diagName	$C2_ROOT/ast/qualtype.c2	/^public fn const char* QualType.diagName(const QualType* qt) {$/;"	f
diagName	$C2_ROOT/ast/type_ref.c2	/^public fn const char* TypeRef.diagName(const TypeRef* r) {$/;"	f
diagNameBare	$C2_ROOT/ast/qualtype.c2	/^public fn const char* QualType.diagNameBare(const QualType* qt) {$/;"	f
diagnostics	$C2_ROOT/analyser/conversion_checker.c2	/^import diagnostics;$/;"	v
diagnostics	$C2_ROOT/analyser/module_analyser.c2	/^import diagnostics;$/;"	v
diagnostics	$C2_ROOT/analyser/module_sorter.c2	/^import diagnostics;$/;"	v
diagnostics	$C2_ROOT/analyser/scope.c2	/^import diagnostics;$/;"	v
diagnostics	$C2_ROOT/analyser/unused_checker.c2	/^import diagnostics;$/;"	v
diagnostics	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^import diagnostics;$/;"	v
diagnostics	$C2_ROOT/common/attr_handler.c2	/^import diagnostics;$/;"	v
diagnostics	$C2_ROOT/common/component_sorter.c2	/^import diagnostics;$/;"	v
diagnostics	$C2_ROOT/common/diagnostics.c2	/^module diagnostics;$/;"	v
diagnostics	$C2_ROOT/compiler/compiler.c2	/^import diagnostics;$/;"	v
diagnostics	$C2_ROOT/compiler/main.c2	/^import diagnostics;$/;"	v
diagnostics	$C2_ROOT/generator/c/c_generator.c2	/^import diagnostics;$/;"	v
diagnostics	$C2_ROOT/parser/ast_builder.c2	/^import diagnostics;$/;"	v
diagnostics	$C2_ROOT/parser/c2_parser.c2	/^import diagnostics;$/;"	v
diagnostics	$C2_ROOT/plugins/plugin_info.c2	/^import diagnostics;$/;"	v
diagnostics_Category	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t diagnostics_Category;$/;"	v
diagnostics_Category_Error	$C2_ROOT/bootstrap/bootstrap.c	/^   if (diags->promote_warnings) category = diagnostics_Category_Error;$/;"	v
diagnostics_Category_Note	$C2_ROOT/bootstrap/bootstrap.c	/^   diagnostics_Category_Note,$/;"	v
diagnostics_Category_Warning	$C2_ROOT/bootstrap/bootstrap.c	/^   diagnostics_Category_Warning,$/;"	v
diagnostics_Diags	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct diagnostics_Diags_ diagnostics_Diags;$/;"	v
diags	$C2_ROOT/analyser/conversion_checker.c2	/^    diagnostics.Diags* diags;$/;"	v
diags	$C2_ROOT/analyser/module_analyser.c2	/^    ma.diags = diags;$/;"	v
diags	$C2_ROOT/analyser/scope.c2	/^    s.diags = diags;$/;"	v
diags	$C2_ROOT/analyser/unused_checker.c2	/^    diagnostics.Diags* diags;$/;"	v
diags	$C2_ROOT/bootstrap/bootstrap.c	/^   s->diags = diags;$/;"	v
diags	$C2_ROOT/common/attr_handler.c2	/^    h.diags = diags;$/;"	v
diags	$C2_ROOT/common/diagnostics.c2	/^    return diags;$/;"	v
diags	$C2_ROOT/compiler/compiler.c2	/^    info.diags = diags;$/;"	v
diags	$C2_ROOT/compiler/main.c2	/^    diagnostics.Diags* diags;$/;"	v
diags	$C2_ROOT/generator/c/c_generator.c2	/^    gen.diags = diags;$/;"	v
diags	$C2_ROOT/parser/ast_builder.c2	/^    b.diags = diags;$/;"	v
diags	$C2_ROOT/parser/c2_parser.c2	/^    p.diags = diags;$/;"	v
diff	$C2_ROOT/libs/sokol/sokol_time.c2i	/^fn u64 diff(u64 new_ticks, u64 old_ticks) @(cname="stm_diff");$/;"	f
digit	$C2_ROOT/parser/c2_tokenizer.c2	/^            value = value * 10 + digit;$/;"	v
dir	$C2_ROOT/bootstrap/bootstrap.c	/^   gen.cgen_dir = dir;$/;"	v
dir	$C2_ROOT/generator/c/c_generator.c2	/^    gen.cgen_dir = dir;$/;"	v
dirent	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct dirent_ dirent;$/;"	v
dirname	$C2_ROOT/bootstrap/bootstrap.c	/^   c->dirname_idx = dirname;$/;"	v
dirname	$C2_ROOT/common/component.c2	/^    c.dirname_idx = dirname;$/;"	v
dirname	$C2_ROOT/libs/libc/libgen.c2i	/^fn c_char* dirname(c_char* path);$/;"	f
dirname_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t dirname_idx;$/;"	v
disable	$C2_ROOT/compiler/c2recipe_parser.c2	/^            warnings.no_unused_variable = disable;$/;"	v
disableAsserts	$C2_ROOT/common/build_target.c2	/^public fn void Target.disableAsserts(Target* t) { t.disable_asserts = true; }$/;"	f
disableFrameStats	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void disableFrameStats() @(cname="sg_disable_frame_stats");$/;"	f
disableTexture	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void disableTexture() @(cname="sgl_disable_texture");$/;"	f
disableWarnings	$C2_ROOT/common/build_target.c2	/^public fn void Target.disableWarnings(Target* t) {$/;"	f
disable_asserts	$C2_ROOT/bootstrap/bootstrap.c	/^   return !t->disable_asserts;$/;"	v
disable_asserts	$C2_ROOT/common/build_target.c2	/^    bool disable_asserts;$/;"	v
disable_validation	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool disable_validation;$/;"	v
dispatch	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void dispatch(i32 num_groups_x, i32 num_groups_y, i32 num_groups_z) @(cname="sg_dispatch");$/;"	f
distance	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn f32 Vec3.distance(const Vec3* a, const Vec3* b) {$/;"	f
div	$C2_ROOT/libs/libc/stdlib.c2i	/^fn Div_t div(c_int __numer, c_int __denom);$/;"	f
div	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec3 Vec3.div(const Vec3* v, f32 scalar) {$/;"	f
div_t	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct div_t_ div_t;$/;"	v
divide	$C2_ROOT/ast/value.c2	/^fn Value Value.divide(const Value* v1, const Value* v2) {$/;"	f
dlclose	$C2_ROOT/libs/dl/dlfcn.c2i	/^fn c_int dlclose(void* handle);$/;"	f
dlerror	$C2_ROOT/libs/dl/dlfcn.c2i	/^fn char* dlerror();$/;"	f
dlfcn	$C2_ROOT/libs/dl/dlfcn.c2i	/^module dlfcn;$/;"	v
dlopen	$C2_ROOT/libs/dl/dlfcn.c2i	/^fn void* dlopen(const c_char* file, c_int mode);$/;"	f
dlsym	$C2_ROOT/libs/dl/dlfcn.c2i	/^fn void* dlsym(void* handle, const c_char* name);$/;"	f
dma	$C2_ROOT/libs/libc/net_if.c2i	/^    c_uchar dma;$/;"	v
doWIFEXITED	$C2_ROOT/common/process_utils.c2	/^fn bool doWIFEXITED(i32 state) {$/;"	f
doWIFSIGNALED	$C2_ROOT/common/process_utils.c2	/^fn bool doWIFSIGNALED(i32 state) {$/;"	f
doc_end	$C2_ROOT/common/yaml/yaml_parser.c2	/^fn void Parser.doc_end(Parser* p) {$/;"	f
doc_start	$C2_ROOT/common/yaml/yaml_parser.c2	/^fn void Parser.doc_start(Parser* p) {$/;"	f
doc_started	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool doc_started;$/;"	v
doc_started	$C2_ROOT/common/yaml/yaml_parser.c2	/^    bool doc_started;$/;"	v
domainname	$C2_ROOT/libs/libc/sys_utsname.c2i	/^    char[NAME_LEN] domainname;$/;"	v
done	$C2_ROOT/analyser/module_analyser_stmt.c2	/^    if (ma.has_error) goto done;$/;"	v
done	$C2_ROOT/bootstrap/bootstrap.c	/^   if (ma->has_error) goto done;$/;"	v
done	$C2_ROOT/common/yaml/yaml_iterator.c2	/^public fn bool Iter.done(const Iter* iter) {$/;"	f
done	$C2_ROOT/plugins/unit_test2.c2	/^  u32 done;$/;"	v
dontcare	$C2_ROOT/bootstrap/bootstrap.c	/^      ir_Ref dontcare;$/;"	v
dontcare	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^        ir.Ref dontcare;$/;"	v
dontfork	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn c_int Ring.dontfork(Ring *ring) @(cname="io_uring_ring_dontfork");$/;"	f
dot	$C2_ROOT/ast/value.c2	/^    char *exp = dot;$/;"	v
dot	$C2_ROOT/bootstrap/bootstrap.c	/^   char* exp = dot;$/;"	v
dot	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn f32 Vec4.dot(const Vec4* a, const Vec4* b) {$/;"	f
dot_f	$C2_ROOT/libs/sokol/sokol_math.c2i	/^    m.m[3] = -dot_s; m.m[7] = -dot_u; m.m[11] = dot_f;$/;"	v
double	$C2_ROOT/bootstrap/bootstrap.c	/^   double val;$/;"	v
down	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec3 Vec3.down() {$/;"	f
dpiScale	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn f32 dpiScale() @(cname="sapp_dpi_scale");$/;"	f
dprintf	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int dprintf(c_int __fd, const c_char* __fmt @(printf_format), ...);$/;"	f
drand48	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_double drand48();$/;"	f
drand48_data	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct drand48_data_ drand48_data;$/;"	v
drand48_r	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int drand48_r(Drand48_data* __buffer, c_double* __result);$/;"	f
draw	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void draw() @(cname="sdtx_draw");$/;"	f
draw	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void draw(i32 base_element, i32 num_elements, i32 num_instances) @(cname="sg_draw");$/;"	f
draw	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void draw() @(cname="sgl_draw");$/;"	f
drawEx	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void drawEx(i32 base_element, i32 num_elements, i32 num_instances, i32 base_vertex, i32 base_/;"	f
drawLayer	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void drawLayer(i32 layer_id) @(cname="sdtx_draw_layer");$/;"	f
drawLayer	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void drawLayer(i32 layer_id) @(cname="sgl_draw_layer");$/;"	f
drawLine	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Renderer.drawLine(Renderer* renderer, i32 x1, i32 y1, i32 x2, i32 y2) @(cname="SDL_Rend/;"	f
drawLines	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Renderer.drawLines(Renderer* renderer, const Point* points, c_int count) @(cname="SDL_R/;"	f
drawPoint	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Renderer.drawPoint(Renderer* renderer, c_int x, c_int y) @(cname="SDL_RenderDrawPoint")/;"	f
drawPoints	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Renderer.drawPoints(Renderer* renderer, const Point* points, c_int count) @(cname="SDL_/;"	f
drawRect	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Renderer.drawRect(Renderer* renderer, const Rect* rect) @(cname="SDL_RenderDrawRect");$/;"	f
drawRects	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Renderer.drawRects(Renderer* renderer, const Rect* rects, c_int count) @(cname="SDL_Ren/;"	f
draw_base_instance	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool draw_base_instance;$/;"	v
draw_base_vertex	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool draw_base_vertex;$/;"	v
dropped	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32 dropped;$/;"	v
dropped_file_index	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    i32 dropped_file_index;$/;"	v
dsm	$C2_ROOT/analyser/module_sorter.c2	/^    s.dsm = &dsm;$/;"	v
dsm	$C2_ROOT/bootstrap/bootstrap.c	/^   s.dsm = &dsm;$/;"	v
dsm_sorter	$C2_ROOT/analyser/module_sorter.c2	/^import dsm_sorter;$/;"	v
dsm_sorter	$C2_ROOT/common/component_sorter.c2	/^import dsm_sorter;$/;"	v
dsm_sorter	$C2_ROOT/common/dsm_sorter.c2	/^module dsm_sorter;$/;"	v
dsm_sorter_Sorter	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct dsm_sorter_Sorter_ dsm_sorter_Sorter;$/;"	v
dss	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* dss;$/;"	v
dst	$C2_ROOT/ast/switch_case.c2	/^    return dst;$/;"	v
dst	$C2_ROOT/bootstrap/bootstrap.c	/^   return dst;$/;"	v
dst	$C2_ROOT/common/dsm_sorter.c2	/^    u32 offset = src * s.count + dst;$/;"	v
dst_factor_alpha	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BlendFactor dst_factor_alpha;$/;"	v
dst_factor_rgb	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BlendFactor dst_factor_rgb;$/;"	v
dst_reg	$C2_ROOT/ir/instr.c2	/^    i.instrBits.register_nr = dst_reg;$/;"	v
dsv	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* dsv;$/;"	v
dump	$C2_ROOT/analyser/scope.c2	/^public fn void Scope.dump(const Scope* s) @(unused) {$/;"	f
dump	$C2_ROOT/ast/decl.c2	/^public fn void Decl.dump(const Decl* d) {$/;"	f
dump	$C2_ROOT/ast/expr.c2	/^public fn void Expr.dump(const Expr* e) {$/;"	f
dump	$C2_ROOT/ast/member_expr.c2	/^public fn void MemberExpr.dump(const MemberExpr* m) @(unused) {$/;"	f
dump	$C2_ROOT/ast/qualtype.c2	/^public fn void QualType.dump(const QualType* qt) @(unused) {$/;"	f
dump	$C2_ROOT/ast/statistics.c2	/^fn void Stats.dump(const Stats* s) {$/;"	f
dump	$C2_ROOT/ast/stmt.c2	/^public fn void Stmt.dump(const Stmt* s) {$/;"	f
dump	$C2_ROOT/ast/symbol_table.c2	/^public fn void SymbolTable.dump(const SymbolTable* t) @(unused) {$/;"	f
dump	$C2_ROOT/ast/type.c2	/^public fn void Type.dump(const Type* t) @(unused) {$/;"	f
dump	$C2_ROOT/ast/type_ref.c2	/^public fn void TypeRefHolder.dump(const TypeRefHolder* h) @(unused) {$/;"	f
dump	$C2_ROOT/common/yaml/yaml_dump.c2	/^public fn void Parser.dump(const Parser* p, bool verbose) @(unused) {$/;"	f
dump	$C2_ROOT/generator/c2refs.c2	/^public fn void Refs.dump(const Refs* r, bool verbose) {$/;"	f
dump	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^public fn void Tree.dump(const Tree* t, bool verbose) {$/;"	f
dump	$C2_ROOT/ir/inserter.c2	/^public fn void Inserter.dump(const Inserter* ins) @(unused) {$/;"	f
dump	$C2_ROOT/ir/interference_graph.c2	/^public fn void Iter.dump(const Iter* iter) @(unused) {$/;"	f
dump	$C2_ROOT/ir/live_map.c2	/^public fn void Map.dump(const Map* g, bool verbose) @(unused) {$/;"	f
dump	$C2_ROOT/ir/lookup_table.c2	/^public fn void Table.dump(const Table* t) @(unused) {$/;"	f
dump	$C2_ROOT/ir/phi_list.c2	/^public fn void PhiClauses.dump(const PhiClauses* c) @(unused) {$/;"	f
dump	$C2_ROOT/ir/print.c2	/^public fn void Context.dump(const Context* c) @(unused) {$/;"	f
dump	$C2_ROOT/ir/register_alloc.c2	/^fn void LiveVector.dump(const LiveVector* v) @(unused) {$/;"	f
dump	$C2_ROOT/ir/rev_list.c2	/^public fn void RevList.dump(const RevList* r) @(unused) {$/;"	f
dump	$C2_ROOT/ir/slot_collector.c2	/^public fn void SlotCollector.dump(const SlotCollector* c) @(unused) {$/;"	f
dump	$C2_ROOT/ir/slot_values.c2	/^public fn void SlotValues.dump(const SlotValues* v) @(unused) {$/;"	f
dump	$C2_ROOT/ir/slot_writes_map.c2	/^public fn void Map.dump(const Map* m, bool verbose) @(unused) {$/;"	f
dump	$C2_ROOT/ir/usage_counter.c2	/^public fn void Counter.dump(const Counter* c) @(unused) {$/;"	f
dump	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int dump(State *L, Writer writer, void *data, c_int strip) @(cname="lua_dump");$/;"	f
dump2	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^fn void Tree.dump2(const Tree* t, bool print_nodes, bool print_words, bool print_stats) {$/;"	f
dumpRanges	$C2_ROOT/ir/register_alloc.c2	/^fn void LiveVector.dumpRanges(const LiveVector* v, u32 num_blocks) @(unused) {$/;"	f
dump_full	$C2_ROOT/ast/qualtype.c2	/^public fn void QualType.dump_full(const QualType* qt) {$/;"	f
dump_full	$C2_ROOT/ast/type_ref.c2	/^public fn void TypeRef.dump_full(const TypeRef* r) @(unused) {$/;"	f
dump_function	$C2_ROOT/ir/print.c2	/^fn void dump_function(const FunctionInfo* info, const char* name) @(unused) {$/;"	f
dump_function_info	$C2_ROOT/ir/print.c2	/^fn void dump_function_info(string_buffer.Buf* out, const FunctionInfo* info) @(unused) {$/;"	f
dump_node	$C2_ROOT/common/yaml/yaml_dump.c2	/^fn void Data.dump_node(const Data* d, const Node* n, i32 indent) {$/;"	f
dump_nodes	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^fn void Tree.dump_nodes(const Tree* t, u32 idx, u32 end) {$/;"	f
dump_stats	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^fn void Tree.dump_stats(const Tree* t) {$/;"	f
dump_temps	$C2_ROOT/ir/print.c2	/^public fn void Context.dump_temps(const Context* c) @(unused) {$/;"	f
dump_token	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.dump_token(Parser* p, const Token* tok) @(unused) {$/;"	f
dump_words	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^public fn void Tree.dump_words(const Tree* t) @(unused) {$/;"	f
dump_zones	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^fn void Tree.dump_zones(const Tree* t) @(unused) {$/;"	f
dup	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int dup(c_int oldfd);$/;"	f
dup2	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int dup2(c_int oldfd, c_int newfd);$/;"	f
dup3	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int dup3(c_int oldfd, c_int newfd, c_int flags);$/;"	f
dups	$C2_ROOT/parser/c2_parser.c2	/^    u32[16] dups;$/;"	v
dvalue	$C2_ROOT/bootstrap/bootstrap.c	/^      double dvalue;$/;"	v
dvalue	$C2_ROOT/ir/constant.c2	/^        f64 dvalue;$/;"	v
dynamic_update	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool dynamic_update;$/;"	v
e2	$C2_ROOT/ast/call_expr.c2	/^    return (Expr*)e2;$/;"	v
e2	$C2_ROOT/ast/explicit_cast_expr.c2	/^    return (Expr*)e2;$/;"	v
e2	$C2_ROOT/ast/init_list_expr.c2	/^    return (Expr*)e2;$/;"	v
e2	$C2_ROOT/ast/member_expr.c2	/^    return (Expr*)e2;$/;"	v
e2	$C2_ROOT/ast/type_expr.c2	/^    return (Expr*)e2;$/;"	v
e50	$C2_ROOT/libs/math/math.c2i	/^const c_float HUGE_VALF   = 1e500; \/\/FIXME: should use (f32)1e50;$/;"	v
e500	$C2_ROOT/libs/math/math.c2i	/^const c_double HUGE_VAL   = 1e500;$/;"	v
e_ptr	$C2_ROOT/analyser/conversion_checker.c2	/^    c.expr_ptr = e_ptr;$/;"	v
e_ptr	$C2_ROOT/analyser/module_analyser_binop.c2	/^    Expr* e = *e_ptr;$/;"	v
e_ptr	$C2_ROOT/analyser/module_analyser_builtin.c2	/^    Expr* e = *e_ptr;$/;"	v
e_ptr	$C2_ROOT/analyser/module_analyser_call.c2	/^    Expr* e = *e_ptr;$/;"	v
e_ptr	$C2_ROOT/analyser/module_analyser_expr.c2	/^    Expr* e = *e_ptr;$/;"	v
e_ptr	$C2_ROOT/analyser/module_analyser_init.c2	/^    Expr* e = *e_ptr;$/;"	v
e_ptr	$C2_ROOT/analyser/module_analyser_member.c2	/^    Expr* e = *e_ptr;$/;"	v
e_ptr	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^    Expr* e = *e_ptr;$/;"	v
e_ptr	$C2_ROOT/bootstrap/bootstrap.c	/^   e = *e_ptr;$/;"	v
e_ptr	$C2_ROOT/parser/ast_builder.c2	/^    Expr* inner = *e_ptr;$/;"	v
ecd	$C2_ROOT/analyser/module_analyser_init.c2	/^            Decl* d = (Decl*)ecd;$/;"	v
ecd	$C2_ROOT/analyser/module_analyser_member.c2	/^                    d = (Decl*)ecd;$/;"	v
ecd	$C2_ROOT/analyser/module_analyser_switch.c2	/^    Decl* d = (Decl*)ecd;$/;"	v
ecd	$C2_ROOT/analyser/unused_checker.c2	/^        Decl* dd = (Decl*)ecd;$/;"	v
ecd	$C2_ROOT/ast/enum_type_decl.c2	/^        if (ed.getNameIdx() == name_idx) return ecd;$/;"	v
ecd	$C2_ROOT/bootstrap/bootstrap.c	/^      if ((ast_Decl_getNameIdx(ed) == name_idx)) return ecd;$/;"	v
ecvt	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_char* ecvt(c_double __value, c_int __ndigit, c_int* __decpt, c_int* __sign);$/;"	f
ecvt_r	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int ecvt_r(c_double __value, c_int __ndigit, c_int* __decpt, c_int* __sign, c_char* __buf, /;"	f
ef	$C2_ROOT/analyser/module_analyser_member.c2	/^                    d = ef;$/;"	v
ef	$C2_ROOT/ast/enum_type_decl.c2	/^        if (ef.getNameIdx() == name_idx) return ef;$/;"	v
ef	$C2_ROOT/bootstrap/bootstrap.c	/^      if ((ast_Decl_getNameIdx(ef) == name_idx)) return ef;$/;"	v
eglGetContext	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* eglGetContext() @(cname="sapp_egl_get_context");$/;"	f
eglGetDisplay	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* eglGetDisplay() @(cname="sapp_egl_get_display");$/;"	f
elem	$C2_ROOT/ast/array_type.c2	/^    t.elem = elem;$/;"	v
elem	$C2_ROOT/bootstrap/bootstrap.c	/^   t->elem = elem;$/;"	v
elem_size	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t elem_size;$/;"	v
elem_size	$C2_ROOT/generator/ir/array_init_sorter.c2	/^    u32 elem_size;$/;"	v
elem_size	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^            offset += elem_size;$/;"	v
elementRange	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn ElementRange elementRange(Buffer* buf) @(cname="sshape_element_range");$/;"	f
eliminateCopies	$C2_ROOT/ir/ssa.c2	/^fn void Tools.eliminateCopies(Tools* t) {$/;"	f
else	$C2_ROOT/analyser/module_analyser_struct.c2	/^                    else$/;"	v
else	$C2_ROOT/ast/ast_evaluator.c2	/^    else$/;"	v
else	$C2_ROOT/ast/type_ref.c2	/^            else$/;"	v
else	$C2_ROOT/ast/value.c2	/^        else$/;"	v
else	bootstrap/Makefile	/^else$/;"	v
else	$C2_ROOT/bootstrap/bootstrap.c	/^      else break;$/;"	v
else	$C2_ROOT/common/diagnostics.c2	/^            else$/;"	v
else	$C2_ROOT/compiler/main.c2	/^            else$/;"	v
else	$C2_ROOT/env.sh	/^else$/;"	v
else	$C2_ROOT/generator/c/c_generator_expr.c2	/^        else$/;"	v
else	$C2_ROOT/generator/c/c_generator_special.c2	/^    else$/;"	v
else	$C2_ROOT/install_plugins.sh	/^else$/;"	v
else	$C2_ROOT/ir/instr_list.c2	/^        else break;$/;"	v
else	$C2_ROOT/libs/io_uring/io_uring.c2i	/^	else$/;"	v
else	$C2_ROOT/parser/c2_parser_expr.c2	/^        else$/;"	v
else	$C2_ROOT/parser/c2_tokenizer.c2	/^        else$/;"	v
else_blk	$C2_ROOT/bootstrap/bootstrap.c	/^   if (else_stmt) false_blk = else_blk;$/;"	v
else_blk	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^    if (else_stmt) false_blk = else_blk;$/;"	v
else_stmt	$C2_ROOT/ast/if_stmt.c2	/^        s.else_stmt[0] = else_stmt;$/;"	v
else_stmt	$C2_ROOT/bootstrap/bootstrap.c	/^      s->else_stmt[0] = else_stmt;$/;"	v
emitAliasType	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitAliasType(Generator* gen, string_buffer.Buf* out, Decl* d) {$/;"	f
emitAliasTypeDecl	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^fn void Generator.emitAliasTypeDecl(Generator* gen, string_buffer.Buf* out, const Decl* d) {$/;"	f
emitAndCond	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^fn void Generator.emitAndCond(Generator* gen, const BinaryOperator* b, BlockId true_blk, BlockId/;"	f
emitArrayDesigExpr	$C2_ROOT/generator/c/c_generator_expr.c2	/^fn void Generator.emitArrayDesigExpr(Generator* gen, string_buffer.Buf* out, Expr* e) {$/;"	f
emitArrayDesigExpr	$C2_ROOT/generator/c2i/c2i_generator_expr.c2	/^fn void Generator.emitArrayDesigExpr(Generator* gen, string_buffer.Buf* out, const ArrayDesignat/;"	f
emitArrayInit	$C2_ROOT/generator/ir/ir_generator.c2	/^fn void Generator.emitArrayInit(Generator* gen, const Expr* e) {$/;"	f
emitArrayInitExpr	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^fn void Generator.emitArrayInitExpr(Generator* gen, const StackVar* var, const Expr* e) {$/;"	f
emitArraySubscript	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^fn void Generator.emitArraySubscript(Generator* gen, ir.Ref* result, const Expr* e) {$/;"	f
emitAsDefine	$C2_ROOT/generator/c/c_generator.c2	/^fn bool emitAsDefine(const VarDecl* vd) {$/;"	f
emitAsmOperand	$C2_ROOT/generator/c/c_generator_stmt.c2	/^fn void Generator.emitAsmOperand(Generator* gen, u32 name, const Expr* c, Expr* e) {$/;"	f
emitAsmOperand	$C2_ROOT/generator/c2i/c2i_generator_stmt.c2	/^fn void Generator.emitAsmOperand(Generator* gen, u32 name, const Expr* c, Expr* e) {$/;"	f
emitAsmPart	$C2_ROOT/generator/c/c_generator_stmt.c2	/^fn void emitAsmPart(string_buffer.Buf* out, bool multi_line, u32 indent) {$/;"	f
emitAsmPart	$C2_ROOT/generator/c2i/c2i_generator_stmt.c2	/^fn void emitAsmPart(string_buffer.Buf* out, bool multi_line, u32 indent) {$/;"	f
emitAsmStmt	$C2_ROOT/generator/c/c_generator_stmt.c2	/^fn void Generator.emitAsmStmt(Generator* gen, AsmStmt* a, u32 indent) {$/;"	f
emitAsmStmt	$C2_ROOT/generator/c2i/c2i_generator_stmt.c2	/^fn void Generator.emitAsmStmt(Generator* gen, AsmStmt* a, u32 indent) {$/;"	f
emitAssertStmt	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^fn void Generator.emitAssertStmt(Generator* gen, const Stmt* s) {$/;"	f
emitAssign	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^fn void Generator.emitAssign(Generator* gen, ir.Ref* result, const Expr* lhs, const Expr* rhs) {$/;"	f
emitAssignCond	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^fn void Generator.emitAssignCond(Generator* gen, ir.Type t, ir.Ref lhs, ir.Ref rhs, BlockId left/;"	f
emitAutoInit	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitAutoInit(Generator* gen, string_buffer.Buf* out, QualType qt) {$/;"	f
emitBinaryCond	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^fn bool Generator.emitBinaryCond(Generator* gen, const Expr* e, BlockId left, BlockId right, Blo/;"	f
emitBinaryOperator	$C2_ROOT/generator/c/c_generator_expr.c2	/^fn void Generator.emitBinaryOperator(Generator* gen, string_buffer.Buf* out, Expr* e, C_Prec pre/;"	f
emitBinaryOperator	$C2_ROOT/generator/c2i/c2i_generator_expr.c2	/^fn void Generator.emitBinaryOperator(Generator* gen, string_buffer.Buf* out, const BinaryOperato/;"	f
emitBinaryOperator	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^fn void Generator.emitBinaryOperator(Generator* gen, ir.Ref* result, const Expr* e) {$/;"	f
emitBitOffset	$C2_ROOT/generator/c/c_generator_expr.c2	/^fn void Generator.emitBitOffset(Generator* gen, string_buffer.Buf* out, Expr* base, Expr* index,/;"	f
emitBitfield	$C2_ROOT/generator/ir/ir_generator.c2	/^fn void Generator.emitBitfield(Generator* gen, u8 size, u64 value) {$/;"	f
emitBitfieldAssign	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^fn void Generator.emitBitfieldAssign(Generator* gen, ir.Ref* result, const Expr* lhs, const Expr/;"	f
emitBuiltin	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^fn void Generator.emitBuiltin(Generator* gen, ir.Ref* result, const Expr* e) {$/;"	f
emitBuiltinExpr	$C2_ROOT/generator/c/c_generator_expr.c2	/^fn void Generator.emitBuiltinExpr(Generator* gen, string_buffer.Buf* out, Expr* e) {$/;"	f
emitBuiltinExpr	$C2_ROOT/generator/c2i/c2i_generator_expr.c2	/^fn void Generator.emitBuiltinExpr(Generator* gen, string_buffer.Buf* out, const BuiltinExpr* b) /;"	f
emitCName	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitCName(Generator* gen, string_buffer.Buf* out, const Decl* d) {$/;"	f
emitCNameMod	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitCNameMod(Generator* \/*gen*\/, string_buffer.Buf* out, const Decl* d, Modu/;"	f
emitCall	$C2_ROOT/generator/c/c_generator_call.c2	/^fn void Generator.emitCall(Generator* gen, string_buffer.Buf* out, Expr* e) {$/;"	f
emitCall	$C2_ROOT/generator/c2i/c2i_generator_expr.c2	/^fn void Generator.emitCall(Generator* gen, string_buffer.Buf* out, const CallExpr* call) {$/;"	f
emitCallExpr	$C2_ROOT/generator/ir/ir_generator_call.c2	/^fn void Generator.emitCallExpr(Generator* gen, ir.Ref* result, const Expr* e) {$/;"	f
emitCase	$C2_ROOT/generator/c/c_generator_stmt.c2	/^fn void Generator.emitCase(Generator* gen, SwitchCase* c, u32 indent, u32 *lab) {$/;"	f
emitCase	$C2_ROOT/generator/c2i/c2i_generator_stmt.c2	/^fn void Generator.emitCase(Generator* gen, SwitchCase* c, u32 indent, u32 *lab) {$/;"	f
emitCast	$C2_ROOT/generator/c/c_generator_expr.c2	/^fn void Generator.emitCast(Generator* gen, string_buffer.Buf* out, QualType qt, bool full) {$/;"	f
emitCond	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^fn void Generator.emitCond(Generator* gen, const Expr* e, BlockId true_blk, BlockId false_blk, B/;"	f
emitCondOperator	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^fn void Generator.emitCondOperator(Generator* gen, ir.Ref* result, const Expr* e) {$/;"	f
emitConstExpr	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitConstExpr(Generator* gen, string_buffer.Buf* out, Expr* e, C_Prec prec) {$/;"	f
emitCtv	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitCtv(Generator* \/*gen*\/, string_buffer.Buf* out, const Expr* e) {$/;"	f
emitDeclName	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitDeclName(Generator* gen, string_buffer.Buf* out, const Decl* d) {$/;"	f
emitDeclName	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^fn void Generator.emitDeclName(Generator* gen, string_buffer.Buf* out, Decl* d) {$/;"	f
emitDotOrArrow	$C2_ROOT/generator/c/c_generator_expr.c2	/^fn void emitDotOrArrow(string_buffer.Buf* out, QualType qt) {$/;"	f
emitEnumType	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitEnumType(Generator* gen, string_buffer.Buf* out, Decl* d) {$/;"	f
emitEnumType	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^fn void Generator.emitEnumType(Generator* gen, string_buffer.Buf* out, const Decl* d) {$/;"	f
emitExpr	$C2_ROOT/generator/c/c_generator_expr.c2	/^fn void Generator.emitExpr(Generator* gen, string_buffer.Buf* out, Expr* e) {$/;"	f
emitExpr	$C2_ROOT/generator/c2i/c2i_generator_expr.c2	/^fn void Generator.emitExpr(Generator* gen, string_buffer.Buf* out, const Expr* e) {$/;"	f
emitExpr	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^fn void Generator.emitExpr(Generator* gen, ir.Ref* result, const Expr* e) {$/;"	f
emitExpr2	$C2_ROOT/generator/c/c_generator_expr.c2	/^fn void Generator.emitExpr2(Generator* gen, string_buffer.Buf* out, Expr* e, C_Prec prec) {$/;"	f
emitExprValue	$C2_ROOT/generator/c/c_generator.c2	/^fn bool Generator.emitExprValue(Generator* gen, string_buffer.Buf* out, Expr* e) {$/;"	f
emitFieldDesigExpr	$C2_ROOT/generator/c/c_generator_expr.c2	/^fn void Generator.emitFieldDesigExpr(Generator* gen, string_buffer.Buf* out, Expr* e) {$/;"	f
emitFieldDesigExpr	$C2_ROOT/generator/c2i/c2i_generator_expr.c2	/^fn void Generator.emitFieldDesigExpr(Generator* gen, string_buffer.Buf* out, const FieldDesignat/;"	f
emitForStmt	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^fn void Generator.emitForStmt(Generator* gen, const Stmt* s) {$/;"	f
emitForwardStructDecl	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitForwardStructDecl(Generator* gen, Decl* d, string_buffer.Buf* out) {$/;"	f
emitFuncParams	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitFuncParams(Generator* gen, FunctionDecl* fd, string_buffer.Buf* out) {$/;"	f
emitFunction	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitFunction(Generator* gen, FunctionDecl* fd) {$/;"	f
emitFunction	$C2_ROOT/generator/ir/ir_generator.c2	/^fn void Generator.emitFunction(Generator* gen, FunctionDecl* fd) {$/;"	f
emitFunctionDecl	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^fn void Generator.emitFunctionDecl(Generator* gen, string_buffer.Buf* out, const Decl* d, bool a/;"	f
emitFunctionType	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitFunctionType(Generator* gen, string_buffer.Buf* out, Decl* d) {$/;"	f
emitFunctionTypeDecl	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^fn void Generator.emitFunctionTypeDecl(Generator* gen, string_buffer.Buf* out, const Decl* d) {$/;"	f
emitGlobalDecl	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitGlobalDecl(Generator* gen, Decl* d) {$/;"	f
emitGlobalDecl	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^fn void Generator.emitGlobalDecl(Generator* gen, Decl* d) {$/;"	f
emitGlobalStructInit	$C2_ROOT/generator/ir/ir_generator.c2	/^fn void Generator.emitGlobalStructInit(Generator* gen, const Expr* e) {$/;"	f
emitGlobalVarDecl	$C2_ROOT/generator/c/c_generator.c2	/^fn bool Generator.emitGlobalVarDecl(Generator* gen, string_buffer.Buf* out, Decl* d) {$/;"	f
emitGlobalVarDecl	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^fn void Generator.emitGlobalVarDecl(Generator* gen, string_buffer.Buf* out, const Decl* d) {$/;"	f
emitGlobalVarDeclCommon	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitGlobalVarDeclCommon(Generator* gen, string_buffer.Buf* out, Decl* d) {$/;"	f
emitHeaderDecl	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitHeaderDecl(Generator* gen, Decl* d) {$/;"	f
emitIdentifier	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^fn void Generator.emitIdentifier(Generator* gen, ir.Ref* result, const Expr* e) {$/;"	f
emitIfStmt	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^fn void Generator.emitIfStmt(Generator* gen, const Stmt* s) {$/;"	f
emitInit	$C2_ROOT/generator/ir/ir_generator.c2	/^fn void Generator.emitInit(Generator* gen, const Expr* e, u32 size) {$/;"	f
emitInitExpr	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^fn void Generator.emitInitExpr(Generator* gen, const VarDecl* vd, const Expr* ie) {$/;"	f
emitLogicalAnd	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^fn void Generator.emitLogicalAnd(Generator* gen, ir.Ref* result, const Expr* e) {$/;"	f
emitLogicalOr	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^fn void Generator.emitLogicalOr(Generator* gen, ir.Ref* result, const Expr* e) {$/;"	f
emitMemberExpr	$C2_ROOT/generator/c/c_generator_expr.c2	/^fn void Generator.emitMemberExpr(Generator* gen, string_buffer.Buf* out, Expr* e) {$/;"	f
emitMemberExpr	$C2_ROOT/generator/c2i/c2i_generator_expr.c2	/^fn void Generator.emitMemberExpr(Generator* gen, string_buffer.Buf* out, const MemberExpr* m) {$/;"	f
emitMemberExpr	$C2_ROOT/generator/ir/ir_generator_member.c2	/^fn void Generator.emitMemberExpr(Generator* gen, ir.Ref* result, const Expr* e) {$/;"	f
emitMemberExprBase	$C2_ROOT/generator/c/c_generator_expr.c2	/^fn void Generator.emitMemberExprBase(Generator* gen, string_buffer.Buf* out, Expr* e) {$/;"	f
emitNumberFormat	$C2_ROOT/generator/c/c_generator_expr.c2	/^fn void emitNumberFormat(BuiltinKind kind, char letter, string_buffer.Buf* out) {$/;"	f
emitOpAssign	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^fn void Generator.emitOpAssign(Generator* gen, ir.Ref* result, const Expr* e) {$/;"	f
emitOrCond	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^fn void Generator.emitOrCond(Generator* gen, const BinaryOperator* b, BlockId true_blk, BlockId /;"	f
emitPureFunctionCall	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^fn void Generator.emitPureFunctionCall(Generator* gen, string_buffer.Buf* out, Expr* e) {$/;"	f
emitSectionAttr	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitSectionAttr(Generator* gen, string_buffer.Buf* out, const char* name) {$/;"	f
emitShift	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^fn void Generator.emitShift(Generator* gen, ir.Ref* result, const Expr* e) {$/;"	f
emitStmt	$C2_ROOT/generator/c/c_generator_stmt.c2	/^fn void Generator.emitStmt(Generator* gen, Stmt* s, u32 indent, bool newline) {$/;"	f
emitStmt	$C2_ROOT/generator/c2i/c2i_generator_stmt.c2	/^fn void Generator.emitStmt(Generator* gen, Stmt* s, u32 indent, bool newline) {$/;"	f
emitStmt	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^fn bool Generator.emitStmt(Generator* gen, const Stmt* s) {$/;"	f
emitStmts	$C2_ROOT/generator/ir/ir_generator_switch.c2	/^fn void Generator.emitStmts(Generator* gen, Stmt** stmts, u32 num_stmts) {$/;"	f
emitStruct	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitStruct(Generator* gen, string_buffer.Buf* out, Decl* d, u32 indent) {$/;"	f
emitStruct	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^fn void Generator.emitStruct(Generator* gen, string_buffer.Buf* out, const Decl* d, u32 indent) /;"	f
emitStructInitExpr	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^fn void Generator.emitStructInitExpr(Generator* gen, const StackVar* var, const Expr* e) {$/;"	f
emitStructMember	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitStructMember(Generator* gen, string_buffer.Buf* out, Decl* d, u32 indent) /;"	f
emitStructMember	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^fn void Generator.emitStructMember(Generator* gen, string_buffer.Buf* out, Decl* d, u32 indent) /;"	f
emitSwitchCase	$C2_ROOT/generator/ir/ir_generator_switch.c2	/^fn bool Generator.emitSwitchCase(Generator* gen,$/;"	f
emitSwitchStmt	$C2_ROOT/generator/c/c_generator_stmt.c2	/^fn void Generator.emitSwitchStmt(Generator* gen, SwitchStmt* sw, u32 indent) {$/;"	f
emitSwitchStmt	$C2_ROOT/generator/c2i/c2i_generator_stmt.c2	/^fn void Generator.emitSwitchStmt(Generator* gen, SwitchStmt* sw, u32 indent) {$/;"	f
emitSwitchStmt	$C2_ROOT/generator/ir/ir_generator_switch.c2	/^fn void Generator.emitSwitchStmt(Generator* gen, const Stmt* s) {$/;"	f
emitSymbol	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^fn void Generator.emitSymbol(Generator* gen, ir.Ref* result, Decl* d) {$/;"	f
emitType	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^fn void Generator.emitType(Generator* gen, string_buffer.Buf* out, QualType qt) {$/;"	f
emitTypePost	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitTypePost(Generator* gen, string_buffer.Buf* out, QualType qt) {$/;"	f
emitTypePost	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^fn void Generator.emitTypePost(Generator* gen, string_buffer.Buf* out, QualType qt) {$/;"	f
emitTypePre	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emitTypePre(Generator* gen, string_buffer.Buf* out, QualType qt) {$/;"	f
emitTypePre	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^fn void Generator.emitTypePre(Generator* gen, string_buffer.Buf* out, QualType qt) {$/;"	f
emitUnaryOperator	$C2_ROOT/generator/c/c_generator_expr.c2	/^fn void Generator.emitUnaryOperator(Generator* gen, string_buffer.Buf* out, Expr* e, C_Prec prec/;"	f
emitUnaryOperator	$C2_ROOT/generator/c2i/c2i_generator_expr.c2	/^fn void Generator.emitUnaryOperator(Generator* gen, string_buffer.Buf* out, const UnaryOperator*/;"	f
emitUnaryOperator	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^fn void Generator.emitUnaryOperator(Generator* gen, ir.Ref* result, const Expr* e) {$/;"	f
emitVarDecl	$C2_ROOT/generator/c/c_generator_stmt.c2	/^fn void Generator.emitVarDecl(Generator* gen, VarDecl* vd, string_buffer.Buf* out, bool emit_ini/;"	f
emitVarDecl	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^fn void Generator.emitVarDecl(Generator* gen, string_buffer.Buf* out, const VarDecl* vd, bool fi/;"	f
emitVarDecl	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^fn void Generator.emitVarDecl(Generator* gen, ir.Ref* result, Decl* d) {$/;"	f
emitWhileStmt	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^fn void Generator.emitWhileStmt(Generator* gen, const Stmt* s) {$/;"	f
emit_external_header	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.emit_external_header(Generator* gen, bool enable_asserts, const char* target) /;"	f
empty_block	$C2_ROOT/ir/context.c2	/^fn bool empty_block(const Block* b, const InstrList* instructions) {$/;"	f
enable	$C2_ROOT/bootstrap/bootstrap.c	/^   console_show_timing = enable;$/;"	v
enable	$C2_ROOT/common/console.c2	/^    show_timing = enable;$/;"	v
enable	$C2_ROOT/ir/interference_graph.c2	/^public fn void InterferenceGraph.enable(InterferenceGraph* g, u16 var_idx) {$/;"	f
enableFrameStats	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void enableFrameStats() @(cname="sg_enable_frame_stats");$/;"	f
enableTexture	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void enableTexture() @(cname="sgl_enable_texture");$/;"	f
enableWarnings	$C2_ROOT/common/build_target.c2	/^public fn void Target.enableWarnings(Target* t) {$/;"	f
enable_asserts	$C2_ROOT/bootstrap/bootstrap.c	/^   gen.enable_asserts = enable_asserts;$/;"	v
enable_asserts	$C2_ROOT/generator/c/c_generator.c2	/^    gen.enable_asserts = enable_asserts;$/;"	v
enable_asserts	$C2_ROOT/generator/ir/ir_generator.c2	/^    gen.enable_asserts = enable_asserts;$/;"	v
enable_clipboard	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool enable_clipboard;$/;"	v
enable_dragndrop	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool enable_dragndrop;$/;"	v
enabled	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool enabled;$/;"	v
encode	$C2_ROOT/common/utf8.c2	/^public fn u32 encode(char *dest, u32 max_len, u32 cc) {$/;"	f
encodeBytes	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn u32 Buf.encodeBytes(Buf* buf, const char* p, u32 len, char sep) {$/;"	f
encodeHex	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void Buf.encodeHex(Buf* buf, const u8* data, u32 len) @(unused) {$/;"	f
end	$C2_ROOT/ast_utils/src_loc.c2	/^    SrcLoc end;$/;"	v
end	$C2_ROOT/bootstrap/bootstrap.c	/^   src_loc_SrcLoc end;$/;"	v
end	$C2_ROOT/generator/c2refs.c2	/^fn void Files.end(Files* f, u32 idx, u32 link_count) {$/;"	f
end	$C2_ROOT/ir_examples/goto.c2	/^    goto end;$/;"	v
end	$C2_ROOT/ir_examples/label.c2	/^            goto end;$/;"	v
end	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void end() @(cname="sgl_end");$/;"	f
endBlock	$C2_ROOT/ir/context.c2	/^public fn void Context.endBlock(Context* c) {$/;"	f
endFunc	$C2_ROOT/ir/context.c2	/^public fn void Context.endFunc(Context* c) {$/;"	f
endGlobal	$C2_ROOT/ir/context.c2	/^public fn void Context.endGlobal(Context* c) {$/;"	f
endLoc	$C2_ROOT/ast/call_expr.c2	/^    e2.endLoc = e.endLoc;$/;"	v
endLoc	$C2_ROOT/ast/init_list_expr.c2	/^    return e.endLoc;$/;"	v
endLoc	$C2_ROOT/bootstrap/bootstrap.c	/^   src_loc_SrcLoc endLoc;$/;"	v
endPass	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void endPass() @(cname="sg_end_pass");$/;"	f
endTarget	$C2_ROOT/compiler/plugin_mgr.c2	/^public fn void Mgr.endTarget(Mgr* m) {$/;"	f
end_col	$C2_ROOT/common/diagnostics.c2	/^                    end_col = range_end_col;$/;"	v
end_file	$C2_ROOT/generator/c2refs.c2	/^public fn void Refs.end_file(Refs* r) {$/;"	f
end_target	$C2_ROOT/bootstrap/bootstrap.c	/^   compiler_PluginFn end_target;$/;"	v
endif	Makefile	/^endif$/;"	v
endif	bootstrap/Makefile	/^endif$/;"	v
endsWith	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn bool Buf.endsWith(const Buf* buf, char c) {$/;"	f
endsWith	$C2_ROOT/common/string_utils.c2	/^public fn bool endsWith(const char* text, const char* tail) @(unused) {$/;"	f
endwin	$C2_ROOT/libs/curses/curses.c2i	/^fn void endwin();$/;"	f
enforce_portable_limits	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool enforce_portable_limits;$/;"	v
enqueue	$C2_ROOT/ir/interference_graph.c2	/^fn void InterferenceGraph.enqueue(InterferenceGraph* g, u16 var_idx) {$/;"	f
enter	$C2_ROOT/analyser/scope.c2	/^public fn void Scope.enter(Scope* s, u32 flags) {$/;"	f
enterScope	$C2_ROOT/generator/ir/ir_generator.c2	/^fn void Generator.enterScope(Generator* gen, u32 break_block, u32 continue_block) {$/;"	f
entries	$C2_ROOT/analyser/incr_array_list.c2	/^    Info* entries;$/;"	v
entries	$C2_ROOT/analyser/init_checker.c2	/^    InitEntry* entries;$/;"	v
entries	$C2_ROOT/ast_utils/string_pool.c2	/^    p.entries = entries;$/;"	v
entries	$C2_ROOT/bootstrap/bootstrap.c	/^   string_pool_HashEntry* entries;$/;"	v
entries	$C2_ROOT/common/attr_handler.c2	/^    Entry* entries;$/;"	v
entries	$C2_ROOT/generator/ir/array_init_sorter.c2	/^    InitEntry* entries;$/;"	v
entries2	$C2_ROOT/analyser/incr_array_list.c2	/^    v.entries = entries2;$/;"	v
entries2	$C2_ROOT/bootstrap/bootstrap.c	/^   v->entries = entries2;$/;"	v
entries2	$C2_ROOT/common/attr_handler.c2	/^        h.entries = entries2;$/;"	v
entropy_func	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int entropy_func(void* data, c_uchar* output, c_size len) @(cname="mbedtls_entropy_func");$/;"	f
entropy_init	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void entropy_init( Entropy_context *ctx ) @(cname="mbedtls_entropy_init");$/;"	f
entry	$C2_ROOT/bootstrap/bootstrap.c	/^   s->entries[idx] = entry;$/;"	v
entry	$C2_ROOT/generator/ir/array_init_sorter.c2	/^    s.entries[idx] = entry;$/;"	v
entry	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    const char* entry;$/;"	v
entry_capacity	$C2_ROOT/ast_utils/string_pool.c2	/^    u32 entry_capacity;$/;"	v
entry_capacity	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t entry_capacity;$/;"	v
entry_ext	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    X509_buf entry_ext;$/;"	v
entry_size	$C2_ROOT/ast_utils/string_pool.c2	/^            next = p.entry_size;$/;"	v
entry_size	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t entry_size;$/;"	v
enumConstantDeclBits	$C2_ROOT/ast/decl.c2	/^        EnumConstantDeclBits enumConstantDeclBits;$/;"	v
enumConstantDeclBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_EnumConstantDeclBits enumConstantDeclBits;$/;"	v
enumTypeDeclBits	$C2_ROOT/ast/decl.c2	/^        EnumTypeDeclBits enumTypeDeclBits;$/;"	v
enumTypeDeclBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_EnumTypeDeclBits enumTypeDeclBits;$/;"	v
enum_functions	$C2_ROOT/ast/enum_type_decl.c2	/^    FunctionDecl** enum_functions;$/;"	v
enum_functions	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_FunctionDecl** enum_functions;$/;"	v
enum_index	$C2_ROOT/ast/enum_constant_decl.c2	/^    return d.base.enumConstantDeclBits.enum_index;$/;"	v
enum_index	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->base.enumConstantDeclBits.enum_index;$/;"	v
environment	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    Environment environment;$/;"	v
environment	$C2_ROOT/libs/sokol/sokol_glue.c2i	/^fn Environment environment() @(cname="sglue_environment");$/;"	f
epoll_event	$C2_ROOT/libs/io_uring/io_uring.c2i	/^struct epoll_event;$/;"	v
equals	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn bool equals(const char* str, const char* expect, u32 len) {$/;"	f
equals	$C2_ROOT/ir/ref.c2	/^fn bool Ref.equals(const Ref* r1, Ref r2) {$/;"	f
erand48	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_double erand48(u16* __xsubi);$/;"	f
erand48_r	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int erand48_r(u16* __xsubi, Drand48_data* __buffer, c_double* __result);$/;"	f
erf	$C2_ROOT/libs/math/math.c2i	/^fn c_double erf(c_double);$/;"	f
erfc	$C2_ROOT/libs/math/math.c2i	/^fn c_double erfc(c_double);$/;"	f
erfcf	$C2_ROOT/libs/math/math.c2i	/^fn c_float erfcf(c_float);$/;"	f
erff	$C2_ROOT/libs/math/math.c2i	/^fn c_float erff(c_float);$/;"	f
errno	$C2_ROOT/common/file/file_utils.c2	/^    errno = ENAMETOOLONG;$/;"	v
errno	$C2_ROOT/common/file/reader.c2	/^        file.error = errno;$/;"	v
errno	$C2_ROOT/common/file/writer.c2	/^        file.error = errno;$/;"	v
errno	$C2_ROOT/common/process_utils.c2	/^        i32 lasterr = errno;$/;"	v
errno2	$C2_ROOT/libs/libc/c_errno.c2i	/^fn c_int* errno2() @(cname="__error");$/;"	f
error	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.error(Analyser* ma, SrcLoc loc, const char* format @(printf_format), ...) {$/;"	f
error	$C2_ROOT/ast/ast_evaluator.c2	/^fn Cont Evaluator.error(Evaluator* sf, const char* msg) {$/;"	f
error	$C2_ROOT/ast/value.c2	/^fn Value Value.error(const char* msg) {$/;"	f
error	$C2_ROOT/bootstrap/bootstrap.c	/^   int32_t error;$/;"	v
error	$C2_ROOT/common/console.c2	/^public fn void error(const char* format @(printf_format), ...) {$/;"	f
error	$C2_ROOT/common/diagnostics.c2	/^public fn void Diags.error(Diags* diags, SrcLoc loc, const char* format @(printf_format), ...) {$/;"	f
error	$C2_ROOT/common/file/file_utils.c2	/^    i32 error;$/;"	v
error	$C2_ROOT/common/process_utils.c2	/^        char[256] error;$/;"	v
error	$C2_ROOT/common/yaml/yaml_parser.c2	/^fn void Parser.error(Parser* p, const char* format @(printf_format), ...) {$/;"	f
error	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^fn void Tokenizer.error(Tokenizer* t, Token* result) {$/;"	f
error	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Parser.error(Parser* p, const char* format @(printf_format), ...) @(noreturn) {$/;"	f
error	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int error(State *L) @(cname="lua_error");$/;"	f
error	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn Error error() @(cname="sgl_error");$/;"	f
error	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.error(Parser* p, const char* format @(printf_format), ...) @(noreturn) {$/;"	f
error	$C2_ROOT/parser/c2_tokenizer.c2	/^fn void Tokenizer.error(Tokenizer* t, Token* result, const char* format @(printf_format), ...) {$/;"	f
error2	$C2_ROOT/common/diagnostics.c2	/^public fn void Diags.error2(Diags* diags, SrcLoc loc, const char* format, va_list args) {$/;"	f
errorRange	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.errorRange(Analyser* ma, SrcLoc loc, SrcRange range, const char* format @(print/;"	f
errorRange	$C2_ROOT/common/diagnostics.c2	/^public fn void Diags.errorRange(Diags* diags,$/;"	f
errorRange2	$C2_ROOT/common/diagnostics.c2	/^public fn void Diags.errorRange2(Diags* diags,$/;"	f
error_buffer	$C2_ROOT/plugins/unit_test2.c2	/^char[4096] error_buffer;$/;"	v
error_code	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    Html5FetchError error_code;$/;"	v
error_diag	$C2_ROOT/common/console.c2	/^public fn void error_diag(const char* loc, const char* format @(printf_format), ...) {$/;"	f
error_msg	$C2_ROOT/ast/value.c2	/^        const char* error_msg;$/;"	v
error_msg	$C2_ROOT/bootstrap/bootstrap.c	/^   t->error_msg = error_msg;$/;"	v
error_msg	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    t.error_msg = error_msg;$/;"	v
error_msg	$C2_ROOT/compiler/plugin_mgr.c2	/^    return m.error_msg;$/;"	v
error_msg	$C2_ROOT/parser/c2_tokenizer.c2	/^    result.error_msg = t.error_msg;$/;"	v
error_msg	$C2_ROOT/plugins/unit_test2.c2	/^char* error_msg;$/;"	v
error_size	$C2_ROOT/plugins/unit_test2.c2	/^u32 error_size;$/;"	v
esc_len	$C2_ROOT/ast_utils/string_buffer.c2	/^                    esc_len = 2;$/;"	v
esc_len	$C2_ROOT/bootstrap/bootstrap.c	/^      t->cur += esc_len;$/;"	v
esc_len	$C2_ROOT/parser/c2_tokenizer.c2	/^        t.cur += esc_len;$/;"	v
etd	$C2_ROOT/analyser/module_analyser_member.c2	/^                    d = (Decl*)etd;$/;"	v
etd	$C2_ROOT/ast/decl.c2	/^        Decl* ed = (Decl*)etd;$/;"	v
eval	$C2_ROOT/ast/ast_evaluator.c2	/^fn Cont WhileStmt.eval(WhileStmt* s, Evaluator* sf) {$/;"	f
eval	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_Evaluator eval;$/;"	v
eval	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^    Evaluator eval;$/;"	v
evalExpr	$C2_ROOT/ast/ast_evaluator.c2	/^public fn Value evalExpr(const Expr* e) {$/;"	f
eval_call	$C2_ROOT/ast/ast_evaluator.c2	/^fn Value Evaluator.eval_call(Evaluator* caller, const CallExpr* c) {$/;"	f
event_cb	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    EventCb event_cb;$/;"	v
event_userdata_cb	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    EventDataCb event_userdata_cb;$/;"	v
events	$C2_ROOT/libs/libc/libc_poll.c2i	/^    i16 events;$/;"	v
exampleUsage	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn void exampleUsage() {$/;"	f
execl	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int execl(const char *pathname, const char *arg, ...);$/;"	f
execle	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int execle(const char *pathname, const char *arg, ...);$/;"	f
execlp	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int execlp(const char *file, const char *arg, ...);$/;"	f
execv	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int execv(const char *pathname, char** argv); \/\/ actually char* const argv[]$/;"	f
execvp	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int execvp(const char *file, char** argv);    \/\/ actually char* const argv[]$/;"	f
execvpe	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int execvpe(const char *file, char** argv, const char** envp); \/\/ actually char* const en/;"	f
exists	$C2_ROOT/common/file/file_utils.c2	/^public fn bool File.exists(File *file) @(unused) {$/;"	f
exit	$C2_ROOT/analyser/scope.c2	/^public fn void Scope.exit(Scope* s, bool has_error) {$/;"	f
exit	$C2_ROOT/install_plugins.sh	/^   exit 1$/;"	v
exit	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void Ring.exit(Ring* ring) @(cname="io_uring_queue_exit");$/;"	f
exit	$C2_ROOT/libs/libc/stdlib.c2i	/^fn void exit(c_int __status) @(noreturn);$/;"	f
exp	$C2_ROOT/ast/value.c2	/^    char* decimals = exp;$/;"	v
exp	$C2_ROOT/bootstrap/bootstrap.c	/^   char* decimals = exp;$/;"	v
exp	$C2_ROOT/libs/math/math.c2i	/^fn c_double exp(c_double);$/;"	f
exp2	$C2_ROOT/libs/math/math.c2i	/^fn c_double exp2(c_double);$/;"	f
exp2f	$C2_ROOT/libs/math/math.c2i	/^fn c_float exp2f(c_float);$/;"	f
expand	$C2_ROOT/bootstrap/bootstrap.c	/^      raw = expand;$/;"	v
expand	$C2_ROOT/common/build_file.c2	/^fn u32 Info.expand(Info* info, const char* raw) {$/;"	f
expect	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Parser.expect(Parser* p, Kind kind, const char* msg) {$/;"	f
expect	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^fn i32 expect() @(cname="saudio_expect");$/;"	f
expect	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.expect(Parser* p, Kind kind) {$/;"	f
expectAndConsume	$C2_ROOT/common/yaml/yaml_parser.c2	/^fn void Parser.expectAndConsume(Parser* p, TokenKind kind) {$/;"	f
expectAndConsume	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.expectAndConsume(Parser* p, Kind kind) {$/;"	f
expectError	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.expectError(Parser* p, Kind kind) {$/;"	f
expectIdentifier	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.expectIdentifier(Parser* p) {$/;"	f
expf	$C2_ROOT/libs/math/math.c2i	/^fn c_float expf(c_float);$/;"	f
explicitCastExprBits	$C2_ROOT/ast/stmt.c2	/^        ExplicitCastExprBits explicitCastExprBits;$/;"	v
explicitCastExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_ExplicitCastExprBits explicitCastExprBits;$/;"	v
expm1	$C2_ROOT/libs/math/math.c2i	/^fn c_double expm1(c_double);$/;"	f
expm1f	$C2_ROOT/libs/math/math.c2i	/^fn c_float expm1f(c_float);$/;"	f
exports	$C2_ROOT/bootstrap/bootstrap.c	/^   string_list_List exports;$/;"	v
exports	$C2_ROOT/common/build_target.c2	/^    string_list.List exports;$/;"	v
exports	$C2_ROOT/compiler/compiler.c2	/^    bool is_image; \/\/ require build-file, dont allow dynamic libs, dont allow module exports$/;"	m
expr	$C2_ROOT/ast/member_expr.c2	/^    if (e.hasExpr()) return e.refs[0].expr;$/;"	v
expr	$C2_ROOT/ast/var_decl.c2	/^    if (info) return info.expr;$/;"	v
expr	$C2_ROOT/bootstrap/bootstrap.c	/^   if (info) return info->expr;$/;"	v
expr	$C2_ROOT/generator/ir/array_init_sorter.c2	/^    const ast.Expr* expr;$/;"	v
expr	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^    ast.Expr* expr;$/;"	v
expr2function	$C2_ROOT/ast/ast_evaluator.c2	/^fn FunctionDecl* expr2function(Expr* e) {$/;"	f
expr2function	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^fn FunctionDecl* expr2function(Expr* e) {$/;"	f
exprBits	$C2_ROOT/ast/stmt.c2	/^        ExprBits exprBits;$/;"	v
exprBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_ExprBits exprBits;$/;"	v
expr_list	$C2_ROOT/parser/c2_parser_switch.c2	/^import expr_list;$/;"	v
expr_list	$C2_ROOT/parser/expr_list.c2	/^module expr_list;$/;"	v
expr_list_List	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct expr_list_List_ expr_list_List;$/;"	v
expr_ptr	$C2_ROOT/analyser/conversion_checker.c2	/^    Expr** expr_ptr;$/;"	v
expr_ptr	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_Expr** expr_ptr;$/;"	v
exprs	$C2_ROOT/ast/asm_stmt.c2	/^    Expr*[0] exprs;$/;"	v
exprs	$C2_ROOT/ast/expr_list.c2	/^    return l.exprs;$/;"	v
exprs	$C2_ROOT/ast/statistics.c2	/^    Stat[elemsof(ExprKind)] exprs;$/;"	v
exprs	$C2_ROOT/bootstrap/bootstrap.c	/^   return l->exprs;$/;"	v
exprs	$C2_ROOT/parser/ast_builder.c2	/^                                      exprs,$/;"	v
exprs2	$C2_ROOT/ast/expr_list.c2	/^            l.exprs = exprs2;$/;"	v
exprs2	$C2_ROOT/bootstrap/bootstrap.c	/^         l->exprs = exprs2;$/;"	v
extend	$C2_ROOT/ast_utils/string_buffer.c2	/^fn bool Buf.extend(Buf* buf, u32 len) {$/;"	f
extension	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    c_uchar ns_cert_type; \/**< Optional Netscape certificate type extension value: See the valu/;"	t
extra	$C2_ROOT/ast/explicit_cast_expr.c2	/^    u32 size = sizeof(ExplicitCastExpr) + extra;$/;"	v
extra	$C2_ROOT/ast/function_decl.c2	/^    u32 size = sizeof(FunctionDecl) + num_params * sizeof(VarDecl*) + extra;$/;"	v
extra	$C2_ROOT/ast/type_expr.c2	/^    u32 size = sizeof(TypeExpr) + extra;$/;"	v
extra	$C2_ROOT/ast/type_ref.c2	/^    return extra;$/;"	v
extra	$C2_ROOT/ast/var_decl.c2	/^    u32 size = sizeof(VarDecl) + extra;$/;"	v
extra	$C2_ROOT/bootstrap/bootstrap.c	/^   return extra;$/;"	v
extra	$C2_ROOT/ir/case_list.c2	/^    l.capacity += extra;$/;"	v
extra	$C2_ROOT/ir/instr_list.c2	/^    u32 new_count = l.count + extra;$/;"	v
extra	$C2_ROOT/ir/phi_list.c2	/^    l.capacity += extra;$/;"	v
f2	$C2_ROOT/generator/c2refs.c2	/^    return f2;$/;"	v
f32	$C2_ROOT/ir/constant.c2	/^        f32 svalue;$/;"	v
f32	$C2_ROOT/libs/c2/c2.c2i	/^type c_float f32;$/;"	v
f32	$C2_ROOT/libs/c2/f32.c2i	/^module f32;$/;"	v
f32	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    f32 scroll_y;$/;"	v
f32	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    f32 canvas_width;$/;"	v
f32	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    f32 r;$/;"	v
f32	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    f32 z;$/;"	v
f64	$C2_ROOT/ast/float_literal.c2	/^    f64 val;$/;"	v
f64	$C2_ROOT/ast/value.c2	/^        f64 fvalue;$/;"	v
f64	$C2_ROOT/ir/constant.c2	/^        f64 dvalue;$/;"	v
f64	$C2_ROOT/libs/c2/c2.c2i	/^type c_double f64;$/;"	v
f64	$C2_ROOT/libs/c2/f64.c2i	/^module f64;$/;"	v
f_cookie_check	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    Ctx_cookie_check_f f_cookie_check;$/;"	v
f_cookie_write	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    Ctx_cookie_write_f f_cookie_write;$/;"	v
f_dbg	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    Cfg_dbg_f f_dbg;$/;"	v
f_export_keys	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    Ctx_export_keys_f f_export_keys;$/;"	v
f_export_keys_ext	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^     Ctx_export_keys_ext_f f_export_keys_ext;$/;"	v
f_get_cache	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    Cfg_get_cache_f f_get_cache;$/;"	v
f_psk	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    Ctx_psk_f f_psk;$/;"	v
f_ptr	$C2_ROOT/generator/c2refs.c2	/^    Lengths* f = *f_ptr;$/;"	v
f_rng	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    Cfg_rng_f f_rng;$/;"	v
f_set_cache	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    Cfg_set_cache_f f_set_cache;$/;"	v
f_sni	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    Cfg_sni_f f_sni;$/;"	v
f_ticket_parse	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    Ctx_ticket_parse_f f_ticket_parse;$/;"	v
f_ticket_write	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    Ctx_ticket_write_f f_ticket_write;$/;"	v
f_vrfy	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    Ctx_vrfy_f f_vrfy;$/;"	v
fabs	$C2_ROOT/ast/value.c2	/^fn f64 fabs(f64 d) {$/;"	f
fabs	$C2_ROOT/libs/math/math.c2i	/^fn c_double fabs(c_double);$/;"	f
fabsf	$C2_ROOT/libs/math/math.c2i	/^fn c_float fabsf(c_float);$/;"	f
face_winding	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FaceWinding face_winding;$/;"	v
face_winding	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    FaceWinding face_winding;$/;"	v
fadvise_advice	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        u32       fadvise_advice;$/;"	v
failBuffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void failBuffer(Buffer buf) @(cname="sg_fail_buffer");$/;"	f
failImage	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void failImage(Image img) @(cname="sg_fail_image");$/;"	f
failPipeline	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void failPipeline(Pipeline pip) @(cname="sg_fail_pipeline");$/;"	f
failSampler	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void failSampler(Sampler smp) @(cname="sg_fail_sampler");$/;"	f
failShader	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void failShader(Shader shd) @(cname="sg_fail_shader");$/;"	f
failView	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void failView(View view) @(cname="sg_fail_view");$/;"	f
fail_op	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    StencilOp fail_op;$/;"	v
failed	$C2_ROOT/plugins/unit_test2.c2	/^  u32 failed;$/;"	v
fallthrough	$C2_ROOT/analyser/conversion_checker_expr.c2	/^        fallthrough;$/;"	v
fallthrough	$C2_ROOT/analyser/module_analyser_binop.c2	/^        fallthrough;$/;"	v
fallthrough	$C2_ROOT/ast/ast_evaluator.c2	/^            fallthrough;$/;"	v
fallthrough	$C2_ROOT/ast_utils/string_buffer.c2	/^            fallthrough;$/;"	v
fallthrough	$C2_ROOT/bootstrap/bootstrap.c	/^      fallthrough;$/;"	v
fallthrough	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^            fallthrough;$/;"	v
fallthrough	$C2_ROOT/generator/c/c_generator_expr.c2	/^        fallthrough;$/;"	v
fallthrough	$C2_ROOT/parser/c2_parser.c2	/^            fallthrough;$/;"	v
fallthrough	$C2_ROOT/parser/c2_tokenizer.c2	/^            fallthrough;$/;"	v
false	$C2_ROOT/analyser/conversion_checker.c2	/^    return false;$/;"	v
false	$C2_ROOT/analyser/conversion_checker_expr.c2	/^        w.is_signed = false;$/;"	v
false	$C2_ROOT/analyser/module_analyser.c2	/^    ma.usedPublic = false;$/;"	v
false	$C2_ROOT/analyser/module_analyser_binop.c2	/^    return false;$/;"	v
false	$C2_ROOT/analyser/module_analyser_builtin.c2	/^    ma.usedPublic = false;$/;"	v
false	$C2_ROOT/analyser/module_analyser_call.c2	/^    bool has_printf_format = false;$/;"	v
false	$C2_ROOT/analyser/module_analyser_expr.c2	/^    if (qt.isInvalid()) return false;$/;"	v
false	$C2_ROOT/analyser/module_analyser_function.c2	/^    ma.has_error = false;$/;"	v
false	$C2_ROOT/analyser/module_analyser_init.c2	/^    return false;$/;"	v
false	$C2_ROOT/analyser/module_analyser_member.c2	/^            bool inner_const = false;$/;"	v
false	$C2_ROOT/analyser/module_analyser_stmt.c2	/^    if (!ft) return false;$/;"	v
false	$C2_ROOT/analyser/module_analyser_struct.c2	/^        ma.usedPublic = false;$/;"	v
false	$C2_ROOT/analyser/module_analyser_switch.c2	/^    bool is_string = false;$/;"	v
false	$C2_ROOT/analyser/module_analyser_type.c2	/^            return false;$/;"	v
false	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^    return false;$/;"	v
false	$C2_ROOT/analyser/name_vector.c2	/^    return false;$/;"	v
false	$C2_ROOT/analyser/scope.c2	/^    return false;$/;"	v
false	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^        return false;$/;"	v
false	$C2_ROOT/analyser_utils/printf_utils.c2	/^                    return false;$/;"	v
false	$C2_ROOT/ast/array_type.c2	/^    t.base.arrayTypeBits.is_incremental = false;$/;"	v
false	$C2_ROOT/ast/decl.c2	/^    return false;$/;"	v
false	$C2_ROOT/ast/expr.c2	/^    return false;$/;"	v
false	$C2_ROOT/ast/function_decl.c2	/^    if (!d.hasAttrInline()) return false;$/;"	v
false	$C2_ROOT/ast/implicit_cast_expr.c2	/^        e.base.base.exprBits.is_ctv = false;$/;"	v
false	$C2_ROOT/ast/module.c2	/^    m.is_loaded = false;$/;"	v
false	$C2_ROOT/ast/qualtype.c2	/^    return false;$/;"	v
false	$C2_ROOT/ast/type_ref.c2	/^    if (r.flags.kind != TypeRefKind.User || r.flags.has_prefix) return false;$/;"	v
false	$C2_ROOT/ast/unary_operator.c2	/^    case PostDec: return false;$/;"	v
false	$C2_ROOT/ast/value.c2	/^    v.overflow = false;$/;"	v
false	$C2_ROOT/ast_utils/string_buffer.c2	/^    buf.truncated = false;$/;"	v
false	$C2_ROOT/ast_utils/string_pool.c2	/^            return false;$/;"	v
false	$C2_ROOT/bootstrap/bootstrap.c	/^static _Bool console_use_color = false;$/;"	v
false	$C2_ROOT/common/attr_handler.c2	/^    return false;$/;"	v
false	$C2_ROOT/common/build_target.c2	/^    t.warnings.no_unused_variable = false;$/;"	v
false	$C2_ROOT/common/console.c2	/^bool use_color = false;$/;"	v
false	$C2_ROOT/common/dsm_sorter.c2	/^        bool has_deps = false;$/;"	v
false	$C2_ROOT/common/file/file_utils.c2	/^    if (!file.init(dir, filename)) return false;$/;"	v
false	$C2_ROOT/common/file/reader.c2	/^    if (file.error) return false;$/;"	v
false	$C2_ROOT/common/file/writer.c2	/^    if (file.error) return false;$/;"	v
false	$C2_ROOT/common/library_list.c2	/^    return false;$/;"	v
false	$C2_ROOT/common/module_list.c2	/^    return false;$/;"	v
false	$C2_ROOT/common/string_list.c2	/^    return false;$/;"	v
false	$C2_ROOT/common/target_info.c2	/^        return false;$/;"	v
false	$C2_ROOT/common/utils.c2	/^            return false;$/;"	v
false	$C2_ROOT/common/yaml/yaml_parser.c2	/^    p.in_document = false;$/;"	v
false	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    return false;$/;"	v
false	$C2_ROOT/compiler/c2recipe_parser.c2	/^    return false;$/;"	v
false	$C2_ROOT/compiler/c2recipe_yaml.c2	/^        return false;$/;"	v
false	$C2_ROOT/compiler/compiler.c2	/^            return false;$/;"	v
false	$C2_ROOT/compiler/compiler_libs.c2	/^    return false;$/;"	v
false	$C2_ROOT/compiler/main.c2	/^    bool hasError = false;$/;"	v
false	$C2_ROOT/compiler/manifest.c2	/^    bool kind_static = false;$/;"	v
false	$C2_ROOT/compiler/plugin_mgr.c2	/^    return false;$/;"	v
false	$C2_ROOT/generator/c/c_generator.c2	/^    return false;$/;"	v
false	$C2_ROOT/generator/c/c_generator_expr.c2	/^    bool need_dot = false;$/;"	v
false	$C2_ROOT/generator/c/c_generator_stmt.c2	/^    bool multi_line = false;$/;"	v
false	$C2_ROOT/generator/c2_trace.c2	/^    return false;$/;"	v
false	$C2_ROOT/generator/c2i/c2i_generator.c2	/^    gen.in_body = false;$/;"	v
false	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^        if (out.endsWith('}')) semi = false;$/;"	v
false	$C2_ROOT/generator/c2i/c2i_generator_expr.c2	/^        bool newlines = false;$/;"	v
false	$C2_ROOT/generator/c2i/c2i_generator_stmt.c2	/^    bool multi_line = false;$/;"	v
false	$C2_ROOT/generator/c2refs.c2	/^    if (fd == -1) return false;$/;"	v
false	$C2_ROOT/generator/generator_utils.c2	/^    return false;$/;"	v
false	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^    bool have_bitfield = false;$/;"	v
false	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^    bool allBitsSet = false;$/;"	v
false	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        return false;$/;"	v
false	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^        return false;$/;"	v
false	$C2_ROOT/generator/ir/ir_generator_switch.c2	/^    bool prev_fallthrough = false;$/;"	v
false	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    if (t.nodes.root_idx == 0) return false;$/;"	v
false	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    t.is_created = false;$/;"	v
false	$C2_ROOT/ir/common.c2	/^    return false;$/;"	v
false	$C2_ROOT/ir/context.c2	/^    return false;$/;"	v
false	$C2_ROOT/ir/live_map.c2	/^    return false;$/;"	v
false	$C2_ROOT/ir/phi_list.c2	/^    return false;$/;"	v
false	$C2_ROOT/ir/print.c2	/^    bool prev_is_var = false;$/;"	v
false	$C2_ROOT/ir/ref.c2	/^    if (r1.value != r2.value) return false;$/;"	v
false	$C2_ROOT/ir/register_alloc.c2	/^        changed = false;$/;"	v
false	$C2_ROOT/ir/rpo.c2	/^    for (u32 i=0; i<num_blocks; i++) blocks[i].checked = false;$/;"	v
false	$C2_ROOT/ir/slot_collector.c2	/^            bool found = false;$/;"	v
false	$C2_ROOT/ir/ssa.c2	/^    bool changed = false;$/;"	v
false	$C2_ROOT/ir/switch.c2	/^    return false;$/;"	v
false	$C2_ROOT/parser/ast_builder.c2	/^    return false;$/;"	v
false	$C2_ROOT/parser/c2_parser.c2	/^    return false;$/;"	v
false	$C2_ROOT/parser/c2_parser_expr.c2	/^    return false;$/;"	v
false	$C2_ROOT/parser/c2_parser_stmt.c2	/^    return false;$/;"	v
false	$C2_ROOT/parser/c2_parser_switch.c2	/^    bool has_default = false;$/;"	v
false	$C2_ROOT/parser/c2_parser_type.c2	/^    bool is_incr = false;$/;"	v
false	$C2_ROOT/parser/c2_tokenizer.c2	/^    t.stop_at_eol = false;$/;"	v
false	$C2_ROOT/plugins/deps_generator.c2	/^    if (basic_mode) gen.show_files = false;$/;"	v
false	$C2_ROOT/plugins/deps_generator_utils.c2	/^        return false;$/;"	v
false	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^        return false;$/;"	v
false	$C2_ROOT/plugins/unit_test_plugin.c2	/^        return false;$/;"	v
fast_build	$C2_ROOT/bootstrap/bootstrap.c	/^   gen.fast_build = fast_build;$/;"	v
fast_build	$C2_ROOT/compiler/compiler.c2	/^    bool fast_build;$/;"	v
fast_build	$C2_ROOT/generator/c/c_generator.c2	/^    gen.fast_build = fast_build;$/;"	v
fchdir	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int fchdir(c_int fd);$/;"	f
fchmod	$C2_ROOT/libs/libc/sys_stat.c2i	/^fn c_int fchmod(c_int fd, Mode mode);$/;"	f
fchmodat	$C2_ROOT/libs/libc/sys_stat.c2i	/^fn c_int fchmodat(c_int dirfd, const char* pathname, Mode mode, c_int flag);$/;"	f
fclose	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int fclose(FILE* __stream);$/;"	f
fcntl	$C2_ROOT/libs/libc/libc_fcntl.c2i	/^fn c_int fcntl(i32 __fd, c_int __cmd, ...);$/;"	f
fcvt	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_char* fcvt(c_double __value, c_int __ndigit, c_int* __decpt, c_int* __sign);$/;"	f
fcvt_r	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int fcvt_r(c_double __value, c_int __ndigit, c_int* __decpt, c_int* __sign, c_char* __buf, /;"	f
fd	$C2_ROOT/analyser/module_analyser.c2	/^    top.function = fd;$/;"	v
fd	$C2_ROOT/analyser/module_analyser_call.c2	/^        Decl* fdd = (Decl*)fd;$/;"	v
fd	$C2_ROOT/analyser/module_analyser_function.c2	/^    Decl* d = (Decl*)fd;$/;"	v
fd	$C2_ROOT/ast/ast_evaluator.c2	/^    eval.fd = fd;$/;"	v
fd	$C2_ROOT/ast/function_decl_list.c2	/^        if (fd.asDecl().getNameIdx() == name_idx) return fd;$/;"	v
fd	$C2_ROOT/ast/instance_table.c2	/^    f.fd = fd;$/;"	v
fd	$C2_ROOT/ast/type_ref.c2	/^    h.user.decl = fd;$/;"	v
fd	$C2_ROOT/bootstrap/bootstrap.c	/^   top->function = fd;$/;"	v
fd	$C2_ROOT/generator/c/c_generator.c2	/^    gen.cur_function = fd;$/;"	v
fd	$C2_ROOT/generator/c/c_generator_call.c2	/^        dest = (Decl*)fd;$/;"	v
fd	$C2_ROOT/generator/ir/ir_generator.c2	/^    gen.cur_function = fd;$/;"	v
fd	$C2_ROOT/libs/io_uring/io_uring.c2i	/^	sqe.fd = fd;$/;"	v
fd	$C2_ROOT/libs/libc/libc_poll.c2i	/^    c_int fd;$/;"	v
fd	$C2_ROOT/parser/ast_builder.c2	/^    return (Decl*)fd;$/;"	v
fd	$C2_ROOT/plugins/unit_test_plugin.c2	/^    Decl* d = (Decl*)fd;$/;"	v
fd2	$C2_ROOT/ast/function_decl.c2	/^    return fd2;$/;"	v
fd2	$C2_ROOT/bootstrap/bootstrap.c	/^   return fd2;$/;"	v
fd_in	$C2_ROOT/libs/io_uring/io_uring.c2i	/^	sqe->splice_fd_in = fd_in;$/;"	v
fdim	$C2_ROOT/libs/math/math.c2i	/^fn c_double fdim(c_double, c_double);$/;"	f
fdimf	$C2_ROOT/libs/math/math.c2i	/^fn c_float fdimf(c_float, c_float);$/;"	f
fdopen	$C2_ROOT/libs/libc/stdio.c2i	/^fn FILE* fdopen(c_int __fd, const c_char* __modes);$/;"	f
fdopendir	$C2_ROOT/libs/libc/libc_dirent.c2i	/^fn DIR* fdopendir(c_int fd);$/;"	f
feature_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t feature_count;$/;"	v
feature_count	$C2_ROOT/parser/c2_tokenizer.c2	/^    u32 feature_count;$/;"	v
feature_stack	$C2_ROOT/parser/c2_tokenizer.c2	/^    Feature[constants.MaxFeatureDepth+1] feature_stack;$/;"	v
features	$C2_ROOT/bootstrap/bootstrap.c	/^   t->features = features;$/;"	v
features	$C2_ROOT/common/build_target.c2	/^    string_list.List features;$/;"	v
features	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32 features;$/;"	v
features	$C2_ROOT/parser/c2_parser.c2	/^    p.features = features;$/;"	v
features	$C2_ROOT/parser/c2_tokenizer.c2	/^    t.features = features;$/;"	v
feof	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int feof(FILE* __stream);$/;"	f
feof_unlocked	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int feof_unlocked(FILE* __stream);$/;"	f
ferror	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int ferror(FILE* __stream);$/;"	f
ferror_unlocked	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int ferror_unlocked(FILE* __stream);$/;"	f
fffffep127	$C2_ROOT/libs/c2/f32.c2i	/^const f32 min = -0x1.fffffep127;$/;"	v
fffffffffffffp1023	$C2_ROOT/libs/c2/f64.c2i	/^const f64 min = -0x1.fffffffffffffp1023;$/;"	v
fflush	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int fflush(FILE* __stream);$/;"	f
fflush_unlocked	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int fflush_unlocked(FILE* __stream);$/;"	f
ffs	$C2_ROOT/libs/libc/strings.c2i	/^fn c_int ffs(c_int value);$/;"	f
fgetc	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int fgetc(FILE* __stream);$/;"	f
fgetc_unlocked	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int fgetc_unlocked(FILE* __stream);$/;"	f
fgetln	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_char* fgetln(FILE*, c_size*);$/;"	f
fgets	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_char* fgets(c_char* __s, c_int __n, FILE* __stream);$/;"	f
fi	$C2_ROOT/ast/instance_table.c2	/^        if (fi.fd == fd) return fi;$/;"	v
fi	$C2_ROOT/bootstrap/bootstrap.c	/^   return fi;$/;"	v
fi	$C2_ROOT/env.sh	/^fi$/;"	v
fi	$C2_ROOT/install_plugins.sh	/^fi$/;"	v
fi	$C2_ROOT/ir/context.c2	/^    t.fi = fi;$/;"	v
fi	$C2_ROOT/ir/function_info.c2	/^    return fi;$/;"	v
fi	$C2_ROOT/ir/register_alloc.c2	/^    FunctionInfo* fi = t.fi;$/;"	v
fi	$C2_ROOT/ir/ssa.c2	/^    FunctionInfo* fi = t.fi;$/;"	v
fi	$C2_ROOT/ir/switch.c2	/^    FunctionInfo* fi = t.fi;$/;"	v
fi	$C2_ROOT/ir/work_queue.c2	/^    return fi;$/;"	v
field	$C2_ROOT/ast/field_designated_init_expr.c2	/^    e.field_name = field;$/;"	v
field	$C2_ROOT/bootstrap/bootstrap.c	/^   e->field_name = field;$/;"	v
field	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^                if (!pad) goto field;$/;"	v
field_info	$C2_ROOT/ast/struct_type_decl.c2	/^    return d.field_info;$/;"	v
field_info	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->field_info;$/;"	v
field_name	$C2_ROOT/ast/field_designated_init_expr.c2	/^    u32 field_name;$/;"	v
field_name	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t field_name;$/;"	v
fields	$C2_ROOT/ast/struct_type_decl.c2	/^    FieldInitField[0] fields;$/;"	v
fif	$C2_ROOT/ast/field_designated_init_expr.c2	/^    return e.fif;$/;"	v
fif	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->fif;$/;"	v
fii	$C2_ROOT/analyser/module_analyser_init.c2	/^    return fii;$/;"	v
fii	$C2_ROOT/bootstrap/bootstrap.c	/^   return fii;$/;"	v
file	$C2_ROOT/bootstrap/bootstrap.c	/^   return file;$/;"	v
file	$C2_ROOT/generator/c2refs.c2	/^    return file;$/;"	v
file_id	$C2_ROOT/bootstrap/bootstrap.c	/^   return file_id;$/;"	v
file_id	$C2_ROOT/common/source_mgr.c2	/^    return file_id;$/;"	v
file_id	$C2_ROOT/parser/c2_parser.c2	/^    p.file_id = file_id;$/;"	v
file_index	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        u32   file_index;$/;"	v
file_index	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    i32 file_index;$/;"	v
file_offset	$C2_ROOT/generator/c2refs.c2	/^    src_loc += file_offset;$/;"	v
file_utils	$C2_ROOT/analyser/module_analyser.c2	/^import file_utils;$/;"	v
file_utils	$C2_ROOT/common/file/file_utils.c2	/^module file_utils;$/;"	v
file_utils	$C2_ROOT/common/file/reader.c2	/^module file_utils;$/;"	v
file_utils	$C2_ROOT/common/file/writer.c2	/^module file_utils;$/;"	v
file_utils	$C2_ROOT/common/manifest_writer.c2	/^import file_utils;$/;"	v
file_utils	$C2_ROOT/common/process_utils.c2	/^import file_utils;$/;"	v
file_utils	$C2_ROOT/common/source_mgr.c2	/^import file_utils;$/;"	v
file_utils	$C2_ROOT/common/utils.c2	/^import file_utils;$/;"	v
file_utils	$C2_ROOT/compiler/compiler.c2	/^import file_utils;$/;"	v
file_utils	$C2_ROOT/compiler/compiler_libs.c2	/^import file_utils;$/;"	v
file_utils	$C2_ROOT/compiler/main.c2	/^import file_utils;$/;"	v
file_utils	$C2_ROOT/compiler/plugin_mgr.c2	/^import file_utils;$/;"	v
file_utils	$C2_ROOT/generator/c/c_generator.c2	/^import file_utils;$/;"	v
file_utils	$C2_ROOT/generator/c/c_generator_special.c2	/^import file_utils;$/;"	v
file_utils	$C2_ROOT/generator/c2i/c2i_generator.c2	/^import file_utils;$/;"	v
file_utils	$C2_ROOT/generator/ir/ir_generator.c2	/^import file_utils;$/;"	v
file_utils	$C2_ROOT/plugins/deps_generator.c2	/^import file_utils;$/;"	v
file_utils	$C2_ROOT/plugins/plugin_info.c2	/^import file_utils;$/;"	v
file_utils	$C2_ROOT/plugins/refs_generator.c2	/^import file_utils;$/;"	v
file_utils	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^import file_utils;$/;"	v
file_utils_Err_not_a_file	$C2_ROOT/bootstrap/bootstrap.c	/^      file->error = file_utils_Err_not_a_file;$/;"	v
file_utils_Err_read_error	$C2_ROOT/bootstrap/bootstrap.c	/^      file->error = file_utils_Err_read_error;$/;"	v
file_utils_Err_too_large	$C2_ROOT/bootstrap/bootstrap.c	/^      file->error = file_utils_Err_too_large;$/;"	v
file_utils_Err_write_error	$C2_ROOT/bootstrap/bootstrap.c	/^      writer->error = file_utils_Err_write_error;$/;"	v
file_utils_Reader	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct file_utils_Reader_ file_utils_Reader;$/;"	v
file_utils_Writer	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct file_utils_Writer_ file_utils_Writer;$/;"	v
filename	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t idx = sm->files[handle].filename;$/;"	v
filename	$C2_ROOT/common/build_file.c2	/^    info.filename = filename;$/;"	v
filename	$C2_ROOT/common/build_target.c2	/^    t.files[t.num_files].name = filename;$/;"	v
filename	$C2_ROOT/common/process_utils.c2	/^        char[file_utils.Max_path] filename;$/;"	v
filename	$C2_ROOT/common/source_mgr.c2	/^    u32 filename;$/;"	v
filename	$C2_ROOT/compiler/c2recipe_parser.c2	/^    s.files[s.num_files].name = filename;$/;"	v
filename	$C2_ROOT/compiler/compiler_libs.c2	/^    char[file_utils.Max_path] filename;$/;"	v
filename	$C2_ROOT/compiler/plugin_mgr.c2	/^    char[128] filename;$/;"	v
filename	$C2_ROOT/generator/c2refs.c2	/^    const char* filename;$/;"	v
filename	$C2_ROOT/plugins/deps_generator.c2	/^        const char* cp = filename;$/;"	v
filename_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t filename_idx;$/;"	v
filename_idx	$C2_ROOT/generator/c/c_generator_trace.c2	/^    u8 filename_idx;$/;"	v
filename_idx	$C2_ROOT/libs/c2/c2_trace_tables.c2i	/^    u8 filename_idx;$/;"	v
filenames	$C2_ROOT/bootstrap/bootstrap.c	/^   c_generator_StringList filenames;$/;"	v
filenames	$C2_ROOT/generator/c/c_generator.c2	/^    StringList filenames;$/;"	v
fileno	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int fileno(FILE* __stream);$/;"	f
files	$C2_ROOT/ast/module.c2	/^    ast.AST** files;$/;"	v
files	$C2_ROOT/bootstrap/bootstrap.c	/^   string_list_List files;$/;"	v
files	$C2_ROOT/common/build_target.c2	/^    File* files;$/;"	v
files	$C2_ROOT/common/source_mgr.c2	/^    File* files;$/;"	v
files	$C2_ROOT/compiler/c2recipe_parser.c2	/^    build_target.File* files;$/;"	v
files	$C2_ROOT/compiler/main.c2	/^    string_list.List files;$/;"	v
files	$C2_ROOT/generator/c2refs.c2	/^    r.files = files;$/;"	v
files2	$C2_ROOT/bootstrap/bootstrap.c	/^   sm->files = files2;$/;"	v
files2	$C2_ROOT/common/build_target.c2	/^        t.files = files2;$/;"	v
files2	$C2_ROOT/common/source_mgr.c2	/^    sm.files = files2;$/;"	v
files2	$C2_ROOT/compiler/c2recipe_parser.c2	/^        s.files = files2;$/;"	v
files_cap	$C2_ROOT/generator/c2refs.c2	/^    u32 files_cap;$/;"	v
files_count	$C2_ROOT/generator/c2refs.c2	/^        f2.files_count = f.files_count;$/;"	v
files_started	$C2_ROOT/bootstrap/bootstrap.c	/^         files_started = true;$/;"	v
files_started	$C2_ROOT/compiler/c2recipe_parser.c2	/^            files_started = true;$/;"	v
fill	$C2_ROOT/ir/slot_collector.c2	/^public fn void SlotCollector.fill(SlotCollector* c, FunctionInfo* info) {$/;"	f
fillDest	$C2_ROOT/generator/c2refs.c2	/^fn void Lengths.fillDest(const Lengths* l, Dest* result, u32 offset, u32 start, u32 count) {$/;"	f
fillFieldInfo	$C2_ROOT/analyser/module_analyser_init.c2	/^fn void fillFieldInfo(StructTypeDecl* std, FillInfo* fi, u32 base_offset) {$/;"	f
fillQueue	$C2_ROOT/ir/usage_counter.c2	/^public fn void Counter.fillQueue(Counter* c) {$/;"	f
fillRect	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Surface.fillRect(Surface* dst, const Rect* rect, u32 color) @(cname="SDL_FillRect");$/;"	f
fillRects	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Renderer.fillRects(Renderer* renderer, const Rect* rects, c_int count) @(cname="SDL_Ren/;"	f
filter	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool filter;$/;"	v
fin_ms	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    u32              fin_ms;$/;"	v
finalize	$C2_ROOT/generator/ir/basic_struct_layouter.c2	/^fn void BasicStructLayouter.finalize(BasicStructLayouter* l) {$/;"	f
finalize	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^fn void FieldStructLayouter.finalize(FieldStructLayouter* l) {$/;"	f
finalizeExpr	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^fn void FieldStructLayouter.finalizeExpr(FieldStructLayouter* l, const ast.StructTypeDecl* std, /;"	f
finalizeFunction	$C2_ROOT/ir/context.c2	/^fn void Context.finalizeFunction(Context* c, SymbolId id) {$/;"	f
find	$C2_ROOT/analyser/incr_array_list.c2	/^fn ast.ExprList* List.find(List* v, u32 name) {$/;"	f
find	$C2_ROOT/analyser/init_checker.c2	/^public fn SrcLoc Checker.find(Checker* c, u32 index) {$/;"	f
find	$C2_ROOT/analyser/label_vector.c2	/^public fn Label* LabelVector.find(LabelVector* v, u32 name_idx) {$/;"	f
find	$C2_ROOT/analyser/name_vector.c2	/^public fn bool NameVector.find(NameVector* v, u32 name_idx, u32* index) {$/;"	f
find	$C2_ROOT/analyser/scope.c2	/^public fn ast.Decl* Scope.find(Scope* s, u32 name_idx, SrcLoc loc, bool usedPublic) {$/;"	f
find	$C2_ROOT/ast/function_decl_list.c2	/^public fn FunctionDecl* FunctionDeclList.find(const FunctionDeclList* l, u32 name_idx) {$/;"	f
find	$C2_ROOT/ast/import_decl_list.c2	/^public fn ImportDecl* ImportDeclList.find(const ImportDeclList* l, u32 name_idx) {$/;"	f
find	$C2_ROOT/ast/instance_table.c2	/^fn FunctionDecl* TemplateFunction.find(const TemplateFunction* f, QualType qt) {$/;"	f
find	$C2_ROOT/ast/struct_type_decl.c2	/^public fn const FieldInitField* FieldInitInfo.find(const FieldInitInfo* fi, u32 name) {$/;"	f
find	$C2_ROOT/ast/symbol_table.c2	/^public fn ast.Decl* SymbolTable.find(const SymbolTable* t, u32 name_idx) {$/;"	f
find	$C2_ROOT/ast_utils/attr.c2	/^public fn AttrKind find(u32 name_idx) {$/;"	f
find	$C2_ROOT/ast_utils/attr_table.c2	/^public fn const attr.Value* Table.find(const Table* t, const void* decl, attr.AttrKind kind) {$/;"	f
find	$C2_ROOT/common/module_list.c2	/^public fn ast.Module* List.find(const List* l, u32 module_name) {$/;"	f
find	$C2_ROOT/generator/c2refs.c2	/^fn u32 Links.find(const Links* t, u32 src) {$/;"	f
find	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^public fn StackVar* Locals.find(const Locals* l, const ast.VarDecl* vd) {$/;"	f
find	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^public fn void Tree.find(Tree* t, const char* text, MatchFn func, void* arg) @(unused) {$/;"	f
find	$C2_ROOT/ir/copy_list.c2	/^public fn Ref* CopyList.find(CopyList* l, u32 idx) {$/;"	f
find	$C2_ROOT/ir/slot_values.c2	/^public fn Ref SlotValues.find(const SlotValues* v, u16 slot) {$/;"	f
find2	$C2_ROOT/analyser/init_checker.c2	/^public fn SrcLoc Checker.find2(Checker* c, u32 index1, u32 index2) {$/;"	f
findAny	$C2_ROOT/ast/import_decl_list.c2	/^public fn ImportDecl* ImportDeclList.findAny(const ImportDeclList* l, u32 name_idx) {$/;"	f
findAny	$C2_ROOT/ast/struct_type_decl.c2	/^public fn Decl* StructTypeDecl.findAny(const StructTypeDecl* s, u32 name_idx) {$/;"	f
findArena	$C2_ROOT/ir/interference_graph.c2	/^fn u32 findArena(u16 capacity) {$/;"	f
findArena	$C2_ROOT/ir/live_map.c2	/^fn u32 findArena(u16 capacity) {$/;"	f
findArena	$C2_ROOT/ir/slot_writes_map.c2	/^fn u32 findArena(u16 capacity) {$/;"	f
findBuildFile	$C2_ROOT/common/utils.c2	/^public fn const char* findBuildFile() @(unused) {$/;"	f
findCheckPoint	$C2_ROOT/common/source_mgr.c2	/^fn CheckPoint File.findCheckPoint(File *f, u32 offset) {$/;"	f
findChildNode	$C2_ROOT/common/yaml/yaml_iterator.c2	/^fn const Node* Data.findChildNode(const Data* d, const char* path, u32 next) {$/;"	f
findConstant	$C2_ROOT/ast/enum_type_decl.c2	/^public fn EnumConstantDecl* EnumTypeDecl.findConstant(EnumTypeDecl* d, u32 name_idx) {$/;"	f
findFunc	$C2_ROOT/analyser/struct_func_list.c2	/^public fn ast.FunctionDecl* List.findFunc(List* v, u32 index, u32 name_idx) {$/;"	f
findFunc	$C2_ROOT/ast/instance_table.c2	/^fn TemplateFunction* InstanceTable.findFunc(const InstanceTable* t, const FunctionDecl* fd) {$/;"	f
findFunction	$C2_ROOT/ast/enum_type_decl.c2	/^public fn Decl* EnumTypeDecl.findFunction(const EnumTypeDecl* d, u32 name_idx) {$/;"	f
findGlobalSymbol	$C2_ROOT/analyser/scope.c2	/^fn ast.Decl* Scope.findGlobalSymbol(Scope* s, u32 name_idx, SrcLoc loc, bool* other_error, bool /;"	f
findImport	$C2_ROOT/ast/ast.c2	/^public fn ImportDecl* AST.findImport(const AST* a, u32 name) {$/;"	f
findInstance	$C2_ROOT/ast/module.c2	/^public fn ast.FunctionDecl* Module.findInstance(const Module* m, ast.FunctionDecl* fd, QualType /;"	f
findMain	$C2_ROOT/analyser/module_analyser.c2	/^public fn Decl* Analyser.findMain(Analyser* ma, Module* top, u32 name_idx) {$/;"	f
findMainFunction	$C2_ROOT/analyser/module_analyser.c2	/^fn void findMainFunction(void* arg, FunctionDecl* fd) {$/;"	f
findMember	$C2_ROOT/ast/struct_type_decl.c2	/^public fn Decl* StructTypeDecl.findMember(const StructTypeDecl* s, u32 name_idx, u32* offset) {$/;"	f
findMemberOffset	$C2_ROOT/analyser/module_analyser_builtin.c2	/^fn Decl* Analyser.findMemberOffset(Analyser* ma, BuiltinExpr* b, StructTypeDecl* std, Expr* memb/;"	f
findModule	$C2_ROOT/analyser/scope.c2	/^public fn ast.ImportDecl* Scope.findModule(Scope* s, u32 name_idx, SrcLoc loc) {$/;"	f
findNode	$C2_ROOT/common/yaml/yaml_iterator.c2	/^public fn const Node* Parser.findNode(const Parser* p, const char* path) {$/;"	f
findPrivate	$C2_ROOT/ast/symbol_table.c2	/^fn ast.Decl* SymbolTable.findPrivate(const SymbolTable* t, u32 name_idx) {$/;"	f
findPrivateSymbol	$C2_ROOT/ast/module.c2	/^public fn ast.Decl* Module.findPrivateSymbol(const Module* m, u32 name_idx) {$/;"	f
findProjectDir	$C2_ROOT/common/utils.c2	/^public fn bool findProjectDir(PathInfo* info) {$/;"	f
findPublic	$C2_ROOT/ast/symbol_table.c2	/^fn ast.Decl* SymbolTable.findPublic(const SymbolTable* t, u32 name_idx) {$/;"	f
findPublicSymbol	$C2_ROOT/ast/module.c2	/^public fn ast.Decl* Module.findPublicSymbol(const Module* m, u32 name_idx) {$/;"	f
findRead	$C2_ROOT/ir/slot_collector.c2	/^public fn ReadSlotAccess* SlotCollector.findRead(const SlotCollector* c, BlockId blk_id, u16 slo/;"	f
findRef	$C2_ROOT/generator/c2refs.c2	/^public fn Dest Refs.findRef(const Refs* r, const Dest* origin) {$/;"	f
findRefUses	$C2_ROOT/generator/c2refs.c2	/^public fn void Refs.findRefUses(const Refs* r, const Dest* origin, RefUsesFn func, void* arg, u1/;"	f
findSet	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn Set* Parser.findSet(Parser* p, u32 name_idx) {$/;"	f
findSplitEdge	$C2_ROOT/ir/inserter.c2	/^public fn u32 Inserter.findSplitEdge(const Inserter* ins, u32 src, u32 dest) {$/;"	f
findStructMember	$C2_ROOT/analyser/module_analyser_expr.c2	/^fn Decl* Analyser.findStructMember(Analyser* ma,$/;"	f
findStructMemberOffset	$C2_ROOT/analyser/module_analyser_builtin.c2	/^fn Decl* Analyser.findStructMemberOffset(Analyser* ma, StructTypeDecl* s, u32 name_idx, SrcLoc l/;"	f
findSymbol	$C2_ROOT/ast/module.c2	/^public fn ast.Decl* Module.findSymbol(const Module* m, u32 name_idx) {$/;"	f
findSymbol	$C2_ROOT/generator/c2refs.c2	/^public fn Dest Refs.findSymbol(const Refs* r, const char* symbol_name) {$/;"	f
findSymbolInModule	$C2_ROOT/analyser/scope.c2	/^public fn ast.Decl* Scope.findSymbolInModule(Scope* s, ast.Module* mod, u32 name_idx, SrcLoc loc/;"	f
findSymbolUses	$C2_ROOT/generator/c2refs.c2	/^public fn void Refs.findSymbolUses(const Refs* r, const char* symbol_name, RefUsesFn func, void*/;"	f
findTemp	$C2_ROOT/ir/print.c2	/^fn u32 PrintHelper.findTemp(PrintHelper* ph, u32 instr_idx) {$/;"	f
findTopModule	$C2_ROOT/compiler/compiler.c2	/^fn void Compiler.findTopModule(void* arg, ast.Module* m) {$/;"	f
findType	$C2_ROOT/analyser/scope.c2	/^public fn ast.Decl* Scope.findType(Scope* s, u32 name_idx, SrcLoc loc, bool usedPublic) {$/;"	f
findType	$C2_ROOT/ast/ast.c2	/^fn Decl* AST.findType(const AST* a, u32 name_idx) {$/;"	f
findType	$C2_ROOT/ast/module.c2	/^public fn Decl* Module.findType(const Module* m, u32 name_idx) {$/;"	f
findWrite	$C2_ROOT/ir/slot_collector.c2	/^public fn const Ref* SlotCollector.findWrite(const SlotCollector* c, BlockId blk_id, u16 slot) {$/;"	f
find_bin	$C2_ROOT/common/process_utils.c2	/^fn const char* find_bin(char *dest, usize size, const char* name) {$/;"	f
find_component	$C2_ROOT/compiler/compiler_libs.c2	/^fn Component* Compiler.find_component(Compiler* c, ast.Module* m) {$/;"	f
find_file	$C2_ROOT/common/source_mgr.c2	/^fn File* SourceMgr.find_file(SourceMgr* sm, SrcLoc loc) {$/;"	f
find_file	$C2_ROOT/compiler/plugin_mgr.c2	/^fn bool Mgr.find_file(Mgr* m, char* fullname, usize size, const char* filename) {$/;"	f
find_file	$C2_ROOT/generator/c2refs.c2	/^fn const File* Files.find_file(const Files* f, u32 loc) {$/;"	f
find_idx	$C2_ROOT/common/component_sorter.c2	/^fn u32 find_idx(Component** comps, u32 count, u32 name) {$/;"	f
find_lib	$C2_ROOT/compiler/compiler_libs.c2	/^fn bool Compiler.find_lib(const Compiler* c, const char* libname, char* libdir, usize size) {$/;"	f
first	$C2_ROOT/analyser/scope.c2	/^    s.stack_count = first;$/;"	v
first	$C2_ROOT/bootstrap/bootstrap.c	/^   s->stack_count = first;$/;"	v
first	$C2_ROOT/generator/c/c_generator_stmt.c2	/^            first = false;$/;"	v
first	$C2_ROOT/generator/c2i/c2i_generator_stmt.c2	/^            first = false;$/;"	v
first_char	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    u8 first_char;$/;"	v
first_index	$C2_ROOT/analyser/scope.c2	/^    u32 first_index;$/;"	v
first_index	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t first_index;$/;"	v
first_var	$C2_ROOT/bootstrap/bootstrap.c	/^   uint16_t var_idx = a->first_var;$/;"	v
first_var	$C2_ROOT/ir/interference_graph.c2	/^    u16 var_idx = a.first_var;$/;"	v
first_var	$C2_ROOT/ir/live_map.c2	/^    u16 var_idx = a.first_var;$/;"	v
first_var	$C2_ROOT/ir/slot_writes_map.c2	/^    u16 blk_id = a.first_var;$/;"	v
fixReturn	$C2_ROOT/ir/register_alloc.c2	/^fn void Tools.fixReturn(Tools* t, FunctionInfo* fi) {$/;"	f
fixture	$C2_ROOT/plugins/unit_test2.c2	/^  u8[256] fixture;$/;"	v
fixture_size	$C2_ROOT/plugins/unit_test1.c2	/^   u32 fixture_size;$/;"	v
fixup_function	$C2_ROOT/ir/ssa.c2	/^fn void Tools.fixup_function(Tools* t) {$/;"	f
flagBits	$C2_ROOT/ast/function_decl.c2	/^    fd2.flagBits = fd.flagBits;$/;"	v
flagBits	$C2_ROOT/ast/type_ref.c2	/^        u32 flagBits;$/;"	v
flagBits	$C2_ROOT/bootstrap/bootstrap.c	/^   fd2->flagBits = fd->flagBits;$/;"	v
flags	$C2_ROOT/analyser/scope.c2	/^    top.flags = flags;$/;"	v
flags	$C2_ROOT/ast/function_decl.c2	/^        FunctionDeclFlags flags;$/;"	v
flags	$C2_ROOT/ast/type_ref.c2	/^        TypeRefBits flags;$/;"	v
flags	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t flags;$/;"	v
flags	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32 flags;$/;"	v
flags	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u32 flags;$/;"	v
flatten	$C2_ROOT/plugins/deps_generator.c2	/^fn void Dir.flatten(const Dir* d, string_buffer.Buf* out, string_pool.Pool* pool) {$/;"	f
flattenFragments	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.flattenFragments(Generator* gen) {$/;"	f
float	$C2_ROOT/bootstrap/bootstrap.c	/^      float svalue;$/;"	v
floatLiteralBits	$C2_ROOT/ast/stmt.c2	/^        FloatLiteralBits floatLiteralBits;$/;"	v
floatLiteralBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_FloatLiteralBits floatLiteralBits;$/;"	v
float_value	$C2_ROOT/bootstrap/bootstrap.c	/^      double float_value;$/;"	v
flockfile	$C2_ROOT/libs/libc/stdio.c2i	/^fn void flockfile(FILE* __stream);$/;"	f
floor	$C2_ROOT/libs/math/math.c2i	/^fn c_double floor(c_double);$/;"	f
floorf	$C2_ROOT/libs/math/math.c2i	/^fn c_float floorf(c_float);$/;"	f
flow	$C2_ROOT/analyser/module_analyser_stmt.c2	/^    return flow;$/;"	v
flow	$C2_ROOT/analyser/module_analyser_switch.c2	/^    return flow;$/;"	v
flow2	$C2_ROOT/analyser/module_analyser_stmt.c2	/^    flow |= flow2;$/;"	v
flow2	$C2_ROOT/analyser/module_analyser_switch.c2	/^    flow |= flow2;$/;"	v
flushBitfield	$C2_ROOT/generator/ir/basic_struct_layouter.c2	/^fn void BasicStructLayouter.flushBitfield(BasicStructLayouter* l) {$/;"	f
fma	$C2_ROOT/libs/math/math.c2i	/^fn c_double fma(c_double, c_double, c_double);$/;"	f
fmaf	$C2_ROOT/libs/math/math.c2i	/^fn c_float fmaf(c_float, c_float, c_float);$/;"	f
fmax	$C2_ROOT/libs/math/math.c2i	/^fn c_double fmax(c_double, c_double);$/;"	f
fmaxf	$C2_ROOT/libs/math/math.c2i	/^fn c_float fmaxf(c_float, c_float);$/;"	f
fmemopen	$C2_ROOT/libs/libc/stdio.c2i	/^fn FILE* fmemopen(void* __s, c_size __len, const c_char* __modes);$/;"	f
fmin	$C2_ROOT/libs/math/math.c2i	/^fn c_double fmin(c_double, c_double);$/;"	f
fminf	$C2_ROOT/libs/math/math.c2i	/^fn c_float fminf(c_float, c_float);$/;"	f
fmod	$C2_ROOT/libs/math/math.c2i	/^fn c_double fmod(c_double, c_double);$/;"	f
fmodf	$C2_ROOT/libs/math/math.c2i	/^fn c_float fmodf(c_float, c_float);$/;"	f
fmtcheck	$C2_ROOT/libs/libc/stdio.c2i	/^fn const c_char* fmtcheck(const c_char*, const c_char*);$/;"	f
fn_arg	$C2_ROOT/bootstrap/bootstrap.c	/^   void* fn_arg;$/;"	v
fn_arg	$C2_ROOT/parser/c2_tokenizer.c2	/^    void* fn_arg;$/;"	v
fn_arg	$C2_ROOT/plugins/plugin_info.c2	/^    void* fn_arg;$/;"	v
fns	$C2_ROOT/ir/work_queue.c2	/^    q.funcs = fns;$/;"	v
font	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void font(i32 font_index) @(cname="sdtx_font");$/;"	f
fontC64	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn FontDesc fontC64() @(cname="sdtx_font_c64");$/;"	f
fontCpc	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn FontDesc fontCpc() @(cname="sdtx_font_cpc");$/;"	f
fontKc853	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn FontDesc fontKc853() @(cname="sdtx_font_kc853");$/;"	f
fontKc854	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn FontDesc fontKc854() @(cname="sdtx_font_kc854");$/;"	f
fontOric	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn FontDesc fontOric() @(cname="sdtx_font_oric");$/;"	f
fontZ1013	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn FontDesc fontZ1013() @(cname="sdtx_font_z1013");$/;"	f
fonts	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    FontDesc[8] fonts;$/;"	v
fopen	$C2_ROOT/libs/libc/stdio.c2i	/^fn FILE* fopen(const c_char* __filename, const c_char* __modes);$/;"	f
force_warnings	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool force_warnings;$/;"	v
force_warnings	$C2_ROOT/compiler/main.c2	/^    bool force_warnings;$/;"	v
foreach	$C2_ROOT/ir/ssa.c2	/^        foreach block$/;"	v
forever	$C2_ROOT/ir_examples/for.c2	/^fn void forever() {$/;"	f
forever	$C2_ROOT/ir_examples/while.c2	/^fn void forever(i32 loops) {$/;"	f
fork	$C2_ROOT/libs/libc/unistd.c2i	/^fn Pid fork();$/;"	f
format	$C2_ROOT/analyser/module_analyser_call.c2	/^    const char* format;$/;"	v
format	$C2_ROOT/analyser_utils/printf_utils.c2	/^    const char* cp = format;$/;"	v
format	$C2_ROOT/bootstrap/bootstrap.c	/^   const char* format;$/;"	v
format	$C2_ROOT/generator/c/c_generator_call.c2	/^                ImplicitCastExpr* ic = (ImplicitCastExpr*)format;$/;"	v
format	$C2_ROOT/generator/c/c_generator_expr.c2	/^    const char* format;$/;"	v
format	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u32 format;$/;"	v
format	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VertexFormat format;$/;"	v
format_loc	$C2_ROOT/analyser/module_analyser_call.c2	/^    SrcLoc format_loc;$/;"	v
format_loc	$C2_ROOT/bootstrap/bootstrap.c	/^   src_loc_SrcLoc format_loc;$/;"	v
format_loc	$C2_ROOT/generator/c/c_generator_call.c2	/^                SrcLoc format_loc;$/;"	v
format_text	$C2_ROOT/analyser_utils/printf_utils.c2	/^    return format_text;$/;"	v
format_text	$C2_ROOT/bootstrap/bootstrap.c	/^   return format_text;$/;"	v
forward	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec3 Vec3.forward() {$/;"	f
found	$C2_ROOT/bootstrap/bootstrap.c	/^               found = true;$/;"	v
found	$C2_ROOT/ir/slot_collector.c2	/^                    found = true;$/;"	v
fpclassify	$C2_ROOT/libs/math/math.c2i	/^fn c_int fpclassify(c_double) @(cname="__fpclassifyd");$/;"	f
fpclassifyf	$C2_ROOT/libs/math/math.c2i	/^fn c_int fpclassifyf(c_float) @(cname="__fpclassifyf");$/;"	f
fprintf	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int fprintf(FILE* __stream, const c_char* __format @(printf_format), ...);$/;"	f
fpurge	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int fpurge(FILE *);$/;"	f
fputc	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int fputc(c_int __c, FILE* __stream);$/;"	f
fputc_unlocked	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int fputc_unlocked(c_int __c, FILE* __stream);$/;"	f
fputs	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int fputs(const c_char* __s, FILE* __stream);$/;"	f
fragment_func	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* fragment_func;$/;"	v
fragment_lib	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* fragment_lib;$/;"	v
frameCount	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn u64 frameCount() @(cname="sapp_frame_count");$/;"	f
frameDuration	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn f64 frameDuration() @(cname="sapp_frame_duration");$/;"	f
frameStatsEnabled	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn bool frameStatsEnabled() @(cname="sg_frame_stats_enabled");$/;"	f
frame_cb	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    Cb frame_cb;$/;"	v
frame_count	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    u64 frame_count;$/;"	v
frame_index	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 frame_index;$/;"	v
frame_userdata_cb	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    DataCb frame_userdata_cb;$/;"	v
framebuffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 framebuffer;$/;"	v
framebuffer_height	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    i32 framebuffer_height;$/;"	v
framebuffer_width	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    i32 framebuffer_width;$/;"	v
fread	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int fread(void* __ptr, c_size __size, c_size __n, FILE* __stream);$/;"	f
fread_unlocked	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int fread_unlocked(void* __ptr, c_size __size, c_size __n, FILE* __stream);$/;"	f
free	$C2_ROOT/analyser/incr_array_list.c2	/^public fn void List.free(List* v) {$/;"	f
free	$C2_ROOT/analyser/init_checker.c2	/^public fn void Checker.free(Checker* c) {$/;"	f
free	$C2_ROOT/analyser/label_vector.c2	/^public fn void LabelVector.free(LabelVector* v) {$/;"	f
free	$C2_ROOT/analyser/module_analyser.c2	/^public fn void Analyser.free(Analyser* ma) {$/;"	f
free	$C2_ROOT/analyser/name_vector.c2	/^public fn void NameVector.free(NameVector* v) {$/;"	f
free	$C2_ROOT/analyser/scope.c2	/^public fn void Scope.free(Scope* s) {$/;"	f
free	$C2_ROOT/analyser/struct_field_init_checker.c2	/^fn void StructFieldInitChecker.free(StructFieldInitChecker* c) {$/;"	f
free	$C2_ROOT/analyser/struct_func_list.c2	/^public fn void List.free(List* v) {$/;"	f
free	$C2_ROOT/ast/array_value_list.c2	/^fn void ArrayValueList.free(ArrayValueList* l) {$/;"	f
free	$C2_ROOT/ast/ast.c2	/^fn void AST.free(AST* a) {$/;"	f
free	$C2_ROOT/ast/decl_list.c2	/^public fn void DeclList.free(DeclList* l) {$/;"	f
free	$C2_ROOT/ast/expr_list.c2	/^public fn void ExprList.free(ExprList* l) {$/;"	f
free	$C2_ROOT/ast/function_decl_list.c2	/^public fn void FunctionDeclList.free(FunctionDeclList* l) {$/;"	f
free	$C2_ROOT/ast/import_decl_list.c2	/^fn void ImportDeclList.free(ImportDeclList* l) {$/;"	f
free	$C2_ROOT/ast/instance_table.c2	/^fn void InstanceTable.free(InstanceTable* t) {$/;"	f
free	$C2_ROOT/ast/module.c2	/^public fn void Module.free(Module* m) {$/;"	f
free	$C2_ROOT/ast/static_assert_list.c2	/^fn void StaticAssertList.free(StaticAssertList* l) {$/;"	f
free	$C2_ROOT/ast/symbol_table.c2	/^fn void SymbolTable.free(SymbolTable* t) {$/;"	f
free	$C2_ROOT/ast_utils/attr_table.c2	/^public fn void Table.free(Table* t) {$/;"	f
free	$C2_ROOT/ast_utils/context.c2	/^public fn void Context.free(Context* c) {$/;"	f
free	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void Buf.free(Buf* buf) {$/;"	f
free	$C2_ROOT/ast_utils/string_pool.c2	/^public fn void Pool.free(Pool* p) {$/;"	f
free	$C2_ROOT/common/attr_handler.c2	/^public fn void Handler.free(Handler* h) {$/;"	f
free	$C2_ROOT/common/build_file.c2	/^public fn void Info.free(Info* info) {$/;"	f
free	$C2_ROOT/common/build_target.c2	/^public fn void Target.free(Target* t) {$/;"	f
free	$C2_ROOT/common/component.c2	/^public fn void List.free(List* l) {$/;"	f
free	$C2_ROOT/common/diagnostics.c2	/^public fn void Diags.free(Diags* diags) {$/;"	f
free	$C2_ROOT/common/dsm_sorter.c2	/^public fn void Sorter.free(Sorter* s) {$/;"	f
free	$C2_ROOT/common/index_list.c2	/^public fn void List.free(List* l) {$/;"	f
free	$C2_ROOT/common/library_list.c2	/^public fn void List.free(List* l) {$/;"	f
free	$C2_ROOT/common/module_list.c2	/^public fn void List.free(List* l) {$/;"	f
free	$C2_ROOT/common/source_mgr.c2	/^public fn void SourceMgr.free(SourceMgr* sm) {$/;"	f
free	$C2_ROOT/common/string_list.c2	/^public fn void List.free(List* l) {$/;"	f
free	$C2_ROOT/common/value_maplist.c2	/^public fn void List.free(List* l) {$/;"	f
free	$C2_ROOT/compiler/c2recipe.c2	/^public fn void Recipe.free(Recipe* r) {$/;"	f
free	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Set.free(Set* s) {$/;"	f
free	$C2_ROOT/compiler/compiler.c2	/^fn void Compiler.free(Compiler* c) {$/;"	f
free	$C2_ROOT/compiler/main.c2	/^fn void Options.free(Options *opts) {$/;"	f
free	$C2_ROOT/compiler/plugin_mgr.c2	/^public fn void Mgr.free(Mgr* m) {$/;"	f
free	$C2_ROOT/generator/ast_visitor.c2	/^public fn void Visitor.free(Visitor* v) {$/;"	f
free	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.free(Generator* gen) {$/;"	f
free	$C2_ROOT/generator/c/c_generator_trace.c2	/^fn void TraceCallList.free(TraceCallList* cl) {$/;"	f
free	$C2_ROOT/generator/c2refs.c2	/^public fn void Refs.free(Refs* r) {$/;"	f
free	$C2_ROOT/generator/ir/array_init_sorter.c2	/^public fn void Sorter.free(Sorter* s) {$/;"	f
free	$C2_ROOT/generator/ir/ir_generator.c2	/^fn void Generator.free(Generator* gen) {$/;"	f
free	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^public fn void Locals.free(Locals* l) {$/;"	f
free	$C2_ROOT/generator/ir/ref_list.c2	/^public fn void RefList.free(RefList* l) {$/;"	f
free	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^public fn void Tree.free(Tree* t) {$/;"	f
free	$C2_ROOT/ir/block_list.c2	/^public fn void BlockList.free(BlockList* l) {$/;"	f
free	$C2_ROOT/ir/case_list.c2	/^fn void CaseList.free(CaseList* l) {$/;"	f
free	$C2_ROOT/ir/constant_list.c2	/^fn void ConstantList.free(ConstantList* l) {$/;"	f
free	$C2_ROOT/ir/context.c2	/^public fn void Context.free(Context* c) {$/;"	f
free	$C2_ROOT/ir/copy_list.c2	/^public fn void CopyList.free(CopyList* l) {$/;"	f
free	$C2_ROOT/ir/function_info.c2	/^public fn void FunctionInfo.free(FunctionInfo* fi) {$/;"	f
free	$C2_ROOT/ir/init_value_list.c2	/^fn void InitValueList.free(InitValueList* l) {$/;"	f
free	$C2_ROOT/ir/inserter.c2	/^public fn void Inserter.free(Inserter* ins) {$/;"	f
free	$C2_ROOT/ir/instr_list.c2	/^public fn void InstrList.free(InstrList* l) {$/;"	f
free	$C2_ROOT/ir/interference_graph.c2	/^public fn void InterferenceGraph.free(InterferenceGraph* g) {$/;"	f
free	$C2_ROOT/ir/live_map.c2	/^public fn void Map.free(Map* g) {$/;"	f
free	$C2_ROOT/ir/lookup_table.c2	/^public fn void Table.free(Table* t) {$/;"	f
free	$C2_ROOT/ir/phi_list.c2	/^public fn void PhiClauses.free(PhiClauses* c) {$/;"	f
free	$C2_ROOT/ir/print.c2	/^fn void PrintHelper.free(PrintHelper* ph) {$/;"	f
free	$C2_ROOT/ir/register_alloc.c2	/^fn void LiveVector.free(LiveVector* v) {$/;"	f
free	$C2_ROOT/ir/rev_list.c2	/^public fn void RevList.free(RevList* r) {$/;"	f
free	$C2_ROOT/ir/rpo.c2	/^public fn void Rpo.free(Rpo* rpo) {$/;"	f
free	$C2_ROOT/ir/slot_collector.c2	/^public fn void SlotCollector.free(SlotCollector* c) {$/;"	f
free	$C2_ROOT/ir/slot_values.c2	/^public fn void SlotValues.free(SlotValues* v) {$/;"	f
free	$C2_ROOT/ir/slot_writes_map.c2	/^public fn void Map.free(Map* m) {$/;"	f
free	$C2_ROOT/ir/symbol_list.c2	/^fn void SymbolList.free(SymbolList* l) {$/;"	f
free	$C2_ROOT/ir/usage_counter.c2	/^public fn void Counter.free(Counter* c) {$/;"	f
free	$C2_ROOT/ir/work_queue.c2	/^fn void WorkQueue.free(WorkQueue* q) {$/;"	f
free	$C2_ROOT/libs/libc/ifaddrs.c2i	/^fn void Ifaddrs.free(Ifaddrs* __ifa) @(cname="freeifaddrs");$/;"	f
free	$C2_ROOT/libs/libc/stdlib.c2i	/^fn void free(void* ptr);$/;"	f
free	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void free(void* mem) @(cname="SDL_free");$/;"	f
free	$C2_ROOT/parser/ast_builder.c2	/^public fn void Builder.free(Builder* b) {$/;"	f
free	$C2_ROOT/parser/c2_parser.c2	/^public fn void Parser.free(Parser* p) {$/;"	f
free	$C2_ROOT/parser/case_list.c2	/^public fn void List.free(List* l) {$/;"	f
free	$C2_ROOT/parser/expr_list.c2	/^public fn void List.free(List* l) {$/;"	f
free	$C2_ROOT/parser/stmt_list.c2	/^public fn void List.free(List* l) {$/;"	f
free	$C2_ROOT/plugins/deps_generator.c2	/^fn void Dir.free(Dir* d) {$/;"	f
free	$C2_ROOT/plugins/refs_generator.c2	/^fn void LineCounter.free(LineCounter* l) {$/;"	f
freeBlocks	$C2_ROOT/ast_utils/context.c2	/^fn void Context.freeBlocks(Context* c) {$/;"	f
freeFragment	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.freeFragment(Generator* gen, Fragment* f) {$/;"	f
free_fn	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    FreeCb free_fn;$/;"	v
free_fn	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    FreeCb free_fn;$/;"	v
free_fn	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    FreeCb free_fn;$/;"	v
free_fn	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FreeCb free_fn;$/;"	v
free_fn	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    FreeCb free_fn;$/;"	v
free_list	$C2_ROOT/bootstrap/bootstrap.c	/^   linked_list_Element free_list;$/;"	v
free_list	$C2_ROOT/generator/c/c_generator.c2	/^    linked_list.Element free_list;$/;"	v
free_node	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^fn void Tree.free_node(Tree* t, u32 node_idx) {$/;"	f
free_slots	$C2_ROOT/bootstrap/bootstrap.c	/^   uint16_t free_slots;$/;"	v
free_slots	$C2_ROOT/ir/interference_graph.c2	/^    u16 free_slots;$/;"	v
free_slots	$C2_ROOT/ir/live_map.c2	/^    u16 free_slots;$/;"	v
free_slots	$C2_ROOT/ir/slot_writes_map.c2	/^    u16 free_slots;$/;"	v
free_zones	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    linked_list.Element free_zones;$/;"	v
freopen	$C2_ROOT/libs/libc/stdio.c2i	/^fn FILE* freopen(const c_char* __filename, const c_char* __modes, FILE* __stream);$/;"	f
frexp	$C2_ROOT/libs/math/math.c2i	/^fn c_double frexp(c_double, c_int *);$/;"	f
frexpf	$C2_ROOT/libs/math/math.c2i	/^fn c_float frexpf(c_float, c_int *);$/;"	f
from	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^    ir.Type t = ir.Type.I32; \/\/ TODO get type from Expr$/;"	t
from	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        ir.Type t = ir.Type.I32; \/\/ TODO get type from Expr$/;"	t
fromString	$C2_ROOT/common/target_info.c2	/^public fn bool Info.fromString(Info* info, const char* triple) {$/;"	f
fromVec3	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec4 Vec4.fromVec3(const Vec3* v, f32 w) {$/;"	f
front	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    StencilFaceState front;$/;"	v
frustum	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void frustum(f32 l, f32 r, f32 b, f32 t, f32 n, f32 f) @(cname="sgl_frustum");$/;"	f
fs	$C2_ROOT/ir_examples/array.c2	/^    Foo[3] fs;$/;"	v
fs	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* fs;$/;"	v
fs_mod	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* fs_mod;$/;"	v
fscanf	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int fscanf(FILE* __stream, const c_char* __format, ...);$/;"	f
fseek	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int fseek(FILE* __stream, c_long __off, c_int __whence);$/;"	f
fseeko	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int fseeko(FILE* __stream, Offset __off, c_int __whence);$/;"	f
fstat	$C2_ROOT/libs/libc/sys_stat.c2i	/^fn c_int fstat(c_int fd, Stat* buf);$/;"	f
fsync	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int fsync(c_int fd);$/;"	f
fsync_flags	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        u32       fsync_flags;$/;"	v
ftd	$C2_ROOT/ast/function_type_decl.c2	/^    return ftd;$/;"	v
ftd	$C2_ROOT/bootstrap/bootstrap.c	/^   return ftd;$/;"	v
ftell	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_long ftell(FILE* __stream);$/;"	f
ftello	$C2_ROOT/libs/libc/stdio.c2i	/^fn Offset ftello(FILE* __stream);$/;"	f
ftrylockfile	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int ftrylockfile(FILE* __stream);$/;"	f
full	$C2_ROOT/bootstrap/bootstrap.c	/^      if ((full[0] == 0)) return full;$/;"	v
full	$C2_ROOT/common/yaml/yaml_iterator.c2	/^        if (full[0] == 0) return full;$/;"	v
fullPrint	$C2_ROOT/ast/alias_type.c2	/^fn void AliasType.fullPrint(const AliasType* t, string_buffer.Buf* out, u32 indent) {$/;"	f
fullPrint	$C2_ROOT/ast/array_type.c2	/^fn void ArrayType.fullPrint(const ArrayType* t, string_buffer.Buf* out, u32 indent) {$/;"	f
fullPrint	$C2_ROOT/ast/builtin_type.c2	/^fn void BuiltinType.fullPrint(const BuiltinType* t, string_buffer.Buf* out, u32 indent) {$/;"	f
fullPrint	$C2_ROOT/ast/enum_type.c2	/^fn void EnumType.fullPrint(const EnumType* t, string_buffer.Buf* out, u32 indent) {$/;"	f
fullPrint	$C2_ROOT/ast/function_type.c2	/^fn void FunctionType.fullPrint(const FunctionType* t, string_buffer.Buf* out, u32 indent) {$/;"	f
fullPrint	$C2_ROOT/ast/module_type.c2	/^fn void ModuleType.fullPrint(const ModuleType* t, string_buffer.Buf* out, u32 indent) {$/;"	f
fullPrint	$C2_ROOT/ast/pointer_type.c2	/^fn void PointerType.fullPrint(const PointerType* t, string_buffer.Buf* out, u32 indent) {$/;"	f
fullPrint	$C2_ROOT/ast/qualtype.c2	/^fn void QualType.fullPrint(const QualType* qt, string_buffer.Buf* out, u32 indent) {$/;"	f
fullPrint	$C2_ROOT/ast/struct_type.c2	/^fn void StructType.fullPrint(const StructType* t, string_buffer.Buf* out, u32 indent) {$/;"	f
fullPrint	$C2_ROOT/ast/type.c2	/^fn void Type.fullPrint(const Type* t, string_buffer.Buf* out, u32 indent) {$/;"	f
fullname	$C2_ROOT/compiler/compiler_libs.c2	/^    char[file_utils.Max_path] fullname;$/;"	v
fullname	$C2_ROOT/compiler/plugin_mgr.c2	/^    char[file_utils.Max_path] fullname;$/;"	v
fullname	$C2_ROOT/plugins/deps_generator.c2	/^            char[64] fullname;$/;"	v
fullname	$C2_ROOT/plugins/deps_generator_utils.c2	/^            return fullname;$/;"	v
fullscreen	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool fullscreen;$/;"	v
funDD	$C2_ROOT/ast/ast_evaluator.c2	/^    FunDD funDD;$/;"	v
funDD	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_FunDD funDD;$/;"	v
funII	$C2_ROOT/ast/ast_evaluator.c2	/^    FunII funII;$/;"	v
funII	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_FunII funII;$/;"	v
func	$C2_ROOT/ast/call_expr.c2	/^    e.func = func;$/;"	v
func	$C2_ROOT/ast/function_type_decl.c2	/^    return d.func;$/;"	v
func	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->func;$/;"	v
func	$C2_ROOT/common/attr_handler.c2	/^    e.func = func;$/;"	v
func	$C2_ROOT/generator/c/c_generator_call.c2	/^            MemberExpr* m = (MemberExpr*)func;$/;"	v
func	$C2_ROOT/generator/c2_trace.c2	/^            last = func;$/;"	v
func	$C2_ROOT/generator/c2i/c2i_generator_expr.c2	/^    ImplicitCastExpr* ic = (ImplicitCastExpr*)func;$/;"	v
func	$C2_ROOT/generator/ir/ir_generator_call.c2	/^        const MemberExpr* m = (MemberExpr*)func;$/;"	v
func	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    MatchFn func;$/;"	v
func	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    LogCb func;$/;"	v
func	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    LogCb func;$/;"	v
func	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    LogCb func;$/;"	v
func	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    LogCb func;$/;"	v
func	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    LogCb func;$/;"	v
func	$C2_ROOT/libs/sokol/sokol_log.c2i	/^fn void func(const char* tag, u32 log_level, u32 log_item, const char* message, u32 line_nr, con/;"	f
func	$C2_ROOT/plugins/unit_test1.c2	/^   TestFn func;$/;"	v
func1	$C2_ROOT/ir_examples/array.c2	/^fn i32 func1(i32 arg1) {$/;"	f
func1	$C2_ROOT/ir_examples/if_stmt.c2	/^fn i32 func1(i32 arg1) {$/;"	f
func1	$C2_ROOT/ir_examples/members.c2	/^fn void func1(Struct* s) {$/;"	f
func2	$C2_ROOT/ir_examples/if_stmt.c2	/^fn i32 func2(i8 arg1, void* p) {$/;"	f
func3	$C2_ROOT/ir_examples/if_stmt.c2	/^fn void func3(i8 a, i8 b) {$/;"	f
func_loc	$C2_ROOT/bootstrap/bootstrap.c	/^      prefix_ref.loc = func_loc;$/;"	v
func_loc	$C2_ROOT/parser/c2_parser.c2	/^        prefix_ref.loc = func_loc;$/;"	v
func_name	$C2_ROOT/bootstrap/bootstrap.c	/^      prefix_ref.name_idx = func_name;$/;"	v
func_name	$C2_ROOT/parser/c2_parser.c2	/^        prefix_ref.name_idx = func_name;$/;"	v
funcname	$C2_ROOT/libs/c2/c2_trace_tables.c2i	/^    const char *funcname;$/;"	v
funcnames	$C2_ROOT/bootstrap/bootstrap.c	/^   c_generator_StringList funcnames;$/;"	v
funcnames	$C2_ROOT/generator/c/c_generator.c2	/^    StringList funcnames;$/;"	v
funcs	$C2_ROOT/ast/instance_table.c2	/^    TemplateFunction* funcs;$/;"	v
funcs	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_TemplateFunction* funcs;$/;"	v
funcs	$C2_ROOT/ir/work_queue.c2	/^    ir.FunctionInfo** funcs;$/;"	v
funcs2	$C2_ROOT/ast/instance_table.c2	/^    t.funcs = funcs2;$/;"	v
funcs2	$C2_ROOT/bootstrap/bootstrap.c	/^   t->funcs = funcs2;$/;"	v
function	$C2_ROOT/analyser/module_analyser.c2	/^        ma.curFunction = top.function;$/;"	v
function	$C2_ROOT/analyser/module_analyser_call.c2	/^                    ma.errorRange(m.getLoc(0), base.getRange(), "type function needs lvalue");$/;"	t
function	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_FunctionDecl* function;$/;"	v
functionDeclBits	$C2_ROOT/ast/decl.c2	/^        FunctionDeclBits functionDeclBits;$/;"	v
functionDeclBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_FunctionDeclBits functionDeclBits;$/;"	v
functions	$C2_ROOT/analyser/struct_func_list.c2	/^    ast.FunctionDeclList functions;$/;"	v
functions	$C2_ROOT/ast/ast.c2	/^    FunctionDeclList functions;$/;"	v
functions	$C2_ROOT/bootstrap/bootstrap.c	/^   plugin_info_Plugin* functions;$/;"	v
functions	$C2_ROOT/compiler/plugin_mgr.c2	/^    plugin_info.Plugin* functions;$/;"	v
funlockfile	$C2_ROOT/libs/libc/stdio.c2i	/^fn void funlockfile(FILE* __stream);$/;"	f
fvalue	$C2_ROOT/ast/value.c2	/^    v.fvalue = fvalue;$/;"	v
fvalue	$C2_ROOT/bootstrap/bootstrap.c	/^   v->fvalue = fvalue;$/;"	v
fwrite	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_size fwrite(const void* __ptr, c_size __size, c_size __n, FILE* __s);$/;"	f
fwrite_unlocked	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_size fwrite_unlocked(const void* __ptr, c_size __size, c_size __n, FILE* __stream);$/;"	f
g_a	$C2_ROOT/ir_examples/struct_func.c2	/^A g_a;$/;"	v
g_a2	$C2_ROOT/ir_examples/struct_func.c2	/^A[4] g_a2;$/;"	v
g_cfg	$C2_ROOT/plugins/unit_test1.c2	/^Config g_cfg;$/;"	v
gc	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int gc(State *L, c_int what, c_int data) @(cname="lua_gc");$/;"	f
gcvt	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_char* gcvt(c_double __value, c_int __ndigit, c_char* __buf);$/;"	f
gen	$C2_ROOT/bootstrap/bootstrap.c	/^   l->gen = gen;$/;"	v
gen	$C2_ROOT/generator/c/c_generator.c2	/^    Generator gen;$/;"	v
gen	$C2_ROOT/generator/ir/basic_struct_layouter.c2	/^    l.gen = gen;$/;"	v
gen	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^    l.gen = gen;$/;"	v
gen	$C2_ROOT/generator/ir/ir_generator.c2	/^    Generator gen;$/;"	v
genDeclIfNeeded	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.genDeclIfNeeded(Generator* gen, Decl* d) {$/;"	f
genTypeIfNeeded	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.genTypeIfNeeded(Generator* gen, QualType qt, bool full) {$/;"	f
gen_full_func	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.gen_full_func(void* arg, FunctionDecl* fd) {$/;"	f
gen_full_funcs	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.gen_full_funcs(void* arg, AST* a) {$/;"	f
gen_func_proto	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.gen_func_proto(Generator* gen, FunctionDecl* fd, string_buffer.Buf* out) {$/;"	f
gen_idx	$C2_ROOT/ast/decl.c2	/^    if (d.declBits.has_gen_idx) return d.gen_idx;$/;"	v
gen_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   return gen_idx;$/;"	v
gen_idx	$C2_ROOT/generator/ir/ir_generator.c2	/^    return gen_idx;$/;"	v
gen_member_type_func	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.gen_member_type_func(Generator* gen, FunctionDecl* fd, string_buffer.Buf* out,/;"	f
generate	$C2_ROOT/generator/c/c_generator.c2	/^public fn void generate(string_pool.Pool* astPool,$/;"	f
generate	$C2_ROOT/generator/c2i/c2i_generator.c2	/^public fn void generate(string_pool.Pool* astPool, const char* output_dir, component.List* comps/;"	f
generate	$C2_ROOT/generator/ir/ir_generator.c2	/^public fn void generate(const char* target,$/;"	f
generate	$C2_ROOT/plugins/deps_generator.c2	/^public fn void generate(const char* title, const char* output_dir, component.List* comps, string/;"	f
generate	$C2_ROOT/plugins/refs_generator.c2	/^public fn void generate(source_mgr.SourceMgr* sm, const char* output_dir, component.List* comps,/;"	f
generateC2TypesHeader	$C2_ROOT/generator/c/c_generator_special.c2	/^fn void Generator.generateC2TypesHeader(Generator* gen) {$/;"	f
generateInterfaceFiles	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.generateInterfaceFiles(Generator* gen, Module* m) {$/;"	f
generate_c2test_main	$C2_ROOT/plugins/unit_test_plugin.c2	/^fn void Plugin.generate_c2test_main(Plugin* p) {$/;"	f
generate_graphviz	$C2_ROOT/ir/graphviz.c2	/^fn void Tools.generate_graphviz(Tools* t, FunctionInfo* fi) @(unused) {$/;"	f
generate_module	$C2_ROOT/plugins/git_version_plugin.c2	/^fn void generate_module(void* arg) {$/;"	f
generate_tests	$C2_ROOT/plugins/unit_test_plugin.c2	/^fn void generate_tests(void* arg) {$/;"	f
generate_types	$C2_ROOT/plugins/unit_test_plugin.c2	/^fn void generate_types(Plugin *p) {$/;"	f
generator_utils	$C2_ROOT/compiler/compiler.c2	/^import generator_utils;$/;"	v
generator_utils	$C2_ROOT/generator/generator_utils.c2	/^module generator_utils;$/;"	v
generator_utils_Wrapper	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct generator_utils_Wrapper_ generator_utils_Wrapper;$/;"	v
get	$C2_ROOT/analyser/name_vector.c2	/^public fn u32 NameVector.get(const NameVector* v, u32 idx) {$/;"	f
get	$C2_ROOT/ast/array_value_list.c2	/^fn ArrayValue** ArrayValueList.get(ArrayValueList* l) {$/;"	f
get	$C2_ROOT/ast/decl_list.c2	/^public fn Decl* DeclList.get(const DeclList* l, u32 idx) {$/;"	f
get	$C2_ROOT/ast/instance_table.c2	/^fn FunctionDecl* TemplateFunction.get(const TemplateFunction* f, u32 idx) {$/;"	f
get	$C2_ROOT/ast/static_assert_list.c2	/^fn StaticAssert** StaticAssertList.get(StaticAssertList* l) {$/;"	f
get	$C2_ROOT/ast/string_type_pool.c2	/^fn QualType StringTypePool.get(StringTypePool* p, u32 len) {$/;"	f
get	$C2_ROOT/common/bit_array.c2	/^public fn bool BitArray.get(const BitArray* a, u32 idx) {$/;"	f
get	$C2_ROOT/common/build_target.c2	/^public fn const Plugin* PluginList.get(const PluginList* l, u32 idx) {$/;"	f
get	$C2_ROOT/common/component.c2	/^public fn Component* List.get(const List* l, u32 idx) {$/;"	f
get	$C2_ROOT/common/module_list.c2	/^public fn ast.Module** List.get(const List* l) { return l.mods; }$/;"	f
get	$C2_ROOT/common/string_list.c2	/^public fn const char* List.get(const List* l, u32 idx) {$/;"	f
get	$C2_ROOT/common/value_maplist.c2	/^public fn u32 List.get(const List* l, u32 key) {$/;"	f
get	$C2_ROOT/generator/c/c_generator_trace.c2	/^fn const char* StringList.get(const StringList* sl, u32 i) {$/;"	f
get	$C2_ROOT/generator/ir/ref_list.c2	/^public fn const ir.Ref* RefList.get(const RefList* l) {$/;"	f
get	$C2_ROOT/ir/block_list.c2	/^public fn Block* BlockList.get(const BlockList* l, BlockId idx) {$/;"	f
get	$C2_ROOT/ir/case_list.c2	/^public fn Case* CaseList.get(const CaseList* l, CaseId idx) {$/;"	f
get	$C2_ROOT/ir/constant_list.c2	/^fn Constant* ConstantList.get(const ConstantList* l, u32 idx) {$/;"	f
get	$C2_ROOT/ir/init_value_list.c2	/^fn InitValue* InitValueList.get(const InitValueList* l, u32 idx) {$/;"	f
get	$C2_ROOT/ir/instr_list.c2	/^public fn Instr* InstrList.get(const InstrList* l, u32 idx) {$/;"	f
get	$C2_ROOT/ir/lookup_table.c2	/^public fn u32 Table.get(const Table* t, u32 idx) {$/;"	f
get	$C2_ROOT/ir/phi_list.c2	/^public fn PhiClause* PhiList.get(const PhiList* l, u32 idx) {$/;"	f
get	$C2_ROOT/ir/symbol_list.c2	/^fn Symbol* SymbolList.get(const SymbolList* l, SymbolId idx) {$/;"	f
get	$C2_ROOT/ir/work_queue.c2	/^fn ir.FunctionInfo* WorkQueue.get(WorkQueue* q) {$/;"	f
get	$C2_ROOT/ir_examples/struct_func.c2	/^fn i32 A.get(const A* a) {$/;"	f
get	$C2_ROOT/libs/libc/ifaddrs.c2i	/^fn c_int get(Ifaddrs** __ifap) @(cname="getifaddrs");$/;"	f
get	$C2_ROOT/plugins/deps_generator.c2	/^fn Dir* Dir.get(Dir* d, u32 name_idx) {$/;"	f
getAST	$C2_ROOT/ast/decl.c2	/^public fn AST* Decl.getAST(const Decl* d) { return idx2ast(d.ast_idx); }$/;"	f
getAST	$C2_ROOT/ast/static_assert.c2	/^public fn AST* StaticAssert.getAST(const StaticAssert* d) {$/;"	f
getASTIdx	$C2_ROOT/ast/decl.c2	/^fn u32 Decl.getASTIdx(const Decl* d) { return d.ast_idx; }$/;"	f
getAddIndex	$C2_ROOT/ir/inserter.c2	/^fn u32 Inserter.getAddIndex(Inserter* ins, u32 location) {$/;"	f
getAddress	$C2_ROOT/ast/function_decl.c2	/^fn CompoundStmt* FunctionDecl.getAddress(const FunctionDecl* d) {$/;"	f
getAliasName	$C2_ROOT/ast/import_decl.c2	/^public fn const char* ImportDecl.getAliasName(const ImportDecl* d) { return idx2name(d.alias_idx/;"	f
getAliasNameIdx	$C2_ROOT/ast/import_decl.c2	/^fn u32 ImportDecl.getAliasNameIdx(const ImportDecl* d) { return d.alias_idx; }$/;"	f
getAlignment	$C2_ROOT/ast/builtin_type.c2	/^public fn u32 BuiltinType.getAlignment(const BuiltinType* b) {$/;"	f
getAlignment	$C2_ROOT/ast/qualtype.c2	/^public fn u32 QualType.getAlignment(QualType* qt) {$/;"	f
getAlignment	$C2_ROOT/ast/struct_type_decl.c2	/^public fn u32 StructTypeDecl.getAlignment(const StructTypeDecl* d) {$/;"	f
getAlignment	$C2_ROOT/ast/type.c2	/^fn u32 Type.getAlignment(const Type* t) {$/;"	f
getAlphaMod	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Texture.getAlphaMod(Texture* texture, u8* alpha) @(cname="SDL_GetTextureAlphaMod");$/;"	f
getArchName	$C2_ROOT/common/target_info.c2	/^public fn const char* Info.getArchName(const Info* info) {$/;"	f
getArg	$C2_ROOT/ir/function_info.c2	/^public fn Type FunctionInfo.getArg(const FunctionInfo* fi, u32 idx) {$/;"	f
getArgs	$C2_ROOT/ast/call_expr.c2	/^public fn Expr** CallExpr.getArgs(CallExpr* e) {$/;"	f
getArray	$C2_ROOT/ast/type_ref.c2	/^public fn Expr* TypeRef.getArray(const TypeRef* r, u32 idx) {$/;"	f
getArray2	$C2_ROOT/ast/type_ref.c2	/^public fn Expr** TypeRef.getArray2(TypeRef* r, u32 idx) {$/;"	f
getArrayType	$C2_ROOT/ast/qualtype.c2	/^public fn ArrayType* QualType.getArrayType(const QualType* qt) {$/;"	f
getArrayTypeOrNil	$C2_ROOT/ast/qualtype.c2	/^public fn ArrayType* QualType.getArrayTypeOrNil(const QualType* qt) {$/;"	f
getAsmFile	$C2_ROOT/common/build_target.c2	/^public fn const File* Target.getAsmFile(const Target* t, u32 idx) {$/;"	f
getAsmFlags	$C2_ROOT/common/build_file.c2	/^public fn const char* Info.getAsmFlags(const Info* info) {$/;"	f
getAssignLoc	$C2_ROOT/ast/var_decl.c2	/^public fn SrcLoc VarDecl.getAssignLoc(const VarDecl* d) {$/;"	f
getAt	$C2_ROOT/ast/static_assert_list.c2	/^fn StaticAssert* StaticAssertList.getAt(const StaticAssertList* l, u32 idx) {$/;"	f
getAttr	$C2_ROOT/ast/ast.c2	/^public fn const attr.Value* AST.getAttr(const AST* a,$/;"	f
getAttrAlignment	$C2_ROOT/ast/struct_type_decl.c2	/^public fn u32 StructTypeDecl.getAttrAlignment(const StructTypeDecl* d) {$/;"	f
getAttrPrintf	$C2_ROOT/ast/function_decl.c2	/^public fn u8 FunctionDecl.getAttrPrintf(const FunctionDecl* d) {$/;"	f
getBackEnd	$C2_ROOT/common/build_target.c2	/^public fn BackEndKind Target.getBackEnd(const Target* t) {$/;"	f
getBase	$C2_ROOT/ast/array_subscript_expr.c2	/^public fn Expr* ArraySubscriptExpr.getBase(const ArraySubscriptExpr* e) { return e.lhs; }$/;"	f
getBase2	$C2_ROOT/ast/array_subscript_expr.c2	/^public fn Expr** ArraySubscriptExpr.getBase2(ArraySubscriptExpr* e) { return &e.lhs; }$/;"	f
getBaseKind	$C2_ROOT/ast/builtin_type.c2	/^public fn BuiltinKind BuiltinType.getBaseKind(const BuiltinType* b) {$/;"	f
getBaseType	$C2_ROOT/ast/member_expr.c2	/^public fn QualType MemberExpr.getBaseType(const MemberExpr* m) {$/;"	f
getBinOpWidth	$C2_ROOT/analyser/conversion_checker_expr.c2	/^fn ExprWidth getBinOpWidth(const BinaryOperator* b) {$/;"	f
getBitFieldInfo	$C2_ROOT/ast/var_decl.c2	/^fn BitFieldInfo* VarDecl.getBitFieldInfo(const VarDecl* d) {$/;"	f
getBitFieldWidth	$C2_ROOT/ast/qualtype.c2	/^public fn u32 QualType.getBitFieldWidth(const QualType* qt) {$/;"	f
getBitfield	$C2_ROOT/ast/var_decl.c2	/^public fn Expr* VarDecl.getBitfield(const VarDecl* d) {$/;"	f
getBitfieldLayout	$C2_ROOT/ast/var_decl.c2	/^public fn BitFieldLayout* VarDecl.getBitfieldLayout(const VarDecl* d) {$/;"	f
getBlendMode	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Texture.getBlendMode(Texture* texture, BlendMode* mode) @(cname="SDL_GetTextureBlendMod/;"	f
getBlockIndex	$C2_ROOT/ir/rev_list.c2	/^public fn RevIndex RevList.getBlockIndex(const RevList* r, BlockId blk_id) {$/;"	f
getBody	$C2_ROOT/ast/for_stmt.c2	/^public fn Stmt* ForStmt.getBody(const ForStmt* s) { return s.body; }$/;"	f
getBody	$C2_ROOT/ast/function_decl.c2	/^public fn CompoundStmt* FunctionDecl.getBody(const FunctionDecl* d) {$/;"	f
getBody	$C2_ROOT/ast/while_stmt.c2	/^public fn Stmt* WhileStmt.getBody(const WhileStmt* s) { return s.body; }$/;"	f
getBuf	$C2_ROOT/generator/c/c_generator.c2	/^fn string_buffer.Buf* Generator.getBuf(Generator* gen, bool is_public) {$/;"	f
getBuiltin	$C2_ROOT/ast/qualtype.c2	/^public fn BuiltinType* QualType.getBuiltin(const QualType* qt) {$/;"	f
getBuiltinKind	$C2_ROOT/ast/type_ref.c2	/^public fn BuiltinKind TypeRef.getBuiltinKind(const TypeRef* r) {$/;"	f
getBuiltinTypeOrNil	$C2_ROOT/ast/qualtype.c2	/^public fn BuiltinType* QualType.getBuiltinTypeOrNil(const QualType* qt) {$/;"	f
getCC	$C2_ROOT/common/build_file.c2	/^public fn const char* Info.getCC(const Info* info) {$/;"	f
getCDef	$C2_ROOT/ast/decl.c2	/^public fn const char* Decl.getCDef(const Decl* d) {$/;"	f
getCFlags	$C2_ROOT/common/build_file.c2	/^public fn const char* Info.getCFlags(const Info* info) {$/;"	f
getCName	$C2_ROOT/ast/decl.c2	/^public fn const char* Decl.getCName(const Decl* d) {$/;"	f
getCName	$C2_ROOT/ast/function_decl.c2	/^fn const char* FunctionDecl.getCName(const FunctionDecl* d) {$/;"	f
getCStyle	$C2_ROOT/ast/explicit_cast_expr.c2	/^public fn bool ExplicitCastExpr.getCStyle(const ExplicitCastExpr* e) {$/;"	f
getCallKind	$C2_ROOT/ast/function_decl.c2	/^public fn CallKind FunctionDecl.getCallKind(const FunctionDecl* d) {$/;"	f
getCanonicalType	$C2_ROOT/ast/qualtype.c2	/^public fn QualType QualType.getCanonicalType(const QualType* qt) {$/;"	f
getCanonicalType	$C2_ROOT/ast/type.c2	/^fn QualType Type.getCanonicalType(const Type* t) { return t.canonicalType; }$/;"	f
getCases	$C2_ROOT/ast/switch_stmt.c2	/^public fn SwitchCase** SwitchStmt.getCases(SwitchStmt* s) {$/;"	f
getCheckState	$C2_ROOT/ast/decl.c2	/^public fn DeclCheckState Decl.getCheckState(const Decl* d) { return (DeclCheckState)d.declBits.c/;"	f
getCheckStateName	$C2_ROOT/ast/decl.c2	/^public fn const char* Decl.getCheckStateName(const Decl* d) {$/;"	f
getChildIter	$C2_ROOT/common/yaml/yaml_iterator.c2	/^public fn Iter Iter.getChildIter(Iter* parent) @(unused) {$/;"	f
getChildScalarValue	$C2_ROOT/common/yaml/yaml_iterator.c2	/^public fn const char* Iter.getChildScalarValue(Iter* iter, const char* path) {$/;"	f
getClauses	$C2_ROOT/ir/phi_list.c2	/^public fn const PhiClause* PhiClauses.getClauses(const PhiClauses* c) {$/;"	f
getClearedFmtBuffer	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn Range getClearedFmtBuffer() @(cname="sdtx_get_cleared_fmt_buffer");$/;"	f
getClipRect	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void Renderer.getClipRect(Renderer* renderer, Rect* rect) @(cname="SDL_RenderGetClipRect");$/;"	f
getClipboardString	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn const char* getClipboardString() @(cname="sapp_get_clipboard_string");$/;"	f
getClipboardText	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn char* getClipboardText() @(cname="SDL_GetClipboardText");$/;"	f
getClobbers	$C2_ROOT/ast/asm_stmt.c2	/^public fn Expr** AsmStmt.getClobbers(const AsmStmt* s) {$/;"	f
getColorMod	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Texture.getColorMod(Texture* texture, u8* r, u8* g,u8* b) @(cname="SDL_GetTextureColorM/;"	f
getCond	$C2_ROOT/ast/conditional_operator.c2	/^public fn Expr* ConditionalOperator.getCond(const ConditionalOperator* e) {$/;"	f
getCond	$C2_ROOT/ast/for_stmt.c2	/^public fn Expr* ForStmt.getCond(const ForStmt* s) { return s.cond; }$/;"	f
getCond	$C2_ROOT/ast/if_stmt.c2	/^public fn Stmt* IfStmt.getCond(const IfStmt* s) { return s.cond; }$/;"	f
getCond	$C2_ROOT/ast/switch_case.c2	/^public fn Expr* SwitchCase.getCond(SwitchCase* s, u32 index) {$/;"	f
getCond	$C2_ROOT/ast/switch_stmt.c2	/^public fn Expr* SwitchStmt.getCond(const SwitchStmt* s) {$/;"	f
getCond	$C2_ROOT/ast/while_stmt.c2	/^public fn Stmt* WhileStmt.getCond(const WhileStmt* s) { return s.cond; }$/;"	f
getCond2	$C2_ROOT/ast/conditional_operator.c2	/^public fn Expr** ConditionalOperator.getCond2(ConditionalOperator* e) {$/;"	f
getCond2	$C2_ROOT/ast/for_stmt.c2	/^public fn Expr** ForStmt.getCond2(ForStmt* s) { return s.cond ? &s.cond : nil; }$/;"	f
getCond2	$C2_ROOT/ast/if_stmt.c2	/^public fn Stmt** IfStmt.getCond2(IfStmt* s) { return &s.cond; }$/;"	f
getCond2	$C2_ROOT/ast/switch_stmt.c2	/^public fn Expr** SwitchStmt.getCond2(SwitchStmt* s) {$/;"	f
getCond2	$C2_ROOT/ast/while_stmt.c2	/^public fn Stmt** WhileStmt.getCond2(WhileStmt* s) { return &s.cond; }$/;"	f
getCondExpr	$C2_ROOT/analyser/module_analyser_stmt.c2	/^fn Expr* getCondExpr(const Stmt* cond) {$/;"	f
getCondOpWidth	$C2_ROOT/analyser/conversion_checker_expr.c2	/^fn ExprWidth getCondOpWidth(const ConditionalOperator* c) {$/;"	f
getConst	$C2_ROOT/common/module_list.c2	/^public fn const ast.Module** List.getConst(const List* l) {$/;"	f
getConstant	$C2_ROOT/ast/enum_type_decl.c2	/^public fn EnumConstantDecl* EnumTypeDecl.getConstant(const EnumTypeDecl* d, u32 idx) {$/;"	f
getConstants	$C2_ROOT/ast/enum_type_decl.c2	/^public fn EnumConstantDecl** EnumTypeDecl.getConstants(EnumTypeDecl* d) {$/;"	f
getConstraints	$C2_ROOT/ast/asm_stmt.c2	/^public fn const Expr** AsmStmt.getConstraints(const AsmStmt* s) {$/;"	f
getCont	$C2_ROOT/ast/for_stmt.c2	/^public fn Expr* ForStmt.getCont(const ForStmt* s) { return s.cont; }$/;"	f
getCont2	$C2_ROOT/ast/for_stmt.c2	/^public fn Expr** ForStmt.getCont2(ForStmt* s) { return s.cont ? &s.cont : nil; }$/;"	f
getContext	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn Context getContext() @(cname="sdtx_get_context");$/;"	f
getContext	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn Context getContext() @(cname="sgl_get_context");$/;"	f
getConversion	$C2_ROOT/ast/member_expr.c2	/^public fn MemberConversion MemberExpr.getConversion(const MemberExpr* e) {$/;"	f
getCount	$C2_ROOT/analyser/init_checker.c2	/^public fn u32 Checker.getCount(const Checker* c) {$/;"	f
getCount	$C2_ROOT/analyser/label_vector.c2	/^public fn u32 LabelVector.getCount(const LabelVector* v) {$/;"	f
getCount	$C2_ROOT/ast/array_value_list.c2	/^fn u32 ArrayValueList.getCount(const ArrayValueList* l) {$/;"	f
getCount	$C2_ROOT/ast/compound_stmt.c2	/^public fn u32 CompoundStmt.getCount(const CompoundStmt* s) {$/;"	f
getCount	$C2_ROOT/ast/static_assert_list.c2	/^fn u32 StaticAssertList.getCount(const StaticAssertList* l) {$/;"	f
getCount	$C2_ROOT/common/index_list.c2	/^public fn u32 List.getCount(const List* l) {$/;"	f
getCount	$C2_ROOT/generator/ir/ref_list.c2	/^public fn u32 RefList.getCount(const RefList* l) {$/;"	f
getCount	$C2_ROOT/ir/block_list.c2	/^public fn u32 BlockList.getCount(const BlockList* l) {$/;"	f
getCount	$C2_ROOT/ir/case_list.c2	/^public fn u32 CaseList.getCount(const CaseList* l) {$/;"	f
getCount	$C2_ROOT/ir/constant_list.c2	/^fn u32 ConstantList.getCount(const ConstantList* l) {$/;"	f
getCount	$C2_ROOT/ir/init_value_list.c2	/^fn u32 InitValueList.getCount(const InitValueList* l) {$/;"	f
getCount	$C2_ROOT/ir/instr_list.c2	/^public fn u32 InstrList.getCount(const InstrList* l) {$/;"	f
getCount	$C2_ROOT/ir/phi_list.c2	/^public fn u32 PhiList.getCount(const PhiList* l) {$/;"	f
getCount	$C2_ROOT/ir/symbol_list.c2	/^fn u32 SymbolList.getCount(const SymbolList* l) {$/;"	f
getCurBlock	$C2_ROOT/ir/context.c2	/^public fn BlockId Context.getCurBlock(const Context* c) {$/;"	f
getData	$C2_ROOT/common/string_list.c2	/^public fn u32* List.getData(List* l) {$/;"	f
getData	$C2_ROOT/parser/case_list.c2	/^public fn SwitchCase** List.getData(List* l) {$/;"	f
getData	$C2_ROOT/parser/expr_list.c2	/^public fn Expr** List.getData(List* l) {$/;"	f
getData	$C2_ROOT/parser/stmt_list.c2	/^public fn Stmt** List.getData(List* l) {$/;"	f
getDecl	$C2_ROOT/analyser/struct_func_list.c2	/^public fn ast.Decl* List.getDecl(const List* v, u32 index) {$/;"	f
getDecl	$C2_ROOT/ast/alias_type.c2	/^public fn AliasTypeDecl* AliasType.getDecl(const AliasType* t) { return t.decl; }$/;"	f
getDecl	$C2_ROOT/ast/decl_stmt.c2	/^public fn VarDecl* DeclStmt.getDecl(const DeclStmt* d, u32 i) {$/;"	f
getDecl	$C2_ROOT/ast/enum_type.c2	/^public fn EnumTypeDecl* EnumType.getDecl(const EnumType* t) { return t.decl; }$/;"	f
getDecl	$C2_ROOT/ast/field_designated_init_expr.c2	/^public fn Decl* FieldDesignatedInitExpr.getDecl(const FieldDesignatedInitExpr* e) {$/;"	f
getDecl	$C2_ROOT/ast/function_type.c2	/^public fn FunctionDecl* FunctionType.getDecl(const FunctionType* t) { return t.decl; }$/;"	f
getDecl	$C2_ROOT/ast/function_type_decl.c2	/^public fn FunctionDecl* FunctionTypeDecl.getDecl(const FunctionTypeDecl* d) {$/;"	f
getDecl	$C2_ROOT/ast/identifier_expr.c2	/^public fn Decl* IdentifierExpr.getDecl(const IdentifierExpr* e) {$/;"	f
getDecl	$C2_ROOT/ast/member_expr.c2	/^public fn Decl* MemberExpr.getDecl(const MemberExpr* e, u32 ref_idx) {$/;"	f
getDecl	$C2_ROOT/ast/struct_type.c2	/^public fn StructTypeDecl* StructType.getDecl(const StructType* t) { return t.decl; }$/;"	f
getDeclCount	$C2_ROOT/ast/decl_stmt.c2	/^public fn u32 DeclStmt.getDeclCount(const DeclStmt* d) {$/;"	f
getDecls	$C2_ROOT/ast/decl_list.c2	/^public fn Decl** DeclList.getDecls(const DeclList* l) {$/;"	f
getDecls	$C2_ROOT/ast/function_decl_list.c2	/^public fn FunctionDecl** FunctionDeclList.getDecls(const FunctionDeclList* l) {$/;"	f
getDecls	$C2_ROOT/ast/import_decl_list.c2	/^public fn ImportDecl** ImportDeclList.getDecls(const ImportDeclList* l) {$/;"	f
getDecls	$C2_ROOT/ast/symbol_table.c2	/^public fn Decl** SymbolTable.getDecls(const SymbolTable* t) {$/;"	f
getDeps	$C2_ROOT/common/component.c2	/^public fn string_list.List* Component.getDeps(Component* c) {$/;"	f
getDesigMemberCount	$C2_ROOT/ast/struct_type_decl.c2	/^public fn u32 StructTypeDecl.getDesigMemberCount(const StructTypeDecl* d) {$/;"	f
getDesignator	$C2_ROOT/ast/array_designated_init_expr.c2	/^public fn Expr* ArrayDesignatedInitExpr.getDesignator(const ArrayDesignatedInitExpr* e) {$/;"	f
getDesignator2	$C2_ROOT/ast/array_designated_init_expr.c2	/^public fn Expr** ArrayDesignatedInitExpr.getDesignator2(ArrayDesignatedInitExpr* e) {$/;"	f
getDest	$C2_ROOT/ast/import_decl.c2	/^public fn Module* ImportDecl.getDest(const ImportDecl* d) { return d.dest; }$/;"	f
getDestType	$C2_ROOT/ast/explicit_cast_expr.c2	/^public fn QualType ExplicitCastExpr.getDestType(const ExplicitCastExpr* e) { return e.dest_type;/;"	f
getDiagKind	$C2_ROOT/ast/function_decl.c2	/^public fn const char* FunctionDecl.getDiagKind(const FunctionDecl* d) {$/;"	f
getDrawColor	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Renderer.getDrawColor(Renderer* renderer, u8* r, u8* g, u8* b, u8* a) @(cname="SDL_GetR/;"	f
getDroppedFilePath	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn const char* getDroppedFilePath(i32 index) @(cname="sapp_get_dropped_file_path");$/;"	f
getElemType	$C2_ROOT/ast/array_type.c2	/^public fn QualType ArrayType.getElemType(const ArrayType* t) { return t.elem; }$/;"	f
getElse	$C2_ROOT/ast/if_stmt.c2	/^public fn Stmt* IfStmt.getElse(const IfStmt* s) {$/;"	f
getEndLoc	$C2_ROOT/ast/array_designated_init_expr.c2	/^fn SrcLoc ArrayDesignatedInitExpr.getEndLoc(const ArrayDesignatedInitExpr* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/array_subscript_expr.c2	/^fn SrcLoc ArraySubscriptExpr.getEndLoc(const ArraySubscriptExpr* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/binary_operator.c2	/^fn SrcLoc BinaryOperator.getEndLoc(const BinaryOperator* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/bitoffset_expr.c2	/^fn SrcLoc BitOffsetExpr.getEndLoc(const BitOffsetExpr* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/boolean_literal.c2	/^fn SrcLoc BooleanLiteral.getEndLoc(const BooleanLiteral* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/builtin_expr.c2	/^fn SrcLoc BuiltinExpr.getEndLoc(const BuiltinExpr* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/call_expr.c2	/^public fn SrcLoc CallExpr.getEndLoc(const CallExpr* e) { return e.endLoc; }$/;"	f
getEndLoc	$C2_ROOT/ast/char_literal.c2	/^fn SrcLoc CharLiteral.getEndLoc(const CharLiteral* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/compound_stmt.c2	/^public fn SrcLoc CompoundStmt.getEndLoc(const CompoundStmt* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/conditional_operator.c2	/^fn SrcLoc ConditionalOperator.getEndLoc(const ConditionalOperator* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/explicit_cast_expr.c2	/^fn SrcLoc ExplicitCastExpr.getEndLoc(const ExplicitCastExpr* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/expr.c2	/^public fn SrcLoc Expr.getEndLoc(const Expr* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/field_designated_init_expr.c2	/^fn SrcLoc FieldDesignatedInitExpr.getEndLoc(const FieldDesignatedInitExpr* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/float_literal.c2	/^fn SrcLoc FloatLiteral.getEndLoc(const FloatLiteral* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/identifier_expr.c2	/^fn SrcLoc IdentifierExpr.getEndLoc(const IdentifierExpr* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/implicit_cast_expr.c2	/^fn SrcLoc ImplicitCastExpr.getEndLoc(const ImplicitCastExpr* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/init_list_expr.c2	/^fn SrcLoc InitListExpr.getEndLoc(const InitListExpr* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/integer_literal.c2	/^fn SrcLoc IntegerLiteral.getEndLoc(const IntegerLiteral* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/member_expr.c2	/^fn SrcLoc MemberExpr.getEndLoc(const MemberExpr* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/nil_expr.c2	/^fn SrcLoc NilExpr.getEndLoc(const NilExpr* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/paren_expr.c2	/^fn SrcLoc ParenExpr.getEndLoc(const ParenExpr* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/range_expr.c2	/^fn SrcLoc RangeExpr.getEndLoc(const RangeExpr* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/string_literal.c2	/^fn SrcLoc StringLiteral.getEndLoc(const StringLiteral* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/type_expr.c2	/^fn SrcLoc TypeExpr.getEndLoc(const TypeExpr* e) {$/;"	f
getEndLoc	$C2_ROOT/ast/unary_operator.c2	/^fn SrcLoc UnaryOperator.getEndLoc(const UnaryOperator* e) {$/;"	f
getEnum	$C2_ROOT/ast/qualtype.c2	/^public fn EnumType* QualType.getEnum(const QualType* qt) {$/;"	f
getEnumType	$C2_ROOT/ast/qualtype.c2	/^public fn EnumType* QualType.getEnumType(const QualType* qt) {$/;"	f
getEnumTypeOrNil	$C2_ROOT/ast/qualtype.c2	/^public fn EnumType* QualType.getEnumTypeOrNil(const QualType* qt) {$/;"	f
getError	$C2_ROOT/common/file/file_utils.c2	/^public fn const char* File.getError(File* file) @(unused) {$/;"	f
getError	$C2_ROOT/compiler/plugin_mgr.c2	/^public fn const char* Mgr.getError(const Mgr* m) {$/;"	f
getError	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn const char* getError() @(cname="SDL_GetError");$/;"	f
getExports	$C2_ROOT/common/build_target.c2	/^public fn const string_list.List* Target.getExports(const Target* t) { return &t.exports; }$/;"	f
getExprBase	$C2_ROOT/ast/member_expr.c2	/^public fn Expr* MemberExpr.getExprBase(const MemberExpr* e) {$/;"	f
getExprWidth	$C2_ROOT/analyser/conversion_checker_expr.c2	/^fn ExprWidth getExprWidth(const Expr* e) {$/;"	f
getExprs	$C2_ROOT/ast/asm_stmt.c2	/^public fn Expr** AsmStmt.getExprs(const AsmStmt* s) {$/;"	f
getExprs	$C2_ROOT/ast/expr_list.c2	/^public fn Expr** ExprList.getExprs(const ExprList* l) {$/;"	f
getExtraSize	$C2_ROOT/ast/type_ref.c2	/^fn u32 TypeRefHolder.getExtraSize(const TypeRefHolder* h) {$/;"	f
getFastBuild	$C2_ROOT/common/build_target.c2	/^public fn bool Target.getFastBuild(const Target* t) {$/;"	f
getFeatures	$C2_ROOT/common/build_target.c2	/^public fn const string_list.List* Target.getFeatures(const Target* t) { return &t.features; }$/;"	f
getField	$C2_ROOT/ast/field_designated_init_expr.c2	/^public fn u32 FieldDesignatedInitExpr.getField(const FieldDesignatedInitExpr* e) {$/;"	f
getFieldInfo	$C2_ROOT/analyser/module_analyser_init.c2	/^fn const FieldInitInfo* Analyser.getFieldInfo(Analyser* ma, StructTypeDecl* std) {$/;"	f
getFieldInfo	$C2_ROOT/ast/struct_type_decl.c2	/^public fn const FieldInitInfo* StructTypeDecl.getFieldInfo(const StructTypeDecl* d) {$/;"	f
getFieldName	$C2_ROOT/ast/field_designated_init_expr.c2	/^public fn const char* FieldDesignatedInitExpr.getFieldName(const FieldDesignatedInitExpr* e) {$/;"	f
getFile	$C2_ROOT/common/build_target.c2	/^public fn const File* Target.getFile(const Target* t, u32 idx) {$/;"	f
getFileName	$C2_ROOT/common/source_mgr.c2	/^public fn const char* SourceMgr.getFileName(SourceMgr* sm, i32 handle) {$/;"	f
getFileNameIdx	$C2_ROOT/common/source_mgr.c2	/^public fn u32 SourceMgr.getFileNameIdx(SourceMgr* sm, i32 handle) {$/;"	f
getFilename	$C2_ROOT/ast/ast.c2	/^public fn const char* AST.getFilename(const AST* a) @(unused) {$/;"	f
getFirstFilename	$C2_ROOT/ast/module.c2	/^public fn const char* Module.getFirstFilename(const Module* m) @(unused) {$/;"	f
getForeign	$C2_ROOT/common/component.c2	/^public fn bool Component.getForeign(const Component* c) {$/;"	f
getFragment	$C2_ROOT/generator/c/c_generator.c2	/^fn Fragment* Generator.getFragment(Generator* gen) {$/;"	f
getFrom	$C2_ROOT/common/index_list.c2	/^public fn u32* List.getFrom(const List* l, u32 idx) {$/;"	f
getFullDecl	$C2_ROOT/ast/member_expr.c2	/^public fn Decl* MemberExpr.getFullDecl(const MemberExpr* e) {$/;"	f
getFullName	$C2_ROOT/ast/decl.c2	/^public fn const char* Decl.getFullName(const Decl* d) {$/;"	f
getFunc	$C2_ROOT/ast/call_expr.c2	/^public fn Expr* CallExpr.getFunc(const CallExpr* e) { return e.func; }$/;"	f
getFunc2	$C2_ROOT/ast/call_expr.c2	/^public fn Expr** CallExpr.getFunc2(CallExpr* e) { return &e.func; }$/;"	f
getFunctionType	$C2_ROOT/ast/qualtype.c2	/^public fn FunctionType* QualType.getFunctionType(const QualType* qt) {$/;"	f
getFunctionTypeOrNil	$C2_ROOT/ast/qualtype.c2	/^public fn FunctionType* QualType.getFunctionTypeOrNil(const QualType* qt) {$/;"	f
getFunctions	$C2_ROOT/ast/enum_type_decl.c2	/^public fn const FunctionDecl** EnumTypeDecl.getFunctions(const EnumTypeDecl* d) {$/;"	f
getGenIdx	$C2_ROOT/ast/decl.c2	/^public fn u32 Decl.getGenIdx(const Decl* d) {$/;"	f
getGlobals	$C2_ROOT/ast/utils.c2	/^public fn Globals* getGlobals() { return globals; }$/;"	f
getHinting	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn c_int Font.getHinting(const Font* font) @(cname="TTF_GetFontHinting");$/;"	f
getIdentifierKind	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^fn bool Analyser.getIdentifierKind(Analyser* ma, const Expr* e) {$/;"	f
getIdx	$C2_ROOT/ast/ast.c2	/^public fn u32 AST.getIdx(const AST* a) { return a.idx; }$/;"	f
getImplType	$C2_ROOT/ast/enum_type.c2	/^public fn QualType EnumType.getImplType(const EnumType* t) {$/;"	f
getImplType	$C2_ROOT/ast/enum_type_decl.c2	/^public fn QualType EnumTypeDecl.getImplType(const EnumTypeDecl* d) {$/;"	f
getImportNameIdx	$C2_ROOT/ast/import_decl.c2	/^public fn u32 ImportDecl.getImportNameIdx(const ImportDecl* d) {$/;"	f
getImports	$C2_ROOT/ast/ast.c2	/^public fn const ImportDeclList* AST.getImports(const AST* a) { return &a.imports; }$/;"	f
getIndex	$C2_ROOT/ast/array_subscript_expr.c2	/^public fn Expr* ArraySubscriptExpr.getIndex(const ArraySubscriptExpr* e) { return e.idx; }$/;"	f
getIndex	$C2_ROOT/ast/enum_constant_decl.c2	/^public fn u32 EnumConstantDecl.getIndex(const EnumConstantDecl* d) @(unused) {$/;"	f
getIndex	$C2_ROOT/ast/qualtype.c2	/^public fn u32 QualType.getIndex(QualType* qt) {$/;"	f
getIndex	$C2_ROOT/ast/type.c2	/^fn u32 Type.getIndex(const Type* t) { return t.ptr_pool_idx; }$/;"	f
getIndex2	$C2_ROOT/ast/array_subscript_expr.c2	/^public fn Expr** ArraySubscriptExpr.getIndex2(ArraySubscriptExpr* e) { return &e.idx; }$/;"	f
getInit	$C2_ROOT/ast/array_designated_init_expr.c2	/^public fn Expr* ArrayDesignatedInitExpr.getInit(const ArrayDesignatedInitExpr* e) {$/;"	f
getInit	$C2_ROOT/ast/enum_constant_decl.c2	/^public fn Expr* EnumConstantDecl.getInit(const EnumConstantDecl* d) {$/;"	f
getInit	$C2_ROOT/ast/field_designated_init_expr.c2	/^public fn Expr* FieldDesignatedInitExpr.getInit(const FieldDesignatedInitExpr* e) {$/;"	f
getInit	$C2_ROOT/ast/for_stmt.c2	/^public fn Stmt* ForStmt.getInit(const ForStmt* s) { return s.init; }$/;"	f
getInit	$C2_ROOT/ast/var_decl.c2	/^public fn Expr* VarDecl.getInit(const VarDecl* d) {$/;"	f
getInit2	$C2_ROOT/ast/array_designated_init_expr.c2	/^public fn Expr** ArrayDesignatedInitExpr.getInit2(ArrayDesignatedInitExpr* e) {$/;"	f
getInit2	$C2_ROOT/ast/enum_constant_decl.c2	/^public fn Expr** EnumConstantDecl.getInit2(EnumConstantDecl* d) {$/;"	f
getInit2	$C2_ROOT/ast/field_designated_init_expr.c2	/^public fn Expr** FieldDesignatedInitExpr.getInit2(FieldDesignatedInitExpr* e) {$/;"	f
getInit2	$C2_ROOT/ast/for_stmt.c2	/^public fn Stmt** ForStmt.getInit2(ForStmt* s) { return s.init ? &s.init : nil; }$/;"	f
getInit2	$C2_ROOT/ast/var_decl.c2	/^public fn Expr** VarDecl.getInit2(VarDecl* d) {$/;"	f
getInitChecker	$C2_ROOT/analyser/module_analyser.c2	/^fn init_checker.Checker* Analyser.getInitChecker(Analyser* ma) {$/;"	f
getInner	$C2_ROOT/ast/assert_stmt.c2	/^public fn Expr* AssertStmt.getInner(const AssertStmt* s) { return s.inner; }$/;"	f
getInner	$C2_ROOT/ast/builtin_expr.c2	/^public fn Expr* BuiltinExpr.getInner(const BuiltinExpr* e) { return e.inner; }$/;"	f
getInner	$C2_ROOT/ast/explicit_cast_expr.c2	/^public fn Expr* ExplicitCastExpr.getInner(const ExplicitCastExpr* e) { return e.inner; }$/;"	f
getInner	$C2_ROOT/ast/implicit_cast_expr.c2	/^public fn Expr* ImplicitCastExpr.getInner(const ImplicitCastExpr* e) { return e.inner; }$/;"	f
getInner	$C2_ROOT/ast/paren_expr.c2	/^public fn Expr* ParenExpr.getInner(const ParenExpr* e) { return e.inner; }$/;"	f
getInner	$C2_ROOT/ast/pointer_type.c2	/^public fn QualType PointerType.getInner(const PointerType* t) {$/;"	f
getInner	$C2_ROOT/ast/unary_operator.c2	/^public fn Expr* UnaryOperator.getInner(const UnaryOperator* e) { return e.inner; }$/;"	f
getInner2	$C2_ROOT/ast/assert_stmt.c2	/^public fn Expr** AssertStmt.getInner2(AssertStmt* s) { return &s.inner; }$/;"	f
getInner2	$C2_ROOT/ast/explicit_cast_expr.c2	/^public fn Expr** ExplicitCastExpr.getInner2(ExplicitCastExpr* e) { return &e.inner; }$/;"	f
getInner2	$C2_ROOT/ast/paren_expr.c2	/^public fn Expr** ParenExpr.getInner2(ParenExpr* e) { return &e.inner; }$/;"	f
getInner2	$C2_ROOT/ast/unary_operator.c2	/^public fn Expr** UnaryOperator.getInner2(UnaryOperator* e) { return &e.inner; }$/;"	f
getInnerExprAddressOf	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^fn IdentifierKind getInnerExprAddressOf(const Expr* e) {$/;"	f
getInstance	$C2_ROOT/ast/module.c2	/^public fn ast.FunctionDecl* Module.getInstance(const Module* m, ast.FunctionDecl* fd, u32 idx) {$/;"	f
getInstanceASTIdx	$C2_ROOT/ast/call_expr.c2	/^public fn u16 CallExpr.getInstanceASTIdx(const CallExpr* e) {$/;"	f
getInstanceModule	$C2_ROOT/ast/function_decl.c2	/^public fn Module* FunctionDecl.getInstanceModule(FunctionDecl* d) {$/;"	f
getInstr	$C2_ROOT/ir/inserter.c2	/^public fn const Instr* Inserter.getInstr(const Inserter* ins) {$/;"	f
getInstrCount	$C2_ROOT/ir/inserter.c2	/^public fn u32 Inserter.getInstrCount(Inserter* ins) {$/;"	f
getInstrIdx	$C2_ROOT/ir/inserter.c2	/^public fn u32 Inserter.getInstrIdx(const Inserter* ins) {$/;"	f
getInstructions	$C2_ROOT/ir/block.c2	/^public fn Index Block.getInstructions(const Block* b) {$/;"	f
getKeyBoardState	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn const u8* getKeyBoardState(c_int* numkeys) @(cname="SDL_GetKeyboardState");$/;"	f
getKeyFromScancode	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn Keycode getKeyFromScancode(Scancode scancode) @(cname="SDL_GetKeyFromScancode");$/;"	f
getKeyName	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn const char* getKeyName(Keycode key) @(cname="SDL_GetKeyName");$/;"	f
getKeycodeFromName	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn Keycode getKeycodeFromName(const char* name) @(cname="SDL_GetKeyFromName");$/;"	f
getKind	$C2_ROOT/ast/builtin_expr.c2	/^public fn BuiltinExprKind BuiltinExpr.getKind(const BuiltinExpr* e) {$/;"	f
getKind	$C2_ROOT/ast/builtin_type.c2	/^public fn BuiltinKind BuiltinType.getKind(const BuiltinType* b) {$/;"	f
getKind	$C2_ROOT/ast/decl.c2	/^public fn DeclKind Decl.getKind(const Decl* d) { return (DeclKind)d.declBits.kind; }$/;"	f
getKind	$C2_ROOT/ast/expr.c2	/^public fn ExprKind Expr.getKind(const Expr* e) { return (ExprKind)e.base.exprBits.kind; }$/;"	f
getKind	$C2_ROOT/ast/identifier_expr.c2	/^public fn IdentifierKind IdentifierExpr.getKind(const IdentifierExpr* e) {$/;"	f
getKind	$C2_ROOT/ast/implicit_cast_expr.c2	/^public fn ImplicitCastKind ImplicitCastExpr.getKind(const ImplicitCastExpr* e) {$/;"	f
getKind	$C2_ROOT/ast/member_expr.c2	/^public fn IdentifierKind MemberExpr.getKind(const MemberExpr* e) {$/;"	f
getKind	$C2_ROOT/ast/qualtype.c2	/^public fn TypeKind QualType.getKind(QualType* qt) {$/;"	f
getKind	$C2_ROOT/ast/stmt.c2	/^public fn StmtKind Stmt.getKind(const Stmt* s) { return (StmtKind)s.stmtBits.kind; }$/;"	f
getKind	$C2_ROOT/ast/type.c2	/^public fn TypeKind Type.getKind(const Type* t) { return t.typeBits.kind; }$/;"	f
getKind	$C2_ROOT/ast/type_ref.c2	/^public fn TypeRefKind TypeRef.getKind(const TypeRef* r) {$/;"	f
getKind	$C2_ROOT/ast/var_decl.c2	/^public fn VarDeclKind VarDecl.getKind(const VarDecl* d) {$/;"	f
getKind	$C2_ROOT/common/build_target.c2	/^public fn Kind Target.getKind(const Target* t) { return t.kind; }$/;"	f
getKind	$C2_ROOT/common/component.c2	/^public fn Kind Component.getKind(const Component* c) {$/;"	f
getKind	$C2_ROOT/ir/block.c2	/^fn BlockKind Block.getKind(const Block* b) {$/;"	f
getKind	$C2_ROOT/ir/init_value.c2	/^fn InitValueKind InitValue.getKind(const InitValue* r) {$/;"	f
getKind	$C2_ROOT/ir/instr.c2	/^public fn InstrKind Instr.getKind(const Instr* i) {$/;"	f
getKind	$C2_ROOT/ir/ref.c2	/^public fn RefKind Ref.getKind(const Ref* r) {$/;"	f
getKindName	$C2_ROOT/ast/decl.c2	/^public fn const char* Decl.getKindName(const Decl* d) {$/;"	f
getKindName	$C2_ROOT/ir/block.c2	/^public fn const char* Block.getKindName(const Block* b) {$/;"	f
getKindName	$C2_ROOT/ir/init_value.c2	/^fn const char* InitValue.getKindName(const InitValue* r) {$/;"	f
getKindName	$C2_ROOT/ir/instr.c2	/^public fn const char* Instr.getKindName(const Instr* i) {$/;"	f
getKindName	$C2_ROOT/ir/ref.c2	/^public fn const char* Ref.getKindName(const Ref* r) {$/;"	f
getKindStr	$C2_ROOT/common/manifest_writer.c2	/^fn const char* getKindStr(const component.Component* c) {$/;"	f
getLHS	$C2_ROOT/ast/binary_operator.c2	/^public fn Expr* BinaryOperator.getLHS(const BinaryOperator* e) { return e.lhs; }$/;"	f
getLHS	$C2_ROOT/ast/bitoffset_expr.c2	/^public fn Expr* BitOffsetExpr.getLHS(const BitOffsetExpr* e) { return e.lhs; }$/;"	f
getLHS	$C2_ROOT/ast/conditional_operator.c2	/^public fn Expr* ConditionalOperator.getLHS(const ConditionalOperator* e) {$/;"	f
getLHS	$C2_ROOT/ast/range_expr.c2	/^public fn Expr* RangeExpr.getLHS(const RangeExpr* e) { return e.lhs; }$/;"	f
getLHS2	$C2_ROOT/ast/binary_operator.c2	/^public fn Expr** BinaryOperator.getLHS2(BinaryOperator* e) { return &e.lhs; }$/;"	f
getLHS2	$C2_ROOT/ast/bitoffset_expr.c2	/^public fn Expr** BitOffsetExpr.getLHS2(BitOffsetExpr* e) { return &e.lhs; }$/;"	f
getLHS2	$C2_ROOT/ast/conditional_operator.c2	/^public fn Expr** ConditionalOperator.getLHS2(ConditionalOperator* e) {$/;"	f
getLabelBlock	$C2_ROOT/generator/ir/ir_generator.c2	/^fn BlockId Generator.getLabelBlock(Generator* gen, u32 label_idx) {$/;"	f
getLabels	$C2_ROOT/analyser/label_vector.c2	/^public fn const Label* LabelVector.getLabels(const LabelVector* v) {$/;"	f
getLast	$C2_ROOT/common/component.c2	/^public fn Component* List.getLast(const List* l) {$/;"	f
getLast	$C2_ROOT/ir/block_list.c2	/^public fn Block* BlockList.getLast(const BlockList* l) {$/;"	f
getLastBlock	$C2_ROOT/ir/inserter.c2	/^public fn Block* Inserter.getLastBlock(const Inserter* ins) {$/;"	f
getLastInstr	$C2_ROOT/ir/inserter.c2	/^public fn Instr* Inserter.getLastInstr(Inserter* ins) {$/;"	f
getLastLoc	$C2_ROOT/ast/member_expr.c2	/^public fn SrcLoc MemberExpr.getLastLoc(const MemberExpr* e) {$/;"	f
getLastMemberName	$C2_ROOT/ast/member_expr.c2	/^public fn const char* MemberExpr.getLastMemberName(const MemberExpr* e) {$/;"	f
getLayout	$C2_ROOT/ast/struct_type_decl.c2	/^public fn StructLayout* StructTypeDecl.getLayout(const StructTypeDecl* d) {$/;"	f
getLdFlags	$C2_ROOT/common/build_file.c2	/^public fn const char* Info.getLdFlags(const Info* info) {$/;"	f
getLdFlags2	$C2_ROOT/common/build_file.c2	/^public fn const char* Info.getLdFlags2(const Info* info) {$/;"	f
getLhs	$C2_ROOT/ast/static_assert.c2	/^public fn Expr* StaticAssert.getLhs(const StaticAssert* d) {$/;"	f
getLibDirs	$C2_ROOT/common/build_file.c2	/^public fn const string_list.List* Info.getLibDirs(const Info* info) {$/;"	f
getLinkName	$C2_ROOT/common/component.c2	/^public fn const char* Component.getLinkName(const Component* c) {$/;"	f
getLinkerScript	$C2_ROOT/common/build_file.c2	/^public fn const char* Info.getLinkerScript(const Info* info) {$/;"	f
getList	$C2_ROOT/ir/interference_graph.c2	/^fn Iter InterferenceGraph.getList(const InterferenceGraph* g, u16 var_idx) {$/;"	f
getList	$C2_ROOT/ir/live_map.c2	/^public fn Iter Map.getList(const Map* g, u16 var_idx) {$/;"	f
getList	$C2_ROOT/ir/slot_writes_map.c2	/^public fn Iter Map.getList(const Map* m, u16 blk_id) {$/;"	f
getLoc	$C2_ROOT/ast/array_value.c2	/^public fn SrcLoc ArrayValue.getLoc(const ArrayValue* d) {$/;"	f
getLoc	$C2_ROOT/ast/ast.c2	/^public fn SrcLoc AST.getLoc(const AST* a) {$/;"	f
getLoc	$C2_ROOT/ast/decl.c2	/^public fn SrcLoc Decl.getLoc(const Decl* d) { return d.loc; }$/;"	f
getLoc	$C2_ROOT/ast/expr.c2	/^public fn SrcLoc Expr.getLoc(const Expr* e) { return e.base.loc; }$/;"	f
getLoc	$C2_ROOT/ast/import_decl.c2	/^public fn SrcLoc ImportDecl.getLoc(const ImportDecl* d) {$/;"	f
getLoc	$C2_ROOT/ast/member_expr.c2	/^public fn SrcLoc MemberExpr.getLoc(const MemberExpr* e, u32 ref_idx) {$/;"	f
getLoc	$C2_ROOT/ast/stmt.c2	/^public fn SrcLoc Stmt.getLoc(const Stmt* s) {$/;"	f
getLoc	$C2_ROOT/ast/switch_case.c2	/^public fn SrcLoc SwitchCase.getLoc(const SwitchCase* s) { return s.loc; }$/;"	f
getLoc	$C2_ROOT/ast/type_ref.c2	/^public fn SrcLoc TypeRef.getLoc(const TypeRef* r) {$/;"	f
getMaxSizeNoArray	$C2_ROOT/ast/type_ref.c2	/^public fn u32 TypeRef.getMaxSizeNoArray() {$/;"	f
getMemberInfo	$C2_ROOT/ast/field_designated_init_expr.c2	/^public fn const FieldInitField* FieldDesignatedInitExpr.getMemberInfo(const FieldDesignatedInitE/;"	f
getMembers	$C2_ROOT/ast/struct_type_decl.c2	/^public fn Decl** StructTypeDecl.getMembers(StructTypeDecl* d) {$/;"	f
getMessage	$C2_ROOT/common/yaml/yaml_parser.c2	/^public fn const char* Parser.getMessage(const Parser* p) {$/;"	f
getMinusType	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^fn QualType getMinusType(QualType qt) {$/;"	f
getMod	$C2_ROOT/ast/ast.c2	/^public fn Module* AST.getMod(const AST* a) @(unused) { return a.mod; }$/;"	f
getModState	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn Keymod getModState() @(cname="SDL_GetModState");$/;"	f
getModule	$C2_ROOT/ast/decl.c2	/^public fn Module* Decl.getModule(const Decl* d) {$/;"	f
getModule	$C2_ROOT/ast/module_type.c2	/^public fn Module* ModuleType.getModule(const ModuleType* t) {$/;"	f
getModuleName	$C2_ROOT/ast/decl.c2	/^public fn const char* Decl.getModuleName(const Decl* d) {$/;"	f
getModules	$C2_ROOT/common/component.c2	/^public fn module_list.List* Component.getModules(Component* c) { return &c.mods; }$/;"	f
getMouseCursor	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn MouseCursor getMouseCursor() @(cname="sapp_get_mouse_cursor");$/;"	f
getName	$C2_ROOT/ast/ast.c2	/^public fn const char* AST.getName(const AST* a) {$/;"	f
getName	$C2_ROOT/ast/decl.c2	/^public fn const char* Decl.getName(const Decl* d) {$/;"	f
getName	$C2_ROOT/ast/enum_type.c2	/^public fn const char* EnumType.getName(const EnumType* t) {$/;"	f
getName	$C2_ROOT/ast/goto_stmt.c2	/^public fn const char* GotoStmt.getName(const GotoStmt* g) {$/;"	f
getName	$C2_ROOT/ast/identifier_expr.c2	/^public fn const char* IdentifierExpr.getName(const IdentifierExpr* e) {$/;"	f
getName	$C2_ROOT/ast/label_stmt.c2	/^public fn const char* LabelStmt.getName(const LabelStmt* s) {$/;"	f
getName	$C2_ROOT/ast/member_expr.c2	/^fn const char* MemberExpr.getName(const MemberExpr* e, u32 ref_idx) {$/;"	f
getName	$C2_ROOT/ast/module.c2	/^public fn const char* Module.getName(const Module* m) { return idx2name(m.name_idx); }$/;"	f
getName	$C2_ROOT/ast/type_ref.c2	/^public fn const char* Ref.getName(const Ref* r) {$/;"	f
getName	$C2_ROOT/ast/var_decl.c2	/^public fn const char* VarDecl.getName(const VarDecl* d) {$/;"	f
getName	$C2_ROOT/common/component.c2	/^public fn const char* Component.getName(const Component* c) {$/;"	f
getName	$C2_ROOT/common/yaml/yaml_iterator.c2	/^public fn const char* Iter.getName(const Iter* iter) {$/;"	f
getName	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^    out.print("type %s fn ", d.getName());$/;"	f
getNameIdx	$C2_ROOT/ast/array_value.c2	/^public fn u32 ArrayValue.getNameIdx(const ArrayValue* d) {$/;"	f
getNameIdx	$C2_ROOT/ast/ast.c2	/^public fn u32 AST.getNameIdx(const AST* a) {$/;"	f
getNameIdx	$C2_ROOT/ast/decl.c2	/^public fn u32 Decl.getNameIdx(const Decl* d) {$/;"	f
getNameIdx	$C2_ROOT/ast/goto_stmt.c2	/^public fn u32 GotoStmt.getNameIdx(const GotoStmt* g) {$/;"	f
getNameIdx	$C2_ROOT/ast/identifier_expr.c2	/^public fn u32 IdentifierExpr.getNameIdx(const IdentifierExpr* e) {$/;"	f
getNameIdx	$C2_ROOT/ast/label_stmt.c2	/^public fn u32 LabelStmt.getNameIdx(const LabelStmt* s) {$/;"	f
getNameIdx	$C2_ROOT/ast/member_expr.c2	/^public fn u32 MemberExpr.getNameIdx(const MemberExpr* e, u32 ref_idx) {$/;"	f
getNameIdx	$C2_ROOT/ast/module.c2	/^public fn u32 Module.getNameIdx(const Module* m) { return m.name_idx; }$/;"	f
getNameIdx	$C2_ROOT/common/build_target.c2	/^public fn u32 Target.getNameIdx(const Target* t) { return t.name_idx; }$/;"	f
getNameIdx	$C2_ROOT/common/component.c2	/^public fn u32 Component.getNameIdx(const Component* c) {$/;"	f
getNames	$C2_ROOT/ast/asm_stmt.c2	/^public fn u32* AsmStmt.getNames(const AsmStmt* s) {$/;"	f
getNative	$C2_ROOT/common/target_info.c2	/^public fn void Info.getNative(Info* info) {$/;"	f
getNativeKind	$C2_ROOT/ast/utils.c2	/^public fn BuiltinKind getNativeKind() {$/;"	f
getNextBlockId	$C2_ROOT/ir/inserter.c2	/^public fn BlockId Inserter.getNextBlockId(const Inserter* ins) {$/;"	f
getNoBuild	$C2_ROOT/common/build_target.c2	/^public fn bool Target.getNoBuild(const Target* t) {$/;"	f
getNoLibC	$C2_ROOT/common/build_target.c2	/^public fn bool Target.getNoLibC(const Target* t) {$/;"	f
getNodeChildIter	$C2_ROOT/common/yaml/yaml_iterator.c2	/^public fn Iter Parser.getNodeChildIter(const Parser* p, const Node* n) {$/;"	f
getNumArgs	$C2_ROOT/ast/call_expr.c2	/^public fn u32 CallExpr.getNumArgs(const CallExpr* e) {$/;"	f
getNumArrays	$C2_ROOT/ast/type_ref.c2	/^public fn u32 TypeRefHolder.getNumArrays(const TypeRefHolder* h) {$/;"	f
getNumAutoArgs	$C2_ROOT/ast/function_decl.c2	/^public fn u32 FunctionDecl.getNumAutoArgs(const FunctionDecl* d) {$/;"	f
getNumCases	$C2_ROOT/ast/switch_stmt.c2	/^public fn u32 SwitchStmt.getNumCases(const SwitchStmt* s) {$/;"	f
getNumClobbers	$C2_ROOT/ast/asm_stmt.c2	/^public fn u32 AsmStmt.getNumClobbers(const AsmStmt* s) {$/;"	f
getNumConds	$C2_ROOT/ast/switch_case.c2	/^public fn u32 SwitchCase.getNumConds(const SwitchCase* s) { return s.bits.num_conds; }$/;"	f
getNumConstants	$C2_ROOT/ast/enum_type_decl.c2	/^public fn u32 EnumTypeDecl.getNumConstants(const EnumTypeDecl* d) {$/;"	f
getNumConstraints	$C2_ROOT/ast/asm_stmt.c2	/^public fn u32 AsmStmt.getNumConstraints(const AsmStmt* s) @(unused) {$/;"	f
getNumDroppedFiles	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn i32 getNumDroppedFiles() @(cname="sapp_get_num_dropped_files");$/;"	f
getNumErrors	$C2_ROOT/common/diagnostics.c2	/^public fn u32 Diags.getNumErrors(const Diags* diags) { return diags.num_errors; }$/;"	f
getNumExprs	$C2_ROOT/ast/asm_stmt.c2	/^public fn u32 AsmStmt.getNumExprs(const AsmStmt* s) {$/;"	f
getNumFiles	$C2_ROOT/common/source_mgr.c2	/^public fn u32 SourceMgr.getNumFiles(const SourceMgr* sm) @(unused) {$/;"	f
getNumFunctions	$C2_ROOT/ast/enum_type_decl.c2	/^public fn u32 EnumTypeDecl.getNumFunctions(const EnumTypeDecl* d) {$/;"	f
getNumInputs	$C2_ROOT/ast/asm_stmt.c2	/^public fn u32 AsmStmt.getNumInputs(const AsmStmt* s) {$/;"	f
getNumMembers	$C2_ROOT/ast/struct_type_decl.c2	/^public fn u32 StructTypeDecl.getNumMembers(const StructTypeDecl* d) {$/;"	f
getNumOutputs	$C2_ROOT/ast/asm_stmt.c2	/^public fn u32 AsmStmt.getNumOutputs(const AsmStmt* s) {$/;"	f
getNumParams	$C2_ROOT/ast/function_decl.c2	/^public fn u32 FunctionDecl.getNumParams(const FunctionDecl* d) {$/;"	f
getNumPlugins	$C2_ROOT/common/build_file.c2	/^public fn u32 Info.getNumPlugins(const Info* info) {$/;"	f
getNumPointers	$C2_ROOT/ast/type_ref.c2	/^public fn u32 TypeRefHolder.getNumPointers(const TypeRefHolder* h) {$/;"	f
getNumRefs	$C2_ROOT/ast/member_expr.c2	/^public fn u32 MemberExpr.getNumRefs(const MemberExpr* e) {$/;"	f
getNumStmts	$C2_ROOT/ast/switch_case.c2	/^public fn u32 SwitchCase.getNumStmts(const SwitchCase* s) { return s.bits.num_stmts; }$/;"	f
getNumStructFunctions	$C2_ROOT/ast/struct_type_decl.c2	/^fn u32 StructTypeDecl.getNumStructFunctions(const StructTypeDecl* d) {$/;"	f
getNumValues	$C2_ROOT/ast/init_list_expr.c2	/^public fn u32 InitListExpr.getNumValues(const InitListExpr* e) {$/;"	f
getOffset	$C2_ROOT/ast/var_decl.c2	/^fn u32 VarDecl.getOffset(const VarDecl* d) {$/;"	f
getOffsetOfMember	$C2_ROOT/ast/builtin_expr.c2	/^public fn Expr* BuiltinExpr.getOffsetOfMember(const BuiltinExpr* b) {$/;"	f
getOpcode	$C2_ROOT/ast/binary_operator.c2	/^public fn BinaryOpcode BinaryOperator.getOpcode(const BinaryOperator* e) {$/;"	f
getOpcode	$C2_ROOT/ast/unary_operator.c2	/^public fn UnaryOpcode UnaryOperator.getOpcode(const UnaryOperator* e) {$/;"	f
getOpcodeStr	$C2_ROOT/ast/binary_operator.c2	/^public fn const char* BinaryOperator.getOpcodeStr(const BinaryOperator* e) {$/;"	f
getOpcodeStr	$C2_ROOT/ast/unary_operator.c2	/^public fn const char* UnaryOperator.getOpcodeStr(const UnaryOperator* e) {$/;"	f
getOrAddModule	$C2_ROOT/common/component.c2	/^public fn ast.Module* Component.getOrAddModule(Component* c, u32 name_idx) {$/;"	f
getOutline	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn c_int Font.getOutline(const Font* font) @(cname="TTF_GetFontOutline");$/;"	f
getOutputDir	$C2_ROOT/common/build_file.c2	/^public fn const char* Info.getOutputDir(const Info* info) {$/;"	f
getParams	$C2_ROOT/ast/function_decl.c2	/^public fn VarDecl** FunctionDecl.getParams(const FunctionDecl* d) {$/;"	f
getPath	$C2_ROOT/common/component.c2	/^public fn const char* Component.getPath(const Component* c) {$/;"	f
getPlugin	$C2_ROOT/common/build_file.c2	/^public fn const Plugin* Info.getPlugin(const Info* info, u32 idx) {$/;"	f
getPluginDirs	$C2_ROOT/common/build_file.c2	/^public fn const string_list.List* Info.getPluginDirs(const Info* info) {$/;"	f
getPlugins	$C2_ROOT/common/build_target.c2	/^public fn const PluginList* Target.getPlugins(const Target* t) { return &t.plugins; }$/;"	f
getPlugins	$C2_ROOT/compiler/c2recipe.c2	/^public fn const build_target.PluginList* Recipe.getPlugins(const Recipe* r) {$/;"	f
getPointer	$C2_ROOT/ast/pointer_pool.c2	/^fn Type* PointerPool.getPointer(PointerPool* p, QualType qt) {$/;"	f
getPointerAfter	$C2_ROOT/ast/type_ref.c2	/^fn void* TypeRef.getPointerAfter(const TypeRef* r) {$/;"	f
getPointerBaseType	$C2_ROOT/ast/qualtype.c2	/^public fn QualType QualType.getPointerBaseType(const QualType* qt) {$/;"	f
getPointerFromArray	$C2_ROOT/analyser/module_analyser_expr.c2	/^fn QualType getPointerFromArray(ast_builder.Builder* builder, QualType q) {$/;"	f
getPointerType	$C2_ROOT/ast/qualtype.c2	/^public fn PointerType* QualType.getPointerType(const QualType* qt) {$/;"	f
getPointerType	$C2_ROOT/ast/utils.c2	/^public fn Type* getPointerType(QualType inner) {$/;"	f
getPointerTypeOrNil	$C2_ROOT/ast/qualtype.c2	/^public fn PointerType* QualType.getPointerTypeOrNil(const QualType* qt) {$/;"	f
getPrefix	$C2_ROOT/ast/function_decl.c2	/^public fn Ref* FunctionDecl.getPrefix(FunctionDecl* d) {$/;"	f
getPrefix	$C2_ROOT/ast/type_ref.c2	/^public fn const Ref* TypeRef.getPrefix(const TypeRef* r) {$/;"	f
getPrefixName	$C2_ROOT/ast/function_decl.c2	/^public fn const char* FunctionDecl.getPrefixName(const FunctionDecl* d) {$/;"	f
getPrefixNameIdx	$C2_ROOT/ast/function_decl.c2	/^public fn u32 FunctionDecl.getPrefixNameIdx(const FunctionDecl* d) {$/;"	f
getPrefixedName	$C2_ROOT/plugins/deps_generator_utils.c2	/^public fn const char* getPrefixedName(const Decl* d) {$/;"	f
getPrevLastDecl	$C2_ROOT/ast/member_expr.c2	/^public fn Decl* MemberExpr.getPrevLastDecl(const MemberExpr* e) {$/;"	f
getPrintfFormat	$C2_ROOT/ast/call_expr.c2	/^public fn u32 CallExpr.getPrintfFormat(const CallExpr* e) {$/;"	f
getPtr	$C2_ROOT/ast/ast.c2	/^public fn void* AST.getPtr(const AST* a) { return a.ptr; }$/;"	f
getQuals	$C2_ROOT/ast/qualtype.c2	/^public fn u32 QualType.getQuals(const QualType* qt) {$/;"	f
getRHS	$C2_ROOT/ast/binary_operator.c2	/^public fn Expr* BinaryOperator.getRHS(const BinaryOperator* e) { return e.rhs; }$/;"	f
getRHS	$C2_ROOT/ast/bitoffset_expr.c2	/^public fn Expr* BitOffsetExpr.getRHS(const BitOffsetExpr* e) { return e.rhs; }$/;"	f
getRHS	$C2_ROOT/ast/conditional_operator.c2	/^public fn Expr* ConditionalOperator.getRHS(const ConditionalOperator* e) {$/;"	f
getRHS	$C2_ROOT/ast/range_expr.c2	/^public fn Expr* RangeExpr.getRHS(const RangeExpr* e) { return e.rhs; }$/;"	f
getRHS2	$C2_ROOT/ast/binary_operator.c2	/^public fn Expr** BinaryOperator.getRHS2(BinaryOperator* e) { return &e.rhs; }$/;"	f
getRHS2	$C2_ROOT/ast/bitoffset_expr.c2	/^public fn Expr** BitOffsetExpr.getRHS2(BitOffsetExpr* e) { return &e.rhs; }$/;"	f
getRHS2	$C2_ROOT/ast/conditional_operator.c2	/^public fn Expr** ConditionalOperator.getRHS2(ConditionalOperator* e) {$/;"	f
getRType	$C2_ROOT/ast/function_decl.c2	/^public fn QualType FunctionDecl.getRType(const FunctionDecl* d) {$/;"	f
getRadix	$C2_ROOT/parser/token.c2	/^public fn Radix Token.getRadix(const Token* tok) {$/;"	f
getRange	$C2_ROOT/ast/expr.c2	/^public fn SrcRange Expr.getRange(const Expr* e) {$/;"	f
getRange	$C2_ROOT/ast/member_expr.c2	/^public fn SrcRange MemberExpr.getRange(const MemberExpr* e, u32 ref_idx) {$/;"	f
getRef	$C2_ROOT/ast/identifier_expr.c2	/^public fn Ref IdentifierExpr.getRef(const IdentifierExpr* e) @(unused) {$/;"	f
getRef	$C2_ROOT/ast/member_expr.c2	/^public fn Ref MemberExpr.getRef(const MemberExpr* e, u32 ref_idx) {$/;"	f
getRegister	$C2_ROOT/ir/instr.c2	/^public fn u32 Instr.getRegister(const Instr* i) {$/;"	f
getRegs	$C2_ROOT/ir/interference_graph.c2	/^public fn const u8* InterferenceGraph.getRegs(const InterferenceGraph* g) {$/;"	f
getRenderer	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn Renderer* Window.getRenderer(Window* window) @(cname="SDL_GetRenderer");$/;"	f
getReturnType	$C2_ROOT/ir/function_info.c2	/^public fn Type FunctionInfo.getReturnType(const FunctionInfo* fi) {$/;"	f
getReturnTypeRef	$C2_ROOT/ast/function_decl.c2	/^public fn TypeRef* FunctionDecl.getReturnTypeRef(FunctionDecl* d) {$/;"	f
getRev	$C2_ROOT/ir/rev_list.c2	/^public fn u8 RevList.getRev(const RevList* r, u32 idx) {$/;"	f
getRhs	$C2_ROOT/ast/static_assert.c2	/^public fn Expr* StaticAssert.getRhs(const StaticAssert* d) {$/;"	f
getRoot	$C2_ROOT/common/yaml/yaml_iterator.c2	/^public fn const Node* Parser.getRoot(const Parser* p) {$/;"	f
getScalarValue	$C2_ROOT/common/yaml/yaml_iterator.c2	/^public fn const char* Parser.getScalarValue(const Parser* p, const char* path) {$/;"	f
getScaleMode	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Texture.getScaleMode(Texture* texture, ScaleMode* mode) @(cname="SDL_GetTextureScaleMod/;"	f
getScanCodeFromKey	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn Scancode getScanCodeFromKey(Keycode key) @(cname="SDL_GetScancodeFromKey");$/;"	f
getScancodeFromName	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn Scancode getScancodeFromName(const char* name) @(cname="SDL_GetScancodeFromName");$/;"	f
getScancodeName	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn const char* getScancodeName(Scancode scancode) @(cname="SDL_GetScancodeName");$/;"	f
getSection	$C2_ROOT/ast/decl.c2	/^public fn const char* Decl.getSection(const Decl* d) {$/;"	f
getSize	$C2_ROOT/ast/array_type.c2	/^public fn u32 ArrayType.getSize(const ArrayType* t) { return t.size; }$/;"	f
getSize	$C2_ROOT/ast/qualtype.c2	/^public fn u32 QualType.getSize(QualType* qt, bool deref_ptr) {$/;"	f
getSize	$C2_ROOT/ast/string_literal.c2	/^public fn u32 StringLiteral.getSize(const StringLiteral* e) {$/;"	f
getSize	$C2_ROOT/ast/struct_type_decl.c2	/^public fn u32 StructTypeDecl.getSize(const StructTypeDecl* d) {$/;"	f
getSize	$C2_ROOT/ast/type.c2	/^fn u32 Type.getSize(const Type* t, bool deref_ptr) {$/;"	f
getSlotName	$C2_ROOT/ir/context.c2	/^fn u32 getSlotName(u32 slot) {$/;"	f
getSpecifier	$C2_ROOT/analyser_utils/printf_utils.c2	/^fn Specifier getSpecifier(const char* format, u32* len, i32 *pstars, char* c) {$/;"	f
getStartLoc	$C2_ROOT/ast/array_subscript_expr.c2	/^fn SrcLoc ArraySubscriptExpr.getStartLoc(const ArraySubscriptExpr* e) {$/;"	f
getStartLoc	$C2_ROOT/ast/binary_operator.c2	/^fn SrcLoc BinaryOperator.getStartLoc(const BinaryOperator* e) {$/;"	f
getStartLoc	$C2_ROOT/ast/bitoffset_expr.c2	/^fn SrcLoc BitOffsetExpr.getStartLoc(const BitOffsetExpr* e) {$/;"	f
getStartLoc	$C2_ROOT/ast/call_expr.c2	/^public fn SrcLoc CallExpr.getStartLoc(const CallExpr* e) {$/;"	f
getStartLoc	$C2_ROOT/ast/conditional_operator.c2	/^fn SrcLoc ConditionalOperator.getStartLoc(const ConditionalOperator* e) {$/;"	f
getStartLoc	$C2_ROOT/ast/expr.c2	/^public fn SrcLoc Expr.getStartLoc(const Expr* e) {$/;"	f
getStartLoc	$C2_ROOT/ast/implicit_cast_expr.c2	/^fn SrcLoc ImplicitCastExpr.getStartLoc(const ImplicitCastExpr* e) {$/;"	f
getStartLoc	$C2_ROOT/ast/member_expr.c2	/^fn SrcLoc MemberExpr.getStartLoc(const MemberExpr* e) {$/;"	f
getStartLoc	$C2_ROOT/ast/range_expr.c2	/^fn SrcLoc RangeExpr.getStartLoc(const RangeExpr* e) {$/;"	f
getStartLoc	$C2_ROOT/ast/unary_operator.c2	/^fn SrcLoc UnaryOperator.getStartLoc(const UnaryOperator* e) {$/;"	f
getStaticSlot	$C2_ROOT/ir/slot_collector.c2	/^fn StaticSlot* SlotCollector.getStaticSlot(SlotCollector* c, u16 slot) {$/;"	f
getStmt	$C2_ROOT/ast/label_stmt.c2	/^public fn Stmt* LabelStmt.getStmt(const LabelStmt* s) {$/;"	f
getStmt	$C2_ROOT/ast/switch_case.c2	/^public fn Stmt* SwitchCase.getStmt(const SwitchCase* s, u32 n) {$/;"	f
getStmtList	$C2_ROOT/parser/c2_parser.c2	/^fn stmt_list.List* Parser.getStmtList(Parser* p) {$/;"	f
getStmts	$C2_ROOT/ast/compound_stmt.c2	/^public fn Stmt** CompoundStmt.getStmts(CompoundStmt* s) {$/;"	f
getStmts	$C2_ROOT/ast/switch_case.c2	/^public fn Stmt** SwitchCase.getStmts(SwitchCase* s) {$/;"	f
getString	$C2_ROOT/ast/asm_stmt.c2	/^public fn StringLiteral* AsmStmt.getString(const AsmStmt* s) {$/;"	f
getStringType	$C2_ROOT/ast/utils.c2	/^fn QualType getStringType(u32 len) {$/;"	f
getStructFunctions	$C2_ROOT/ast/struct_type_decl.c2	/^fn const FunctionDecl** StructTypeDecl.getStructFunctions(const StructTypeDecl* d) {$/;"	f
getStructMemberType	$C2_ROOT/ast/type_ref.c2	/^public fn const Ref* TypeRef.getStructMemberType(const TypeRef* r) {$/;"	f
getStructType	$C2_ROOT/ast/qualtype.c2	/^public fn StructType* QualType.getStructType(const QualType* qt) {$/;"	f
getStructTypeOrNil	$C2_ROOT/ast/qualtype.c2	/^public fn StructType* QualType.getStructTypeOrNil(const QualType* qt) {$/;"	f
getStyle	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn c_int Font.getStyle(const Font* font) @(cname="TTF_GetFontStyle");$/;"	f
getSurface	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn Surface* Window.getSurface(Window* window) @(cname="SDL_GetWindowSurface");$/;"	f
getSymbols	$C2_ROOT/ast/module.c2	/^public fn const SymbolTable* Module.getSymbols(const Module* m) { return &m.symbols; }$/;"	f
getSystemName	$C2_ROOT/common/target_info.c2	/^public fn const char* Info.getSystemName(const Info* info) {$/;"	f
getTarget	$C2_ROOT/common/build_file.c2	/^public fn const char* Info.getTarget(const Info* info) {$/;"	f
getTarget	$C2_ROOT/compiler/c2recipe.c2	/^public fn build_target.Target* Recipe.getTarget(const Recipe* r, u32 idx) {$/;"	f
getTarget	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn Texture* Renderer.getTarget(Renderer* renderer) @(cname="SDL_GetRenderTarget");$/;"	f
getTemplateArg	$C2_ROOT/ast/call_expr.c2	/^public fn TypeRef* CallExpr.getTemplateArg(const CallExpr* e) {$/;"	f
getTemplateIdx	$C2_ROOT/ast/call_expr.c2	/^public fn u32 CallExpr.getTemplateIdx(const CallExpr* e) {$/;"	f
getTemplateInstanceIdx	$C2_ROOT/ast/function_decl.c2	/^public fn u16 FunctionDecl.getTemplateInstanceIdx(const FunctionDecl* d) {$/;"	f
getTemplateLoc	$C2_ROOT/ast/function_decl.c2	/^public fn SrcLoc FunctionDecl.getTemplateLoc(const FunctionDecl* d) {$/;"	f
getTemplateNameIdx	$C2_ROOT/ast/function_decl.c2	/^public fn u32 FunctionDecl.getTemplateNameIdx(const FunctionDecl* d) {$/;"	f
getText	$C2_ROOT/ast/string_literal.c2	/^public fn const char* StringLiteral.getText(const StringLiteral* e) {$/;"	f
getTextIndex	$C2_ROOT/ast/string_literal.c2	/^public fn u32 StringLiteral.getTextIndex(const StringLiteral* e) {$/;"	f
getThen	$C2_ROOT/ast/if_stmt.c2	/^public fn Stmt* IfStmt.getThen(const IfStmt* s) { return s.then; }$/;"	f
getTicks	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn u32 getTicks() @(cname="SDL_GetTicks");$/;"	f
getTicks64	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn u64 getTicks64() @(cname="SDL_GetTicks64");$/;"	f
getToContainerMember	$C2_ROOT/ast/builtin_expr.c2	/^public fn Expr* BuiltinExpr.getToContainerMember(const BuiltinExpr* b) {$/;"	f
getToContainerPointer	$C2_ROOT/ast/builtin_expr.c2	/^public fn Expr* BuiltinExpr.getToContainerPointer(const BuiltinExpr* b) {$/;"	f
getToContainerPointer2	$C2_ROOT/ast/builtin_expr.c2	/^public fn Expr** BuiltinExpr.getToContainerPointer2(BuiltinExpr* b) {$/;"	f
getType	$C2_ROOT/ast/decl.c2	/^public fn QualType Decl.getType(const Decl* d) { return d.qt; }$/;"	f
getType	$C2_ROOT/ast/expr.c2	/^public fn QualType Expr.getType(const Expr* e) { return e.qt; }$/;"	f
getType	$C2_ROOT/ast/module.c2	/^public fn ModuleType* Module.getType(const Module* m) { return m.mt; }$/;"	f
getType	$C2_ROOT/ast/qualtype.c2	/^public fn Type* QualType.getType(const QualType* qt) {$/;"	f
getTypeOrNil	$C2_ROOT/ast/qualtype.c2	/^public fn Type* QualType.getTypeOrNil(const QualType* qt) {$/;"	f
getTypeRef	$C2_ROOT/ast/alias_type_decl.c2	/^public fn TypeRef* AliasTypeDecl.getTypeRef(AliasTypeDecl* d) {$/;"	f
getTypeRef	$C2_ROOT/ast/explicit_cast_expr.c2	/^public fn TypeRef* ExplicitCastExpr.getTypeRef(ExplicitCastExpr* e) {$/;"	f
getTypeRef	$C2_ROOT/ast/type_expr.c2	/^public fn TypeRef* TypeExpr.getTypeRef(TypeExpr* e) {$/;"	f
getTypeRef	$C2_ROOT/ast/var_decl.c2	/^public fn TypeRef* VarDecl.getTypeRef(VarDecl* d) { return &d.typeRef; }$/;"	f
getTypeWidth	$C2_ROOT/analyser/conversion_checker_expr.c2	/^fn ExprWidth getTypeWidth(QualType qt) {$/;"	f
getUnaryOpWidth	$C2_ROOT/analyser/conversion_checker_expr.c2	/^fn ExprWidth getUnaryOpWidth(const UnaryOperator* u) {$/;"	f
getUser	$C2_ROOT/ast/type_ref.c2	/^public fn const Ref* TypeRef.getUser(const TypeRef* r) {$/;"	f
getUserData	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void* Texture.getUserData(Texture* texture) @(cname="SDL_GetTextureUserData");$/;"	f
getUserDecl	$C2_ROOT/ast/type_ref.c2	/^public fn const Decl* TypeRef.getUserDecl(const TypeRef* r) {$/;"	f
getValType	$C2_ROOT/ast/expr.c2	/^public fn ValType Expr.getValType(const Expr* e) {$/;"	f
getValue	$C2_ROOT/ast/array_value.c2	/^public fn Expr* ArrayValue.getValue(const ArrayValue* d) {$/;"	f
getValue	$C2_ROOT/ast/boolean_literal.c2	/^fn Value BooleanLiteral.getValue(const BooleanLiteral* e) {$/;"	f
getValue	$C2_ROOT/ast/builtin_expr.c2	/^public fn Value BuiltinExpr.getValue(const BuiltinExpr* e) { return e.value; }$/;"	f
getValue	$C2_ROOT/ast/char_literal.c2	/^fn Value CharLiteral.getValue(const CharLiteral* e) {$/;"	f
getValue	$C2_ROOT/ast/enum_constant_decl.c2	/^public fn Value EnumConstantDecl.getValue(const EnumConstantDecl* d) {$/;"	f
getValue	$C2_ROOT/ast/float_literal.c2	/^fn Value FloatLiteral.getValue(const FloatLiteral* e) {$/;"	f
getValue	$C2_ROOT/ast/integer_literal.c2	/^fn Value IntegerLiteral.getValue(const IntegerLiteral* e) {$/;"	f
getValue	$C2_ROOT/ast/return_stmt.c2	/^public fn Expr* ReturnStmt.getValue(const ReturnStmt* s) {$/;"	f
getValue	$C2_ROOT/common/yaml/yaml_iterator.c2	/^public fn const char* Iter.getValue(const Iter* iter) {$/;"	f
getValue2	$C2_ROOT/ast/return_stmt.c2	/^public fn Expr** ReturnStmt.getValue2(ReturnStmt* s) {$/;"	f
getValues	$C2_ROOT/ast/init_list_expr.c2	/^public fn Expr** InitListExpr.getValues(InitListExpr* e) {$/;"	f
getValues2	$C2_ROOT/ast/init_list_expr.c2	/^public fn const Expr** InitListExpr.getValues2(const InitListExpr* e) {$/;"	f
getVarDecl	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^fn VarDecl* getVarDecl(const Expr* e) {$/;"	f
getViewPort	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void Renderer.getViewPort(Renderer* renderer, Rect* rect) @(cname="SDL_RenderGetViewport");$/;"	f
getVoidPtr	$C2_ROOT/ast/utils.c2	/^public fn QualType getVoidPtr() {$/;"	f
getWEXITSTATUS	$C2_ROOT/common/process_utils.c2	/^fn char getWEXITSTATUS(i32 state) {$/;"	f
getWarnings	$C2_ROOT/common/build_target.c2	/^public fn const warning_flags.Flags* Target.getWarnings(const Target* t) {$/;"	f
getWarnings2	$C2_ROOT/common/build_target.c2	/^public fn warning_flags.Flags* Target.getWarnings2(Target* t) {$/;"	f
getWidth	$C2_ROOT/ast/bitoffset_expr.c2	/^public fn u32 BitOffsetExpr.getWidth(const BitOffsetExpr* e) {$/;"	f
getWidth	$C2_ROOT/ast/builtin_type.c2	/^public fn u32 BuiltinType.getWidth(const BuiltinType* b) {$/;"	f
getWidth	$C2_ROOT/ast/value.c2	/^public fn u8 Value.getWidth(const Value* v) {$/;"	f
getWordSize	$C2_ROOT/ast/utils.c2	/^public fn u32 getWordSize() {$/;"	f
getWrappedAlign	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn c_int Font.getWrappedAlign(const Font* font) @(cname="TTF_GetFontWrappedAlign");$/;"	f
getYamlInfo	$C2_ROOT/common/build_file.c2	/^fn bool getYamlInfo(yaml.Parser* parser, Info* info) {$/;"	f
getYamlInfo	$C2_ROOT/compiler/c2recipe_yaml.c2	/^fn bool Recipe.getYamlInfo(Recipe* \/*r*\/, const yaml.Parser* parser) {$/;"	f
getYamlInfo	$C2_ROOT/compiler/manifest.c2	/^fn bool getYamlInfo(yaml.Parser* parser,$/;"	f
get_all	$C2_ROOT/common/component.c2	/^public fn Component** List.get_all(List* l) {$/;"	f
get_array	$C2_ROOT/common/dsm_sorter.c2	/^public fn const u8* Sorter.get_array(Sorter* s) {$/;"	f
get_basename	$C2_ROOT/common/file/file_utils.c2	/^public fn const char* get_basename(const char* s) {$/;"	f
get_binaryop_value	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^fn Value get_binaryop_value(const BinaryOperator* e) {$/;"	f
get_binaryop_value	$C2_ROOT/ast/ast_evaluator.c2	/^fn Value Evaluator.get_binaryop_value(Evaluator* eval, const BinaryOperator* e) {$/;"	f
get_binaryop_value	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^fn Value Evaluator.get_binaryop_value(Evaluator* eval, const BinaryOperator* e) {$/;"	f
get_checked	$C2_ROOT/common/build_file.c2	/^fn const yaml.Node* get_checked(yaml.Parser* parser, const char* path) {$/;"	f
get_checked	$C2_ROOT/compiler/manifest.c2	/^fn const yaml.Node* get_checked(yaml.Parser* parser, const char* path) {$/;"	f
get_common_arithmetic_type	$C2_ROOT/analyser/conversion_checker.c2	/^public fn QualType get_common_arithmetic_type(QualType t1, QualType t2) {$/;"	f
get_content	$C2_ROOT/common/source_mgr.c2	/^public fn const char* SourceMgr.get_content(SourceMgr* sm, i32 handle) {$/;"	f
get_cqe_internal	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn c_int Ring.get_cqe_internal(Ring *ring, Cqe** cqe_ptr, u32 submit, u32 wait_nr, csignal.Sigse/;"	f
get_decl_value	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^fn Value get_decl_value(const Decl* d) {$/;"	f
get_decl_value	$C2_ROOT/ast/ast_evaluator.c2	/^fn Value Evaluator.get_decl_value(Evaluator* eval, const Decl* d) {$/;"	f
get_decl_value	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^fn Value Evaluator.get_decl_value(Evaluator* eval, const Decl* d) {$/;"	f
get_extension	$C2_ROOT/common/file/file_utils.c2	/^public fn const char* get_extension(const char* s) {$/;"	f
get_format	$C2_ROOT/analyser_utils/printf_utils.c2	/^public fn const char* get_format(Expr* format, SrcLoc* format_loc) {$/;"	f
get_function	$C2_ROOT/generator/c/c_generator_call.c2	/^fn FunctionDecl* get_function(Decl* dest) {$/;"	f
get_idx	$C2_ROOT/common/string_list.c2	/^public fn u32 List.get_idx(const List* l, u32 idx) {$/;"	f
get_mask32	$C2_ROOT/common/bit_utils.c2	/^public fn u32 get_mask32(u32 i) {$/;"	f
get_match	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^fn u32 get_match(const char* s1, const char* s2) {$/;"	f
get_offset	$C2_ROOT/common/source_mgr.c2	/^public fn u32 SourceMgr.get_offset(SourceMgr* sm, i32 handle) {$/;"	f
get_offset	$C2_ROOT/generator/c2refs.c2	/^fn u32 Lengths.get_offset(const Lengths* l, u32 start, u32 line, u32 column) {$/;"	f
get_prefix	$C2_ROOT/compiler/c2recipe_yaml.c2	/^fn const char* get_prefix(const char* input, char* output, u32 maxlen) {$/;"	f
get_sqe	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn Sqe* Ring.get_sqe(Ring *ring) @(cname="io_uring_get_sqe");$/;"	f
get_unaryop_value	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^fn Value get_unaryop_value(const UnaryOperator* e) {$/;"	f
get_unaryop_value	$C2_ROOT/ast/ast_evaluator.c2	/^fn Value Evaluator.get_unaryop_value(Evaluator* eval, const UnaryOperator* e) {$/;"	f
get_unaryop_value	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^fn Value Evaluator.get_unaryop_value(Evaluator* eval, const UnaryOperator* e) {$/;"	f
get_value	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^public fn Value get_value(const Expr* e) {$/;"	f
get_value	$C2_ROOT/ast/ast_evaluator.c2	/^fn Value Evaluator.get_value(Evaluator* eval, const Expr* e) {$/;"	f
get_value	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^fn Value Evaluator.get_value(Evaluator* eval, const Expr* e) {$/;"	f
get_value	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^public fn bool Tree.get_value(const Tree* t, const char* text, u32* value) {$/;"	f
getallocf	$C2_ROOT/libs/lua/lua.c2i	/^fn Alloc getallocf(State *L, void **ud) @(cname="lua_getallocf");$/;"	f
getc	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int getc(FILE* __stream);$/;"	f
getc_unlocked	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int getc_unlocked(FILE* __stream);$/;"	f
getch	$C2_ROOT/libs/curses/curses.c2i	/^fn void getch();$/;"	f
getchar	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int getchar();$/;"	f
getchar_unlocked	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int getchar_unlocked();$/;"	f
getcwd	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_char* getcwd(char* buf, c_size size);$/;"	f
getdelim	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_ssize getdelim(c_char** __lineptr, c_size* __n, c_int __delimiter, FILE* __stream);$/;"	f
getenv	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_char* getenv(const c_char* __name);$/;"	f
getfield	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int getfield(State *L, c_int idx, const c_char *k) @(cname="lua_getfield");$/;"	f
getglobal	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int getglobal(State *L, const c_char *name) @(cname="lua_getglobal");$/;"	f
geti	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int geti(State *L, c_int idx, Integer n) @(cname="lua_geti");$/;"	f
getline	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_ssize getline(c_char** __lineptr, c_size* __n, FILE* __stream);$/;"	f
getloadavg	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int getloadavg(c_double* __loadavg, c_int __nelem);$/;"	f
getmetatable	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int getmetatable(State *L, c_int objindex) @(cname="lua_getmetatable");$/;"	f
getopt	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int getopt(i32 argc, char** argv, const char* optstring);$/;"	f
getsockopt	$C2_ROOT/libs/libc/sys_socket.c2i	/^fn c_int getsockopt(c_int sockfd, c_int level, c_int optname, void* optval, u32* optlen);$/;"	f
getsubopt	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int getsubopt(c_char** __optionp, c_char** __tokens, c_char** __valuep);$/;"	f
gettable	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int gettable(State *L, c_int idx) @(cname="lua_gettable");$/;"	f
gettimeofday	$C2_ROOT/libs/libc/sys_time.c2i	/^fn c_int gettimeofday(Timeval* tv, Timezone* tz);$/;"	f
gettop	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int gettop(State* L) @(cname="lua_gettop");$/;"	f
getumask	$C2_ROOT/libs/libc/sys_stat.c2i	/^fn Mode getumask();$/;"	f
getuservalue	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int getuservalue(State *L, c_int idx) @(cname="lua_getuservalue");$/;"	f
getw	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int getw(FILE* __stream);$/;"	f
gl	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GlSwapchain gl;$/;"	v
glGetFramebuffer	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn u32 glGetFramebuffer() @(cname="sapp_gl_get_framebuffer");$/;"	f
glGetMajorVersion	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn i32 glGetMajorVersion() @(cname="sapp_gl_get_major_version");$/;"	f
glGetMinorVersion	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn i32 glGetMinorVersion() @(cname="sapp_gl_get_minor_version");$/;"	f
glIsGles	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn bool glIsGles() @(cname="sapp_gl_is_gles");$/;"	f
glQueryBufferInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn GlBufferInfo glQueryBufferInfo(Buffer buf) @(cname="sg_gl_query_buffer_info");$/;"	f
glQueryImageInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn GlImageInfo glQueryImageInfo(Image img) @(cname="sg_gl_query_image_info");$/;"	f
glQuerySamplerInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn GlSamplerInfo glQuerySamplerInfo(Sampler smp) @(cname="sg_gl_query_sampler_info");$/;"	f
glQueryShaderInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn GlShaderInfo glQueryShaderInfo(Shader shd) @(cname="sg_gl_query_shader_info");$/;"	f
glQueryViewInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn GlViewInfo glQueryViewInfo(View view) @(cname="sg_gl_query_view_info");$/;"	f
gl_buffers	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32[2] gl_buffers;$/;"	v
gl_major_version	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    i32 gl_major_version;$/;"	v
gl_max_combined_texture_image_units	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 gl_max_combined_texture_image_units;$/;"	v
gl_max_vertex_uniform_components	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 gl_max_vertex_uniform_components;$/;"	v
gl_minor_version	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    i32 gl_minor_version;$/;"	v
gl_sampler	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 gl_sampler;$/;"	v
gl_texture_target	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 gl_texture_target;$/;"	v
gl_texture_views	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool gl_texture_views;$/;"	v
gl_textures	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32[2] gl_textures;$/;"	v
globalScope	$C2_ROOT/analyser/module_analyser.c2	/^fn bool Analyser.globalScope(const Analyser* ma) {$/;"	f
global_configs	$C2_ROOT/bootstrap/bootstrap.c	/^   string_list_List global_configs;$/;"	v
global_configs	$C2_ROOT/compiler/c2recipe_parser.c2	/^    string_list.List global_configs;$/;"	v
globals	$C2_ROOT/ast/utils.c2	/^Globals* globals;$/;"	v
glsl_binding_n	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u8 glsl_binding_n;$/;"	v
glsl_name	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    const char* glsl_name;$/;"	v
glsl_uniforms	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    GlslShaderUniform[16] glsl_uniforms;$/;"	v
gmtime	$C2_ROOT/libs/libc/libc_time.c2i	/^fn Time* gmtime(const Time* timep);$/;"	f
gmtime_r	$C2_ROOT/libs/libc/libc_time.c2i	/^fn Time* gmtime_r(const Time* timep, Tm* result);$/;"	f
goto	$C2_ROOT/analyser/module_analyser_init.c2	/^            goto out;$/;"	v
goto	$C2_ROOT/bootstrap/bootstrap.c	/^      goto check_overflow;$/;"	v
goto	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^            goto out;$/;"	v
goto	$C2_ROOT/generator/ir/ir_generator_member.c2	/^            goto next;$/;"	v
goto	$C2_ROOT/ir/slot_collector.c2	/^                    goto next;$/;"	v
goto	$C2_ROOT/ir_examples/goto.c2	/^    goto end;$/;"	v
goto	$C2_ROOT/ir_examples/label.c2	/^            goto end;$/;"	v
goto	$C2_ROOT/parser/c2_parser_type.c2	/^            goto semi_colon;$/;"	v
goto	$C2_ROOT/parser/c2_tokenizer.c2	/^        goto check_overflow;$/;"	v
grow	$C2_ROOT/ast_utils/string_buffer.c2	/^    buf.grow = grow;$/;"	v
h_dest	$C2_ROOT/libs/libc/linux_ifether.c2i	/^    c_uchar[ETH_ALEN] h_dest;$/;"	v
h_source	$C2_ROOT/libs/libc/linux_ifether.c2i	/^    c_uchar[ETH_ALEN] h_source;$/;"	v
handle	$C2_ROOT/bootstrap/bootstrap.c	/^   void* handle;$/;"	v
handle	$C2_ROOT/common/attr_handler.c2	/^public fn bool Handler.handle(Handler* h, ast.Decl* d, const attr.Attr* a) {$/;"	f
handle	$C2_ROOT/generator/ast_visitor.c2	/^public fn void Visitor.handle(Visitor* v, Decl* d) {$/;"	f
handle	$C2_ROOT/libs/dl/dlfcn.c2i	/^\/* special values for the module handle *\/$/;"	m
handle	$C2_ROOT/plugins/refs_generator.c2	/^fn void LineCounter.handle(LineCounter* l, u32 size, const char* content) {$/;"	f
handleArrayValue	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.handleArrayValue(void* arg, ArrayValue* avd) {$/;"	f
handleAssert	$C2_ROOT/generator/ast_visitor.c2	/^public fn void Visitor.handleAssert(Visitor* v, StaticAssert* a) @(unused) {$/;"	f
handleBuiltinExpr	$C2_ROOT/generator/ast_visitor_expr.c2	/^fn void Visitor.handleBuiltinExpr(Visitor* v, BuiltinExpr* b) {$/;"	f
handleCallExpr	$C2_ROOT/generator/ast_visitor_expr.c2	/^fn void Visitor.handleCallExpr(Visitor* v, CallExpr* c) {$/;"	f
handleCompoundStmt	$C2_ROOT/generator/ast_visitor.c2	/^fn void Visitor.handleCompoundStmt(Visitor* v, CompoundStmt* s) {$/;"	f
handleEnumType	$C2_ROOT/generator/c/dep_finder.c2	/^fn void Finder.handleEnumType(Finder* s, EnumTypeDecl* etd) {$/;"	f
handleExpr	$C2_ROOT/generator/ast_visitor_expr.c2	/^fn void Visitor.handleExpr(Visitor* v, Expr* e) {$/;"	f
handleExpr	$C2_ROOT/generator/c/dep_finder.c2	/^fn void Finder.handleExpr(Finder* s, Expr* e) {$/;"	f
handleFunction	$C2_ROOT/generator/ast_visitor.c2	/^fn void Visitor.handleFunction(Visitor* v, FunctionDecl* d) {$/;"	f
handleFunction	$C2_ROOT/generator/c/dep_finder.c2	/^fn void Finder.handleFunction(Finder* s, FunctionDecl* d) {$/;"	f
handleFunctionType	$C2_ROOT/generator/c/dep_finder.c2	/^fn void Finder.handleFunctionType(Finder* s, FunctionTypeDecl* ftd) {$/;"	f
handleImport	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.handleImport(void* arg, ast.ImportDecl* id) {$/;"	f
handleImport	$C2_ROOT/analyser/module_sorter.c2	/^fn void ModuleSorter.handleImport(void* arg, ast.ImportDecl* d) {$/;"	f
handleImport	$C2_ROOT/compiler/compiler.c2	/^fn void Compiler.handleImport(void* arg, ast.ImportDecl* id) {$/;"	f
handleIncrEntry	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.handleIncrEntry(Analyser* ma, ia_list.Info* entry) {$/;"	f
handleInitList	$C2_ROOT/generator/c/dep_finder.c2	/^fn void Finder.handleInitList(Finder* s, InitListExpr* ile) {$/;"	f
handleMemberExpr	$C2_ROOT/generator/ast_visitor_expr.c2	/^fn void Visitor.handleMemberExpr(Visitor* v, MemberExpr* m) {$/;"	f
handleMemberExpr	$C2_ROOT/generator/c/dep_finder.c2	/^fn void Finder.handleMemberExpr(Finder* s, MemberExpr* m) {$/;"	f
handleModule	$C2_ROOT/analyser/module_sorter.c2	/^fn void ModuleSorter.handleModule(void* arg, ast.Module* mod) {$/;"	f
handleModuleImports	$C2_ROOT/compiler/compiler.c2	/^fn void Compiler.handleModuleImports(void* arg, ast.Module* m) {$/;"	f
handleQueue	$C2_ROOT/ir/interference_graph.c2	/^fn void InterferenceGraph.handleQueue(InterferenceGraph* g) {$/;"	f
handleRef	$C2_ROOT/plugins/deps_generator.c2	/^fn void Generator.handleRef(Generator* gen, const Ref* ref) {$/;"	f
handleRef	$C2_ROOT/plugins/refs_generator.c2	/^fn void Generator.handleRef(Generator* gen, const Ref* ref) {$/;"	f
handleStaticAssert	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.handleStaticAssert(void* arg, StaticAssert* d) {$/;"	f
handleStmt	$C2_ROOT/generator/ast_visitor.c2	/^fn void Visitor.handleStmt(Visitor* v, Stmt* s) {$/;"	f
handleStruct	$C2_ROOT/generator/c/dep_finder.c2	/^fn void Finder.handleStruct(Finder* s, StructTypeDecl* d) {$/;"	f
handleStructFunc	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.handleStructFunc(void* arg, FunctionDecl* fd) {$/;"	f
handleType	$C2_ROOT/generator/ast_visitor.c2	/^fn void Visitor.handleType(Visitor* v, QualType qt) {$/;"	f
handleTypeDecl	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.handleTypeDecl(void* arg, Decl* d) {$/;"	f
handleTypeFunc	$C2_ROOT/plugins/unit_test_plugin.c2	/^fn void Plugin.handleTypeFunc(void* arg, FunctionDecl* fd) {$/;"	f
handleTypeRef	$C2_ROOT/generator/ast_visitor.c2	/^fn void Visitor.handleTypeRef(Visitor* v, const TypeRef* r) {$/;"	f
handleTypeRef	$C2_ROOT/generator/c/dep_finder.c2	/^fn void Finder.handleTypeRef(Finder* f, TypeRef* r) {$/;"	f
handleTypeRef	$C2_ROOT/plugins/deps_generator.c2	/^fn void Generator.handleTypeRef(Generator* gen, const TypeRef* ref) {$/;"	f
handleTypeRef	$C2_ROOT/plugins/refs_generator.c2	/^fn void Generator.handleTypeRef(Generator* gen, const TypeRef* ref) {$/;"	f
handleVarDecl	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.handleVarDecl(void* arg, VarDecl* v) {$/;"	f
handleVarDecl	$C2_ROOT/generator/ast_visitor.c2	/^fn void Visitor.handleVarDecl(Visitor* v, VarDecl* d) {$/;"	f
handleVarDecl	$C2_ROOT/generator/c/dep_finder.c2	/^fn void Finder.handleVarDecl(Finder* s, VarDecl* d) {$/;"	f
handle_args	$C2_ROOT/compiler/main.c2	/^fn void Context.handle_args(Context* c, i32 argc, char** argv) {$/;"	f
handle_attr	$C2_ROOT/plugins/unit_test_plugin.c2	/^fn bool handle_attr(void* arg, Decl* d, const attr.Attr* a) {$/;"	f
handle_else	$C2_ROOT/parser/c2_tokenizer.c2	/^fn bool Tokenizer.handle_else(Tokenizer* t, Token* result) {$/;"	f
handle_endif	$C2_ROOT/parser/c2_tokenizer.c2	/^fn bool Tokenizer.handle_endif(Tokenizer* t, Token* result) {$/;"	f
handle_if	$C2_ROOT/parser/c2_tokenizer.c2	/^fn bool Tokenizer.handle_if(Tokenizer* t, Token* result, Kind kind) {$/;"	f
handle_plugins	$C2_ROOT/compiler/main.c2	/^fn void Context.handle_plugins(Context* c) {$/;"	f
handle_symbol	$C2_ROOT/bootstrap/bootstrap.c	/^   p.functions = handle_symbol;$/;"	v
handle_symbol	$C2_ROOT/compiler/plugin_mgr.c2	/^    p.functions = handle_symbol;$/;"	v
hardlink_flags	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        u32       hardlink_flags;$/;"	v
hasAsserts	$C2_ROOT/common/build_target.c2	/^public fn bool Target.hasAsserts(const Target* t) { return !t.disable_asserts; }$/;"	f
hasAttr	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.hasAttr(const Decl* d) { return d.declBits.has_attr; }$/;"	f
hasAttrAutoFile	$C2_ROOT/ast/var_decl.c2	/^public fn bool VarDecl.hasAttrAutoFile(const VarDecl* d) {$/;"	f
hasAttrAutoFunc	$C2_ROOT/ast/var_decl.c2	/^public fn bool VarDecl.hasAttrAutoFunc(const VarDecl* d) {$/;"	f
hasAttrAutoLine	$C2_ROOT/ast/var_decl.c2	/^public fn bool VarDecl.hasAttrAutoLine(const VarDecl* d) {$/;"	f
hasAttrConstructor	$C2_ROOT/ast/function_decl.c2	/^public fn bool FunctionDecl.hasAttrConstructor(const FunctionDecl* d) {$/;"	f
hasAttrDestructor	$C2_ROOT/ast/function_decl.c2	/^public fn bool FunctionDecl.hasAttrDestructor(const FunctionDecl* d) {$/;"	f
hasAttrInline	$C2_ROOT/ast/function_decl.c2	/^public fn bool FunctionDecl.hasAttrInline(const FunctionDecl* d) {$/;"	f
hasAttrNoReturn	$C2_ROOT/ast/function_decl.c2	/^public fn bool FunctionDecl.hasAttrNoReturn(const FunctionDecl* d) {$/;"	f
hasAttrNoTypeDef	$C2_ROOT/ast/struct_type_decl.c2	/^public fn bool StructTypeDecl.hasAttrNoTypeDef(const StructTypeDecl* d) {$/;"	f
hasAttrPrintf	$C2_ROOT/ast/function_decl.c2	/^public fn bool FunctionDecl.hasAttrPrintf(const FunctionDecl* d) {$/;"	f
hasAttrPure	$C2_ROOT/ast/function_decl.c2	/^public fn bool FunctionDecl.hasAttrPure(const FunctionDecl* d) {$/;"	f
hasAttrUnused	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.hasAttrUnused(const Decl* d) { return d.declBits.attr_unused; }$/;"	f
hasAttrUnusedParams	$C2_ROOT/ast/function_decl.c2	/^public fn bool FunctionDecl.hasAttrUnusedParams(const FunctionDecl* d) {$/;"	f
hasAttrWeak	$C2_ROOT/ast/function_decl.c2	/^public fn bool FunctionDecl.hasAttrWeak(const FunctionDecl* d) {$/;"	f
hasAttrWeak	$C2_ROOT/ast/var_decl.c2	/^public fn bool VarDecl.hasAttrWeak(const VarDecl* d) {$/;"	f
hasAutoArgs	$C2_ROOT/ast/call_expr.c2	/^public fn bool CallExpr.hasAutoArgs(const CallExpr* e) {$/;"	f
hasAutoAttr	$C2_ROOT/ast/var_decl.c2	/^public fn bool VarDecl.hasAutoAttr(const VarDecl* d) {$/;"	f
hasBackEnd	$C2_ROOT/common/build_target.c2	/^public fn bool Target.hasBackEnd(const Target* t) {$/;"	f
hasBlocks	$C2_ROOT/ir/inserter.c2	/^public fn bool Inserter.hasBlocks(const Inserter* ins) {$/;"	f
hasCanonicalType	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.hasCanonicalType(const QualType* qt) {$/;"	f
hasCanonicalType	$C2_ROOT/ast/type.c2	/^public fn bool Type.hasCanonicalType(const Type* t) {$/;"	f
hasClipboardText	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn bool hasClipboardText() @(cname="SDL_HasClipboardText");$/;"	f
hasDecls	$C2_ROOT/ast/switch_case.c2	/^public fn bool SwitchCase.hasDecls(const SwitchCase* s) { return s.bits.has_decls; }$/;"	f
hasDefault	$C2_ROOT/ast/switch_stmt.c2	/^public fn bool SwitchStmt.hasDefault(const SwitchStmt* s) {$/;"	f
hasDesignators	$C2_ROOT/ast/init_list_expr.c2	/^public fn bool InitListExpr.hasDesignators(const InitListExpr* e) {$/;"	f
hasEffect	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.hasEffect(const Expr* e) {$/;"	f
hasEmbedAttr	$C2_ROOT/parser/ast_builder.c2	/^public fn bool Builder.hasEmbedAttr(Builder* b) {$/;"	f
hasError	$C2_ROOT/bootstrap/bootstrap.c	/^   return hasError;$/;"	v
hasError	$C2_ROOT/compiler/main.c2	/^    return hasError;$/;"	v
hasErrors	$C2_ROOT/common/diagnostics.c2	/^public fn bool Diags.hasErrors(const Diags* diags) { return diags.num_errors != 0; }$/;"	f
hasExpr	$C2_ROOT/ast/member_expr.c2	/^public fn bool MemberExpr.hasExpr(const MemberExpr* e) {$/;"	f
hasFallthrough	$C2_ROOT/ast/switch_case.c2	/^public fn bool SwitchCase.hasFallthrough(const SwitchCase* s) { return s.bits.has_fallthrough; }$/;"	f
hasFieldInfo	$C2_ROOT/ast/struct_type_decl.c2	/^public fn bool StructTypeDecl.hasFieldInfo(const StructTypeDecl* d) {$/;"	f
hasGenIdx	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.hasGenIdx(const Decl* d) {$/;"	f
hasInit	$C2_ROOT/ast/var_decl.c2	/^public fn bool VarDecl.hasInit(const VarDecl* d) {$/;"	f
hasInitCall	$C2_ROOT/ast/var_decl.c2	/^public fn bool VarDecl.hasInitCall(const VarDecl* d) {$/;"	f
hasInsert	$C2_ROOT/ir/inserter.c2	/^public fn bool Inserter.hasInsert(const Inserter* ins, u32 loc) {$/;"	f
hasLib	$C2_ROOT/common/build_target.c2	/^public fn bool Target.hasLib(const Target* t, u32 lib) {$/;"	f
hasLocalQualifier	$C2_ROOT/ast/var_decl.c2	/^public fn bool VarDecl.hasLocalQualifier(const VarDecl* d) {$/;"	f
hasModule	$C2_ROOT/common/component.c2	/^public fn bool Component.hasModule(const Component* c, const ast.Module* mod) {$/;"	f
hasOpaqueAttr	$C2_ROOT/parser/ast_builder.c2	/^public fn bool Builder.hasOpaqueAttr(Builder* b) {$/;"	f
hasPrefix	$C2_ROOT/ast/function_decl.c2	/^public fn bool FunctionDecl.hasPrefix(const FunctionDecl* d) {$/;"	f
hasPrefix	$C2_ROOT/ast/type_ref.c2	/^fn bool TypeRef.hasPrefix(const TypeRef* r) {$/;"	f
hasPrintfFormat	$C2_ROOT/ast/var_decl.c2	/^public fn bool VarDecl.hasPrintfFormat(const VarDecl* d) {$/;"	f
hasRegister	$C2_ROOT/ir/instr.c2	/^public fn bool Instr.hasRegister(const Instr* i) {$/;"	f
hasResult	$C2_ROOT/ir/instr.c2	/^public fn bool Instr.hasResult(const Instr* i) {$/;"	f
hasReturn	$C2_ROOT/ast/function_decl.c2	/^public fn bool FunctionDecl.hasReturn(const FunctionDecl* d) {$/;"	f
hasScreenKeyboardSupport	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn bool hasScreenKeyboardSupport() @(cname="SDL_HasScreenKeyboardSupport");$/;"	f
hasSize	$C2_ROOT/ast/array_type.c2	/^public fn u32 ArrayType.hasSize(const ArrayType* t) {$/;"	f
hasSubdir	$C2_ROOT/common/utils.c2	/^public fn bool PathInfo.hasSubdir(const PathInfo* pi) {$/;"	f
hasWork	$C2_ROOT/ir/usage_counter.c2	/^public fn bool Counter.hasWork(const Counter* c) {$/;"	f
has_attr	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->declBits.has_attr;$/;"	v
has_auto_args	$C2_ROOT/ast/call_expr.c2	/^    return e.base.base.callExprBits.has_auto_args;$/;"	v
has_auto_args	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->base.base.callExprBits.has_auto_args;$/;"	v
has_component	$C2_ROOT/compiler/compiler_libs.c2	/^fn bool Compiler.has_component(const Compiler* c, u32 name) {$/;"	f
has_decls	$C2_ROOT/bootstrap/bootstrap.c	/^   return s->bits.has_decls;$/;"	v
has_default	$C2_ROOT/analyser/module_analyser_function.c2	/^            has_default = true;$/;"	v
has_default	$C2_ROOT/ast/switch_stmt.c2	/^    s.base.switchStmtBits.has_default = has_default;$/;"	v
has_default	$C2_ROOT/bootstrap/bootstrap.c	/^   s->base.switchStmtBits.has_default = has_default;$/;"	v
has_default	$C2_ROOT/parser/c2_parser_switch.c2	/^            has_default = true;$/;"	v
has_deps	$C2_ROOT/bootstrap/bootstrap.c	/^            has_deps = true;$/;"	v
has_deps	$C2_ROOT/common/dsm_sorter.c2	/^                has_deps = true;$/;"	v
has_designators	$C2_ROOT/ast/init_list_expr.c2	/^    return e.base.base.initListExprBits.has_designators;$/;"	v
has_designators	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->base.base.initListExprBits.has_designators;$/;"	v
has_dynamic	$C2_ROOT/common/build_target.c2	/^public fn bool has_dynamic(Kind k) {$/;"	f
has_effect	$C2_ROOT/ast/expr.c2	/^    return e.base.exprBits.has_effect;$/;"	v
has_effect	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->base.exprBits.has_effect;$/;"	v
has_embed	$C2_ROOT/parser/ast_builder.c2	/^                                 has_embed,$/;"	v
has_error	$C2_ROOT/analyser/module_analyser.c2	/^    bool saved = ma.has_error;$/;"	v
has_error	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool saved = ma->has_error;$/;"	v
has_expr	$C2_ROOT/ast/member_expr.c2	/^    return e.base.base.memberExprBits.has_expr;$/;"	v
has_expr	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->base.base.memberExprBits.has_expr;$/;"	v
has_fallthrough	$C2_ROOT/bootstrap/bootstrap.c	/^   return s->bits.has_fallthrough;$/;"	v
has_gen_idx	$C2_ROOT/ast/decl.c2	/^    return d.declBits.has_gen_idx;$/;"	v
has_gen_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->declBits.has_gen_idx;$/;"	v
has_init	$C2_ROOT/ast/var_decl.c2	/^    return d.base.varDeclBits.has_init;$/;"	v
has_init_call	$C2_ROOT/ast/var_decl.c2	/^    return d.base.varDeclBits.has_init_call;$/;"	v
has_init_call	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->base.varDeclBits.has_init_call;$/;"	v
has_init_call	$C2_ROOT/parser/c2_parser_stmt.c2	/^                has_init_call = true;$/;"	v
has_local	$C2_ROOT/ast/var_decl.c2	/^    return d.base.varDeclBits.has_local;$/;"	v
has_local	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->base.varDeclBits.has_local;$/;"	v
has_local	$C2_ROOT/parser/c2_parser_stmt.c2	/^        has_local = true;$/;"	v
has_paren	$C2_ROOT/bootstrap/bootstrap.c	/^                  has_paren = true;$/;"	v
has_paren	$C2_ROOT/parser/c2_tokenizer.c2	/^                        has_paren = true;$/;"	v
has_prefix	$C2_ROOT/ast/function_decl.c2	/^    return d.base.functionDeclBits.has_prefix;$/;"	v
has_prefix	$C2_ROOT/ast/type_ref.c2	/^    u32 numrefs = (r.flags.kind != TypeRefKind.Builtin) + r.flags.has_prefix;$/;"	v
has_prefix	$C2_ROOT/bootstrap/bootstrap.c	/^   return r->flags.has_prefix;$/;"	v
has_printf_format	$C2_ROOT/analyser/module_analyser_call.c2	/^            has_printf_format = true;$/;"	v
has_printf_format	$C2_ROOT/bootstrap/bootstrap.c	/^         has_printf_format = true;$/;"	v
has_register	$C2_ROOT/bootstrap/bootstrap.c	/^   return i->instrBits.has_register;$/;"	v
has_register	$C2_ROOT/ir/instr.c2	/^    return i.instrBits.has_register;$/;"	v
has_result	$C2_ROOT/bootstrap/bootstrap.c	/^   return i->instrBits.has_result;$/;"	v
has_result	$C2_ROOT/ir/instr.c2	/^    return i.instrBits.has_result;$/;"	v
has_return	$C2_ROOT/ast/function_decl.c2	/^    return d.base.functionDeclBits.has_return;$/;"	v
has_return	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->base.functionDeclBits.has_return;$/;"	v
has_s2	$C2_ROOT/bootstrap/bootstrap.c	/^               has_s2 = true;$/;"	v
has_s2	$C2_ROOT/generator/c/c_generator_stmt.c2	/^                    has_s2 = true;$/;"	v
has_size	$C2_ROOT/ast/array_type.c2	/^    t.base.arrayTypeBits.has_size = has_size;$/;"	v
has_size	$C2_ROOT/bootstrap/bootstrap.c	/^   t->base.arrayTypeBits.has_size = has_size;$/;"	v
hash	$C2_ROOT/ast_utils/string_pool.c2	/^fn u32 hash(const char* text, usize len) {$/;"	f
hash_array	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t* hash_array;$/;"	v
hash_array	$C2_ROOT/generator/c/c_generator_trace.c2	/^    u32* hash_array;$/;"	v
hash_array2	$C2_ROOT/bootstrap/bootstrap.c	/^         sl->hash_array = hash_array2;$/;"	v
hash_array2	$C2_ROOT/generator/c/c_generator_trace.c2	/^            sl.hash_array = hash_array2;$/;"	v
hash_capacity	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t hash_capacity;$/;"	v
hash_capacity	$C2_ROOT/generator/c/c_generator_trace.c2	/^    u32 hash_capacity;$/;"	v
hash_count	$C2_ROOT/ast_utils/string_pool.c2	/^    u32 hash_count;$/;"	v
hash_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t hash_count;$/;"	v
hash_count	$C2_ROOT/generator/c/c_generator_trace.c2	/^    u32 hash_count;$/;"	v
hash_mask	$C2_ROOT/ast_utils/string_pool.c2	/^    u32 hash_mask;$/;"	v
hash_mask	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t hash_mask;$/;"	v
hash_size	$C2_ROOT/ast_utils/string_pool.c2	/^    p.entry_size = hash_size;$/;"	v
hash_size	$C2_ROOT/bootstrap/bootstrap.c	/^   p->entry_size = hash_size;$/;"	v
have_bitfield	$C2_ROOT/bootstrap/bootstrap.c	/^         have_bitfield = true;$/;"	v
have_bitfield	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^            have_bitfield = true;$/;"	v
have_designators	$C2_ROOT/analyser/module_analyser_init.c2	/^            have_designators = true;$/;"	v
have_designators	$C2_ROOT/bootstrap/bootstrap.c	/^         have_designators = true;$/;"	v
hdr	$C2_ROOT/bootstrap/bootstrap.c	/^   gen->out = hdr;$/;"	v
hdr	$C2_ROOT/generator/c/c_generator.c2	/^    gen.out = hdr;$/;"	v
head	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32 head;$/;"	v
header	$C2_ROOT/bootstrap/bootstrap.c	/^   string_buffer_Buf* out = gen->header;$/;"	v
header	$C2_ROOT/generator/c/c_generator.c2	/^    string_buffer.Buf* out = gen.header;$/;"	v
header	$C2_ROOT/generator/c/c_generator_special.c2	/^    string_buffer.Buf* out = gen.header;$/;"	v
header_fragments	$C2_ROOT/bootstrap/bootstrap.c	/^   linked_list_Element header_fragments;$/;"	v
heap	$C2_ROOT/bootstrap/bootstrap.c	/^   return l->heap;$/;"	v
heap	$C2_ROOT/parser/case_list.c2	/^    return l.heap;$/;"	v
heap2	$C2_ROOT/bootstrap/bootstrap.c	/^      l->heap = heap2;$/;"	v
heap2	$C2_ROOT/parser/case_list.c2	/^        l.heap = heap2;$/;"	v
height	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn c_int Font.height(const Font* font) @(cname="TTF_FontHeight");$/;"	f
height	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn i32 height() @(cname="sapp_height");$/;"	f
height	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 height;$/;"	v
height	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    f32 height;$/;"	v
heightf	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn f32 heightf() @(cname="sapp_heightf");$/;"	f
hex2val	$C2_ROOT/parser/c2_tokenizer.c2	/^fn u8 hex2val(char c) {$/;"	f
hexconv	$C2_ROOT/parser/c2_tokenizer.c2	/^fn u32 hexconv(const char* p, u32 maxn, u32* pc) {$/;"	f
highDpi	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn bool highDpi() @(cname="sapp_high_dpi");$/;"	f
high_dpi	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool high_dpi;$/;"	v
hlsl_register_b_n	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u8 hlsl_register_b_n;$/;"	v
hlsl_register_s_n	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u8 hlsl_register_s_n;$/;"	v
hlsl_register_t_n	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u8 hlsl_register_t_n;$/;"	v
hlsl_register_u_n	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u8 hlsl_register_u_n;$/;"	v
hlsl_sem_index	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u8 hlsl_sem_index;$/;"	v
hlsl_sem_name	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    const char* hlsl_sem_name;$/;"	v
home	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void home() @(cname="sdtx_home");$/;"	f
hour	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    c_int hour;$/;"	v
html5AskLeaveSite	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void html5AskLeaveSite(bool ask) @(cname="sapp_html5_ask_leave_site");$/;"	f
html5FetchDroppedFile	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void html5FetchDroppedFile(Html5FetchRequest* request) @(cname="sapp_html5_fetch_dropped_file/;"	f
html5GetDroppedFileSize	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn u32 html5GetDroppedFileSize(i32 index) @(cname="sapp_html5_get_dropped_file_size");$/;"	f
html5_ask_leave_site	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool html5_ask_leave_site;$/;"	v
html5_bubble_char_events	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool html5_bubble_char_events;$/;"	v
html5_bubble_key_events	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool html5_bubble_key_events;$/;"	v
html5_bubble_mouse_events	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool html5_bubble_mouse_events;$/;"	v
html5_bubble_touch_events	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool html5_bubble_touch_events;$/;"	v
html5_bubble_wheel_events	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool html5_bubble_wheel_events;$/;"	v
html5_canvas_resize	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool html5_canvas_resize;$/;"	v
html5_canvas_selector	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    const char* html5_canvas_selector;$/;"	v
html5_emsc_set_main_loop_simulate_infinite_loop	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool html5_emsc_set_main_loop_simulate_infinite_loop;$/;"	v
html5_premultiplied_alpha	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool html5_premultiplied_alpha;$/;"	v
html5_preserve_drawing_buffer	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool html5_preserve_drawing_buffer;$/;"	v
html5_update_document_title	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool html5_update_document_title;$/;"	v
html5_use_emsc_set_main_loop	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool html5_use_emsc_set_main_loop;$/;"	v
htonl	$C2_ROOT/libs/libc/sys_socket.c2i	/^fn u32 htonl(u32 hostlong);$/;"	f
htons	$C2_ROOT/libs/libc/sys_socket.c2i	/^fn u16 htons(u16 hostshort);$/;"	f
hypot	$C2_ROOT/libs/math/math.c2i	/^fn c_double hypot(c_double, c_double);$/;"	f
hypotf	$C2_ROOT/libs/math/math.c2i	/^fn c_float hypotf(c_float, c_float);$/;"	f
i16	$C2_ROOT/ir_examples/functions.c2	/^    i16 d;$/;"	v
i16	$C2_ROOT/ir_examples/struct_init.c2	/^    i16 y;$/;"	v
i16	$C2_ROOT/ir_examples/struct_init_anonymous.c2	/^        i16 b;$/;"	v
i16	$C2_ROOT/libs/c2/c2.c2i	/^type c_short i16;$/;"	v
i16	$C2_ROOT/libs/c2/i16.c2i	/^module i16;$/;"	v
i16	$C2_ROOT/libs/libc/libc_poll.c2i	/^    i16 revents;$/;"	v
i32	$C2_ROOT/common/file/file_utils.c2	/^    i32 error;$/;"	v
i32	$C2_ROOT/common/yaml/yaml_parser.c2	/^    i32 cur_indent;$/;"	v
i32	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    i32 cur_indent;$/;"	v
i32	$C2_ROOT/compiler/main.c2	/^    i32 recipe_id;$/;"	v
i32	$C2_ROOT/compiler/manifest.c2	/^                     i32 file_id,$/;"	v
i32	$C2_ROOT/ir_examples/global_arrays.c2	/^    i32 y;$/;"	v
i32	$C2_ROOT/ir_examples/global_vars.c2	/^i32 i;$/;"	v
i32	$C2_ROOT/ir_examples/if_stmt.c2	/^    i32 a;$/;"	v
i32	$C2_ROOT/ir_examples/label.c2	/^    i32 a;$/;"	v
i32	$C2_ROOT/ir_examples/members.c2	/^    i32 val;$/;"	v
i32	$C2_ROOT/ir_examples/struct_func.c2	/^    i32 y;$/;"	v
i32	$C2_ROOT/ir_examples/struct_init.c2	/^    i32 x;$/;"	v
i32	$C2_ROOT/ir_examples/struct_init_anonymous.c2	/^        i32 e;$/;"	v
i32	$C2_ROOT/ir_examples/types.c2	/^    i32 i;$/;"	v
i32	$C2_ROOT/libs/c2/c2.c2i	/^type c_ssize i32;$/;"	v
i32	$C2_ROOT/libs/c2/i32.c2i	/^module i32;$/;"	v
i32	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        i32   splice_fd_in;$/;"	v
i32	$C2_ROOT/libs/libc/stdio.c2i	/^    i32 _pos;$/;"	v
i32	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  i32 ssi_syscall;$/;"	v
i32	$C2_ROOT/libs/libc/sys_stat.c2i	/^    i32 st_rdev;$/;"	v
i32	$C2_ROOT/libs/sdl2/sdl.c2i	/^type Keycode i32;$/;"	v
i32	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    i32 window_width;$/;"	v
i32	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    i32 sample_rate;$/;"	v
i32	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    i32 tab_width;$/;"	v
i32	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 z;$/;"	v
i32	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    i32 sample_count;$/;"	v
i32	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    i32 num_elements;$/;"	v
i32	$C2_ROOT/parser/c2_parser.c2	/^    i32 file_id;$/;"	v
i64	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^    i64 min_val;$/;"	v
i64	$C2_ROOT/ir/constant.c2	/^        i64 ivalue;$/;"	v
i64	$C2_ROOT/ir_examples/functions.c2	/^type Alias i64;$/;"	v
i64	$C2_ROOT/libs/c2/c2.c2i	/^type c_ssize i64;$/;"	v
i64	$C2_ROOT/libs/c2/i64.c2i	/^module i64;$/;"	v
i64	$C2_ROOT/libs/libc/stdio.c2i	/^    i64 _offset;$/;"	v
i64	$C2_ROOT/libs/libc/sys_stat.c2i	/^    i64 st_blocks;$/;"	v
i64	$C2_ROOT/parser/c2_tokenizer.c2	/^    i64 val;$/;"	v
i8	$C2_ROOT/ir_examples/struct_init_anonymous.c2	/^    i8 f;$/;"	v
i8	$C2_ROOT/libs/c2/i8.c2i	/^module i8;$/;"	v
ia_list	$C2_ROOT/analyser/module_analyser.c2	/^import incr_array_list as ia_list;$/;"	v
ialist	$C2_ROOT/analyser/module_analyser.c2	/^    ma.incr_values = &ialist;$/;"	v
ialist	$C2_ROOT/bootstrap/bootstrap.c	/^   ma->incr_values = &ialist;$/;"	v
ic	$C2_ROOT/bootstrap/bootstrap.c	/^   *e_ptr = ic;$/;"	v
ic	$C2_ROOT/parser/ast_builder.c2	/^    *e_ptr = ic;$/;"	v
icon	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    IconDesc icon;$/;"	v
id	$C2_ROOT/analyser/module_analyser.c2	/^    Decl* d = (Decl*)id;$/;"	v
id	$C2_ROOT/analyser/module_analyser_switch.c2	/^    Expr* e = (Expr*)id;$/;"	v
id	$C2_ROOT/analyser/scope.c2	/^        ast.Decl* d = (ast.Decl*)id;$/;"	v
id	$C2_ROOT/bootstrap/bootstrap.c	/^   return id;$/;"	v
id	$C2_ROOT/compiler/compiler.c2	/^    ast.Decl* d = (ast.Decl*)id;$/;"	v
id	$C2_ROOT/ir/context.c2	/^    return id;$/;"	v
id	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    u32 id;$/;"	v
id	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 id;$/;"	v
id	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    u32 id;$/;"	v
identifier	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    u32* identifier;$/;"	v
identifierExprBits	$C2_ROOT/ast/stmt.c2	/^        IdentifierExprBits identifierExprBits;$/;"	v
identifierExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_IdentifierExprBits identifierExprBits;$/;"	v
identifiers	$C2_ROOT/ast/module.c2	/^    bool is_foreign; \/\/ module identifiers are not mangled$/;"	m
identity	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Mat4 Mat4.identity() {$/;"	f
idpool	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FrameStatsMetalIdpool idpool;$/;"	v
ids	$C2_ROOT/bootstrap/bootstrap.c	/^   const uint16_t* ids;$/;"	v
ids	$C2_ROOT/ir/interference_graph.c2	/^    const u16* ids;$/;"	v
ids	$C2_ROOT/ir/live_map.c2	/^    const u16* ids;$/;"	v
idx	$C2_ROOT/analyser/module_analyser_call.c2	/^    u32 idx;$/;"	v
idx	$C2_ROOT/ast/array_subscript_expr.c2	/^    e.idx = idx;$/;"	v
idx	$C2_ROOT/ast/call_expr.c2	/^    e.template_idx = (u16)idx;$/;"	v
idx	$C2_ROOT/ast/decl.c2	/^    d.gen_idx = idx;$/;"	v
idx	$C2_ROOT/ast/function_decl.c2	/^    d.instance_idx = idx;$/;"	v
idx	$C2_ROOT/ast/instance_table.c2	/^    return idx;$/;"	v
idx	$C2_ROOT/ast/utils.c2	/^    return idx;$/;"	v
idx	$C2_ROOT/ast_utils/string_pool.c2	/^    return p.data + idx;$/;"	v
idx	$C2_ROOT/bootstrap/bootstrap.c	/^   v->temps[v->count] = idx;$/;"	v
idx	$C2_ROOT/common/dsm_sorter.c2	/^            sorted[count-size] = (u8)idx;$/;"	v
idx	$C2_ROOT/common/yaml/yaml_data.c2	/^    return idx;$/;"	v
idx	$C2_ROOT/generator/c/c_generator.c2	/^        return idx;$/;"	v
idx	$C2_ROOT/generator/c/c_generator_expr.c2	/^    u32 idx;$/;"	v
idx	$C2_ROOT/generator/c2refs.c2	/^    return idx;$/;"	v
idx	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    return idx;$/;"	v
idx	$C2_ROOT/ir/block_list.c2	/^    return idx;$/;"	v
idx	$C2_ROOT/ir/case_list.c2	/^    return idx;$/;"	v
idx	$C2_ROOT/ir/copy_list.c2	/^    info.instr_idx = idx;$/;"	v
idx	$C2_ROOT/ir/inserter.c2	/^    return idx;$/;"	v
idx	$C2_ROOT/ir/ref.c2	/^    local u32 idx;$/;"	v
idx	$C2_ROOT/ir/register_alloc.c2	/^    v.temps[v.count++] = idx;$/;"	v
idx	$C2_ROOT/ir/symbol_list.c2	/^    return idx;$/;"	v
idx	$C2_ROOT/ir/usage_counter.c2	/^    return idx;$/;"	v
idx	$C2_ROOT/ir/work_queue.c2	/^    w.index = idx;$/;"	v
idx	$C2_ROOT/parser/keywords.c2	/^    info.max_index = idx;$/;"	v
idx2ast	$C2_ROOT/ast/utils.c2	/^fn AST* idx2ast(u32 idx) {$/;"	f
idx2name	$C2_ROOT/ast/utils.c2	/^public fn const char* idx2name(u32 idx) {$/;"	f
idx2name	$C2_ROOT/generator/c2refs.c2	/^fn const char* Files.idx2name(const Files* f, u32 name_idx) {$/;"	f
idx2node	$C2_ROOT/common/yaml/yaml_data.c2	/^fn Node* Data.idx2node(const Data* d, u32 idx) {$/;"	f
idx2node	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^fn Node* Tree.idx2node(const Tree* t, u32 node_idx) {$/;"	f
idx2str	$C2_ROOT/ast_utils/string_pool.c2	/^public fn const char* Pool.idx2str(const Pool* p, u32 idx) {$/;"	f
idx2word	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^fn const char* Words.idx2word(const Words* w , u32 word_idx) {$/;"	f
idx_ref	$C2_ROOT/bootstrap/bootstrap.c	/^      ir_Ref idx_ref;$/;"	v
idx_ref	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        ir.Ref idx_ref;$/;"	v
ie	$C2_ROOT/bootstrap/bootstrap.c	/^      s->entries[idx] = *ie;$/;"	v
ie	$C2_ROOT/generator/ir/ir_generator.c2	/^                const ArrayDesignatedInitExpr* ad = (ArrayDesignatedInitExpr*)ie;$/;"	v
ie	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        const InitListExpr* ile = (InitListExpr*)ie;$/;"	v
if	$C2_ROOT/ir/instr.c2	/^    u32 type_ : 4;  \/\/ resulting type if any$/;"	t
ifStmtBits	$C2_ROOT/ast/stmt.c2	/^        IfStmtBits ifStmtBits;$/;"	v
ifStmtBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_IfStmtBits ifStmtBits;$/;"	v
if_assign	$C2_ROOT/ir_examples/cond_decl.c2	/^fn void if_assign(i32 a, i32 loops) {$/;"	f
if_decl	$C2_ROOT/ir_examples/cond_decl.c2	/^fn void if_decl(i32 loops) {$/;"	f
ifa_addr	$C2_ROOT/libs/libc/net_if.c2i	/^    sys_socket.Sockaddr ifa_addr;$/;"	v
ifa_ifp	$C2_ROOT/libs/libc/net_if.c2i	/^    void* ifa_ifp; \/\/ TODO struct iface* ifa_ifp;$/;"	v
ifa_next	$C2_ROOT/libs/libc/net_if.c2i	/^    Addr* ifa_next;$/;"	v
ifaddrs	$C2_ROOT/libs/libc/ifaddrs.c2i	/^module ifaddrs;$/;"	v
ifc_len	$C2_ROOT/libs/libc/net_if.c2i	/^    c_int ifc_len;$/;"	v
ifcu_buf	$C2_ROOT/libs/libc/net_if.c2i	/^        CAddr ifcu_buf;$/;"	v
ifcu_req	$C2_ROOT/libs/libc/net_if.c2i	/^        Req* ifcu_req;$/;"	v
ifdef	Makefile	/^ifdef ASAN$/;"	v
ifdef	Makefile	/^ifdef DEBUG$/;"	v
ifdef	Makefile	/^ifdef MSAN$/;"	v
ifdef	Makefile	/^ifdef UBSAN$/;"	v
ifrn_name	$C2_ROOT/libs/libc/net_if.c2i	/^        char[IFNAMSIZ] ifrn_name;$/;"	v
ifru_addr	$C2_ROOT/libs/libc/net_if.c2i	/^        sys_socket.Sockaddr ifru_addr;$/;"	v
ifru_broadaddr	$C2_ROOT/libs/libc/net_if.c2i	/^        sys_socket.Sockaddr ifru_broadaddr;$/;"	v
ifru_data	$C2_ROOT/libs/libc/net_if.c2i	/^        CAddr ifru_data;$/;"	v
ifru_dstaddr	$C2_ROOT/libs/libc/net_if.c2i	/^        sys_socket.Sockaddr ifru_dstaddr;$/;"	v
ifru_flags	$C2_ROOT/libs/libc/net_if.c2i	/^        c_short ifru_flags;$/;"	v
ifru_hwaddr	$C2_ROOT/libs/libc/net_if.c2i	/^        sys_socket.Sockaddr ifru_hwaddr;$/;"	v
ifru_ivalue	$C2_ROOT/libs/libc/net_if.c2i	/^        c_int ifru_ivalue;$/;"	v
ifru_map	$C2_ROOT/libs/libc/net_if.c2i	/^        Map ifru_map;$/;"	v
ifru_mtu	$C2_ROOT/libs/libc/net_if.c2i	/^        c_int ifru_mtu;$/;"	v
ifru_netmask	$C2_ROOT/libs/libc/net_if.c2i	/^        sys_socket.Sockaddr ifru_netmask;$/;"	v
ifru_newname	$C2_ROOT/libs/libc/net_if.c2i	/^        char[IFNAMSIZ] ifru_newname;$/;"	v
ifru_slave	$C2_ROOT/libs/libc/net_if.c2i	/^        char[IFNAMSIZ] ifru_slave;$/;"	v
ifu_broadaddr	$C2_ROOT/libs/libc/net_if.c2i	/^        sys_socket.Sockaddr ifu_broadaddr;$/;"	v
ifu_dstaddr	$C2_ROOT/libs/libc/net_if.c2i	/^        sys_socket.Sockaddr ifu_dstaddr;$/;"	v
ii	$C2_ROOT/generator/c/c_generator_trace.c2	/^            u32 n = (u16)ii;$/;"	v
il	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* il;$/;"	v
ile	$C2_ROOT/analyser/module_analyser_init.c2	/^    Expr* e = (Expr*)ile;$/;"	v
ilogb	$C2_ROOT/libs/math/math.c2i	/^fn c_int ilogb(c_double);$/;"	f
ilogbf	$C2_ROOT/libs/math/math.c2i	/^fn c_int ilogbf(c_float);$/;"	f
image	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    Image image;$/;"	v
image_clamp_to_border	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool image_clamp_to_border;$/;"	v
image_pool_size	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 image_pool_size;$/;"	v
image_type	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ImageType image_type;$/;"	v
images	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    ImageDesc[8] images;$/;"	v
images	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ResourceStats images;$/;"	v
immutable	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool immutable;$/;"	v
implType	$C2_ROOT/ast/enum_type_decl.c2	/^    return d.implType;$/;"	v
implType	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->implType;$/;"	v
implType	$C2_ROOT/parser/ast_builder.c2	/^                                          implType,$/;"	v
implType	$C2_ROOT/parser/c2_parser_type.c2	/^                                      implType,$/;"	v
implicitCastBits	$C2_ROOT/ast/stmt.c2	/^        ImplicitCastBits implicitCastBits;$/;"	v
implicitCastBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_ImplicitCastBits implicitCastBits;$/;"	v
import	$C2_ROOT/analyser/conversion_checker.c2	/^import diagnostics;$/;"	v
import	$C2_ROOT/analyser/conversion_checker_expr.c2	/^import ctv_analyser;$/;"	v
import	$C2_ROOT/analyser/incr_array_list.c2	/^import string;$/;"	v
import	$C2_ROOT/analyser/init_checker.c2	/^import string;$/;"	v
import	$C2_ROOT/analyser/label_vector.c2	/^import string;$/;"	v
import	$C2_ROOT/analyser/module_analyser.c2	/^import warning_flags;$/;"	v
import	$C2_ROOT/analyser/module_analyser_binop.c2	/^import ctv_analyser;$/;"	v
import	$C2_ROOT/analyser/module_analyser_builtin.c2	/^import size_analyser;$/;"	v
import	$C2_ROOT/analyser/module_analyser_call.c2	/^import stdio;$/;"	v
import	$C2_ROOT/analyser/module_analyser_expr.c2	/^import ctv_analyser;$/;"	v
import	$C2_ROOT/analyser/module_analyser_function.c2	/^import scope;$/;"	v
import	$C2_ROOT/analyser/module_analyser_init.c2	/^import init_checker;$/;"	v
import	$C2_ROOT/analyser/module_analyser_member.c2	/^import ctype;$/;"	v
import	$C2_ROOT/analyser/module_analyser_stmt.c2	/^import scope;$/;"	v
import	$C2_ROOT/analyser/module_analyser_struct.c2	/^import size_analyser;$/;"	v
import	$C2_ROOT/analyser/module_analyser_switch.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/analyser/module_analyser_type.c2	/^import ctv_analyser;$/;"	v
import	$C2_ROOT/analyser/module_sorter.c2	/^import string;$/;"	v
import	$C2_ROOT/analyser/name_vector.c2	/^import string;$/;"	v
import	$C2_ROOT/analyser/scope.c2	/^import string;$/;"	v
import	$C2_ROOT/analyser/struct_field_init_checker.c2	/^import stdlib;$/;"	v
import	$C2_ROOT/analyser/struct_func_list.c2	/^import string;$/;"	v
import	$C2_ROOT/analyser/unused_checker.c2	/^import warning_flags;$/;"	v
import	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^import diagnostics;$/;"	v
import	$C2_ROOT/analyser_utils/printf_utils.c2	/^import ctype;$/;"	v
import	$C2_ROOT/ast/alias_type.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/alias_type_decl.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/array_designated_init_expr.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/array_subscript_expr.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/array_type.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/array_value.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/asm_stmt.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/assert_stmt.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/ast.c2	/^import string_pool;$/;"	v
import	$C2_ROOT/ast/binary_operator.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/bitoffset_expr.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/boolean_literal.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/break_stmt.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/builtin_expr.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/builtin_type.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/call_expr.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/char_literal.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/compound_stmt.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/conditional_operator.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/continue_stmt.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/decl.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/decl_stmt.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/enum_constant_decl.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/enum_type.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/enum_type_decl.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/explicit_cast_expr.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/expr.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/fallthrough_stmt.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/field_designated_init_expr.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/float_literal.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/for_stmt.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/function_decl.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/function_decl_list.c2	/^import string;$/;"	v
import	$C2_ROOT/ast/function_type.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/function_type_decl.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/goto_stmt.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/identifier_expr.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/if_stmt.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/implicit_cast_expr.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/import_decl.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/init_list_expr.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/instance_table.c2	/^import string;$/;"	v
import	$C2_ROOT/ast/instantiator.c2	/^import src_loc;$/;"	v
import	$C2_ROOT/ast/integer_literal.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/label_stmt.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/member_expr.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/module.c2	/^import string_pool;$/;"	v
import	$C2_ROOT/ast/module_type.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/nil_expr.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/paren_expr.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/pointer_pool.c2	/^import ast_context;$/;"	v
import	$C2_ROOT/ast/pointer_type.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/qualtype.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/range_expr.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/return_stmt.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/static_assert.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/statistics.c2	/^import string;$/;"	v
import	$C2_ROOT/ast/stmt.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/string_literal.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/string_type_pool.c2	/^import ast_context;$/;"	v
import	$C2_ROOT/ast/struct_type.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/struct_type_decl.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/switch_case.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/switch_stmt.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/symbol_table.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/type.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/type_expr.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/type_ref.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/unary_operator.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/utils.c2	/^import string_pool;$/;"	v
import	$C2_ROOT/ast/value.c2	/^import stdlib;$/;"	v
import	$C2_ROOT/ast/var_decl.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast/while_stmt.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ast_utils/attr.c2	/^import string_pool;$/;"	v
import	$C2_ROOT/ast_utils/attr_table.c2	/^import string;$/;"	v
import	$C2_ROOT/ast_utils/color.c2	/^import unistd;$/;"	v
import	$C2_ROOT/ast_utils/context.c2	/^import stdio;$/;"	v
import	$C2_ROOT/ast_utils/string_pool.c2	/^import string;$/;"	v
import	$C2_ROOT/common/attr_handler.c2	/^import string;$/;"	v
import	$C2_ROOT/common/bit_array.c2	/^import string;$/;"	v
import	$C2_ROOT/common/build_file.c2	/^import yaml;$/;"	v
import	$C2_ROOT/common/build_target.c2	/^import warning_flags;$/;"	v
import	$C2_ROOT/common/component.c2	/^import string_pool;$/;"	v
import	$C2_ROOT/common/component_sorter.c2	/^import string_list;$/;"	v
import	$C2_ROOT/common/diagnostics.c2	/^import utils;$/;"	v
import	$C2_ROOT/common/dsm_sorter.c2	/^import stdlib;$/;"	v
import	$C2_ROOT/common/file/reader.c2	/^import stdlib;$/;"	v
import	$C2_ROOT/common/index_list.c2	/^import string;$/;"	v
import	$C2_ROOT/common/library_list.c2	/^import string;$/;"	v
import	$C2_ROOT/common/manifest_writer.c2	/^import string_list;$/;"	v
import	$C2_ROOT/common/module_list.c2	/^import string;$/;"	v
import	$C2_ROOT/common/process_utils.c2	/^import file_utils;$/;"	v
import	$C2_ROOT/common/source_mgr.c2	/^import string_pool;$/;"	v
import	$C2_ROOT/common/string_list.c2	/^import string_pool;$/;"	v
import	$C2_ROOT/common/target_info.c2	/^import sys_utsname;$/;"	v
import	$C2_ROOT/common/utils.c2	/^import unistd;$/;"	v
import	$C2_ROOT/common/value_maplist.c2	/^import string;$/;"	v
import	$C2_ROOT/common/yaml/yaml_iterator.c2	/^import string;$/;"	v
import	$C2_ROOT/compiler/c2recipe.c2	/^import string_pool;$/;"	v
import	$C2_ROOT/compiler/c2recipe_parser.c2	/^import warning_flags;$/;"	v
import	$C2_ROOT/compiler/c2recipe_yaml.c2	/^import yaml;$/;"	v
import	$C2_ROOT/compiler/compiler.c2	/^import warning_flags;$/;"	v
import	$C2_ROOT/compiler/compiler_libs.c2	/^import string_list;$/;"	v
import	$C2_ROOT/compiler/main.c2	/^import utils;$/;"	v
import	$C2_ROOT/compiler/manifest.c2	/^import yaml;$/;"	v
import	$C2_ROOT/compiler/plugin_mgr.c2	/^import string_utils;$/;"	v
import	$C2_ROOT/generator/ast_visitor.c2	/^import stdlib;$/;"	v
import	$C2_ROOT/generator/c/c_generator.c2	/^import target_info;$/;"	v
import	$C2_ROOT/generator/c/c_generator_call.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/generator/c/c_generator_expr.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/generator/c/c_generator_special.c2	/^import target_info;$/;"	v
import	$C2_ROOT/generator/c/c_generator_stmt.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/generator/c/c_generator_trace.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/generator/c2i/c2i_generator.c2	/^import string_pool;$/;"	v
import	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/generator/c2i/c2i_generator_expr.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/generator/c2i/c2i_generator_stmt.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/generator/c2refs.c2	/^import radix_tree;$/;"	v
import	$C2_ROOT/generator/generator_utils.c2	/^import module_list;$/;"	v
import	$C2_ROOT/generator/ir/array_init_sorter.c2	/^import stdlib;$/;"	v
import	$C2_ROOT/generator/ir/basic_struct_layouter.c2	/^import ctv_analyser;$/;"	v
import	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^import string;$/;"	v
import	$C2_ROOT/generator/ir/ir_generator.c2	/^import value_maplist;$/;"	v
import	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^import ir_context;$/;"	v
import	$C2_ROOT/generator/ir/ir_generator_call.c2	/^import ir_context;$/;"	v
import	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^import ctv_analyser;$/;"	v
import	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^import string;$/;"	v
import	$C2_ROOT/generator/ir/ir_generator_member.c2	/^import ir_context;$/;"	v
import	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^import ir_context;$/;"	v
import	$C2_ROOT/generator/ir/ir_generator_switch.c2	/^import ir_context;$/;"	v
import	$C2_ROOT/generator/ir/ref_list.c2	/^import stdlib;$/;"	v
import	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^import linked_list;$/;"	v
import	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^import linked_list;$/;"	v
import	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^import unistd;$/;"	v
import	$C2_ROOT/ir/block.c2	/^import string;$/;"	v
import	$C2_ROOT/ir/block_list.c2	/^import stdlib;$/;"	v
import	$C2_ROOT/ir/case_list.c2	/^import stdlib;$/;"	v
import	$C2_ROOT/ir/constant_list.c2	/^import stdlib;$/;"	v
import	$C2_ROOT/ir/context.c2	/^import usage_counter;$/;"	v
import	$C2_ROOT/ir/function_info.c2	/^import stdlib;$/;"	v
import	$C2_ROOT/ir/graphviz.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ir/init_value_list.c2	/^import stdlib;$/;"	v
import	$C2_ROOT/ir/inserter.c2	/^import string;$/;"	v
import	$C2_ROOT/ir/instr_list.c2	/^import stdlib;$/;"	v
import	$C2_ROOT/ir/interference_graph.c2	/^import string;$/;"	v
import	$C2_ROOT/ir/live_map.c2	/^import string;$/;"	v
import	$C2_ROOT/ir/lookup_table.c2	/^import string;$/;"	v
import	$C2_ROOT/ir/print.c2	/^import string_buffer;$/;"	v
import	$C2_ROOT/ir/ref.c2	/^import stdio;$/;"	v
import	$C2_ROOT/ir/register_alloc.c2	/^import stdlib;$/;"	v
import	$C2_ROOT/ir/rev_list.c2	/^import string;$/;"	v
import	$C2_ROOT/ir/rpo.c2	/^import stdlib;$/;"	v
import	$C2_ROOT/ir/slot_collector.c2	/^import stdlib;$/;"	v
import	$C2_ROOT/ir/slot_values.c2	/^import string;$/;"	v
import	$C2_ROOT/ir/slot_writes_map.c2	/^import string;$/;"	v
import	$C2_ROOT/ir/switch.c2	/^import index_list;$/;"	v
import	$C2_ROOT/ir/symbol_list.c2	/^import stdlib;$/;"	v
import	$C2_ROOT/ir/usage_counter.c2	/^import c2;$/;"	v
import	$C2_ROOT/ir/work_queue.c2	/^import unistd;$/;"	v
import	$C2_ROOT/ir_examples/cond_decl.c2	/^import stdio;$/;"	v
import	$C2_ROOT/ir_examples/global_arrays.c2	/^import stdio;$/;"	v
import	$C2_ROOT/ir_examples/struct_init.c2	/^import stdio;$/;"	v
import	$C2_ROOT/libs/io_uring/io_uring.c2i	/^import uio;$/;"	v
import	$C2_ROOT/libs/libc/ifaddrs.c2i	/^import sys_socket;$/;"	v
import	$C2_ROOT/libs/libc/net_if.c2i	/^import sys_socket;$/;"	v
import	$C2_ROOT/libs/libc/stdlib.c2i	/^import string;$/;"	v
import	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^import csignal;$/;"	v
import	$C2_ROOT/libs/sdl2_image/sdl_image.c2i	/^import sdl;$/;"	v
import	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^import sdl;$/;"	v
import	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^import sdl;$/;"	v
import	$C2_ROOT/parser/ast_builder.c2	/^import string_pool;$/;"	v
import	$C2_ROOT/parser/c2_parser.c2	/^import utils;$/;"	v
import	$C2_ROOT/parser/c2_parser_expr.c2	/^import string;$/;"	v
import	$C2_ROOT/parser/c2_parser_stmt.c2	/^import string_list;$/;"	v
import	$C2_ROOT/parser/c2_parser_switch.c2	/^import stmt_list;$/;"	v
import	$C2_ROOT/parser/c2_tokenizer.c2	/^import utf8;$/;"	v
import	$C2_ROOT/parser/keywords.c2	/^import string_pool;$/;"	v
import	$C2_ROOT/parser/token.c2	/^import string;$/;"	v
import	$C2_ROOT/plugins/deps_generator.c2	/^import string_pool;$/;"	v
import	$C2_ROOT/plugins/deps_generator_plugin.c2	/^import utils;$/;"	v
import	$C2_ROOT/plugins/deps_generator_utils.c2	/^import stdio;$/;"	v
import	$C2_ROOT/plugins/git_version_plugin.c2	/^import process_utils;$/;"	v
import	$C2_ROOT/plugins/plugin_info.c2	/^import string_pool;$/;"	v
import	$C2_ROOT/plugins/refs_generator.c2	/^import string;$/;"	v
import	$C2_ROOT/plugins/refs_generator_plugin.c2	/^import utils;$/;"	v
import	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^import yaml;$/;"	v
import	$C2_ROOT/plugins/unit_test1.c2	/^import string;$/;"	v
import	$C2_ROOT/plugins/unit_test2.c2	/^import unistd;$/;"	v
import	$C2_ROOT/plugins/unit_test_plugin.c2	/^import utils;$/;"	v
importDeclBits	$C2_ROOT/ast/decl.c2	/^        ImportDeclBits importDeclBits;$/;"	v
importDeclBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_ImportDeclBits importDeclBits;$/;"	v
imports	$C2_ROOT/analyser/scope.c2	/^    s.imports = imports;$/;"	v
imports	$C2_ROOT/ast/ast.c2	/^    ImportDeclList imports;$/;"	v
imports	$C2_ROOT/bootstrap/bootstrap.c	/^   string_list_List imports;$/;"	v
imr_interface	$C2_ROOT/libs/libc/sys_socket.c2i	/^    In_addr imr_interface;$/;"	v
imr_multiaddr	$C2_ROOT/libs/libc/sys_socket.c2i	/^    In_addr imr_multiaddr;$/;"	v
inFunction	$C2_ROOT/analyser/scope.c2	/^public fn bool Scope.inFunction(const Scope* s) {$/;"	f
in_block	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool in_block;$/;"	v
in_block	$C2_ROOT/ir/context.c2	/^    bool in_block;$/;"	v
in_body	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool in_body;$/;"	v
in_body	$C2_ROOT/generator/c2i/c2i_generator.c2	/^    bool in_body;$/;"	v
in_document	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool in_document;$/;"	v
in_document	$C2_ROOT/common/yaml/yaml_parser.c2	/^    bool in_document;$/;"	v
incompatible_opcodes	$C2_ROOT/analyser/module_analyser_binop.c2	/^fn bool incompatible_opcodes(BinaryOpcode op1, BinaryOpcode op2) {$/;"	f
incr	$C2_ROOT/ast/value.c2	/^public fn void Value.incr(Value* v) {$/;"	f
incr	$C2_ROOT/ir/usage_counter.c2	/^public fn void Counter.incr(Counter* c, u32 idx) {$/;"	f
incr_array	$C2_ROOT/ast/type_ref.c2	/^    return r.flags.incr_array;$/;"	v
incr_array	$C2_ROOT/bootstrap/bootstrap.c	/^   return r->flags.incr_array;$/;"	v
incr_array_list	$C2_ROOT/analyser/incr_array_list.c2	/^module incr_array_list;$/;"	v
incr_array_list_Info	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct incr_array_list_Info_ incr_array_list_Info;$/;"	v
incr_array_list_List	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct incr_array_list_List_ incr_array_list_List;$/;"	v
incr_values	$C2_ROOT/bootstrap/bootstrap.c	/^   incr_array_list_List* incr_values;$/;"	v
indent	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void Buf.indent(Buf* buf, u32 indent) {$/;"	f
indent	$C2_ROOT/bootstrap/bootstrap.c	/^   top->indent = indent;$/;"	v
indent	$C2_ROOT/common/yaml/yaml_parser.c2	/^    top.indent = indent;$/;"	v
indent	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    t.loc.column += indent;$/;"	v
indent	$C2_ROOT/generator/c2_trace.c2	/^        indent = 0;$/;"	v
indent	$C2_ROOT/plugins/deps_generator.c2	/^    u32 saved_indent = gen.indent;$/;"	v
indent_step	$C2_ROOT/ast_utils/string_buffer.c2	/^    u32 indent_step;$/;"	v
indent_step	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t indent_step;$/;"	v
index	$C2_ROOT/analyser/init_checker.c2	/^    u32 index;$/;"	v
index	$C2_ROOT/analyser/label_vector.c2	/^    return index;$/;"	v
index	$C2_ROOT/analyser/module_analyser.c2	/^        ma.prefix_cache_idx = index;$/;"	v
index	$C2_ROOT/analyser/module_analyser_switch.c2	/^    *ip = index;$/;"	v
index	$C2_ROOT/analyser/name_vector.c2	/^    return index;$/;"	v
index	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^        BitOffsetExpr* bo = (BitOffsetExpr*)index;$/;"	v
index	$C2_ROOT/ast/ast_evaluator.c2	/^        BitOffsetExpr* bo = (BitOffsetExpr*)index;$/;"	v
index	$C2_ROOT/ast/enum_constant_decl.c2	/^    d.base.enumConstantDeclBits.enum_index = index;$/;"	v
index	$C2_ROOT/ast_utils/string_pool.c2	/^                const char* word = p.data + index;$/;"	v
index	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t index;$/;"	v
index	$C2_ROOT/common/source_mgr.c2	/^    u16* index;$/;"	v
index	$C2_ROOT/generator/c/c_generator_expr.c2	/^    BitOffsetExpr* bo = (BitOffsetExpr*)index;$/;"	v
index	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^        BitOffsetExpr* bo = (BitOffsetExpr*)index;$/;"	v
index	$C2_ROOT/generator/c/c_generator_trace.c2	/^    return sl.last_index = index;$/;"	v
index	$C2_ROOT/generator/ir/array_init_sorter.c2	/^    u32 index;$/;"	v
index	$C2_ROOT/ir/work_queue.c2	/^    u32 index;$/;"	v
index	$C2_ROOT/libs/libc/strings.c2i	/^fn c_char* index(const c_char* s, c_int c);$/;"	f
index64	$C2_ROOT/analyser/module_analyser_init.c2	/^        u32 current_index = (u32)index64;$/;"	v
indexBufferDesc	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn BufferDesc indexBufferDesc(Buffer* buf) @(cname="sshape_index_buffer_desc");$/;"	f
index_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool index_buffer;$/;"	v
index_buffer_offset	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 index_buffer_offset;$/;"	v
index_cap	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t index_cap;$/;"	v
index_capacity	$C2_ROOT/common/source_mgr.c2	/^    u32 index_capacity;$/;"	v
index_count	$C2_ROOT/common/source_mgr.c2	/^    u32 index_pos = sm.index_count;$/;"	v
index_list	$C2_ROOT/common/index_list.c2	/^module index_list;$/;"	v
index_list	$C2_ROOT/ir/context.c2	/^import index_list;$/;"	v
index_list	$C2_ROOT/ir/switch.c2	/^import index_list;$/;"	v
index_list_List	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct index_list_List_ index_list_List;$/;"	v
index_pos	$C2_ROOT/common/source_mgr.c2	/^    sm.index_count = index_pos;$/;"	v
index_type	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    IndexType index_type;$/;"	v
indexes	$C2_ROOT/ast_utils/attr.c2	/^    name_indexes = indexes;$/;"	v
indexes	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t* indexes;$/;"	v
indexes	$C2_ROOT/common/string_list.c2	/^    return l.indexes;$/;"	v
indexes	$C2_ROOT/ir/slot_collector.c2	/^    BlockIndex* indexes;$/;"	v
indexes	$C2_ROOT/parser/keywords.c2	/^    Kind[656] indexes;$/;"	v
indexes2	$C2_ROOT/bootstrap/bootstrap.c	/^   l->indexes = indexes2;$/;"	v
indexes2	$C2_ROOT/common/string_list.c2	/^    l.indexes = indexes2;$/;"	v
indices	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    SizesItem indices;$/;"	v
inet_addr	$C2_ROOT/libs/libc/sys_socket.c2i	/^fn InAddr inet_addr(const c_char* cp);$/;"	f
inet_ntoa	$C2_ROOT/libs/libc/sys_socket.c2i	/^fn char* inet_ntoa(In_addr in);$/;"	f
info	$C2_ROOT/ast/ast.c2	/^public fn void AST.info(const AST* a, string_buffer.Buf* out) {$/;"	f
info	$C2_ROOT/ast/module.c2	/^public fn void Module.info(const Module* m, string_buffer.Buf* out) {$/;"	f
info	$C2_ROOT/bootstrap/bootstrap.c	/^   ph->cur_info = info;$/;"	v
info	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^    init.info = info;$/;"	v
info	$C2_ROOT/ir/print.c2	/^    ph.cur_info = info;$/;"	v
info	$C2_ROOT/ir/slot_collector.c2	/^    c.info = info;$/;"	v
info	$C2_ROOT/ir/symbol_list.c2	/^            FunctionInfo* info;$/;"	v
info	$C2_ROOT/plugins/deps_generator_plugin.c2	/^    plugin_info.Info* info;$/;"	v
info	$C2_ROOT/plugins/git_version_plugin.c2	/^    plugin_info.Info* info;$/;"	v
info	$C2_ROOT/plugins/refs_generator_plugin.c2	/^    plugin_info.Info* info;$/;"	v
info	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^    plugin_info.Info* info;$/;"	v
info	$C2_ROOT/plugins/unit_test_plugin.c2	/^    plugin_info.Info* info;$/;"	v
init	$C2_ROOT/analyser/conversion_checker.c2	/^public fn void Checker.init(Checker* c, diagnostics.Diags* diags, ast_builder.Builder* builder) /;"	f
init	$C2_ROOT/analyser/label_vector.c2	/^public fn void LabelVector.init(LabelVector* v, u32 capacity) @(unused) {$/;"	f
init	$C2_ROOT/analyser/name_vector.c2	/^public fn void NameVector.init(NameVector* v, u32 capacity) @(unused) {$/;"	f
init	$C2_ROOT/analyser/struct_field_init_checker.c2	/^fn void StructFieldInitChecker.init(StructFieldInitChecker* c, u32 capacity) {$/;"	f
init	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^fn void Limit.init(Limit* l, u32 width, bool is_signed) {$/;"	f
init	$C2_ROOT/ast/array_value_list.c2	/^fn void ArrayValueList.init(ArrayValueList* l, u32 initial_size) {$/;"	f
init	$C2_ROOT/ast/decl.c2	/^fn void Decl.init(Decl* d, DeclKind k, u32 name_idx, SrcLoc loc, bool is_public, QualType qt, u3/;"	f
init	$C2_ROOT/ast/decl_list.c2	/^public fn void DeclList.init(DeclList* l) {$/;"	f
init	$C2_ROOT/ast/expr.c2	/^fn void Expr.init(Expr* e,$/;"	f
init	$C2_ROOT/ast/expr_list.c2	/^public fn void ExprList.init(ExprList* l) {$/;"	f
init	$C2_ROOT/ast/for_stmt.c2	/^    s.init = init;$/;"	v
init	$C2_ROOT/ast/function_decl_list.c2	/^public fn void FunctionDeclList.init(FunctionDeclList* l) {$/;"	f
init	$C2_ROOT/ast/import_decl_list.c2	/^fn void ImportDeclList.init(ImportDeclList* l) {$/;"	f
init	$C2_ROOT/ast/instance_table.c2	/^fn void TemplateFunction.init(TemplateFunction* f, const FunctionDecl* fd) {$/;"	f
init	$C2_ROOT/ast/pointer_pool.c2	/^fn void PointerPool.init(PointerPool* p, ast_context.Context* c) {$/;"	f
init	$C2_ROOT/ast/static_assert_list.c2	/^fn void StaticAssertList.init(StaticAssertList* l, u32 initial_size) {$/;"	f
init	$C2_ROOT/ast/stmt.c2	/^fn void Stmt.init(Stmt* s, StmtKind k, SrcLoc loc) {$/;"	f
init	$C2_ROOT/ast/string_type_pool.c2	/^fn void StringTypePool.init(StringTypePool* p, ast_context.Context* c) {$/;"	f
init	$C2_ROOT/ast/symbol_table.c2	/^fn void SymbolTable.init(SymbolTable* t, u32 initial) {$/;"	f
init	$C2_ROOT/ast/type.c2	/^fn void Type.init(Type* t, TypeKind k) {$/;"	f
init	$C2_ROOT/ast/type_ref.c2	/^public fn void TypeRefHolder.init(TypeRefHolder* h) {$/;"	f
init	$C2_ROOT/ast_utils/context.c2	/^fn void Context.init(Context* c, u32 blk_size) {$/;"	f
init	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn Buf* Buf.init(Buf* buf, char* data, u32 capacity, bool grow, bool use_colors, u32 inde/;"	f
init	$C2_ROOT/bootstrap/bootstrap.c	/^   s->init = init;$/;"	v
init	$C2_ROOT/common/build_target.c2	/^public fn void PluginList.init(PluginList* l) {$/;"	f
init	$C2_ROOT/common/component.c2	/^public fn void List.init(List* l) {$/;"	f
init	$C2_ROOT/common/console.c2	/^public fn void init() {$/;"	f
init	$C2_ROOT/common/dsm_sorter.c2	/^public fn void Sorter.init(Sorter* s, u32 count) {$/;"	f
init	$C2_ROOT/common/file/file_utils.c2	/^public fn bool File.init(File* file, const char* dir, const char* filename) {$/;"	f
init	$C2_ROOT/common/index_list.c2	/^public fn void List.init(List* l, u32 initial) {$/;"	f
init	$C2_ROOT/common/library_list.c2	/^public fn void List.init(List* l) {$/;"	f
init	$C2_ROOT/common/linked_list.c2	/^public fn void Element.init(Element* src) {$/;"	f
init	$C2_ROOT/common/module_list.c2	/^public fn void List.init(List* l, bool owns_modules, u32 capacity) {$/;"	f
init	$C2_ROOT/common/string_list.c2	/^public fn void List.init(List* l, string_pool.Pool* pool) {$/;"	f
init	$C2_ROOT/common/target_info.c2	/^fn void Info.init(Info* info) {$/;"	f
init	$C2_ROOT/common/value_maplist.c2	/^public fn void List.init(List* l) {$/;"	f
init	$C2_ROOT/common/yaml/yaml_data.c2	/^fn void Data.init(Data* d, u32 text_size, u32 nodes_count, StackLevel* stack) {$/;"	f
init	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^fn void Tokenizer.init(Tokenizer* t, const char* input, Data* d, char* error_msg) {$/;"	f
init	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Token.init(Token* t) {$/;"	f
init	$C2_ROOT/compiler/main.c2	/^fn void Options.init(Options* opts, string_pool.Pool* pool) {$/;"	f
init	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.init(Generator* gen,$/;"	f
init	$C2_ROOT/generator/c/dep_finder.c2	/^public fn void Finder.init(Finder* f, Module* mod, void* arg, OnDecl on_decl) {$/;"	f
init	$C2_ROOT/generator/ir/basic_struct_layouter.c2	/^fn void BasicStructLayouter.init(BasicStructLayouter* l,$/;"	f
init	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^fn void FieldStructLayouter.init(FieldStructLayouter* l,$/;"	f
init	$C2_ROOT/generator/ir/ir_generator.c2	/^fn void Generator.init(Generator* gen,$/;"	f
init	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^public fn void Locals.init(Locals* l) {$/;"	f
init	$C2_ROOT/generator/ir/ref_list.c2	/^public fn void RefList.init(RefList* l) {$/;"	f
init	$C2_ROOT/ir/block.c2	/^fn void Block.init(Block* b, BlockKind kind) {$/;"	f
init	$C2_ROOT/ir/block_list.c2	/^public fn void BlockList.init(BlockList* l, u32 initial_size) {$/;"	f
init	$C2_ROOT/ir/case_list.c2	/^fn void CaseList.init(CaseList* l) {$/;"	f
init	$C2_ROOT/ir/constant_list.c2	/^fn void ConstantList.init(ConstantList* l, u32 initial_size) {$/;"	f
init	$C2_ROOT/ir/context.c2	/^fn void Tools.init(Tools* t, const void* arg1, bool print) {$/;"	f
init	$C2_ROOT/ir/copy_list.c2	/^public fn void CopyList.init(CopyList* l, u32 capacity) {$/;"	f
init	$C2_ROOT/ir/init_value.c2	/^fn void InitValue.init(InitValue* r, InitValueKind kind, u32 value) {$/;"	f
init	$C2_ROOT/ir/init_value_list.c2	/^fn void InitValueList.init(InitValueList* l, u32 initial_size) {$/;"	f
init	$C2_ROOT/ir/instr_list.c2	/^public fn void InstrList.init(InstrList* l, u32 initial_size) {$/;"	f
init	$C2_ROOT/ir/lookup_table.c2	/^public fn void Table.init(Table* t, u32 initial) {$/;"	f
init	$C2_ROOT/ir/phi_list.c2	/^public fn void PhiClauses.init(PhiClauses* c) {$/;"	f
init	$C2_ROOT/ir/print.c2	/^fn void PrintHelper.init(PrintHelper* ph, const Context* c) {$/;"	f
init	$C2_ROOT/ir/ref.c2	/^public fn void Ref.init(Ref* r, RefKind kind, u32 value) {$/;"	f
init	$C2_ROOT/ir/register_alloc.c2	/^fn void LiveVector.init(LiveVector* v, u32 num_blocks, u32 num_instr) {$/;"	f
init	$C2_ROOT/ir/symbol_list.c2	/^fn void SymbolList.init(SymbolList* l, u32 initial_size) {$/;"	f
init	$C2_ROOT/ir/usage_counter.c2	/^public fn void Counter.init(Counter* c, u32 cap) {$/;"	f
init	$C2_ROOT/ir/work_queue.c2	/^fn WorkQueue* WorkQueue.init(WorkQueue* q) {$/;"	f
init	$C2_ROOT/libs/pthread/pthread.c2i	/^fn c_int Mutex.init(Mutex* mutex, const MutexAttr* attr) @(cname="pthread_mutex_init");$/;"	f
init	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int init(u32 flags) @(cname="SDL_Init");$/;"	f
init	$C2_ROOT/libs/sdl2_image/sdl_image.c2i	/^fn c_int init(c_int flags) @(cname="IMG_Init");$/;"	f
init	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn c_int init() @(cname="TTF_Init");$/;"	f
init	$C2_ROOT/parser/c2_tokenizer.c2	/^public fn void Tokenizer.init(Tokenizer* t,$/;"	f
init	$C2_ROOT/parser/case_list.c2	/^public fn void List.init(List* l) {$/;"	f
init	$C2_ROOT/parser/expr_list.c2	/^public fn void List.init(List* l) {$/;"	f
init	$C2_ROOT/parser/keywords.c2	/^public fn void Info.init(Info* info, string_pool.Pool* pool) {$/;"	f
init	$C2_ROOT/parser/stmt_list.c2	/^public fn void List.init(List* l) {$/;"	f
init	$C2_ROOT/parser/token.c2	/^public fn void Token.init(Token* tok) {$/;"	f
init	$C2_ROOT/plugins/deps_generator.c2	/^fn void Dir.init(Dir* d, u32 name_idx, u32 indent) {$/;"	f
init	$C2_ROOT/plugins/deps_generator_plugin.c2	/^fn void init(void* arg, plugin_info.Info* info) {$/;"	f
init	$C2_ROOT/plugins/git_version_plugin.c2	/^fn void init(void* arg, plugin_info.Info* info) {$/;"	f
init	$C2_ROOT/plugins/plugin_info.c2	/^    InitFn init;$/;"	v
init	$C2_ROOT/plugins/refs_generator.c2	/^fn void LineCounter.init(LineCounter* l) {$/;"	f
init	$C2_ROOT/plugins/refs_generator_plugin.c2	/^fn void init(void* arg, plugin_info.Info* info) {$/;"	f
init	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^fn void init(void* arg, plugin_info.Info* info) {$/;"	f
init	$C2_ROOT/plugins/unit_test1.c2	/^public fn void init(const Config* cfg) {$/;"	f
init0	$C2_ROOT/ir/instr.c2	/^public fn void Instr.init0(Instr* i, InstrKind k) {$/;"	f
init0b	$C2_ROOT/ir/instr.c2	/^public fn void Instr.init0b(Instr* i, InstrKind k) {$/;"	f
init1	$C2_ROOT/ir/instr.c2	/^public fn void Instr.init1(Instr* i, InstrKind k, Ref ref1) {$/;"	f
init1b	$C2_ROOT/ir/instr.c2	/^public fn void Instr.init1b(Instr* i, InstrKind k, Ref ref1) {$/;"	f
init2	$C2_ROOT/ir/instr.c2	/^public fn void Instr.init2(Instr* i, InstrKind k, Ref ref1, Ref ref2) {$/;"	f
init2b	$C2_ROOT/ir/instr.c2	/^public fn void Instr.init2b(Instr* i, InstrKind k, Ref ref1, Ref ref2) {$/;"	f
initBuffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void initBuffer(Buffer buf, BufferDesc* desc) @(cname="sg_init_buffer");$/;"	f
initExpr	$C2_ROOT/analyser/module_analyser_stmt.c2	/^        Expr* e = *initExpr;$/;"	v
initExpr	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_Expr* e = *initExpr;$/;"	v
initImage	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void initImage(Image img, ImageDesc* desc) @(cname="sg_init_image");$/;"	f
initListExprBits	$C2_ROOT/ast/stmt.c2	/^        InitListExprBits initListExprBits;$/;"	v
initListExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_InitListExprBits initListExprBits;$/;"	v
initPhi	$C2_ROOT/ir/instr.c2	/^public fn void Instr.initPhi(Instr* i, u32 clause_start, u32 num_clauses) {$/;"	f
initPipeline	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void initPipeline(Pipeline pip, PipelineDesc* desc) @(cname="sg_init_pipeline");$/;"	f
initRegCopy	$C2_ROOT/ir/instr.c2	/^public fn void Instr.initRegCopy(Instr* i, u8 dst_reg, Ref ref) {$/;"	f
initSampler	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void initSampler(Sampler smg, SamplerDesc* desc) @(cname="sg_init_sampler");$/;"	f
initShader	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void initShader(Shader shd, ShaderDesc* desc) @(cname="sg_init_shader");$/;"	f
initValue	$C2_ROOT/ast/array_designated_init_expr.c2	/^    return e.initValue;$/;"	v
initValue	$C2_ROOT/ast/enum_constant_decl.c2	/^        d.init[0] = initValue;$/;"	v
initValue	$C2_ROOT/ast/field_designated_init_expr.c2	/^    return e.initValue;$/;"	v
initValue	$C2_ROOT/ast/var_decl.c2	/^    init.expr = initValue;$/;"	v
initValue	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->initValue;$/;"	v
initView	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void initView(View view, ViewDesc* desc) @(cname="sg_init_view");$/;"	f
init_cb	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    Cb init_cb;$/;"	v
init_checker	$C2_ROOT/analyser/init_checker.c2	/^module init_checker;$/;"	v
init_checker	$C2_ROOT/analyser/module_analyser.c2	/^import init_checker;$/;"	v
init_checker	$C2_ROOT/analyser/module_analyser_init.c2	/^import init_checker;$/;"	v
init_checker	$C2_ROOT/analyser/module_analyser_switch.c2	/^import init_checker;$/;"	v
init_checker_Checker	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct init_checker_Checker_ init_checker_Checker;$/;"	v
init_checker_InitEntry	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct init_checker_InitEntry_ init_checker_InitEntry;$/;"	v
init_checkers	$C2_ROOT/analyser/module_analyser.c2	/^    init_checker.Checker[4] init_checkers;$/;"	v
init_expr	$C2_ROOT/analyser/module_analyser.c2	/^            InitListExpr* ile = (InitListExpr*)init_expr;$/;"	v
init_ext	$C2_ROOT/common/file/file_utils.c2	/^public fn bool File.init_ext(File* file, const char* dir, const char* filename, const char* ext)/;"	f
init_userdata_cb	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    DataCb init_userdata_cb;$/;"	v
init_value_count	$C2_ROOT/bootstrap/bootstrap.c	/^         uint32_t init_value_count;$/;"	v
init_value_count	$C2_ROOT/ir/print.c2	/^            u32 init_value_count;$/;"	v
init_value_count	$C2_ROOT/ir/symbol_list.c2	/^            u32 init_value_count;$/;"	v
init_value_idx	$C2_ROOT/bootstrap/bootstrap.c	/^         uint32_t init_value_idx;$/;"	v
init_value_idx	$C2_ROOT/ir/context.c2	/^    s.g.init_value_count = c.init_values.getCount() - s.g.init_value_idx;$/;"	v
init_value_idx	$C2_ROOT/ir/print.c2	/^            u32 init_value_idx;$/;"	v
init_value_idx	$C2_ROOT/ir/symbol_list.c2	/^            u32 init_value_idx;$/;"	v
init_values	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InitValueList init_values;$/;"	v
init_values	$C2_ROOT/ir/context.c2	/^    InitValueList init_values;$/;"	v
init_zones	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^fn void Tree.init_zones(Tree* t) {$/;"	f
inited	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 inited;$/;"	v
initial_size	$C2_ROOT/ast/array_value_list.c2	/^    l.capacity = initial_size;$/;"	v
initial_size	$C2_ROOT/ast/static_assert_list.c2	/^    l.capacity = initial_size;$/;"	v
initial_size	$C2_ROOT/bootstrap/bootstrap.c	/^   l->capacity = initial_size;$/;"	v
initial_size	$C2_ROOT/ir/constant_list.c2	/^        l.capacity = initial_size;$/;"	v
initial_size	$C2_ROOT/ir/instr_list.c2	/^        l.capacity = initial_size;$/;"	v
initialize	$C2_ROOT/ast/utils.c2	/^public fn void initialize(Context* c, string_pool.Pool* astPool, u32 wordsize, bool use_color) {$/;"	f
initialize	$C2_ROOT/ast_utils/attr.c2	/^public fn void initialize(const u32* indexes) {$/;"	f
inits	$C2_ROOT/analyser/struct_field_init_checker.c2	/^    SrcLoc* inits;$/;"	v
inits	$C2_ROOT/bootstrap/bootstrap.c	/^   src_loc_SrcLoc* inits;$/;"	v
inits	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^    l.inits = inits;$/;"	v
initscr	$C2_ROOT/libs/curses/curses.c2i	/^fn void initscr();$/;"	f
initstate	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_char* initstate(c_uint __seed, c_char* __statebuf, c_size __statelen);$/;"	f
initstate_r	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int initstate_r(c_uint __seed, c_char* __statebuf, c_size __statelen, Random_data* __buf);$/;"	f
inner	$C2_ROOT/analyser/module_analyser_builtin.c2	/^        TypeExpr* te = (TypeExpr*)inner;$/;"	v
inner	$C2_ROOT/analyser/module_analyser_stmt.c2	/^    IdentifierExpr* id = (IdentifierExpr*)inner;$/;"	v
inner	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^            UnaryOperator* e1 = (UnaryOperator*)inner;$/;"	v
inner	$C2_ROOT/ast/assert_stmt.c2	/^    s.inner = inner;$/;"	v
inner	$C2_ROOT/ast/builtin_expr.c2	/^    e.inner = inner;$/;"	v
inner	$C2_ROOT/ast/explicit_cast_expr.c2	/^    e.inner = inner;$/;"	v
inner	$C2_ROOT/ast/implicit_cast_expr.c2	/^    e.inner = inner;$/;"	v
inner	$C2_ROOT/ast/paren_expr.c2	/^    e.inner = inner;$/;"	v
inner	$C2_ROOT/ast/pointer_type.c2	/^    t.inner = inner;$/;"	v
inner	$C2_ROOT/ast/unary_operator.c2	/^    e.inner = inner;$/;"	v
inner	$C2_ROOT/bootstrap/bootstrap.c	/^   t->inner = inner;$/;"	v
inner_const	$C2_ROOT/analyser/module_analyser_member.c2	/^                if (is_ptr) is_const = inner_const;$/;"	v
inner_const	$C2_ROOT/bootstrap/bootstrap.c	/^            if (is_ptr) is_const = inner_const;$/;"	v
input	$C2_ROOT/bootstrap/bootstrap.c	/^   t->line_start = input;$/;"	v
input	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    t.input_start = input;$/;"	v
input	$C2_ROOT/parser/c2_tokenizer.c2	/^    t.line_start = input;$/;"	v
input_start	$C2_ROOT/bootstrap/bootstrap.c	/^   const char* input_start;$/;"	v
input_start	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    const char* input_start;$/;"	v
input_start	$C2_ROOT/compiler/c2recipe_parser.c2	/^    const char* input_start;$/;"	v
input_start	$C2_ROOT/parser/c2_tokenizer.c2	/^    const char* input_start;$/;"	v
ins	$C2_ROOT/bootstrap/bootstrap.c	/^   instr_inserter_InstrInsertion* ins;$/;"	v
ins	$C2_ROOT/ir/inserter.c2	/^    InstrInsertion* ins;$/;"	v
ins2	$C2_ROOT/bootstrap/bootstrap.c	/^   ii->ins = ins2;$/;"	v
ins2	$C2_ROOT/ir/inserter.c2	/^    ins.ins = ins2;$/;"	v
insert	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^fn void Tree.insert(Tree* t, u32 node_idx, const char* text, u32 len, u32* parent_idx, u32 value/;"	f
insertBlocks	$C2_ROOT/ir/inserter.c2	/^public fn void Inserter.insertBlocks(Inserter* ins, BlockList* list) {$/;"	f
insertImplicitCast	$C2_ROOT/parser/ast_builder.c2	/^public fn void Builder.insertImplicitCast(Builder* b,$/;"	f
insertSplitEdges	$C2_ROOT/ir/register_alloc.c2	/^fn void Tools.insertSplitEdges(Tools* t) {$/;"	f
insertWrite	$C2_ROOT/ir/slot_collector.c2	/^public fn void SlotCollector.insertWrite(SlotCollector* c, BlockId blk_id, u16 slot, Ref ref) {$/;"	f
insertWriteIfNone	$C2_ROOT/ir/slot_collector.c2	/^public fn void SlotCollector.insertWriteIfNone(SlotCollector* c, BlockId blk_id, u16 slot, Ref r/;"	f
insert_idx	$C2_ROOT/ir/inserter.c2	/^    ins.last_inserted_instr = insert_idx;$/;"	v
inserter	$C2_ROOT/bootstrap/bootstrap.c	/^   instr_inserter_InstrInserter inserter;$/;"	v
inserter	$C2_ROOT/ir/context.c2	/^    ir_inserter.Inserter inserter;$/;"	v
inserter	$C2_ROOT/ir/switch.c2	/^    Inserter* inserter = &t.inserter;$/;"	v
inst2	$C2_ROOT/ast/instance_table.c2	/^    f.instances = inst2;$/;"	v
inst2	$C2_ROOT/bootstrap/bootstrap.c	/^   f->instances = inst2;$/;"	v
instance	$C2_ROOT/analyser/module_analyser_call.c2	/^    return instance;$/;"	v
instance	$C2_ROOT/ast/instance_table.c2	/^    ti.instance = instance;$/;"	v
instance	$C2_ROOT/bootstrap/bootstrap.c	/^   ti->instance = instance;$/;"	v
instance_ast_idx	$C2_ROOT/ast/call_expr.c2	/^    return e.instance_ast_idx;$/;"	v
instance_ast_idx	$C2_ROOT/ast/function_decl.c2	/^    fd2.flags.instance_ast_idx = (u16)inst.instance_ast_idx;$/;"	v
instance_ast_idx	$C2_ROOT/ast/instantiator.c2	/^    u16 instance_ast_idx;$/;"	v
instance_ast_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint16_t instance_ast_idx;$/;"	v
instance_idx	$C2_ROOT/ast/function_decl.c2	/^    return d.instance_idx;$/;"	v
instance_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint16_t instance_idx;$/;"	v
instances	$C2_ROOT/ast/instance_table.c2	/^    TemplateInstance* instances;$/;"	v
instances	$C2_ROOT/ast/module.c2	/^    InstanceTable instances;$/;"	v
instances	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_TemplateInstance* instances;$/;"	v
instantiate	$C2_ROOT/ast/array_designated_init_expr.c2	/^fn Expr* ArrayDesignatedInitExpr.instantiate(ArrayDesignatedInitExpr* e, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/array_subscript_expr.c2	/^fn Expr* ArraySubscriptExpr.instantiate(ArraySubscriptExpr* e, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/asm_stmt.c2	/^fn Stmt* AsmStmt.instantiate(AsmStmt* s, Instantiator* inst) @(unused) {$/;"	f
instantiate	$C2_ROOT/ast/assert_stmt.c2	/^fn Stmt* AssertStmt.instantiate(AssertStmt* s, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/binary_operator.c2	/^fn Expr* BinaryOperator.instantiate(BinaryOperator* e, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/bitoffset_expr.c2	/^fn Expr* BitOffsetExpr.instantiate(BitOffsetExpr* e, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/builtin_expr.c2	/^fn Expr* BuiltinExpr.instantiate(BuiltinExpr* e, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/call_expr.c2	/^fn Expr* CallExpr.instantiate(CallExpr* e, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/compound_stmt.c2	/^fn CompoundStmt* CompoundStmt.instantiate(CompoundStmt* s, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/conditional_operator.c2	/^fn Expr* ConditionalOperator.instantiate(ConditionalOperator* e, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/decl_stmt.c2	/^fn Stmt* DeclStmt.instantiate(DeclStmt* s, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/explicit_cast_expr.c2	/^fn Expr* ExplicitCastExpr.instantiate(ExplicitCastExpr* e, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/expr.c2	/^fn Expr* Expr.instantiate(Expr* e, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/field_designated_init_expr.c2	/^fn Expr* FieldDesignatedInitExpr.instantiate(FieldDesignatedInitExpr* e, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/for_stmt.c2	/^fn Stmt* ForStmt.instantiate(ForStmt* s, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/function_decl.c2	/^public fn FunctionDecl* FunctionDecl.instantiate(const FunctionDecl* fd, Instantiator* inst)$/;"	f
instantiate	$C2_ROOT/ast/identifier_expr.c2	/^fn Expr* IdentifierExpr.instantiate(IdentifierExpr* e, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/if_stmt.c2	/^fn Stmt* IfStmt.instantiate(IfStmt* s, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/init_list_expr.c2	/^fn Expr* InitListExpr.instantiate(InitListExpr* e, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/label_stmt.c2	/^fn Stmt* LabelStmt.instantiate(LabelStmt* s, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/member_expr.c2	/^fn Expr* MemberExpr.instantiate(MemberExpr* e, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/paren_expr.c2	/^fn Expr* ParenExpr.instantiate(ParenExpr* e, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/range_expr.c2	/^fn Expr* RangeExpr.instantiate(RangeExpr* e, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/return_stmt.c2	/^fn Stmt* ReturnStmt.instantiate(ReturnStmt* s, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/stmt.c2	/^fn Stmt* Stmt.instantiate(Stmt* s, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/switch_case.c2	/^fn SwitchCase* SwitchCase.instantiate(SwitchCase* src, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/switch_stmt.c2	/^fn Stmt* SwitchStmt.instantiate(SwitchStmt* s, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/type_expr.c2	/^fn Expr* TypeExpr.instantiate(TypeExpr* e, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/type_ref.c2	/^fn void TypeRef.instantiate(TypeRef* r, const TypeRef* r1, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/unary_operator.c2	/^fn Expr* UnaryOperator.instantiate(UnaryOperator* e, Instantiator* inst) {$/;"	f
instantiate	$C2_ROOT/ast/var_decl.c2	/^fn VarDecl* VarDecl.instantiate(const VarDecl* vd, Instantiator* inst)$/;"	f
instantiate	$C2_ROOT/ast/while_stmt.c2	/^fn Stmt* WhileStmt.instantiate(WhileStmt* s, Instantiator* inst) {$/;"	f
instantiateTemplateFunction	$C2_ROOT/analyser/module_analyser_call.c2	/^fn FunctionDecl* Analyser.instantiateTemplateFunction(Analyser* ma, CallExpr* call, FunctionDecl/;"	f
instr	$C2_ROOT/bootstrap/bootstrap.c	/^   return b->instr;$/;"	v
instr	$C2_ROOT/ir/block.c2	/^    return b.instr;$/;"	v
instr	$C2_ROOT/ir/inserter.c2	/^    return &ins.ins[ins.last_inserted_instr].instr;$/;"	v
instrBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ir_InstrBits instrBits;$/;"	v
instrBits	$C2_ROOT/ir/instr.c2	/^        InstrBits instrBits;$/;"	v
instr_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t instr_idx;$/;"	v
instr_idx	$C2_ROOT/ir/copy_list.c2	/^    u32 instr_idx;$/;"	v
instr_idx	$C2_ROOT/ir/inserter.c2	/^    return instr_idx;$/;"	v
instr_idx	$C2_ROOT/ir/register_alloc.c2	/^                    cur.instr.start = instr_idx;$/;"	v
instr_inserter_InstrInserter	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct instr_inserter_InstrInserter_ instr_inserter_InstrInserter;$/;"	v
instr_inserter_InstrInsertion	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct instr_inserter_InstrInsertion_ instr_inserter_InstrInsertion;$/;"	v
instrs	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Instr* instrs;$/;"	v
instrs	$C2_ROOT/ir/instr_list.c2	/^    Instr* instrs;$/;"	v
instrs2	$C2_ROOT/bootstrap/bootstrap.c	/^      l->instrs = instrs2;$/;"	v
instrs2	$C2_ROOT/ir/instr_list.c2	/^    l.instrs = instrs2;$/;"	v
instructions	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrList instructions;$/;"	v
instructions	$C2_ROOT/ir/function_info.c2	/^    InstrList instructions;$/;"	v
int16_t	$C2_ROOT/bootstrap/bootstrap.c	/^typedef signed short int16_t;$/;"	v
int16_t	$C2_ROOT/generator/c/c_generator.c2	/^    typedef signed short int16_t;$/;"	v
int16_t	$C2_ROOT/generator/c/c_generator_special.c2	/^    typedef signed short int int16_t;$/;"	v
int32_t	$C2_ROOT/bootstrap/bootstrap.c	/^typedef signed int int32_t;$/;"	v
int32_t	$C2_ROOT/generator/c/c_generator.c2	/^    typedef signed int int32_t;$/;"	v
int32_t	$C2_ROOT/generator/c/c_generator_special.c2	/^    typedef signed int int32_t;$/;"	v
int64_t	$C2_ROOT/bootstrap/bootstrap.c	/^typedef signed long int64_t;$/;"	v
int64_t	$C2_ROOT/generator/c/c_generator.c2	/^                typedef signed long long int64_t;$/;"	v
int64_t	$C2_ROOT/generator/c/c_generator_special.c2	/^    typedef signed long int64_t;$/;"	v
int8_t	$C2_ROOT/bootstrap/bootstrap.c	/^typedef signed char int8_t;$/;"	v
int8_t	$C2_ROOT/generator/c/c_generator.c2	/^    typedef signed char int8_t;$/;"	v
int8_t	$C2_ROOT/generator/c/c_generator_special.c2	/^    typedef signed char int8_t;$/;"	v
intWidth	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t intWidth;$/;"	v
int_ms	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    u32              int_ms;$/;"	v
int_value	$C2_ROOT/bootstrap/bootstrap.c	/^      uint64_t int_value;$/;"	v
int_value	$C2_ROOT/parser/c2_parser.c2	/^                a.value.number = (u32)p.tok.int_value;$/;"	v
integerLiteralBits	$C2_ROOT/ast/stmt.c2	/^        IntegerLiteralBits integerLiteralBits;$/;"	v
integerLiteralBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_IntegerLiteralBits integerLiteralBits;$/;"	v
interference_graph_Arena	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct interference_graph_Arena_ interference_graph_Arena;$/;"	v
interference_graph_InterferenceGraph	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct interference_graph_InterferenceGraph_ interference_graph_InterferenceGraph;$/;"	v
interference_graph_Iter	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct interference_graph_Iter_ interference_graph_Iter;$/;"	v
interference_graph_NULL	$C2_ROOT/bootstrap/bootstrap.c	/^   r->prev = interference_graph_NULL;$/;"	v
interference_graph_Variable	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct interference_graph_Variable_ interference_graph_Variable;$/;"	v
interferences	$C2_ROOT/bootstrap/bootstrap.c	/^   interference_graph_InterferenceGraph* interferences;$/;"	v
internal	$C2_ROOT/common/diagnostics.c2	/^fn void Diags.internal(Diags* diags,$/;"	f
internal_nodes	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^    u32 internal_nodes;$/;"	v
invalid	$C2_ROOT/bootstrap/bootstrap.c	/^         if ((p[1] != '\\n')) goto invalid;$/;"	v
invalid	$C2_ROOT/parser/c2_tokenizer.c2	/^            if (p[1] != '\\n') goto invalid;$/;"	v
invalid_char	$C2_ROOT/bootstrap/bootstrap.c	/^         if (!c2_tokenizer_Tokenizer_at_bol(t)) goto invalid_char;$/;"	v
invalid_char	$C2_ROOT/parser/c2_tokenizer.c2	/^            goto invalid_char;$/;"	v
invalid_type	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^    if (t.isVoid()) goto invalid_type;$/;"	v
invalid_type	$C2_ROOT/bootstrap/bootstrap.c	/^   if (ast_QualType_isVoid(&t)) goto invalid_type;$/;"	v
io_uring	$C2_ROOT/libs/io_uring/io_uring.c2i	/^module io_uring;$/;"	v
io_uring_sq_ready	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn u32 io_uring_sq_ready(const Ring* ring)$/;"	f
ioctl	$C2_ROOT/libs/libc/sys_ioctl.c2i	/^fn c_int ioctl(c_int __fd, c_ulong __request, ...);$/;"	f
iosGetWindow	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* iosGetWindow() @(cname="sapp_ios_get_window");$/;"	f
ios_keyboard_resizes_canvas	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool ios_keyboard_resizes_canvas;$/;"	v
ir	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^import ir;$/;"	v
ir	$C2_ROOT/generator/ir/ref_list.c2	/^import ir;$/;"	v
ir	$C2_ROOT/ir/block.c2	/^module ir;$/;"	v
ir	$C2_ROOT/ir/block_list.c2	/^module ir;$/;"	v
ir	$C2_ROOT/ir/case_list.c2	/^module ir;$/;"	v
ir	$C2_ROOT/ir/common.c2	/^module ir;$/;"	v
ir	$C2_ROOT/ir/function_info.c2	/^module ir;$/;"	v
ir	$C2_ROOT/ir/instr.c2	/^module ir;$/;"	v
ir	$C2_ROOT/ir/instr_kind.c2	/^module ir;$/;"	v
ir	$C2_ROOT/ir/instr_list.c2	/^module ir;$/;"	v
ir	$C2_ROOT/ir/phi_list.c2	/^module ir;$/;"	v
ir	$C2_ROOT/ir/ref.c2	/^module ir;$/;"	v
ir	$C2_ROOT/ir/slot_writes_map.c2	/^import ir;$/;"	v
ir	$C2_ROOT/ir/types.c2	/^module ir;$/;"	v
ir	$C2_ROOT/ir/work_queue.c2	/^import ir;$/;"	v
ir_Block	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_Block_ ir_Block;$/;"	v
ir_BlockId	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint32_t ir_BlockId;$/;"	v
ir_BlockIndex	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_BlockIndex_ ir_BlockIndex;$/;"	v
ir_BlockKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ir_BlockKind;$/;"	v
ir_BlockKind_AndTrue	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_AndTrue,$/;"	v
ir_BlockKind_CondFalse	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_CondFalse,$/;"	v
ir_BlockKind_CondJoin	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_CondJoin,$/;"	v
ir_BlockKind_CondTrue	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_CondTrue,$/;"	v
ir_BlockKind_FnStart	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_FnStart,$/;"	v
ir_BlockKind_ForBody	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_ForBody,$/;"	v
ir_BlockKind_ForCond	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_ForCond,$/;"	v
ir_BlockKind_ForCont	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_ForCont,$/;"	v
ir_BlockKind_ForJoin	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_ForJoin,$/;"	v
ir_BlockKind_IfFalse	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_IfFalse,$/;"	v
ir_BlockKind_IfJoin	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_IfJoin,$/;"	v
ir_BlockKind_IfTrue	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_IfTrue,$/;"	v
ir_BlockKind_Label	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_Label,$/;"	v
ir_BlockKind_LogicJoin	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_LogicJoin,$/;"	v
ir_BlockKind_OrFalse	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_OrFalse,$/;"	v
ir_BlockKind_SwitchCase	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_SwitchCase,$/;"	v
ir_BlockKind_SwitchCond	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_SwitchCond,$/;"	v
ir_BlockKind_SwitchDefault	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_SwitchDefault,$/;"	v
ir_BlockKind_SwitchJoin	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_SwitchJoin,$/;"	v
ir_BlockKind_Unspecified	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_Unspecified,$/;"	v
ir_BlockKind_WhileBody	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_WhileBody,$/;"	v
ir_BlockKind_WhileCond	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_WhileCond,$/;"	v
ir_BlockKind_WhileJoin	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockKind_WhileJoin,$/;"	v
ir_BlockList	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_BlockList_ ir_BlockList;$/;"	v
ir_Builder	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_Builder_ ir_Builder;$/;"	v
ir_Case	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_Case_ ir_Case;$/;"	v
ir_CaseId	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint32_t ir_CaseId;$/;"	v
ir_CaseList	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_CaseList_ ir_CaseList;$/;"	v
ir_Constant	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_Constant_ ir_Constant;$/;"	v
ir_ConstantList	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_ConstantList_ ir_ConstantList;$/;"	v
ir_Context	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_Context_ ir_Context;$/;"	v
ir_CopyInfo	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_CopyInfo_ ir_CopyInfo;$/;"	v
ir_CopyList	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_CopyList_ ir_CopyList;$/;"	v
ir_FunctionInfo	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_FunctionInfo_ ir_FunctionInfo;$/;"	v
ir_Index	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_Index_ ir_Index;$/;"	v
ir_InitValue	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_InitValue_ ir_InitValue;$/;"	v
ir_InitValueKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ir_InitValueKind;$/;"	v
ir_InitValueKind_Byte	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InitValueKind_Byte,$/;"	v
ir_InitValueKind_Long	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InitValueKind_Long,$/;"	v
ir_InitValueKind_Long2	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InitValueKind_Long2,$/;"	v
ir_InitValueKind_None	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InitValueKind_None,$/;"	v
ir_InitValueKind_Short	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InitValueKind_Short,$/;"	v
ir_InitValueKind_Symbol	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InitValueKind_Symbol,$/;"	v
ir_InitValueKind_Text	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InitValueKind_Text,$/;"	v
ir_InitValueKind_Word	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InitValueKind_Word,$/;"	v
ir_InitValueKind_Word2	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InitValueKind_Word2,$/;"	v
ir_InitValueKind_Zero	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InitValueKind_Zero,$/;"	v
ir_InitValueList	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_InitValueList_ ir_InitValueList;$/;"	v
ir_Instr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_Instr_ ir_Instr;$/;"	v
ir_InstrBits	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_InstrBits_ ir_InstrBits;$/;"	v
ir_InstrKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ir_InstrKind;$/;"	v
ir_InstrKind_Add	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Add,$/;"	v
ir_InstrKind_Alloc1	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Alloc1,$/;"	v
ir_InstrKind_Alloc2	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Alloc2,$/;"	v
ir_InstrKind_Alloc4	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Alloc4,$/;"	v
ir_InstrKind_Alloc8	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Alloc8,$/;"	v
ir_InstrKind_And	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_And,$/;"	v
ir_InstrKind_Call	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Call,$/;"	v
ir_InstrKind_CmpEq	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_CmpEq,$/;"	v
ir_InstrKind_CmpGe	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_CmpGe,$/;"	v
ir_InstrKind_CmpGt	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_CmpGt,$/;"	v
ir_InstrKind_CmpLe	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_CmpLe,$/;"	v
ir_InstrKind_CmpLt	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_CmpLt,$/;"	v
ir_InstrKind_CmpNe	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_CmpNe,$/;"	v
ir_InstrKind_Comment	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Comment,$/;"	v
ir_InstrKind_Copy	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Copy,$/;"	v
ir_InstrKind_Div	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Div,$/;"	v
ir_InstrKind_Halt	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Halt,$/;"	v
ir_InstrKind_IDiv	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_IDiv,$/;"	v
ir_InstrKind_Jmp	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Jmp,$/;"	v
ir_InstrKind_JmpIf	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_JmpIf,$/;"	v
ir_InstrKind_Load1	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Load1,$/;"	v
ir_InstrKind_Load2	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Load2,$/;"	v
ir_InstrKind_Load4	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Load4,$/;"	v
ir_InstrKind_Load8	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Load8,$/;"	v
ir_InstrKind_Mul	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Mul,$/;"	v
ir_InstrKind_None	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_None,$/;"	v
ir_InstrKind_Or	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Or,$/;"	v
ir_InstrKind_Param	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Param,$/;"	v
ir_InstrKind_Phi	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Phi,$/;"	v
ir_InstrKind_Rem	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Rem,$/;"	v
ir_InstrKind_Ret	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Ret,$/;"	v
ir_InstrKind_Shl	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Shl,$/;"	v
ir_InstrKind_Shr	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Shr,$/;"	v
ir_InstrKind_Store1	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Store1,$/;"	v
ir_InstrKind_Store2	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Store2,$/;"	v
ir_InstrKind_Store4	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Store4,$/;"	v
ir_InstrKind_Store8	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Store8,$/;"	v
ir_InstrKind_Sub	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Sub,$/;"	v
ir_InstrKind_Switch	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Switch,$/;"	v
ir_InstrKind_Xor	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrKind_Xor,$/;"	v
ir_InstrList	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_InstrList_ ir_InstrList;$/;"	v
ir_LiveIndex	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_LiveIndex_ ir_LiveIndex;$/;"	v
ir_LiveVector	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_LiveVector_ ir_LiveVector;$/;"	v
ir_PhiCache	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_PhiCache_ ir_PhiCache;$/;"	v
ir_PhiClause	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_PhiClause_ ir_PhiClause;$/;"	v
ir_PhiList	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_PhiList_ ir_PhiList;$/;"	v
ir_PrintHelper	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_PrintHelper_ ir_PrintHelper;$/;"	v
ir_ReadSlotAccess	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_ReadSlotAccess_ ir_ReadSlotAccess;$/;"	v
ir_Ref	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_Ref_ ir_Ref;$/;"	v
ir_RefKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ir_RefKind;$/;"	v
ir_RefKind_Double	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_RefKind_Double,$/;"	v
ir_RefKind_Float	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_RefKind_Float,$/;"	v
ir_RefKind_Integer	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_RefKind_Integer,$/;"	v
ir_RefKind_JmpDest	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_RefKind_JmpDest,$/;"	v
ir_RefKind_None	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_RefKind_None,$/;"	v
ir_RefKind_RefList	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_RefKind_RefList,$/;"	v
ir_RefKind_Register	$C2_ROOT/bootstrap/bootstrap.c	/^   r->kind = ir_RefKind_Register;$/;"	v
ir_RefKind_Slot	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_RefKind_Slot,$/;"	v
ir_RefKind_Symbol	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_RefKind_Symbol,$/;"	v
ir_RefKind_Temp	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_RefKind_Temp,$/;"	v
ir_RefKind_Text	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_RefKind_Text,$/;"	v
ir_RefKind_Value	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_RefKind_Value,$/;"	v
ir_RefList	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_RefList_ ir_RefList;$/;"	v
ir_RevIndex	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_RevIndex_ ir_RevIndex;$/;"	v
ir_RevList	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_RevList_ ir_RevList;$/;"	v
ir_SlotCollector	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_SlotCollector_ ir_SlotCollector;$/;"	v
ir_StaticSlot	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_StaticSlot_ ir_StaticSlot;$/;"	v
ir_Symbol	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_Symbol_ ir_Symbol;$/;"	v
ir_SymbolId	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint32_t ir_SymbolId;$/;"	v
ir_SymbolList	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_SymbolList_ ir_SymbolList;$/;"	v
ir_Tools	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_Tools_ ir_Tools;$/;"	v
ir_Type	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t ir_Type;$/;"	v
ir_Type_F32	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Type_F32,$/;"	v
ir_Type_F64	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Type_F64,$/;"	v
ir_Type_I16	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Type_I16,$/;"	v
ir_Type_I32	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Type_I32,$/;"	v
ir_Type_I64	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Type_I64,$/;"	v
ir_Type_I8	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Type_I8,$/;"	v
ir_Type_None	$C2_ROOT/bootstrap/bootstrap.c	/^   return ir_Type_None;$/;"	v
ir_Type_U16	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Type_U16,$/;"	v
ir_Type_U32	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Type_U32,$/;"	v
ir_Type_U64	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Type_U64,$/;"	v
ir_Type_U8	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Type_U8,$/;"	v
ir_WriteSlotAccess	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_WriteSlotAccess_ ir_WriteSlotAccess;$/;"	v
ir_context	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^import ir_context;$/;"	v
ir_context	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^import ir_context;$/;"	v
ir_context	$C2_ROOT/generator/ir/ir_generator_call.c2	/^import ir_context;$/;"	v
ir_context	$C2_ROOT/generator/ir/ir_generator_member.c2	/^import ir_context;$/;"	v
ir_context	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^import ir_context;$/;"	v
ir_context	$C2_ROOT/generator/ir/ir_generator_switch.c2	/^import ir_context;$/;"	v
ir_context	$C2_ROOT/ir/constant.c2	/^module ir_context;$/;"	v
ir_context	$C2_ROOT/ir/constant_list.c2	/^module ir_context;$/;"	v
ir_context	$C2_ROOT/ir/context.c2	/^module ir_context;$/;"	v
ir_context	$C2_ROOT/ir/graphviz.c2	/^module ir_context;$/;"	v
ir_context	$C2_ROOT/ir/init_value.c2	/^module ir_context;$/;"	v
ir_context	$C2_ROOT/ir/init_value_list.c2	/^module ir_context;$/;"	v
ir_context	$C2_ROOT/ir/print.c2	/^module ir_context;$/;"	v
ir_context	$C2_ROOT/ir/register_alloc.c2	/^module ir_context;$/;"	v
ir_context	$C2_ROOT/ir/ssa.c2	/^module ir_context;$/;"	v
ir_context	$C2_ROOT/ir/switch.c2	/^module ir_context;$/;"	v
ir_context	$C2_ROOT/ir/symbol_list.c2	/^module ir_context;$/;"	v
ir_context	$C2_ROOT/ir/work_queue.c2	/^module ir_context;$/;"	v
ir_copy_list	$C2_ROOT/ir/copy_list.c2	/^module ir_copy_list;$/;"	v
ir_dir	$C2_ROOT/generator/ir/ir_generator.c2	/^    char[file_utils.Max_path] ir_dir;$/;"	v
ir_gen_locals	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^module ir_gen_locals;$/;"	v
ir_gen_locals_Locals	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_gen_locals_Locals_ ir_gen_locals_Locals;$/;"	v
ir_gen_locals_StackVar	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_gen_locals_StackVar_ ir_gen_locals_StackVar;$/;"	v
ir_generator	$C2_ROOT/compiler/compiler.c2	/^import ir_generator;$/;"	v
ir_generator	$C2_ROOT/generator/ir/basic_struct_layouter.c2	/^module ir_generator;$/;"	v
ir_generator	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^module ir_generator;$/;"	v
ir_generator	$C2_ROOT/generator/ir/ir_generator.c2	/^module ir_generator;$/;"	v
ir_generator	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^module ir_generator;$/;"	v
ir_generator	$C2_ROOT/generator/ir/ir_generator_call.c2	/^module ir_generator;$/;"	v
ir_generator	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^module ir_generator;$/;"	v
ir_generator	$C2_ROOT/generator/ir/ir_generator_member.c2	/^module ir_generator;$/;"	v
ir_generator	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^module ir_generator;$/;"	v
ir_generator	$C2_ROOT/generator/ir/ir_generator_switch.c2	/^module ir_generator;$/;"	v
ir_generator_BasicStructLayouter	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_generator_BasicStructLayouter_ ir_generator_BasicStructLayouter;$/;"	v
ir_generator_FieldInit	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_generator_FieldInit_ ir_generator_FieldInit;$/;"	v
ir_generator_FieldStructLayouter	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_generator_FieldStructLayouter_ ir_generator_FieldStructLayouter;$/;"	v
ir_generator_Generator	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_generator_Generator_ ir_generator_Generator;$/;"	v
ir_generator_JumpScope	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ir_generator_JumpScope_ ir_generator_JumpScope;$/;"	v
ir_inserter	$C2_ROOT/ir/context.c2	/^import ir_inserter;$/;"	v
ir_inserter	$C2_ROOT/ir/inserter.c2	/^module ir_inserter;$/;"	v
ir_interference_graph	$C2_ROOT/ir/interference_graph.c2	/^module ir_interference_graph;$/;"	v
ir_live_map	$C2_ROOT/ir/live_map.c2	/^module ir_live_map;$/;"	v
ir_live_map	$C2_ROOT/ir/register_alloc.c2	/^import ir_live_map;$/;"	v
ir_lookup_table	$C2_ROOT/ir/context.c2	/^import ir_lookup_table;$/;"	v
ir_lookup_table	$C2_ROOT/ir/lookup_table.c2	/^module ir_lookup_table;$/;"	v
ir_rev_list	$C2_ROOT/ir/rev_list.c2	/^module ir_rev_list;$/;"	v
ir_rpo	$C2_ROOT/ir/register_alloc.c2	/^import ir_rpo;$/;"	v
ir_rpo	$C2_ROOT/ir/rpo.c2	/^module ir_rpo;$/;"	v
ir_slot_collector	$C2_ROOT/ir/slot_collector.c2	/^module ir_slot_collector;$/;"	v
ir_slot_values	$C2_ROOT/ir/slot_values.c2	/^module ir_slot_values;$/;"	v
ir_slot_writes_map	$C2_ROOT/ir/slot_writes_map.c2	/^module ir_slot_writes_map;$/;"	v
ir_type	$C2_ROOT/bootstrap/bootstrap.c	/^   var->ir_type = ir_type;$/;"	v
ir_type	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^    var.ir_type = ir_type;$/;"	v
irq	$C2_ROOT/libs/libc/net_if.c2i	/^    c_uchar irq;$/;"	v
is	$C2_ROOT/analyser/module_analyser_expr.c2	/^        ma.error(ref.getLoc(), "used type '%s' where arithmetic or pointer type is required", de/;"	t
is	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn bool Parser.is(const Parser* p, Kind kind) {$/;"	f
is	$C2_ROOT/parser/c2_parser_expr.c2	/^   set if an array type is parsed.$/;"	t
isAddrOf	$C2_ROOT/ast/unary_operator.c2	/^public fn bool UnaryOperator.isAddrOf(const UnaryOperator* e) {$/;"	f
isAddrUsed	$C2_ROOT/ast/var_decl.c2	/^public fn bool VarDecl.isAddrUsed(const VarDecl* d) {$/;"	f
isAddressOfOperand	$C2_ROOT/parser/c2_parser_expr.c2	/^            isAddressOfOperand = false;$/;"	v
isArithmetic	$C2_ROOT/ir/instr.c2	/^fn bool Instr.isArithmetic(const Instr* i) {$/;"	f
isArray	$C2_ROOT/ast/init_list_expr.c2	/^public fn bool InitListExpr.isArray(const InitListExpr* e) {$/;"	f
isArray	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isArray(const QualType* qt) {$/;"	f
isArray	$C2_ROOT/ast/type_ref.c2	/^public fn bool TypeRefHolder.isArray(const TypeRefHolder* h) {$/;"	f
isArrayDesignatedInit	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isArrayDesignatedInit(const Expr* e) {$/;"	f
isArrayToPointerDecay	$C2_ROOT/ast/implicit_cast_expr.c2	/^public fn bool ImplicitCastExpr.isArrayToPointerDecay(const ImplicitCastExpr* e) {$/;"	f
isArrayType	$C2_ROOT/ast/type.c2	/^public fn bool Type.isArrayType(const Type* t) {$/;"	f
isAssignment	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isAssignment(const Expr* e) {$/;"	f
isAvailableDynamic	$C2_ROOT/common/component.c2	/^public fn bool Component.isAvailableDynamic(const Component* c) { return c.available_dynamic; }$/;"	f
isAvailableStatic	$C2_ROOT/common/component.c2	/^public fn bool Component.isAvailableStatic(const Component* c) { return c.available_static; }$/;"	f
isBefore	$C2_ROOT/ast/unary_operator.c2	/^public fn bool UnaryOperator.isBefore(const UnaryOperator* e) {$/;"	f
isBinaryOperator	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isBinaryOperator(const Expr* e) {$/;"	f
isBitField	$C2_ROOT/ast/var_decl.c2	/^fn bool VarDecl.isBitField(const VarDecl* d) {$/;"	f
isBitOffset	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isBitOffset(const Expr* e) {$/;"	f
isBitfield	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.isBitfield(const Decl* d) {$/;"	f
isBitfield	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isBitfield(const Expr* e) {$/;"	f
isBitfield	$C2_ROOT/ast/member_expr.c2	/^fn bool MemberExpr.isBitfield(const MemberExpr* e) {$/;"	f
isBlockTerminated	$C2_ROOT/ir/context.c2	/^public fn bool Context.isBlockTerminated(const Context* c) {$/;"	f
isBool	$C2_ROOT/ast/builtin_type.c2	/^public fn bool BuiltinType.isBool(const BuiltinType* b) {$/;"	f
isBool	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isBool(const QualType* qt) {$/;"	f
isBuiltin	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isBuiltin(const QualType* qt) {$/;"	f
isBuiltin	$C2_ROOT/ast/type_ref.c2	/^fn bool TypeRef.isBuiltin(const TypeRef* r) {$/;"	f
isBuiltinType	$C2_ROOT/ast/type.c2	/^fn bool Type.isBuiltinType(const Type* t) {$/;"	f
isBuiltinType	$C2_ROOT/parser/token.c2	/^public fn bool Kind.isBuiltinType(Kind kind) {$/;"	f
isCall	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isCall(const Expr* e) {$/;"	f
isChar	$C2_ROOT/ast/builtin_type.c2	/^fn bool BuiltinType.isChar(const BuiltinType* b) {$/;"	f
isChar	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isChar(const QualType* qt) {$/;"	f
isCharPointer	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isCharPointer(const QualType* qt) {$/;"	f
isCheckInProgress	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.isCheckInProgress(const Decl* d) { return d.declBits.check_state == DeclChec/;"	f
isChecked	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.isChecked(const Decl* d) { return d.declBits.check_state == DeclCheckState.C/;"	f
isComment	$C2_ROOT/ir/instr.c2	/^public fn bool Instr.isComment(const Instr* i) {$/;"	f
isComparison	$C2_ROOT/ast/binary_operator.c2	/^public fn bool BinaryOpcode.isComparison(BinaryOpcode opcode) {$/;"	f
isCompound	$C2_ROOT/ast/stmt.c2	/^public fn bool Stmt.isCompound(const Stmt* s) {$/;"	f
isConst	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isConst(QualType* qt) {$/;"	f
isConst	$C2_ROOT/ast/type_ref.c2	/^public fn bool TypeRef.isConst(const TypeRef* r) {$/;"	f
isConstBase	$C2_ROOT/ast/member_expr.c2	/^fn bool MemberExpr.isConstBase(const MemberExpr* e) {$/;"	f
isConstCharPtr	$C2_ROOT/ast/type_ref.c2	/^public fn bool TypeRef.isConstCharPtr(const TypeRef* r) {$/;"	f
isConstPtr	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isConstPtr(QualType* qt) {$/;"	f
isConstant	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isConstant(const QualType* qt) {$/;"	f
isConstant	$C2_ROOT/ir/ref.c2	/^public fn bool Ref.isConstant(const Ref* r) @(unused) {$/;"	f
isCopy	$C2_ROOT/ir/instr.c2	/^public fn bool Instr.isCopy(const Instr* i) {$/;"	f
isCtc	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isCtc(const Expr* e) { return e.base.exprBits.is_ctc; }$/;"	f
isCtv	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isCtv(const Expr* e) { return e.base.exprBits.is_ctv; }$/;"	f
isDecimal	$C2_ROOT/ast/integer_literal.c2	/^public fn bool IntegerLiteral.isDecimal(const IntegerLiteral* e) {$/;"	f
isDecimal	$C2_ROOT/ast/value.c2	/^public fn bool Value.isDecimal(const Value* v) {$/;"	f
isDecl	$C2_ROOT/ast/stmt.c2	/^public fn bool Stmt.isDecl(const Stmt* s) {$/;"	f
isDeclaration	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn bool Parser.isDeclaration(Parser* p) {$/;"	f
isDefault	$C2_ROOT/ast/switch_case.c2	/^public fn bool SwitchCase.isDefault(const SwitchCase* s) { return s.bits.is_default; }$/;"	f
isDirect	$C2_ROOT/ast/module.c2	/^public fn bool Module.isDirect(const Module* m) { return m.is_direct; }$/;"	f
isEmbedType	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isEmbedType(const QualType* qt, bool* is_char) {$/;"	f
isEmpty	$C2_ROOT/common/file/reader.c2	/^public fn bool File.isEmpty(const File* file) @(unused) {$/;"	f
isEmpty	$C2_ROOT/common/linked_list.c2	/^public fn bool Element.isEmpty(const Element* src) @(unused) {$/;"	f
isEntryPoint	$C2_ROOT/generator/generator_utils.c2	/^fn bool isEntryPoint(Decl* d) {$/;"	f
isEnum	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.isEnum(const Decl* d) {$/;"	f
isEnum	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isEnum(const QualType* qt) {$/;"	f
isEnumConstant	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.isEnumConstant(const Decl* d) {$/;"	f
isEnumType	$C2_ROOT/ast/type.c2	/^fn bool Type.isEnumType(const Type* t) {$/;"	f
isError	$C2_ROOT/ast/value.c2	/^fn bool Value.isError(const Value* v) {$/;"	f
isExported	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.isExported(const Decl* d) { return d.declBits.attr_export; }$/;"	f
isExported	$C2_ROOT/ast/module.c2	/^public fn bool Module.isExported(const Module* m) { return m.is_exported; }$/;"	f
isExpr	$C2_ROOT/ast/stmt.c2	/^public fn bool Stmt.isExpr(const Stmt* s) {$/;"	f
isExternal	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.isExternal(const Decl* d) { return d.declBits.is_external; }$/;"	f
isExternal	$C2_ROOT/ast/module.c2	/^public fn bool Module.isExternal(const Module* m) { return m.is_external; }$/;"	f
isExternal	$C2_ROOT/common/component.c2	/^public fn bool Component.isExternal(const Component* c) {$/;"	f
isExternal	$C2_ROOT/generator/ir/ir_generator.c2	/^fn bool Generator.isExternal(Generator* gen, const Decl* d) {$/;"	f
isFallthrough	$C2_ROOT/ast/stmt.c2	/^public fn bool Stmt.isFallthrough(const Stmt* s) {$/;"	f
isFieldDesignatedInit	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isFieldDesignatedInit(const Expr* e) {$/;"	f
isFloat	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isFloat(const QualType* qt) {$/;"	f
isFloat	$C2_ROOT/ast/value.c2	/^public fn bool Value.isFloat(const Value* v) {$/;"	f
isFloatingPoint	$C2_ROOT/ast/builtin_type.c2	/^public fn bool BuiltinType.isFloatingPoint(const BuiltinType* b) {$/;"	f
isForeign	$C2_ROOT/ast/module.c2	/^public fn bool Module.isForeign(const Module* m) { return m.is_foreign; }$/;"	f
isFullscreen	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn bool isFullscreen() @(cname="sapp_is_fullscreen");$/;"	f
isFunction	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.isFunction(const Decl* d) {$/;"	f
isFunction	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isFunction(const QualType* qt) {$/;"	f
isFunctionType	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.isFunctionType(const Decl* d) {$/;"	f
isFunctionType	$C2_ROOT/ast/type.c2	/^fn bool Type.isFunctionType(const Type* t) {$/;"	f
isGenerated	$C2_ROOT/ast/ast.c2	/^public fn bool AST.isGenerated(const AST* a) @(unused) {$/;"	f
isGenerated	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.isGenerated(const Decl* d) { return d.declBits.is_generated; }$/;"	f
isGlobal	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.isGlobal(const Decl* d) {$/;"	f
isGlobal	$C2_ROOT/ast/struct_type_decl.c2	/^public fn bool StructTypeDecl.isGlobal(const StructTypeDecl* d) {$/;"	f
isGlobal	$C2_ROOT/ast/var_decl.c2	/^public fn bool VarDecl.isGlobal(const VarDecl* d) {$/;"	f
isGlobal	$C2_ROOT/plugins/deps_generator_utils.c2	/^public fn bool isGlobal(const Decl* d) @(unused) {$/;"	f
isIdentifier	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isIdentifier(const Expr* e) {$/;"	f
isImplicitCast	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isImplicitCast(const Expr* e) {$/;"	f
isImport	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.isImport(const Decl* d) {$/;"	f
isIncrArray	$C2_ROOT/ast/type_ref.c2	/^public fn bool TypeRefHolder.isIncrArray(const TypeRefHolder* h) {$/;"	f
isIncremental	$C2_ROOT/ast/array_type.c2	/^public fn bool ArrayType.isIncremental(const ArrayType* t) {$/;"	f
isIncremental	$C2_ROOT/ast/enum_type_decl.c2	/^public fn bool EnumTypeDecl.isIncremental(const EnumTypeDecl* d) {$/;"	f
isInitList	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isInitList(const Expr* e) {$/;"	f
isInitlistAssignment	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isInitlistAssignment(const Expr* e) {$/;"	f
isInline	$C2_ROOT/ast/function_decl.c2	/^public fn bool FunctionDecl.isInline(const FunctionDecl* d) {$/;"	f
isInt32	$C2_ROOT/ast/builtin_type.c2	/^public fn bool BuiltinType.isInt32(const BuiltinType* b) {$/;"	f
isInt8	$C2_ROOT/ast/builtin_type.c2	/^fn bool BuiltinType.isInt8(const BuiltinType* b) {$/;"	f
isInt8	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isInt8(const QualType* qt) {$/;"	f
isInteger	$C2_ROOT/ast/builtin_type.c2	/^public fn bool BuiltinType.isInteger(const BuiltinType* b) {$/;"	f
isInteger	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isInteger(const QualType* qt) {$/;"	f
isIntegerOrBool	$C2_ROOT/ast/builtin_type.c2	/^public fn bool BuiltinType.isIntegerOrBool(const BuiltinType* b) {$/;"	f
isInterface	$C2_ROOT/ast/ast.c2	/^public fn bool AST.isInterface(const AST* a) @(unused) {$/;"	f
isInternal	$C2_ROOT/ast/module.c2	/^public fn bool Module.isInternal(const Module* m) { return m.is_internal; }$/;"	f
isInternal	$C2_ROOT/common/component.c2	/^public fn bool Component.isInternal(const Component* c) @(unused) {$/;"	f
isInvalid	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isInvalid(const QualType* qt) { return qt.ptr == 0; }$/;"	f
isKeyword	$C2_ROOT/parser/token.c2	/^public fn bool Kind.isKeyword(Kind kind) {$/;"	f
isLValue	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isLValue(const Expr* e) {$/;"	f
isLabel	$C2_ROOT/ast/stmt.c2	/^public fn bool Stmt.isLabel(const Stmt* s) {$/;"	f
isLibrary	$C2_ROOT/common/component.c2	/^public fn bool Component.isLibrary(const Component* c) {$/;"	f
isLoaded	$C2_ROOT/ast/module.c2	/^public fn bool Module.isLoaded(const Module* m) { return m.is_loaded; }$/;"	f
isLocal	$C2_ROOT/ast/import_decl.c2	/^public fn bool ImportDecl.isLocal(const ImportDecl* d) { return d.base.importDeclBits.is_local; /;"	f
isLocal	$C2_ROOT/ast/var_decl.c2	/^public fn bool VarDecl.isLocal(const VarDecl* d) {$/;"	f
isMap	$C2_ROOT/common/yaml/yaml_iterator.c2	/^public fn bool Node.isMap(const Node* n) @(unused) { return n.kind == NodeKind.Map; }$/;"	f
isMember	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isMember(const Expr* e) {$/;"	f
isMemberType	$C2_ROOT/ast/function_decl.c2	/^public fn bool FunctionDecl.isMemberType(const FunctionDecl* d) {$/;"	f
isNValue	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isNValue(const Expr* e) {$/;"	f
isNegative	$C2_ROOT/ast/value.c2	/^public fn bool Value.isNegative(const Value* v) {$/;"	f
isNil	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isNil(const Expr* e) {$/;"	f
isNoReturn	$C2_ROOT/analyser/module_analyser_stmt.c2	/^fn bool Analyser.isNoReturn(Analyser* ma, Expr* e) {$/;"	f
isNone	$C2_ROOT/ir/instr.c2	/^public fn bool Instr.isNone(const Instr* i) {$/;"	f
isNone	$C2_ROOT/ir/ref.c2	/^public fn bool Ref.isNone(const Ref* r) {$/;"	f
isNoreturn	$C2_ROOT/ast/call_expr.c2	/^public fn bool CallExpr.isNoreturn(const CallExpr* e) {$/;"	f
isOk	$C2_ROOT/common/diagnostics.c2	/^public fn bool Diags.isOk(const Diags* diags) { return diags.num_errors == 0; }$/;"	f
isOpaque	$C2_ROOT/ast/struct_type_decl.c2	/^public fn bool StructTypeDecl.isOpaque(const StructTypeDecl* d) {$/;"	f
isOpen	$C2_ROOT/common/file/reader.c2	/^public fn bool File.isOpen(const File* file) @(unused) {$/;"	f
isPacked	$C2_ROOT/ast/struct_type_decl.c2	/^public fn bool StructTypeDecl.isPacked(const StructTypeDecl* d) {$/;"	f
isParameter	$C2_ROOT/ast/var_decl.c2	/^public fn bool VarDecl.isParameter(const VarDecl* d) {$/;"	f
isParen	$C2_ROOT/ast/expr.c2	/^fn bool Expr.isParen(const Expr* e) {$/;"	f
isPhi	$C2_ROOT/ir/instr.c2	/^public fn bool Instr.isPhi(const Instr* i) {$/;"	f
isPointer	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isPointer(const QualType* qt) {$/;"	f
isPointer	$C2_ROOT/ast/type_ref.c2	/^public fn bool TypeRefHolder.isPointer(const TypeRefHolder* h) {$/;"	f
isPointerOrFunction	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isPointerOrFunction(const QualType* qt) @(unused) {$/;"	f
isPointerTo	$C2_ROOT/ast/type_ref.c2	/^public fn bool TypeRef.isPointerTo(const TypeRef* r, u32 ptr_idx) {$/;"	f
isPointerType	$C2_ROOT/ast/type.c2	/^public fn bool Type.isPointerType(const Type* t) {$/;"	f
isPowerOf2	$C2_ROOT/ast_utils/attr.c2	/^fn bool isPowerOf2(u32 val) {$/;"	f
isPrintfCall	$C2_ROOT/ast/call_expr.c2	/^fn bool CallExpr.isPrintfCall(const CallExpr* e) {$/;"	f
isPromotableIntegerType	$C2_ROOT/ast/builtin_type.c2	/^public fn bool BuiltinType.isPromotableIntegerType(const BuiltinType* b) {$/;"	f
isPseudo	$C2_ROOT/ir/instr.c2	/^public fn bool Instr.isPseudo(const Instr* i) {$/;"	f
isPublic	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.isPublic(const Decl* d) { return d.declBits.is_public; }$/;"	f
isQualifier	$C2_ROOT/parser/token.c2	/^public fn bool Kind.isQualifier(Kind kind) {$/;"	f
isRValue	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isRValue(const Expr* e) {$/;"	f
isRange	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isRange(const Expr* e) {$/;"	f
isRegister	$C2_ROOT/ir/ref.c2	/^public fn bool Ref.isRegister(const Ref* r) {$/;"	f
isReturn	$C2_ROOT/ir/instr.c2	/^public fn bool Instr.isReturn(const Instr* i) {$/;"	f
isScalar	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isScalar(const QualType* qt) {$/;"	f
isScalar	$C2_ROOT/common/yaml/yaml_iterator.c2	/^fn bool Node.isScalar(const Node* n) @(unused) { return n.kind == NodeKind.Scalar; }$/;"	f
isScreenKeyboardShown	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn bool isScreenKeyboardShown(Window* window) @(cname="SDL_IsScreenKeyboardShown");$/;"	f
isSequence	$C2_ROOT/common/yaml/yaml_iterator.c2	/^public fn bool Node.isSequence(const Node* n) @(unused) { return n.kind == NodeKind.Sequence; }$/;"	f
isSigned	$C2_ROOT/ast/builtin_type.c2	/^public fn bool BuiltinType.isSigned(const BuiltinType* b) {$/;"	f
isSlot	$C2_ROOT/ir/ref.c2	/^public fn bool Ref.isSlot(const Ref* r) {$/;"	f
isStaticLib	$C2_ROOT/common/component.c2	/^public fn bool Component.isStaticLib(const Component* c) {$/;"	f
isStaticTypeFunc	$C2_ROOT/ast/call_expr.c2	/^public fn bool CallExpr.isStaticTypeFunc(const CallExpr* e) {$/;"	f
isStaticTypeFunc	$C2_ROOT/ast/member_expr.c2	/^public fn bool MemberExpr.isStaticTypeFunc(const MemberExpr* e) {$/;"	f
isString	$C2_ROOT/ast/switch_stmt.c2	/^public fn bool SwitchStmt.isString(const SwitchStmt* s) {$/;"	f
isStringLiteral	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isStringLiteral(const Expr* e) {$/;"	f
isStruct	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isStruct(const QualType* qt) {$/;"	f
isStruct	$C2_ROOT/ast/struct_type_decl.c2	/^public fn bool StructTypeDecl.isStruct(const StructTypeDecl* d) {$/;"	f
isStructMember	$C2_ROOT/ast/var_decl.c2	/^fn bool VarDecl.isStructMember(const VarDecl* d) {$/;"	f
isStructType	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.isStructType(const Decl* d) {$/;"	f
isStructType	$C2_ROOT/ast/type.c2	/^public fn bool Type.isStructType(const Type* t) {$/;"	f
isSwitch	$C2_ROOT/ir/instr.c2	/^public fn bool Instr.isSwitch(const Instr* i) {$/;"	f
isTemp	$C2_ROOT/ir/ref.c2	/^public fn bool Ref.isTemp(const Ref* r) {$/;"	f
isTemplate	$C2_ROOT/ast/function_decl.c2	/^public fn bool FunctionDecl.isTemplate(const FunctionDecl* d) {$/;"	f
isTemplateCall	$C2_ROOT/ast/call_expr.c2	/^public fn bool CallExpr.isTemplateCall(const CallExpr* e) {$/;"	f
isTemplateFunctionCall	$C2_ROOT/parser/c2_parser_expr.c2	/^fn bool Parser.isTemplateFunctionCall(Parser* p) {$/;"	f
isTextInputActive	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn bool isTextInputActive() @(cname="SDL_IsTextInputActive");$/;"	f
isTextInputShown	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn bool isTextInputShown() @(cname="SDL_IsTextInputShown");$/;"	f
isTilde	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isTilde(const Expr* e) {$/;"	f
isType	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isType(const Expr* e) {$/;"	f
isType	$C2_ROOT/ast/function_decl.c2	/^public fn bool FunctionDecl.isType(const FunctionDecl* d) {$/;"	f
isTypeDecl	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.isTypeDecl(const Decl* d) {$/;"	f
isTypeFunc	$C2_ROOT/ast/call_expr.c2	/^public fn bool CallExpr.isTypeFunc(const CallExpr* e) {$/;"	f
isTypeFunc	$C2_ROOT/ast/member_expr.c2	/^public fn bool MemberExpr.isTypeFunc(const MemberExpr* e) {$/;"	f
isTypeFuncCall	$C2_ROOT/analyser/module_analyser_call.c2	/^    u32 expected_args = func_num_args - num_auto_args - isTypeFuncCall;$/;"	v
isTypeFuncCall	$C2_ROOT/bootstrap/bootstrap.c	/^            isTypeFuncCall = true;$/;"	v
isTypeSpec	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn bool Parser.isTypeSpec(Parser* p) {$/;"	f
isU32	$C2_ROOT/ast/type_ref.c2	/^public fn bool TypeRef.isU32(const TypeRef* r) {$/;"	f
isUInt8	$C2_ROOT/ast/builtin_type.c2	/^fn bool BuiltinType.isUInt8(const BuiltinType* b) {$/;"	f
isUInt8	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isUInt8(const QualType* qt) {$/;"	f
isUnaryOp	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.isUnaryOp(const Expr* e) {$/;"	f
isUnion	$C2_ROOT/ast/struct_type_decl.c2	/^public fn bool StructTypeDecl.isUnion(const StructTypeDecl* d) {$/;"	f
isUnreachable	$C2_ROOT/analyser/scope.c2	/^public fn bool Scope.isUnreachable(const Scope* s) {$/;"	f
isUnsigned	$C2_ROOT/ast/builtin_type.c2	/^public fn bool BuiltinType.isUnsigned(const BuiltinType* b) {$/;"	f
isUnsigned	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isUnsigned(const QualType* qt) {$/;"	f
isUsed	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.isUsed(const Decl* d) { return d.declBits.is_used; }$/;"	f
isUsed	$C2_ROOT/ast/label_stmt.c2	/^public fn bool LabelStmt.isUsed(const LabelStmt* s) {$/;"	f
isUsed	$C2_ROOT/ast/module.c2	/^public fn bool Module.isUsed(const Module* m) { return m.is_used; }$/;"	f
isUsedPublic	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.isUsedPublic(const Decl* d) { return d.declBits.is_used_public; }$/;"	f
isUser	$C2_ROOT/ast/type_ref.c2	/^public fn bool TypeRef.isUser(const TypeRef* r) {$/;"	f
isValid	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isValid(const QualType* qt) { return qt.ptr != 0; }$/;"	f
isValid	$C2_ROOT/ir/ref.c2	/^public fn bool Ref.isValid(const Ref* r) {$/;"	f
isValue	$C2_ROOT/ir/ref.c2	/^public fn bool Ref.isValue(const Ref* r) {$/;"	f
isVarDecl	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.isVarDecl(const Decl* d) {$/;"	f
isVarKind	$C2_ROOT/ast/member_expr.c2	/^public fn bool MemberExpr.isVarKind(const MemberExpr* e) {$/;"	f
isVariable	$C2_ROOT/ast/decl.c2	/^public fn bool Decl.isVariable(const Decl* d) {$/;"	f
isVariadic	$C2_ROOT/ast/function_decl.c2	/^public fn bool FunctionDecl.isVariadic(const FunctionDecl* d) {$/;"	f
isVoid	$C2_ROOT/ast/builtin_type.c2	/^fn bool BuiltinType.isVoid(const BuiltinType* b) {$/;"	f
isVoid	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isVoid(const QualType* qt) {$/;"	f
isVoid	$C2_ROOT/ast/type_ref.c2	/^public fn bool TypeRef.isVoid(const TypeRef* r) {$/;"	f
isVoidType	$C2_ROOT/ast/type.c2	/^public fn bool Type.isVoidType(const Type* t) {$/;"	f
isVolatile	$C2_ROOT/ast/asm_stmt.c2	/^public fn bool AsmStmt.isVolatile(const AsmStmt* s) {$/;"	f
isVolatile	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.isVolatile(QualType* qt) {$/;"	f
isVolatile	$C2_ROOT/ast/type_ref.c2	/^public fn bool TypeRef.isVolatile(const TypeRef* r) {$/;"	f
isZero	$C2_ROOT/ast/value.c2	/^public fn bool Value.isZero(const Value* v) {$/;"	f
isZeroSizeBitfield	$C2_ROOT/ast/struct_type_decl.c2	/^public fn bool FieldInitField.isZeroSizeBitfield(const FieldInitField* f) {$/;"	f
is_active	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool is_active;$/;"	v
is_array	$C2_ROOT/ast/init_list_expr.c2	/^    return e.base.base.initListExprBits.is_array;$/;"	v
is_array	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->base.base.initListExprBits.is_array;$/;"	v
is_basic	$C2_ROOT/ast/asm_stmt.c2	/^    s.base.asmStmtBits.is_basic = is_basic;$/;"	v
is_basic	$C2_ROOT/bootstrap/bootstrap.c	/^   s->base.asmStmtBits.is_basic = is_basic;$/;"	v
is_binary	$C2_ROOT/parser/c2_tokenizer.c2	/^fn bool is_binary(char c) {$/;"	f
is_bitfield	$C2_ROOT/analyser/module_analyser_init.c2	/^            f.is_bitfield = ml.is_bitfield;$/;"	v
is_bitfield	$C2_ROOT/ast/member_expr.c2	/^    return e.base.base.memberExprBits.is_bitfield;$/;"	v
is_bitfield	$C2_ROOT/ast/var_decl.c2	/^    return d.base.varDeclBits.is_bitfield;$/;"	v
is_bitfield	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->base.base.memberExprBits.is_bitfield;$/;"	v
is_c_type	$C2_ROOT/generator/c/c_generator.c2	/^fn bool is_c_type(const char* s) {$/;"	f
is_const	$C2_ROOT/ast/type_ref.c2	/^    return r.flags.is_const;$/;"	v
is_const	$C2_ROOT/bootstrap/bootstrap.c	/^   return r->flags.is_const;$/;"	v
is_const	$C2_ROOT/common/source_mgr.c2	/^    f.is_const = is_const;$/;"	v
is_const_base	$C2_ROOT/ast/member_expr.c2	/^    return e.base.base.memberExprBits.is_const_base;$/;"	v
is_const_base	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->base.base.memberExprBits.is_const_base;$/;"	v
is_ctc	$C2_ROOT/ast/expr.c2	/^    e.base.exprBits.is_ctc = other.base.exprBits.is_ctc;$/;"	v
is_ctc	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->base.exprBits.is_ctc;$/;"	v
is_ctv	$C2_ROOT/ast/expr.c2	/^    e.base.exprBits.is_ctv = other.base.exprBits.is_ctv;$/;"	v
is_ctv	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->base.exprBits.is_ctv;$/;"	v
is_default	$C2_ROOT/ast/switch_case.c2	/^    s.bits.is_default = is_default;$/;"	v
is_default	$C2_ROOT/bootstrap/bootstrap.c	/^   s->bits.is_default = is_default;$/;"	v
is_dir	$C2_ROOT/common/file/file_utils.c2	/^public fn bool is_dir(const char* dirname) @(unused) {$/;"	f
is_direct	$C2_ROOT/ast/module.c2	/^    m.is_direct = is_direct;$/;"	v
is_direct	$C2_ROOT/bootstrap/bootstrap.c	/^   return m->is_direct;$/;"	v
is_direct	$C2_ROOT/common/component.c2	/^    c.is_direct = is_direct;$/;"	v
is_dynamic	$C2_ROOT/bootstrap/bootstrap.c	/^   c->available_dynamic = is_dynamic;$/;"	v
is_dynamic	$C2_ROOT/common/component.c2	/^    c.available_dynamic = is_dynamic;$/;"	v
is_else	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool is_else;$/;"	v
is_enabled	$C2_ROOT/parser/c2_tokenizer.c2	/^fn bool Tokenizer.is_enabled(const Tokenizer* t) {$/;"	f
is_equal	$C2_ROOT/ast/value.c2	/^public fn bool Value.is_equal(const Value* v1, const Value* v2) {$/;"	f
is_exported	$C2_ROOT/ast/module.c2	/^    bool is_exported;$/;"	v
is_exported	$C2_ROOT/bootstrap/bootstrap.c	/^   return m->is_exported;$/;"	v
is_external	$C2_ROOT/analyser/module_analyser_builtin.c2	/^                    is_external = false;$/;"	v
is_external	$C2_ROOT/analyser/module_analyser_type.c2	/^                is_external = false;$/;"	v
is_external	$C2_ROOT/ast/module.c2	/^    m.is_external = is_external;$/;"	v
is_external	$C2_ROOT/bootstrap/bootstrap.c	/^   s->is_external = is_external;$/;"	v
is_external	$C2_ROOT/ir/symbol_list.c2	/^    s.is_external = is_external;$/;"	v
is_file	$C2_ROOT/common/file/file_utils.c2	/^public fn bool is_file(const char* filename) @(unused) {$/;"	f
is_foreign	$C2_ROOT/bootstrap/bootstrap.c	/^   return m->is_foreign;$/;"	v
is_foreign	$C2_ROOT/common/component.c2	/^    return c.is_foreign;$/;"	v
is_function	$C2_ROOT/bootstrap/bootstrap.c	/^   s->is_function = is_function;$/;"	v
is_function	$C2_ROOT/ir/print.c2	/^        prev_is_var = !s.is_function;$/;"	v
is_function	$C2_ROOT/ir/symbol_list.c2	/^    s.is_function = is_function;$/;"	v
is_generated	$C2_ROOT/ast/ast.c2	/^    return a.is_generated;$/;"	v
is_generated	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->declBits.is_generated;$/;"	v
is_generated	$C2_ROOT/common/source_mgr.c2	/^    f.is_generated = is_generated;$/;"	v
is_global	$C2_ROOT/ast/struct_type_decl.c2	/^    return d.base.structTypeDeclBits.is_global;$/;"	v
is_global	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->base.structTypeDeclBits.is_global;$/;"	v
is_global	$C2_ROOT/compiler/plugin_mgr.c2	/^    p.is_global = is_global;$/;"	v
is_global	$C2_ROOT/parser/ast_builder.c2	/^                                              is_global,$/;"	v
is_greater	$C2_ROOT/ast/value.c2	/^fn bool Value.is_greater(const Value* v1, const Value* v2) {$/;"	f
is_greater_equal	$C2_ROOT/ast/value.c2	/^fn bool Value.is_greater_equal(const Value* v1, const Value* v2) {$/;"	f
is_image	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool is_image;$/;"	v
is_incr	$C2_ROOT/bootstrap/bootstrap.c	/^      is_incr = true;$/;"	v
is_incr	$C2_ROOT/parser/ast_builder.c2	/^                                          is_incr,$/;"	v
is_incr	$C2_ROOT/parser/c2_parser_type.c2	/^        is_incr = true;$/;"	v
is_incremental	$C2_ROOT/ast/array_type.c2	/^    return t.base.arrayTypeBits.is_incremental;$/;"	v
is_incremental	$C2_ROOT/ast/enum_type_decl.c2	/^    return d.base.enumTypeDeclBits.is_incremental;$/;"	v
is_incremental	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->base.enumTypeDeclBits.is_incremental;$/;"	v
is_interface	$C2_ROOT/ast/ast.c2	/^    return a.is_interface;$/;"	v
is_interface	$C2_ROOT/bootstrap/bootstrap.c	/^   return a->is_interface;$/;"	v
is_interface	$C2_ROOT/parser/ast_builder.c2	/^    is_public |= b.is_interface;$/;"	v
is_interface	$C2_ROOT/parser/c2_parser.c2	/^    p.is_interface = is_interface;$/;"	v
is_internal	$C2_ROOT/bootstrap/bootstrap.c	/^   return m->is_internal;$/;"	v
is_label	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool is_label;$/;"	v
is_less	$C2_ROOT/ast/value.c2	/^public fn bool Value.is_less(const Value* v1, const Value* v2) {$/;"	f
is_less_equal	$C2_ROOT/ast/value.c2	/^fn bool Value.is_less_equal(const Value* v1, const Value* v2) {$/;"	f
is_loaded	$C2_ROOT/bootstrap/bootstrap.c	/^   return m->is_loaded;$/;"	v
is_local	$C2_ROOT/ast/import_decl.c2	/^    d.base.importDeclBits.is_local = is_local;$/;"	v
is_local	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->base.importDeclBits.is_local;$/;"	v
is_local	$C2_ROOT/generator/c/c_generator_expr.c2	/^            is_local = true;$/;"	v
is_member_type	$C2_ROOT/ast/function_decl.c2	/^    return d.base.functionDeclBits.is_member_type;$/;"	v
is_name	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn bool is_name(char c) {$/;"	f
is_noreturn	$C2_ROOT/ast/call_expr.c2	/^    return e.base.base.callExprBits.is_noreturn;$/;"	v
is_noreturn	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->base.base.callExprBits.is_noreturn;$/;"	v
is_octal	$C2_ROOT/parser/c2_tokenizer.c2	/^fn bool is_octal(char c) {$/;"	f
is_plugin	$C2_ROOT/compiler/plugin_mgr.c2	/^fn bool is_plugin(const Dirent* entry) {$/;"	f
is_public	$C2_ROOT/ast/decl.c2	/^    d.declBits.is_public = is_public;$/;"	v
is_public	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->declBits.is_public;$/;"	v
is_public	$C2_ROOT/parser/ast_builder.c2	/^                          is_public,$/;"	v
is_public	$C2_ROOT/parser/c2_parser.c2	/^                                        is_public,$/;"	v
is_public	$C2_ROOT/parser/c2_parser_type.c2	/^                                      is_public,$/;"	v
is_signed	$C2_ROOT/analyser/conversion_checker_expr.c2	/^    result.is_signed = w1.is_signed | w2.is_signed;$/;"	v
is_signed	$C2_ROOT/analyser/size_analyser.c2	/^            ml.bitfield_signed = (u8)member.is_signed;$/;"	v
is_signed	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool is_signed;$/;"	v
is_source	$C2_ROOT/bootstrap/bootstrap.c	/^   f->is_source = is_source;$/;"	v
is_static	$C2_ROOT/bootstrap/bootstrap.c	/^   l->libs[l->count].is_static = is_static;$/;"	v
is_static	$C2_ROOT/common/component.c2	/^    c.available_static = is_static;$/;"	v
is_static	$C2_ROOT/common/library_list.c2	/^    l.libs[l.count].is_static = is_static;$/;"	v
is_static	$C2_ROOT/compiler/c2recipe_parser.c2	/^                is_static = true;$/;"	v
is_static_sf	$C2_ROOT/ast/member_expr.c2	/^    return e.base.base.memberExprBits.is_static_sf;$/;"	v
is_static_sf	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->base.base.memberExprBits.is_static_sf;$/;"	v
is_string	$C2_ROOT/analyser/module_analyser_switch.c2	/^        is_string = true;$/;"	v
is_string	$C2_ROOT/ast/switch_stmt.c2	/^    return s.base.switchStmtBits.is_string;$/;"	v
is_string	$C2_ROOT/bootstrap/bootstrap.c	/^   return s->base.switchStmtBits.is_string;$/;"	v
is_string	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^fn bool is_string(char c) {$/;"	f
is_struct	$C2_ROOT/ast/struct_type_decl.c2	/^    return d.base.structTypeDeclBits.is_struct;$/;"	v
is_struct	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->base.structTypeDeclBits.is_struct;$/;"	v
is_struct	$C2_ROOT/parser/ast_builder.c2	/^                                              is_struct,$/;"	v
is_struct	$C2_ROOT/parser/c2_parser_type.c2	/^                                                  is_struct,$/;"	v
is_struct_func	$C2_ROOT/ast/member_expr.c2	/^    return e.base.base.memberExprBits.is_struct_func;$/;"	v
is_struct_func	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->base.base.memberExprBits.is_struct_func;$/;"	v
is_template	$C2_ROOT/ast/function_decl.c2	/^    return d.base.functionDeclBits.is_template;$/;"	v
is_template	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->base.functionDeclBits.is_template;$/;"	v
is_template_call	$C2_ROOT/ast/call_expr.c2	/^    return e.base.base.callExprBits.is_template_call;$/;"	v
is_template_call	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->base.base.callExprBits.is_template_call;$/;"	v
is_tf	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool needs_comma = is_tf;$/;"	v
is_tf	$C2_ROOT/generator/c/c_generator_call.c2	/^    bool needs_comma = is_tf;$/;"	v
is_type	$C2_ROOT/ast/function_decl.c2	/^    return d.base.functionDeclBits.is_type;$/;"	v
is_type	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->base.functionDeclBits.is_type;$/;"	v
is_typefn	$C2_ROOT/analyser/module_analyser_function.c2	/^            is_typefn = true;$/;"	v
is_typefn	$C2_ROOT/bootstrap/bootstrap.c	/^         is_typefn = true;$/;"	v
is_used	$C2_ROOT/ast/label_stmt.c2	/^    return s.base.labelStmtBits.is_used;$/;"	v
is_used	$C2_ROOT/ast/module.c2	/^    bool is_used;$/;"	v
is_used	$C2_ROOT/bootstrap/bootstrap.c	/^   return s->base.labelStmtBits.is_used;$/;"	v
is_used_public	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->declBits.is_used_public;$/;"	v
is_user	$C2_ROOT/bootstrap/bootstrap.c	/^   return r->flags.is_user;$/;"	v
is_variadic	$C2_ROOT/ast/function_decl.c2	/^    return d.base.functionDeclBits.is_variadic;$/;"	v
is_variadic	$C2_ROOT/bootstrap/bootstrap.c	/^   return is_variadic;$/;"	v
is_variadic	$C2_ROOT/parser/ast_builder.c2	/^                                          is_variadic,$/;"	v
is_variadic	$C2_ROOT/parser/c2_parser.c2	/^    return is_variadic;$/;"	v
is_volatile	$C2_ROOT/ast/asm_stmt.c2	/^    s.base.asmStmtBits.is_volatile = is_volatile;$/;"	v
is_volatile	$C2_ROOT/ast/type_ref.c2	/^    return r.flags.is_volatile;$/;"	v
is_volatile	$C2_ROOT/bootstrap/bootstrap.c	/^   s->base.asmStmtBits.is_volatile = is_volatile;$/;"	v
is_volatile	$C2_ROOT/parser/c2_parser_stmt.c2	/^                                     is_volatile,$/;"	v
isalnum	$C2_ROOT/libs/libc/ctype.c2i	/^fn c_int isalnum(c_int c) @(pure);$/;"	f
isalpha	$C2_ROOT/libs/libc/ctype.c2i	/^fn c_int isalpha(c_int c) @(pure);$/;"	f
isascii	$C2_ROOT/libs/libc/ctype.c2i	/^fn c_int isascii(c_int c) @(pure);$/;"	f
isatty	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int isatty(c_int fd);$/;"	f
isblank	$C2_ROOT/libs/libc/ctype.c2i	/^fn c_int isblank(c_int c) @(pure);$/;"	f
iscfunction	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int iscfunction(State *L, c_int idx) @(cname="lua_iscfunction");$/;"	f
iscntrl	$C2_ROOT/libs/libc/ctype.c2i	/^fn c_int iscntrl(c_int c) @(pure);$/;"	f
isdigit	$C2_ROOT/libs/libc/ctype.c2i	/^fn c_int isdigit(c_int c) @(pure);$/;"	f
isfinite	$C2_ROOT/ast/value.c2	/^fn bool isfinite(f64 d) {$/;"	f
isfinite	$C2_ROOT/libs/math/math.c2i	/^fn c_int isfinite(c_double) @(cname="__isfinited");$/;"	f
isfinitef	$C2_ROOT/libs/math/math.c2i	/^fn c_int isfinitef(c_float) @(cname="__isfinitef");$/;"	f
isgraph	$C2_ROOT/libs/libc/ctype.c2i	/^fn c_int isgraph(c_int c) @(pure);$/;"	f
isinf	$C2_ROOT/libs/math/math.c2i	/^fn c_int isinf(c_double) @(cname="__isinfd");$/;"	f
isinff	$C2_ROOT/libs/math/math.c2i	/^fn c_int isinff(c_float) @(cname="__isinff");$/;"	f
isinteger	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int isinteger(State *L, c_int idx) @(cname="lua_isinteger");$/;"	f
isize	$C2_ROOT/libs/c2/isize.c2i	/^module isize;$/;"	v
islocal	$C2_ROOT/bootstrap/bootstrap.c	/^         islocal = true;$/;"	v
islocal	$C2_ROOT/parser/c2_parser.c2	/^            islocal = true;$/;"	v
islower	$C2_ROOT/libs/libc/ctype.c2i	/^fn c_int islower(c_int c) @(pure);$/;"	f
isnan	$C2_ROOT/libs/math/math.c2i	/^fn c_int isnan(c_double x) { return x != x; }$/;"	f
isnanf	$C2_ROOT/libs/math/math.c2i	/^fn c_int isnanf(c_float x) { return x != x; }$/;"	f
isnormal	$C2_ROOT/libs/math/math.c2i	/^fn c_int isnormal(c_double) @(cname="__isnormald");$/;"	f
isnormalf	$C2_ROOT/libs/math/math.c2i	/^fn c_int isnormalf(c_float) @(cname="__isnormalf");$/;"	f
isnumber	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int isnumber(State *L, c_int idx) @(cname="lua_isnumber");$/;"	f
isprint	$C2_ROOT/libs/libc/ctype.c2i	/^fn c_int isprint(c_int c) @(pure);$/;"	f
ispunct	$C2_ROOT/libs/libc/ctype.c2i	/^fn c_int ispunct(c_int c) @(pure);$/;"	f
isspace	$C2_ROOT/libs/libc/ctype.c2i	/^fn c_int isspace(c_int c) @(pure);$/;"	f
isstring	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int isstring(State *L, c_int idx) @(cname="lua_isstring");$/;"	f
isupper	$C2_ROOT/libs/libc/ctype.c2i	/^fn c_int isupper(c_int c) @(pure);$/;"	f
isuserdata	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int isuserdata(State *L, c_int idx) @(cname="lua_isuserdata");$/;"	f
isvalid	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn bool isvalid() @(cname="sapp_isvalid");$/;"	f
isvalid	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^fn bool isvalid() @(cname="saudio_isvalid");$/;"	f
isvalid	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn bool isvalid() @(cname="sg_isvalid");$/;"	f
isxdigit	$C2_ROOT/libs/libc/ctype.c2i	/^fn c_int isxdigit(c_int c) @(pure);$/;"	f
isyieldable	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int isyieldable(State *L) @(cname="lua_isyieldable");$/;"	f
item	$C2_ROOT/bootstrap/bootstrap.c	/^   src->prev = item;$/;"	v
item	$C2_ROOT/common/index_list.c2	/^    l.data[l.count] = item;$/;"	v
item	$C2_ROOT/common/linked_list.c2	/^    src.prev = item;$/;"	v
item	$C2_ROOT/common/quicksort.c2	/^        *other = *item;$/;"	v
item_size	$C2_ROOT/common/quicksort.c2	/^    u8* right = end - item_size;$/;"	v
items	$C2_ROOT/common/quicksort.c2	/^    u8* begin = items;$/;"	v
iter	$C2_ROOT/bootstrap/bootstrap.c	/^   return iter;$/;"	v
iter	$C2_ROOT/common/yaml/yaml_iterator.c2	/^    return iter;$/;"	v
iter	$C2_ROOT/ir_examples/bitfield_init.c2	/^    return iter;$/;"	v
iterate	$C2_ROOT/generator/ir/array_init_sorter.c2	/^public fn void Sorter.iterate(const Sorter* s, OnExprFn on_expr, OnZeroFn on_zero, void* arg) {$/;"	f
iterate	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^fn void Tree.iterate(const Tree* t, u32 node_idx, Iter* iter) {$/;"	f
iterations	$C2_ROOT/bootstrap/bootstrap.c	/^         iterations = 0;$/;"	v
iterations	$C2_ROOT/common/dsm_sorter.c2	/^            iterations = 0;$/;"	v
ivalue	$C2_ROOT/bootstrap/bootstrap.c	/^      int64_t ivalue;$/;"	v
ivalue	$C2_ROOT/ir/constant.c2	/^        i64 ivalue;$/;"	v
jmp	$C2_ROOT/ir/register_alloc.c2	/^                                                   jmp B2$/;"	v
jmp_buf	$C2_ROOT/bootstrap/bootstrap.c	/^typedef __jmp_buf_tag* jmp_buf;$/;"	v
jmp_err	$C2_ROOT/bootstrap/bootstrap.c	/^   __jmp_buf_tag jmp_err;$/;"	v
jmp_err	$C2_ROOT/common/yaml/yaml_parser.c2	/^    JmpBufTag jmp_err;$/;"	v
jmpbuf	$C2_ROOT/bootstrap/bootstrap.c	/^   __jmp_buf_tag jmpbuf;$/;"	v
jmpbuf	$C2_ROOT/compiler/c2recipe_parser.c2	/^    JmpBufTag jmpbuf;$/;"	v
jmpbuf	$C2_ROOT/parser/c2_parser.c2	/^    JmpBufTag jmpbuf;$/;"	v
jmpbuf	$C2_ROOT/plugins/unit_test2.c2	/^JmpBufTag jmpbuf;$/;"	v
join	$C2_ROOT/ir/work_queue.c2	/^fn void QueueWorker.join(QueueWorker* w) {$/;"	f
join	$C2_ROOT/libs/pthread/pthread.c2i	/^fn c_int join(Pthread thread, void** value_ptr) @(cname="pthread_join");$/;"	f
join_blk	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockId false_blk = join_blk;$/;"	v
join_blk	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^    char[32] join_blk;$/;"	v
jrand48	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_long jrand48(u16* __xsubi);$/;"	f
jrand48_r	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int jrand48_r(u16* __xsubi, Drand48_data* __buffer, c_long* __result);$/;"	f
kdropped	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32* kdropped;$/;"	v
key	$C2_ROOT/bootstrap/bootstrap.c	/^   v->key = key;$/;"	v
key	$C2_ROOT/common/value_maplist.c2	/^    v.key = key;$/;"	v
key_code	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    Keycode key_code;$/;"	v
key_repeat	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool key_repeat;$/;"	v
keyboardShown	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn bool keyboardShown() @(cname="sapp_keyboard_shown");$/;"	f
keywords	$C2_ROOT/compiler/compiler.c2	/^import keywords;$/;"	v
keywords	$C2_ROOT/parser/c2_parser.c2	/^import keywords;$/;"	v
keywords	$C2_ROOT/parser/c2_tokenizer.c2	/^import keywords;$/;"	v
keywords	$C2_ROOT/parser/keywords.c2	/^module keywords;$/;"	v
keywords_Info	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct keywords_Info_ keywords_Info;$/;"	v
kflags	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32* kflags;$/;"	v
khead	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32* khead;$/;"	v
kill	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int kill(Pid pid, c_int signal);$/;"	f
kind	$C2_ROOT/analyser/module_analyser_expr.c2	/^    return kind;$/;"	v
kind	$C2_ROOT/ast/binary_operator.c2	/^    return (BinaryOpcode)e.base.base.binaryOperatorBits.kind;$/;"	v
kind	$C2_ROOT/ast/builtin_expr.c2	/^    return (BuiltinExprKind)e.base.base.builtinExprBits.kind;$/;"	v
kind	$C2_ROOT/ast/builtin_type.c2	/^    return (BuiltinKind)b.base.builtinTypeBits.kind;$/;"	v
kind	$C2_ROOT/ast/function_decl.c2	/^    d.base.functionDeclBits.call_kind = kind;$/;"	v
kind	$C2_ROOT/ast/identifier_expr.c2	/^    return (IdentifierKind)e.base.base.identifierExprBits.kind;$/;"	v
kind	$C2_ROOT/ast/implicit_cast_expr.c2	/^    return (ImplicitCastKind)e.base.base.implicitCastBits.kind;$/;"	v
kind	$C2_ROOT/ast/member_expr.c2	/^    return (IdentifierKind)e.base.base.memberExprBits.kind;$/;"	v
kind	$C2_ROOT/ast/type_ref.c2	/^    return (TypeRefKind)r.flags.kind;$/;"	v
kind	$C2_ROOT/ast/unary_operator.c2	/^    return (UnaryOpcode)e.base.base.unaryOperatorBits.kind;$/;"	v
kind	$C2_ROOT/ast/value.c2	/^    ValueKind kind;$/;"	v
kind	$C2_ROOT/ast/var_decl.c2	/^    return (VarDeclKind)d.base.varDeclBits.kind;$/;"	v
kind	$C2_ROOT/ast_utils/attr.c2	/^    AttrKind kind;$/;"	v
kind	$C2_ROOT/ast_utils/attr_table.c2	/^    attr.AttrKind kind;$/;"	v
kind	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_TokenKind kind;$/;"	v
kind	$C2_ROOT/common/build_target.c2	/^    t.kind = kind;$/;"	v
kind	$C2_ROOT/common/component.c2	/^    return c.kind;$/;"	v
kind	$C2_ROOT/common/yaml/yaml_data.c2	/^    result.kind = kind;$/;"	v
kind	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    TokenKind kind;$/;"	v
kind	$C2_ROOT/compiler/c2recipe_parser.c2	/^    return p.token.kind == kind;$/;"	v
kind	$C2_ROOT/generator/c/c_generator.c2	/^    gen.target_kind = kind;$/;"	v
kind	$C2_ROOT/ir/block.c2	/^    return b.kind;$/;"	v
kind	$C2_ROOT/ir/context.c2	/^    InstrKind kind;$/;"	v
kind	$C2_ROOT/ir/init_value.c2	/^    return (InitValueKind)r.kind;$/;"	v
kind	$C2_ROOT/ir/instr.c2	/^    return i.instrBits.kind;$/;"	v
kind	$C2_ROOT/ir/ref.c2	/^    return r1.kind == r2.kind;$/;"	v
kind	$C2_ROOT/parser/c2_parser.c2	/^    return p.next[slot].kind;$/;"	v
kind	$C2_ROOT/parser/c2_parser_expr.c2	/^    Kind savedKind = p.tok.kind;$/;"	v
kind	$C2_ROOT/parser/c2_parser_stmt.c2	/^    const Kind kind = p.tok.kind;$/;"	v
kind	$C2_ROOT/parser/c2_tokenizer.c2	/^    return result.kind;$/;"	v
kind2name	$C2_ROOT/ast_utils/attr.c2	/^public fn const char* kind2name(AttrKind k) {$/;"	f
kind2str	$C2_ROOT/ast/builtin_type.c2	/^public fn const char* BuiltinType.kind2str(const BuiltinType* b) {$/;"	f
kind_dynamic	$C2_ROOT/bootstrap/bootstrap.c	/^         kind_dynamic = true;$/;"	v
kind_dynamic	$C2_ROOT/compiler/manifest.c2	/^            kind_dynamic = true;$/;"	v
kind_static	$C2_ROOT/bootstrap/bootstrap.c	/^         kind_static = true;$/;"	v
kind_static	$C2_ROOT/compiler/manifest.c2	/^            kind_static = true;$/;"	v
koverflow	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32* koverflow;$/;"	v
kring_entries	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32* kring_entries;$/;"	v
kring_mask	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32* kring_mask;$/;"	v
ktail	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32* ktail;$/;"	v
kwinfo	$C2_ROOT/bootstrap/bootstrap.c	/^   t->kwinfo = kwinfo;$/;"	v
kwinfo	$C2_ROOT/compiler/compiler.c2	/^    keywords.Info kwinfo;$/;"	v
kwinfo	$C2_ROOT/parser/c2_parser.c2	/^    p.kwinfo = kwinfo;$/;"	v
kwinfo	$C2_ROOT/parser/c2_tokenizer.c2	/^    t.kwinfo = kwinfo;$/;"	v
l1	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_BlockList tmp = *l1;$/;"	v
l1	$C2_ROOT/ir/block_list.c2	/^    BlockList tmp = *l1;$/;"	v
l2	$C2_ROOT/bootstrap/bootstrap.c	/^   *l1 = *l2;$/;"	v
l2	$C2_ROOT/ir/block_list.c2	/^    *l1 = *l2;$/;"	v
l64a	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_char* l64a(c_long n);$/;"	f
lab	$C2_ROOT/bootstrap/bootstrap.c	/^               num = *lab;$/;"	v
lab	$C2_ROOT/generator/c/c_generator_stmt.c2	/^                    num = *lab;$/;"	v
label	$C2_ROOT/analyser/label_vector.c2	/^    v.data[index] = label;$/;"	v
label	$C2_ROOT/bootstrap/bootstrap.c	/^   v->data[index] = label;$/;"	v
label	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    const char* label;$/;"	v
labelStmtBits	$C2_ROOT/ast/stmt.c2	/^        LabelStmtBits labelStmtBits;$/;"	v
labelStmtBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_LabelStmtBits labelStmtBits;$/;"	v
label_vector	$C2_ROOT/analyser/label_vector.c2	/^module label_vector;$/;"	v
label_vector_Label	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct label_vector_Label_ label_vector_Label;$/;"	v
label_vector_LabelVector	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct label_vector_LabelVector_ label_vector_LabelVector;$/;"	v
labels	$C2_ROOT/analyser/module_analyser.c2	/^    LabelVector labels;$/;"	v
labels	$C2_ROOT/bootstrap/bootstrap.c	/^   value_maplist_List labels;$/;"	v
labels	$C2_ROOT/generator/ir/ir_generator.c2	/^    value_maplist.List labels;$/;"	v
labs	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_long labs(c_long __x);$/;"	f
laptime	$C2_ROOT/libs/sokol/sokol_time.c2i	/^fn u64 laptime(u64* last_time) @(cname="stm_laptime");$/;"	f
last	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t i = last;$/;"	v
last	$C2_ROOT/generator/c2_trace.c2	/^            last = func;$/;"	v
last	$C2_ROOT/ir/print.c2	/^        if (last > max) max = last;$/;"	v
last	$C2_ROOT/ir/register_alloc.c2	/^    u32 i = last;$/;"	v
last_char	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    u8 last_char;$/;"	v
last_child	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_Node* last_child;$/;"	v
last_child	$C2_ROOT/common/yaml/yaml_data.c2	/^    Node* last_child;$/;"	v
last_file	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t last_file;$/;"	v
last_file_offset	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t last_file_offset;$/;"	v
last_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   return last_idx;$/;"	v
last_idx	$C2_ROOT/ir/interference_graph.c2	/^    return last_idx;$/;"	v
last_idx	$C2_ROOT/ir/live_map.c2	/^    return last_idx;$/;"	v
last_idx	$C2_ROOT/ir/slot_writes_map.c2	/^    return last_idx;$/;"	v
last_index	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t last_index;$/;"	v
last_index	$C2_ROOT/generator/c/c_generator_trace.c2	/^    u32 last_index;$/;"	v
last_inserted_instr	$C2_ROOT/ir/inserter.c2	/^    u32 last_inserted_instr;$/;"	v
last_loc	$C2_ROOT/bootstrap/bootstrap.c	/^   source_mgr_Location last_loc;$/;"	v
last_offset	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t last_offset;$/;"	v
last_offset	$C2_ROOT/generator/c/c_generator_expr.c2	/^    u32 last_offset;$/;"	v
last_string	$C2_ROOT/bootstrap/bootstrap.c	/^   const char* last_string;$/;"	v
last_string	$C2_ROOT/generator/c/c_generator_trace.c2	/^    const char *last_string;$/;"	v
last_var	$C2_ROOT/bootstrap/bootstrap.c	/^   uint16_t last_var;$/;"	v
last_var	$C2_ROOT/ir/interference_graph.c2	/^    u16 last_idx = a.last_var;$/;"	v
last_var	$C2_ROOT/ir/live_map.c2	/^    u16 last_idx = a.last_var;$/;"	v
last_var	$C2_ROOT/ir/slot_writes_map.c2	/^    u16 last_idx = a.last_var;$/;"	v
layer	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void layer(i32 layer_id) @(cname="sdtx_layer");$/;"	f
layer	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void layer(i32 layer_id) @(cname="sgl_layer");$/;"	f
layout	$C2_ROOT/ast/var_decl.c2	/^    if (info) return &info.layout;$/;"	v
layout	$C2_ROOT/bootstrap/bootstrap.c	/^   l->layout = layout;$/;"	v
layout	$C2_ROOT/generator/ir/basic_struct_layouter.c2	/^    l.layout = layout;$/;"	v
layout	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VertexLayoutState layout;$/;"	v
layouter	$C2_ROOT/bootstrap/bootstrap.c	/^      ir_generator_FieldStructLayouter layouter;$/;"	v
layouter	$C2_ROOT/generator/ir/ir_generator.c2	/^        FieldStructLayouter layouter;$/;"	v
layouter	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        FieldStructLayouter layouter;$/;"	v
lcanon	$C2_ROOT/analyser/conversion_checker.c2	/^    const PointerType* ptr = (PointerType*)lcanon;$/;"	v
lcong48	$C2_ROOT/libs/libc/stdlib.c2i	/^fn void lcong48(u16* __param);$/;"	f
lcong48_r	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int lcong48_r(u16* __param, Drand48_data* __buffer);$/;"	f
ldexp	$C2_ROOT/libs/math/math.c2i	/^fn c_double ldexp(c_double, c_int);$/;"	f
ldexpf	$C2_ROOT/libs/math/math.c2i	/^fn c_float ldexpf(c_float, c_int);$/;"	f
ldflags	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t ldflags;$/;"	v
ldflags2	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t ldflags2;$/;"	v
ldiv	$C2_ROOT/libs/libc/stdlib.c2i	/^fn Ldiv_t ldiv(c_long __numer, c_long __denom);$/;"	f
leaf_nodes	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^    u32 leaf_nodes;$/;"	v
leaveScope	$C2_ROOT/generator/ir/ir_generator.c2	/^fn void Generator.leaveScope(Generator* gen) {$/;"	f
left	$C2_ROOT/ast/ast_evaluator.c2	/^        return left;$/;"	v
left	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Ref left;$/;"	v
left	$C2_ROOT/common/quicksort.c2	/^                pivot = left;$/;"	v
left	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^    ir.Ref left;$/;"	v
left	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        ir.Ref left;$/;"	v
left	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec3 Vec3.left() {$/;"	f
left_shift	$C2_ROOT/ast/value.c2	/^fn Value Value.left_shift(const Value* v1, const Value* v2) {$/;"	f
left_shift2	$C2_ROOT/ast/value.c2	/^public fn void Value.left_shift2(Value* v, u32 shift) {$/;"	f
left_val	$C2_ROOT/bootstrap/bootstrap.c	/^         *result = left_val;$/;"	v
left_val	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^            *result = left_val;$/;"	v
len	$C2_ROOT/analyser_utils/printf_utils.c2	/^            cp += len;$/;"	v
len	$C2_ROOT/ast/string_type_pool.c2	/^    u32 len;$/;"	v
len	$C2_ROOT/ast_utils/context.c2	/^    c.cur_size -= len;$/;"	v
len	$C2_ROOT/ast_utils/string_buffer.c2	/^    const char* end = p + len;$/;"	v
len	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t src_len = p->tok.len;$/;"	v
len	$C2_ROOT/common/process_utils.c2	/^        s += len;$/;"	v
len	$C2_ROOT/common/yaml/yaml_iterator.c2	/^        full += len;$/;"	v
len	$C2_ROOT/generator/c/c_generator.c2	/^        usize len;$/;"	v
len	$C2_ROOT/generator/c2refs.c2	/^    u16 len;$/;"	v
len	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    w.size += len;$/;"	v
len	$C2_ROOT/libs/io_uring/io_uring.c2i	/^	sqe.len = len;$/;"	v
len	$C2_ROOT/libs/lua/lua.c2i	/^fn void len(State *L, c_int idx) @(cname="lua_len");$/;"	f
len	$C2_ROOT/parser/c2_parser.c2	/^    p.prev_loc = p.tok.loc + p.tok.len;$/;"	v
len	$C2_ROOT/parser/c2_parser_expr.c2	/^    u32 src_len = p.tok.len;$/;"	v
len	$C2_ROOT/parser/c2_tokenizer.c2	/^    t.cur += len;$/;"	v
len	$C2_ROOT/parser/keywords.c2	/^        u32 len;$/;"	v
len	$C2_ROOT/plugins/refs_generator.c2	/^    l.lengths[l.count++] = (u8)len;$/;"	v
len2	$C2_ROOT/bootstrap/bootstrap.c	/^         len += len2;$/;"	v
len2	$C2_ROOT/parser/c2_parser_expr.c2	/^            len += len2;$/;"	v
len_count	$C2_ROOT/generator/c2refs.c2	/^    u32 len_count;$/;"	v
len_start	$C2_ROOT/generator/c2refs.c2	/^    u32 len_start;$/;"	v
length	$C2_ROOT/common/module_list.c2	/^public fn u32 List.length(const List* l) { return l.num_mods; }$/;"	f
length	$C2_ROOT/common/string_list.c2	/^public fn u32 List.length(const List* l) {$/;"	f
length	$C2_ROOT/generator/c/c_generator_trace.c2	/^fn u32 StringList.length(StringList* sl) {$/;"	f
length	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn f32 Vec3.length(const Vec3* v) {$/;"	f
lengthSquared	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn f32 Vec3.lengthSquared(const Vec3* v) {$/;"	f
lengths	$C2_ROOT/generator/c2refs.c2	/^    u8[0] lengths;$/;"	v
lengths	$C2_ROOT/plugins/refs_generator.c2	/^    u8* lengths;$/;"	v
lengths2	$C2_ROOT/plugins/refs_generator.c2	/^    l.lengths = lengths2;$/;"	v
lerp	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn f32 lerp(f32 a, f32 b, f32 t) {$/;"	f
levels	$C2_ROOT/analyser/scope.c2	/^    Level[constants.MaxScopes] levels;$/;"	v
lex	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^fn void Tokenizer.lex(Tokenizer* t, Token* result) {$/;"	f
lex	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Parser.lex(Parser* p, Token* result) {$/;"	f
lex	$C2_ROOT/parser/c2_tokenizer.c2	/^public fn void Tokenizer.lex(Tokenizer* t, Token* result) {$/;"	f
lex_block_comment	$C2_ROOT/parser/c2_tokenizer.c2	/^fn bool Tokenizer.lex_block_comment(Tokenizer* t, Token* result) {$/;"	f
lex_char_literal	$C2_ROOT/parser/c2_tokenizer.c2	/^fn void Tokenizer.lex_char_literal(Tokenizer* t, Token* result) {$/;"	f
lex_comment	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^fn void Tokenizer.lex_comment(Tokenizer* t) {$/;"	f
lex_directive	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^fn void Tokenizer.lex_directive(Tokenizer* t, Token* result) {$/;"	f
lex_escaped_char	$C2_ROOT/parser/c2_tokenizer.c2	/^fn u32 Tokenizer.lex_escaped_char(Tokenizer* t, Token* result, const char* stype) {$/;"	f
lex_floating_point	$C2_ROOT/parser/c2_tokenizer.c2	/^fn void Tokenizer.lex_floating_point(Tokenizer* t, Token* result, const char* start) {$/;"	f
lex_floating_point_hex	$C2_ROOT/parser/c2_tokenizer.c2	/^fn void Tokenizer.lex_floating_point_hex(Tokenizer* t, Token* result, const char* start) {$/;"	f
lex_identifier	$C2_ROOT/parser/c2_tokenizer.c2	/^fn void Tokenizer.lex_identifier(Tokenizer* t, Token* result) {$/;"	f
lex_indent	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^fn bool Tokenizer.lex_indent(Tokenizer* t, Token* result) {$/;"	f
lex_line_comment	$C2_ROOT/parser/c2_tokenizer.c2	/^fn bool Tokenizer.lex_line_comment(Tokenizer* t, Token* result) {$/;"	f
lex_next	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^fn Token* Tokenizer.lex_next(Tokenizer* t) {$/;"	f
lex_number	$C2_ROOT/parser/c2_tokenizer.c2	/^fn void Tokenizer.lex_number(Tokenizer* t, Token* result) {$/;"	f
lex_number_error	$C2_ROOT/parser/c2_tokenizer.c2	/^fn void Tokenizer.lex_number_error(Tokenizer* t, Token* result, const char *p, const char *qual)/;"	f
lex_option	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Parser.lex_option(Parser* p, Token* result) {$/;"	f
lex_plugin_options	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Parser.lex_plugin_options(Parser* p, Token* result) {$/;"	f
lex_preproc	$C2_ROOT/parser/c2_tokenizer.c2	/^fn Kind Tokenizer.lex_preproc(Tokenizer* t, Token* result) {$/;"	f
lex_quoted_string	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^fn void Tokenizer.lex_quoted_string(Tokenizer* t, Token* result, char delim) {$/;"	f
lex_raw_string_literal	$C2_ROOT/parser/c2_tokenizer.c2	/^fn void Tokenizer.lex_raw_string_literal(Tokenizer* t, Token* result) {$/;"	f
lex_set_use	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Parser.lex_set_use(Parser* p, Token* result) {$/;"	f
lex_string	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^fn void Tokenizer.lex_string(Tokenizer* t, Token* result) {$/;"	f
lex_string_literal	$C2_ROOT/parser/c2_tokenizer.c2	/^fn void Tokenizer.lex_string_literal(Tokenizer* t, Token* result) {$/;"	f
lgamma	$C2_ROOT/libs/math/math.c2i	/^fn c_double lgamma(c_double);$/;"	f
lgammaf	$C2_ROOT/libs/math/math.c2i	/^fn c_float lgammaf(c_float);$/;"	f
lhs	$C2_ROOT/analyser/conversion_checker.c2	/^    c.lhs = lhs;$/;"	v
lhs	$C2_ROOT/analyser/module_analyser_binop.c2	/^        return lhs;$/;"	v
lhs	$C2_ROOT/analyser/module_analyser_expr.c2	/^        return lhs;$/;"	v
lhs	$C2_ROOT/ast/array_subscript_expr.c2	/^    e.lhs = lhs;$/;"	v
lhs	$C2_ROOT/ast/binary_operator.c2	/^    e.lhs = lhs;$/;"	v
lhs	$C2_ROOT/ast/bitoffset_expr.c2	/^    e.lhs = lhs;$/;"	v
lhs	$C2_ROOT/ast/conditional_operator.c2	/^    return e.lhs;$/;"	v
lhs	$C2_ROOT/ast/range_expr.c2	/^    e.lhs = lhs;$/;"	v
lhs	$C2_ROOT/ast/static_assert.c2	/^    return d.lhs;$/;"	v
lhs	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->lhs;$/;"	v
lhs	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^    const MemberExpr* m = (MemberExpr*)lhs;$/;"	v
lhs	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^    ir.Ref lhs;$/;"	v
lhs	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^        ir.Ref lhs;$/;"	v
lhs	$C2_ROOT/parser/ast_builder.c2	/^                                                  lhs,$/;"	v
lhs	$C2_ROOT/parser/c2_parser_expr.c2	/^        return lhs;$/;"	v
lhsLoc	$C2_ROOT/analyser/conversion_checker.c2	/^    c.loc = lhsLoc;$/;"	v
lhsLoc	$C2_ROOT/bootstrap/bootstrap.c	/^   c->loc = lhsLoc;$/;"	v
lib_dirs	$C2_ROOT/bootstrap/bootstrap.c	/^   string_list_List lib_dirs;$/;"	v
lib_dirs	$C2_ROOT/common/build_file.c2	/^    string_list.List lib_dirs;$/;"	v
libc_dirent	$C2_ROOT/libs/libc/libc_dirent.c2i	/^module libc_dirent;$/;"	v
libc_fcntl	$C2_ROOT/libs/libc/libc_fcntl.c2i	/^module libc_fcntl;$/;"	v
libc_name	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t libc_name;$/;"	v
libc_poll	$C2_ROOT/libs/libc/libc_poll.c2i	/^module libc_poll;$/;"	v
libc_time	$C2_ROOT/libs/libc/libc_time.c2i	/^module libc_time;$/;"	v
libdir	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t libdir;$/;"	v
libdir	$C2_ROOT/compiler/compiler_libs.c2	/^    char[file_utils.Max_path] libdir;$/;"	v
libdirs	$C2_ROOT/bootstrap/bootstrap.c	/^   string_list_List libdirs;$/;"	v
libdirs	$C2_ROOT/compiler/compiler.c2	/^    string_list.List libdirs;$/;"	v
libgen	$C2_ROOT/libs/libc/libgen.c2i	/^module libgen;$/;"	v
library_list	$C2_ROOT/common/build_target.c2	/^import library_list;$/;"	v
library_list	$C2_ROOT/common/library_list.c2	/^module library_list;$/;"	v
library_list_Lib	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct library_list_Lib_ library_list_Lib;$/;"	v
library_list_List	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct library_list_List_ library_list_List;$/;"	v
libs	$C2_ROOT/bootstrap/bootstrap.c	/^   library_list_List libs;$/;"	v
libs	$C2_ROOT/common/build_target.c2	/^    library_list.List libs;$/;"	v
libs	$C2_ROOT/common/library_list.c2	/^    Lib* libs;$/;"	v
libs2	$C2_ROOT/bootstrap/bootstrap.c	/^   l->libs = libs2;$/;"	v
libs2	$C2_ROOT/common/library_list.c2	/^    l.libs = libs2;$/;"	v
line	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t line;$/;"	v
line	$C2_ROOT/common/source_mgr.c2	/^    u32 line;$/;"	v
line	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    u32 line;$/;"	v
line	$C2_ROOT/generator/c/c_generator_trace.c2	/^    u16 line;$/;"	v
line	$C2_ROOT/generator/c2refs.c2	/^    u32 line;$/;"	v
line	$C2_ROOT/libs/c2/c2_trace_tables.c2i	/^    u16 line;$/;"	v
line	$C2_ROOT/plugins/refs_generator.c2	/^    u32 line;$/;"	v
line_len	$C2_ROOT/plugins/refs_generator.c2	/^        offset -= line_len;$/;"	v
line_lengths	$C2_ROOT/generator/c2refs.c2	/^    r.line_lengths = line_lengths;$/;"	v
line_nr	$C2_ROOT/bootstrap/bootstrap.c	/^      l.line = line_nr;$/;"	v
line_start	$C2_ROOT/bootstrap/bootstrap.c	/^   const char* line_start;$/;"	v
line_start	$C2_ROOT/common/source_mgr.c2	/^    const char* line_start;$/;"	v
line_start	$C2_ROOT/parser/c2_tokenizer.c2	/^    const char* line_start;$/;"	v
lines	$C2_ROOT/common/source_mgr.c2	/^            total_lines += lines;$/;"	v
lines	$C2_ROOT/plugins/refs_generator.c2	/^    LineCounter lines;$/;"	v
link_count	$C2_ROOT/generator/c2refs.c2	/^    u32 link_count;$/;"	v
link_start	$C2_ROOT/generator/c2refs.c2	/^    u32 link_start;$/;"	v
linked_list	$C2_ROOT/common/linked_list.c2	/^module linked_list;$/;"	v
linked_list	$C2_ROOT/generator/c/c_generator.c2	/^import linked_list;$/;"	v
linked_list	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^import linked_list;$/;"	v
linked_list	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^import linked_list;$/;"	v
linked_list	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^import linked_list;$/;"	v
linked_list_Element	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct linked_list_Element_ linked_list_Element;$/;"	v
linkerscript	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t linkerscript;$/;"	v
linkerscript	$C2_ROOT/common/build_file.c2	/^    u32 linkerscript;$/;"	v
linkname	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t linkname;$/;"	v
links	$C2_ROOT/generator/c2refs.c2	/^    r.links = links;$/;"	v
linux_ifether	$C2_ROOT/libs/libc/linux_ifether.c2i	/^module linux_ifether;$/;"	v
linux_sockios	$C2_ROOT/libs/libc/linux_sockios.c2i	/^module linux_sockios;$/;"	v
linux_types	$C2_ROOT/libs/io_uring/io_uring.c2i	/^import linux_types;$/;"	v
linux_types	$C2_ROOT/libs/libc/linux_types.c2i	/^module linux_types;$/;"	v
list	$C2_ROOT/bootstrap/bootstrap.c	/^   linked_list_Element list;$/;"	v
list	$C2_ROOT/generator/c/c_generator.c2	/^    linked_list.Element list;$/;"	v
list	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    linked_list.Element list;$/;"	v
list_calls	$C2_ROOT/generator/c2_trace.c2	/^fn void list_calls() @(destructor, unused) {$/;"	f
listen	$C2_ROOT/libs/libc/sys_socket.c2i	/^fn c_int listen(c_int sockfd, c_int backlog);$/;"	f
llrint	$C2_ROOT/libs/math/math.c2i	/^fn c_longlong llrint(c_double);$/;"	f
llrintf	$C2_ROOT/libs/math/math.c2i	/^fn c_longlong llrintf(c_float);$/;"	f
llround	$C2_ROOT/libs/math/math.c2i	/^fn c_longlong llround(c_double);$/;"	f
llroundf	$C2_ROOT/libs/math/math.c2i	/^fn c_longlong llroundf(c_float);$/;"	f
lnot	$C2_ROOT/ast/value.c2	/^fn Value Value.lnot(const Value* v) {$/;"	f
load	$C2_ROOT/bootstrap/bootstrap.c	/^   plugin_info_LoadFn load;$/;"	v
load	$C2_ROOT/common/file/reader.c2	/^public fn bool File.load(File* file) {$/;"	f
load	$C2_ROOT/generator/c2refs.c2	/^public fn Refs* Refs.load(const char* filename) {$/;"	f
load	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^public fn Tree* load(InputStream* input) {$/;"	f
load	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int load(State *L, Reader reader, void *dt,$/;"	f
load	$C2_ROOT/libs/sdl2_image/sdl_image.c2i	/^fn sdl.Surface* load(const char* file) @(cname="IMG_Load");$/;"	f
load	$C2_ROOT/plugins/deps_generator_plugin.c2	/^fn void* load(const char* options, bool show_timing, bool show_debug) {$/;"	f
load	$C2_ROOT/plugins/git_version_plugin.c2	/^fn void* load(const char* options, bool show_timing, bool show_debug) {$/;"	f
load	$C2_ROOT/plugins/plugin_info.c2	/^    LoadFn load;$/;"	v
load	$C2_ROOT/plugins/refs_generator_plugin.c2	/^fn void* load(const char* options, bool show_timing, bool show_debug) {$/;"	f
load	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^fn void* load(const char* options, bool show_timing, bool show_debug) {$/;"	f
load	$C2_ROOT/plugins/unit_test_plugin.c2	/^fn void* load(const char* options, bool show_timing, bool show_debug) {$/;"	f
loadBMP_RW	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn Surface* loadBMP_RW(RWops* src, c_int freesrc) @(cname="SDL_LoadBMP_RW");$/;"	f
loadDefaultPipeline	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void loadDefaultPipeline() @(cname="sgl_load_default_pipeline");$/;"	f
loadFile	$C2_ROOT/common/source_mgr.c2	/^public fn i32 SourceMgr.loadFile(SourceMgr* sm, const char* filename, SrcLoc sloc) {$/;"	f
loadGlobal	$C2_ROOT/compiler/plugin_mgr.c2	/^public fn bool Mgr.loadGlobal(Mgr* m, u32 name, u32 options) {$/;"	f
loadIdentity	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void loadIdentity() @(cname="sgl_load_identity");$/;"	f
loadLocal	$C2_ROOT/compiler/plugin_mgr.c2	/^public fn bool Mgr.loadLocal(Mgr* m, u32 name, u32 options) {$/;"	f
loadMatrix	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void loadMatrix(f32* m) @(cname="sgl_load_matrix");$/;"	f
loadPipeline	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void loadPipeline(Pipeline pip) @(cname="sgl_load_pipeline");$/;"	f
loadPlugin	$C2_ROOT/compiler/plugin_mgr.c2	/^fn bool Mgr.loadPlugin(Mgr* m, u32 name, u32 options, bool is_global) {$/;"	f
loadTransposeMatrix	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void loadTransposeMatrix(f32* m) @(cname="sgl_load_transpose_matrix");$/;"	f
load_action	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    LoadAction load_action;$/;"	v
load_internal	$C2_ROOT/generator/c2refs.c2	/^fn Refs* Refs.load_internal(MapFile f) {$/;"	f
load_libs	$C2_ROOT/compiler/compiler_libs.c2	/^fn void Compiler.load_libs(Compiler* c) {$/;"	f
load_size	$C2_ROOT/generator/c2refs.c2	/^    f.size -= load_size;$/;"	v
load_size	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    input.size -= load_size;$/;"	v
loc	$C2_ROOT/analyser/conversion_checker.c2	/^    c.loc = loc;$/;"	v
loc	$C2_ROOT/analyser/incr_array_list.c2	/^        info.loc = loc;$/;"	v
loc	$C2_ROOT/analyser/init_checker.c2	/^    entry.loc = loc;$/;"	v
loc	$C2_ROOT/analyser/label_vector.c2	/^    SrcLoc loc;$/;"	v
loc	$C2_ROOT/analyser/module_analyser_call.c2	/^    SrcLoc loc;$/;"	v
loc	$C2_ROOT/analyser/module_analyser_init.c2	/^        SrcLoc loc;$/;"	v
loc	$C2_ROOT/analyser/module_analyser_member.c2	/^        baseLoc = loc;$/;"	v
loc	$C2_ROOT/analyser/struct_field_init_checker.c2	/^    c.inits[idx] = loc;$/;"	v
loc	$C2_ROOT/ast/array_value.c2	/^    return d.loc;$/;"	v
loc	$C2_ROOT/ast/decl.c2	/^    d.loc = loc;$/;"	v
loc	$C2_ROOT/ast/expr.c2	/^    return e.base.loc;$/;"	v
loc	$C2_ROOT/ast/static_assert.c2	/^    u32 loc;$/;"	v
loc	$C2_ROOT/ast/stmt.c2	/^    s.loc = loc;$/;"	v
loc	$C2_ROOT/ast/switch_case.c2	/^    s.loc = loc;$/;"	v
loc	$C2_ROOT/ast/type_ref.c2	/^    return r.loc;$/;"	v
loc	$C2_ROOT/ast/var_decl.c2	/^    SrcLoc loc;$/;"	v
loc	$C2_ROOT/ast_utils/attr.c2	/^    SrcLoc loc;$/;"	v
loc	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_Location loc;$/;"	v
loc	$C2_ROOT/common/build_file.c2	/^    p.loc = loc;$/;"	v
loc	$C2_ROOT/common/build_target.c2	/^    t.loc = loc;$/;"	v
loc	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    result.loc = t.loc;$/;"	v
loc	$C2_ROOT/compiler/c2recipe_parser.c2	/^    s.loc = loc;$/;"	v
loc	$C2_ROOT/generator/c/c_generator_call.c2	/^    source_mgr.Location loc;$/;"	v
loc	$C2_ROOT/ir/inserter.c2	/^    ii.location = loc;$/;"	v
loc	$C2_ROOT/ir/switch.c2	/^        cur.instr.start = loc;$/;"	v
loc	$C2_ROOT/parser/ast_builder.c2	/^                          loc,$/;"	v
loc	$C2_ROOT/parser/c2_parser.c2	/^    p.tok.loc = loc;$/;"	v
loc	$C2_ROOT/parser/c2_parser_expr.c2	/^    u32 src_len = p.tok.loc + 1 - loc;$/;"	v
loc	$C2_ROOT/parser/c2_parser_stmt.c2	/^    SrcLoc loc = p.tok.loc;$/;"	v
loc	$C2_ROOT/parser/c2_parser_switch.c2	/^    SrcLoc loc = p.tok.loc;$/;"	v
loc	$C2_ROOT/parser/c2_parser_type.c2	/^    SrcLoc type_loc = p.tok.loc;$/;"	v
loc	$C2_ROOT/parser/c2_tokenizer.c2	/^        top.loc = result.loc;$/;"	v
loc	$C2_ROOT/parser/token.c2	/^    SrcLoc loc;$/;"	v
loc	$C2_ROOT/plugins/refs_generator.c2	/^    return loc;$/;"	v
loc2dest	$C2_ROOT/generator/c2refs.c2	/^fn Dest Refs.loc2dest(const Refs* r, u32 loc) {$/;"	f
loc2offset	$C2_ROOT/plugins/refs_generator.c2	/^fn u32 LineCounter.loc2offset(const LineCounter* l, Loc loc) {$/;"	f
loc2str	$C2_ROOT/common/source_mgr.c2	/^public fn char* SourceMgr.loc2str(SourceMgr* sm, SrcLoc sloc, char* tmp, usize tmp_size) {$/;"	f
loc2uses	$C2_ROOT/generator/c2refs.c2	/^fn void Refs.loc2uses(const Refs* r, u32 src_loc, RefUsesFn func, void* arg, u16* symbol_len) {$/;"	f
loc_col	$C2_ROOT/bootstrap/bootstrap.c	/^      uint32_t range_start_col = loc_col;$/;"	v
loc_start	$C2_ROOT/bootstrap/bootstrap.c	/^   t->loc_start = loc_start;$/;"	v
loc_start	$C2_ROOT/compiler/c2recipe_parser.c2	/^    SrcLoc loc_start;$/;"	v
loc_start	$C2_ROOT/parser/c2_tokenizer.c2	/^    t.loc_start = loc_start;$/;"	v
loc_str	$C2_ROOT/compiler/main.c2	/^            char[256] loc_str;$/;"	v
loc_str	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^    ExprRef loc_str;$/;"	v
local	$C2_ROOT/analyser/conversion_checker.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/analyser/conversion_checker_expr.c2	/^import ast local;$/;"	v
local	$C2_ROOT/analyser/incr_array_list.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/analyser/init_checker.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/analyser/label_vector.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/analyser/module_analyser.c2	/^import stdarg local;$/;"	v
local	$C2_ROOT/analyser/module_analyser_binop.c2	/^import c_prec local;$/;"	v
local	$C2_ROOT/analyser/module_analyser_builtin.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/analyser/module_analyser_call.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/analyser/module_analyser_expr.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/analyser/module_analyser_function.c2	/^import label_vector local;$/;"	v
local	$C2_ROOT/analyser/module_analyser_init.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/analyser/module_analyser_member.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/analyser/module_analyser_stmt.c2	/^import label_vector local;$/;"	v
local	$C2_ROOT/analyser/module_analyser_struct.c2	/^import name_vector local;$/;"	v
local	$C2_ROOT/analyser/module_analyser_switch.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/analyser/module_analyser_type.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/analyser/module_sorter.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/analyser/scope.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/analyser/size_analyser.c2	/^import ast local;$/;"	v
local	$C2_ROOT/analyser/struct_field_init_checker.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/analyser/unused_checker.c2	/^import ast local;$/;"	v
local	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/analyser_utils/printf_utils.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/alias_type_decl.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/array_designated_init_expr.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/array_subscript_expr.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/array_value.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/array_value_list.c2	/^import string local;$/;"	v
local	$C2_ROOT/ast/asm_stmt.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/assert_stmt.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/ast.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/ast_evaluator.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/ast/binary_operator.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/bitoffset_expr.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/boolean_literal.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/break_stmt.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/builtin_expr.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/call_expr.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/char_literal.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/compound_stmt.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/conditional_operator.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/continue_stmt.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/decl.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/decl_list.c2	/^import string local;$/;"	v
local	$C2_ROOT/ast/decl_stmt.c2	/^import string local;$/;"	v
local	$C2_ROOT/ast/enum_constant_decl.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/enum_type_decl.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/explicit_cast_expr.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/expr.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/expr_list.c2	/^import string local;$/;"	v
local	$C2_ROOT/ast/fallthrough_stmt.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/field_designated_init_expr.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/float_literal.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/for_stmt.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/function_decl.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/goto_stmt.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/identifier_expr.c2	/^import string local;$/;"	v
local	$C2_ROOT/ast/if_stmt.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/implicit_cast_expr.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/import_decl.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/import_decl_list.c2	/^import string local;$/;"	v
local	$C2_ROOT/ast/init_list_expr.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/integer_literal.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/label_stmt.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/member_expr.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/nil_expr.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/paren_expr.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/pointer_pool.c2	/^import string local;$/;"	v
local	$C2_ROOT/ast/qualtype.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/ast/range_expr.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/return_stmt.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/static_assert.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/static_assert_list.c2	/^import string local;$/;"	v
local	$C2_ROOT/ast/statistics.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/ast/stmt.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/string_literal.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/string_type_pool.c2	/^import string local;$/;"	v
local	$C2_ROOT/ast/struct_type_decl.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/switch_case.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/switch_stmt.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/symbol_table.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/ast/type_expr.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/type_ref.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/unary_operator.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/utils.c2	/^import ast_context local;$/;"	v
local	$C2_ROOT/ast/value.c2	/^import c2 local;$/;"	v
local	$C2_ROOT/ast/var_decl.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast/while_stmt.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast_utils/attr.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/ast_utils/context.c2	/^import string local;$/;"	v
local	$C2_ROOT/ast_utils/string_buffer.c2	/^import string local;$/;"	v
local	$C2_ROOT/common/build_file.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/common/build_target.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/common/c2_prec.c2	/^import ast local;$/;"	v
local	$C2_ROOT/common/c_prec.c2	/^import ast local;$/;"	v
local	$C2_ROOT/common/component.c2	/^import stdlib local;$/;"	v
local	$C2_ROOT/common/component_sorter.c2	/^import component local;$/;"	v
local	$C2_ROOT/common/console.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/common/diagnostics.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/common/file/file_utils.c2	/^import sys_stat local;$/;"	v
local	$C2_ROOT/common/file/reader.c2	/^import unistd local;$/;"	v
local	$C2_ROOT/common/file/writer.c2	/^import unistd local;$/;"	v
local	$C2_ROOT/common/manifest_writer.c2	/^import stdlib local;$/;"	v
local	$C2_ROOT/common/process_utils.c2	/^import unistd local;$/;"	v
local	$C2_ROOT/common/source_mgr.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/common/string_list.c2	/^import string local;$/;"	v
local	$C2_ROOT/common/string_utils.c2	/^import string local;$/;"	v
local	$C2_ROOT/common/target_info.c2	/^import string local;$/;"	v
local	$C2_ROOT/common/utils.c2	/^import sys_stat local;$/;"	v
local	$C2_ROOT/common/yaml/yaml_data.c2	/^import string local;$/;"	v
local	$C2_ROOT/common/yaml/yaml_dump.c2	/^import string local;$/;"	v
local	$C2_ROOT/common/yaml/yaml_parser.c2	/^import stdlib local;$/;"	v
local	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^import string local;$/;"	v
local	$C2_ROOT/compiler/c2recipe.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/compiler/c2recipe_parser.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/compiler/c2recipe_yaml.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/compiler/compiler.c2	/^import c_errno local;$/;"	v
local	$C2_ROOT/compiler/compiler_libs.c2	/^import libc_dirent local;$/;"	v
local	$C2_ROOT/compiler/main.c2	/^import string local;$/;"	v
local	$C2_ROOT/compiler/manifest.c2	/^import string local;$/;"	v
local	$C2_ROOT/compiler/plugin_mgr.c2	/^import string local;$/;"	v
local	$C2_ROOT/generator/ast_visitor.c2	/^import ast local;$/;"	v
local	$C2_ROOT/generator/ast_visitor_expr.c2	/^import ast local;$/;"	v
local	$C2_ROOT/generator/c/c_generator.c2	/^import c_prec local;$/;"	v
local	$C2_ROOT/generator/c/c_generator_call.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/generator/c/c_generator_expr.c2	/^import c_prec local;$/;"	v
local	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^import ast local;$/;"	v
local	$C2_ROOT/generator/c/c_generator_stmt.c2	/^import ast local;$/;"	v
local	$C2_ROOT/generator/c/c_generator_trace.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/generator/c/dep_finder.c2	/^import ast local;$/;"	v
local	$C2_ROOT/generator/c2_trace.c2	/^import string local;$/;"	v
local	$C2_ROOT/generator/c2i/c2i_generator.c2	/^import ast local;$/;"	v
local	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^import ast local;$/;"	v
local	$C2_ROOT/generator/c2i/c2i_generator_expr.c2	/^import ast local;$/;"	v
local	$C2_ROOT/generator/c2i/c2i_generator_stmt.c2	/^import ast local;$/;"	v
local	$C2_ROOT/generator/c2refs.c2	/^import unistd local;$/;"	v
local	$C2_ROOT/generator/generator_utils.c2	/^import ast local;$/;"	v
local	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^import ir local;$/;"	v
local	$C2_ROOT/generator/ir/ir_generator.c2	/^import ir_gen_locals local;$/;"	v
local	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^import ir local;$/;"	v
local	$C2_ROOT/generator/ir/ir_generator_call.c2	/^import ref_list local;$/;"	v
local	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^import ir_gen_locals local;$/;"	v
local	$C2_ROOT/generator/ir/ir_generator_member.c2	/^import ir local;$/;"	v
local	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^import ir local;$/;"	v
local	$C2_ROOT/generator/ir/ir_generator_switch.c2	/^import ir local;$/;"	v
local	$C2_ROOT/generator/ir/ref_list.c2	/^import string local;$/;"	v
local	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^import string local;$/;"	v
local	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^import string local;$/;"	v
local	$C2_ROOT/ir/block_list.c2	/^import string local;$/;"	v
local	$C2_ROOT/ir/case_list.c2	/^import string local;$/;"	v
local	$C2_ROOT/ir/constant_list.c2	/^import string local;$/;"	v
local	$C2_ROOT/ir/context.c2	/^import ir_slot_values local;$/;"	v
local	$C2_ROOT/ir/copy_list.c2	/^import string local;$/;"	v
local	$C2_ROOT/ir/graphviz.c2	/^import ir local;$/;"	v
local	$C2_ROOT/ir/init_value_list.c2	/^import string local;$/;"	v
local	$C2_ROOT/ir/inserter.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/ir/instr.c2	/^import string local;$/;"	v
local	$C2_ROOT/ir/instr_list.c2	/^import string local;$/;"	v
local	$C2_ROOT/ir/interference_graph.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/ir/live_map.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/ir/phi_list.c2	/^import string local;$/;"	v
local	$C2_ROOT/ir/print.c2	/^import ir local;$/;"	v
local	$C2_ROOT/ir/register_alloc.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/ir/rev_list.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/ir/rpo.c2	/^import ir local;$/;"	v
local	$C2_ROOT/ir/slot_collector.c2	/^import string local;$/;"	v
local	$C2_ROOT/ir/slot_values.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/ir/slot_writes_map.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/ir/ssa.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/ir/switch.c2	/^import ir_inserter local;$/;"	v
local	$C2_ROOT/ir/symbol_list.c2	/^import string local;$/;"	v
local	$C2_ROOT/ir/usage_counter.c2	/^import string local;$/;"	v
local	$C2_ROOT/ir/work_queue.c2	/^import string local;$/;"	v
local	$C2_ROOT/ir_examples/global_vars.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/ir_examples/hello.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/ir_examples/while.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/libs/curses/curses.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/dl/dlfcn.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/io_uring/io_uring.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/c_errno.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/csetjmp.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/csignal.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/ctermios.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/ctype.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/ifaddrs.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/libc_dirent.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/libc_fcntl.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/libc_poll.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/libc_time.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/libgen.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/linux_ifether.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/linux_sockios.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/linux_types.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/net_if.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/netinet_tcp.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/regex.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/stdarg.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/stdio.c2i	/^import stdarg local;$/;"	v
local	$C2_ROOT/libs/libc/stdlib.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/string.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/strings.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/sys_ioctl.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/sys_mman.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/sys_sendfile.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/sys_socket.c2i	/^import unistd local;$/;"	v
local	$C2_ROOT/libs/libc/sys_stat.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/sys_time.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/sys_utsname.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/uio.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/libc/unistd.c2i	/^import libc_fcntl local;$/;"	v
local	$C2_ROOT/libs/lua/lua.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/lua/lua_auxlib.c2i	/^import lua local;$/;"	v
local	$C2_ROOT/libs/lua/lua_lib.c2i	/^import lua local;$/;"	v
local	$C2_ROOT/libs/math/math.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/pthread/pthread.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/sdl2/sdl.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/sdl2_image/sdl_image.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^import c2 local;$/;"	v
local	$C2_ROOT/libs/sokol/sokol_glue.c2i	/^import sokol_gfx as sg local;$/;"	v
local	$C2_ROOT/libs/sokol/sokol_math.c2i	/^import math local;$/;"	v
local	$C2_ROOT/parser/ast_builder.c2	/^import stdlib local;$/;"	v
local	$C2_ROOT/parser/c2_parser.c2	/^import token local;$/;"	v
local	$C2_ROOT/parser/c2_parser_expr.c2	/^import token local;$/;"	v
local	$C2_ROOT/parser/c2_parser_stmt.c2	/^import token local;$/;"	v
local	$C2_ROOT/parser/c2_parser_switch.c2	/^import token local;$/;"	v
local	$C2_ROOT/parser/c2_parser_type.c2	/^import token local;$/;"	v
local	$C2_ROOT/parser/c2_tokenizer.c2	/^import token local;$/;"	v
local	$C2_ROOT/parser/case_list.c2	/^import string local;$/;"	v
local	$C2_ROOT/parser/expr_list.c2	/^import string local;$/;"	v
local	$C2_ROOT/parser/keywords.c2	/^import token local;$/;"	v
local	$C2_ROOT/parser/stmt_list.c2	/^import string local;$/;"	v
local	$C2_ROOT/parser/token.c2	/^import src_loc local;$/;"	v
local	$C2_ROOT/plugins/deps_generator.c2	/^import string local;$/;"	v
local	$C2_ROOT/plugins/deps_generator_plugin.c2	/^import stdlib local;$/;"	v
local	$C2_ROOT/plugins/deps_generator_utils.c2	/^import ast local;$/;"	v
local	$C2_ROOT/plugins/git_version_plugin.c2	/^import string local;$/;"	v
local	$C2_ROOT/plugins/refs_generator.c2	/^import string_utils local;$/;"	v
local	$C2_ROOT/plugins/refs_generator_plugin.c2	/^import stdlib local;$/;"	v
local	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^import string local;$/;"	v
local	$C2_ROOT/plugins/unit_test1.c2	/^import stdarg local;$/;"	v
local	$C2_ROOT/plugins/unit_test2.c2	/^import stdio local;$/;"	v
local	$C2_ROOT/plugins/unit_test_plugin.c2	/^import stdlib local;$/;"	v
locals	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_gen_locals_Locals locals;$/;"	v
locals	$C2_ROOT/generator/ir/ir_generator.c2	/^    Locals locals;$/;"	v
localtime	$C2_ROOT/libs/libc/libc_time.c2i	/^fn Tm* localtime(const Time* timep);$/;"	f
localtime_r	$C2_ROOT/libs/libc/libc_time.c2i	/^fn Tm* localtime_r(const Time* timep, Tm* result);$/;"	f
locate	$C2_ROOT/common/source_mgr.c2	/^public fn Location SourceMgr.locate(SourceMgr* sm, SrcLoc loc) {$/;"	f
location	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t location;$/;"	v
location	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^    char[512] location;$/;"	v
location	$C2_ROOT/ir/inserter.c2	/^    if (ins.cur < ins.count) ins.next_loc = ins.ins[ins.cur].location;$/;"	v
lock	$C2_ROOT/ir/work_queue.c2	/^    pthread.Mutex lock;$/;"	v
lock	$C2_ROOT/libs/pthread/pthread.c2i	/^fn c_int Mutex.lock(Mutex* mutex) @(cname="pthread_mutex_lock");$/;"	f
lock	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Texture.lock(Texture* texture, const Rect* rect, void** pixels, c_int* pitch)  @(cname=/;"	f
lockMouse	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void lockMouse(bool lock) @(cname="sapp_lock_mouse");$/;"	f
locked	$C2_ROOT/libs/sdl2/sdl.c2i	/^    c_int locked;$/;"	v
locstr	$C2_ROOT/compiler/c2recipe_parser.c2	/^    char[256] locstr;$/;"	v
locstr	$C2_ROOT/parser/c2_parser.c2	/^    char[256] locstr;$/;"	v
log	$C2_ROOT/common/console.c2	/^public fn void log(const char* format @(printf_format), ...) {$/;"	f
log	$C2_ROOT/libs/math/math.c2i	/^fn c_double log(c_double);$/;"	f
log	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void log(const char* fmt @(printf_format), ...) @(cname="SDL_Log");$/;"	f
log	$C2_ROOT/plugins/unit_test1.c2	/^public fn void log(const char* fmt @(printf_format), ...) {$/;"	f
log10	$C2_ROOT/libs/math/math.c2i	/^fn c_double log10(c_double);$/;"	f
log10f	$C2_ROOT/libs/math/math.c2i	/^fn c_float log10f(c_float);$/;"	f
log1p	$C2_ROOT/libs/math/math.c2i	/^fn c_double log1p(c_double);$/;"	f
log1pf	$C2_ROOT/libs/math/math.c2i	/^fn c_float log1pf(c_float);$/;"	f
log2	$C2_ROOT/libs/math/math.c2i	/^fn c_double log2(c_double);$/;"	f
log2f	$C2_ROOT/libs/math/math.c2i	/^fn c_float log2f(c_float);$/;"	f
log_time	$C2_ROOT/common/console.c2	/^public fn void log_time(const char* item, u64 duration) {$/;"	f
log_verbose	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool log_verbose;$/;"	v
log_verbose	$C2_ROOT/compiler/main.c2	/^    bool log_verbose;$/;"	v
logb	$C2_ROOT/libs/math/math.c2i	/^fn c_double logb(c_double);$/;"	f
logbf	$C2_ROOT/libs/math/math.c2i	/^fn c_float logbf(c_float);$/;"	f
logf	$C2_ROOT/libs/math/math.c2i	/^fn c_float logf(c_float);$/;"	f
logger	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    Logger logger;$/;"	v
logger	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    Logger logger;$/;"	v
logger	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    Logger logger;$/;"	v
logger	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    Logger logger;$/;"	v
logger	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    Logger logger;$/;"	v
longjmp	$C2_ROOT/libs/libc/csetjmp.c2i	/^fn void longjmp(JmpBuf __env, i32 __val) @(noreturn);$/;"	f
lookAt	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Mat4 Mat4.lookAt(const Vec3* eye, const Vec3* center, const Vec3* up) {$/;"	f
lookahead	$C2_ROOT/bootstrap/bootstrap.c	/^   return lookahead;$/;"	v
lookat	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void lookat(f32 eye_x, f32 eye_y, f32 eye_z, f32 center_x, f32 center_y, f32 center_z, f32 up/;"	f
lookup_table_Table	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct lookup_table_Table_ lookup_table_Table;$/;"	v
loops	$C2_ROOT/ir_examples/cond_decl.c2	/^    loops = 3;$/;"	v
lparen	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void Buf.lparen(Buf* buf) { buf.add1('('); }$/;"	f
lrand48	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_long lrand48();$/;"	f
lrand48_r	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int lrand48_r(Drand48_data* __buffer, c_long* __result);$/;"	f
lrint	$C2_ROOT/libs/math/math.c2i	/^fn c_long lrint(c_double);$/;"	f
lrintf	$C2_ROOT/libs/math/math.c2i	/^fn c_long lrintf(c_float);$/;"	f
lround	$C2_ROOT/libs/math/math.c2i	/^fn c_long lround(c_double);$/;"	f
lroundf	$C2_ROOT/libs/math/math.c2i	/^fn c_long lroundf(c_float);$/;"	f
ls	$C2_ROOT/analyser/module_analyser_stmt.c2	/^            label.stmt = ls;$/;"	v
ls	$C2_ROOT/bootstrap/bootstrap.c	/^         label->stmt = ls;$/;"	v
lseek	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_ulong lseek (i32 fd, c_ulong offset, i32 whence);$/;"	f
lstat	$C2_ROOT/libs/libc/sys_stat.c2i	/^fn c_int lstat(const c_char* pathname, Stat* buf);$/;"	f
ltype	$C2_ROOT/analyser/module_analyser_binop.c2	/^        result = ltype;$/;"	v
ltype	$C2_ROOT/analyser/module_analyser_expr.c2	/^    return ltype;$/;"	v
ltype	$C2_ROOT/bootstrap/bootstrap.c	/^   return ltype;$/;"	v
lua	$C2_ROOT/libs/lua/lua.c2i	/^module lua;$/;"	v
luaL_loadfilex	$C2_ROOT/libs/lua/lua_auxlib.c2i	/^fn c_int luaL_loadfilex(State *L, const c_char* filename, const c_char* mode);$/;"	f
luaL_newstate	$C2_ROOT/libs/lua/lua_auxlib.c2i	/^fn State* luaL_newstate();$/;"	f
luaL_openlibs	$C2_ROOT/libs/lua/lua_lib.c2i	/^fn void luaL_openlibs(State* L);$/;"	f
luaL_requiref	$C2_ROOT/libs/lua/lua_auxlib.c2i	/^fn void luaL_requiref(State *L, const c_char* modname,$/;"	f
lua_auxlib	$C2_ROOT/libs/lua/lua_auxlib.c2i	/^module lua_auxlib;$/;"	v
lua_ident	$C2_ROOT/libs/lua/lua.c2i	/^const char* lua_ident;$/;"	v
lua_lib	$C2_ROOT/libs/lua/lua_lib.c2i	/^module lua_lib;$/;"	v
lua_type	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int lua_type(State *L, c_int idx) @(cname="lua_type");$/;"	f
luaopen_base	$C2_ROOT/libs/lua/lua_lib.c2i	/^fn i32 luaopen_base(State *L);$/;"	f
luaopen_bit32	$C2_ROOT/libs/lua/lua_lib.c2i	/^fn i32 luaopen_bit32(State *L);$/;"	f
luaopen_coroutine	$C2_ROOT/libs/lua/lua_lib.c2i	/^fn i32 luaopen_coroutine(State *L);$/;"	f
luaopen_debug	$C2_ROOT/libs/lua/lua_lib.c2i	/^fn i32 luaopen_debug(State *L);$/;"	f
luaopen_io	$C2_ROOT/libs/lua/lua_lib.c2i	/^fn i32 luaopen_io(State *L);$/;"	f
luaopen_math	$C2_ROOT/libs/lua/lua_lib.c2i	/^fn i32 luaopen_math(State *L);$/;"	f
luaopen_os	$C2_ROOT/libs/lua/lua_lib.c2i	/^fn i32 luaopen_os(State *L);$/;"	f
luaopen_package	$C2_ROOT/libs/lua/lua_lib.c2i	/^fn i32 luaopen_package(State *L);$/;"	f
luaopen_string	$C2_ROOT/libs/lua/lua_lib.c2i	/^fn i32 luaopen_string(State *L);$/;"	f
luaopen_table	$C2_ROOT/libs/lua/lua_lib.c2i	/^fn i32 luaopen_table(State *L);$/;"	f
luaopen_utf8	$C2_ROOT/libs/lua/lua_lib.c2i	/^fn i32 luaopen_utf8(State *L);$/;"	f
lval	$C2_ROOT/analyser/module_analyser_expr.c2	/^    Value lval;$/;"	v
lval	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_Value lval;$/;"	v
lvl	$C2_ROOT/analyser/scope.c2	/^    u32 lvl;$/;"	v
lvl	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t lvl;$/;"	v
ma	$C2_ROOT/analyser/module_analyser.c2	/^    return ma;$/;"	v
ma	$C2_ROOT/analyser/module_analyser_call.c2	/^    Analyser* ma;$/;"	v
ma	$C2_ROOT/bootstrap/bootstrap.c	/^   return ma;$/;"	v
machine	$C2_ROOT/libs/libc/sys_utsname.c2i	/^    char[NAME_LEN] machine;$/;"	v
macosGetWindow	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* macosGetWindow() @(cname="sapp_macos_get_window");$/;"	f
mag_filter	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    Filter mag_filter;$/;"	v
main	$C2_ROOT/analyser/module_analyser.c2	/^    return marker.main;$/;"	v
main	$C2_ROOT/bootstrap/bootstrap.c	/^   string_buffer_Buf_print(buf, "module %s_main;\\n\\npublic fn i32 main(i32 argc, char** argv) /;"	f
main	$C2_ROOT/compiler/main.c2	/^public fn i32 main(i32 argc, char** argv) {$/;"	f
main	$C2_ROOT/ir_examples/arith.c2	/^public fn i32 main(i32 argc, const char** argv) {$/;"	f
main	$C2_ROOT/ir_examples/array.c2	/^public fn i32 main() {$/;"	f
main	$C2_ROOT/ir_examples/builtins.c2	/^public fn i32 main() {$/;"	f
main	$C2_ROOT/ir_examples/calls.c2	/^public fn i32 main(i32 argc, const char** argv) {$/;"	f
main	$C2_ROOT/ir_examples/cond_decl.c2	/^public fn i32 main(i32 argc, const char** argv) {$/;"	f
main	$C2_ROOT/ir_examples/for.c2	/^public fn i32 main() {$/;"	f
main	$C2_ROOT/ir_examples/functions.c2	/^public fn i32 main(i32 argc, const char** argv) {$/;"	f
main	$C2_ROOT/ir_examples/global_arrays.c2	/^public fn i32 main() {$/;"	f
main	$C2_ROOT/ir_examples/global_vars.c2	/^public fn i32 main() {$/;"	f
main	$C2_ROOT/ir_examples/goto.c2	/^public fn i32 main(i32 argc, const char** argv) {$/;"	f
main	$C2_ROOT/ir_examples/hello.c2	/^public fn i32 main(i32 argc, const char** argv) {$/;"	f
main	$C2_ROOT/ir_examples/if_stmt.c2	/^public fn i32 main(i32 argc, const char** argv) {$/;"	f
main	$C2_ROOT/ir_examples/label.c2	/^public fn i32 main() {$/;"	f
main	$C2_ROOT/ir_examples/logic.c2	/^public fn i32 main() {$/;"	f
main	$C2_ROOT/ir_examples/members.c2	/^public fn i32 main() {$/;"	f
main	$C2_ROOT/ir_examples/struct_func.c2	/^public fn i32 main() {$/;"	f
main	$C2_ROOT/ir_examples/struct_init.c2	/^public fn i32 main() {$/;"	f
main	$C2_ROOT/ir_examples/struct_init_anonymous.c2	/^public fn i32 main() {$/;"	f
main	$C2_ROOT/ir_examples/swap.c2	/^public fn i32 main() {$/;"	f
main	$C2_ROOT/ir_examples/types.c2	/^public fn i32 main() {$/;"	f
main	$C2_ROOT/ir_examples/while.c2	/^public fn i32 main(i32 argc, const char** argv) {$/;"	f
mainComp	$C2_ROOT/bootstrap/bootstrap.c	/^   component_Component* mainComp;$/;"	v
mainComp	$C2_ROOT/compiler/compiler.c2	/^    c.current = c.mainComp;$/;"	v
mainFunc	$C2_ROOT/bootstrap/bootstrap.c	/^   gen->mainFunc = mainFunc;$/;"	v
mainFunc	$C2_ROOT/compiler/compiler.c2	/^    ast.Decl* mainFunc;$/;"	v
mainFunc	$C2_ROOT/generator/c/c_generator.c2	/^    gen.mainFunc = mainFunc;$/;"	v
main_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t main_idx;$/;"	v
main_name	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t main_name;$/;"	v
main_name	$C2_ROOT/parser/ast_builder.c2	/^    u32 main_name;$/;"	v
make	$C2_ROOT/.github/workflows/main.yml	/^          make test$/;"	v
makeBuffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn Buffer makeBuffer(BufferDesc* desc) @(cname="sg_make_buffer");$/;"	f
makeContext	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn Context makeContext(ContextDesc* desc) @(cname="sdtx_make_context");$/;"	f
makeContext	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn Context makeContext(ContextDesc* desc) @(cname="sgl_make_context");$/;"	f
makeImage	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn Image makeImage(ImageDesc* desc) @(cname="sg_make_image");$/;"	f
makePipeline	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn Pipeline makePipeline(PipelineDesc* desc) @(cname="sg_make_pipeline");$/;"	f
makePipeline	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn Pipeline makePipeline(PipelineDesc* desc) @(cname="sgl_make_pipeline");$/;"	f
makeSampler	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn Sampler makeSampler(SamplerDesc* desc) @(cname="sg_make_sampler");$/;"	f
makeShader	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn Shader makeShader(ShaderDesc* desc) @(cname="sg_make_shader");$/;"	f
makeView	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn View makeView(ViewDesc* desc) @(cname="sg_make_view");$/;"	f
make_path	$C2_ROOT/common/file/file_utils.c2	/^public fn const char* make_path(char *buf, usize size, const char* dir, const char* filename) {$/;"	f
make_path3	$C2_ROOT/common/file/file_utils.c2	/^public fn const char* make_path3(char *buf, usize size, const char* dir, const char* subdir, con/;"	f
make_path_ext	$C2_ROOT/common/file/file_utils.c2	/^public fn const char* make_path_ext(char *buf, usize size, const char* dir, const char* filename/;"	f
malloc	$C2_ROOT/libs/libc/stdlib.c2i	/^fn void* malloc(c_size size);$/;"	f
manifest	$C2_ROOT/compiler/compiler_libs.c2	/^import manifest;$/;"	v
manifest	$C2_ROOT/compiler/manifest.c2	/^module manifest;$/;"	v
manifest_writer	$C2_ROOT/common/manifest_writer.c2	/^module manifest_writer;$/;"	v
manifest_writer	$C2_ROOT/generator/c/c_generator.c2	/^import manifest_writer;$/;"	v
map	$C2_ROOT/bootstrap/bootstrap.c	/^   uint16_t* map;$/;"	v
map	$C2_ROOT/generator/c2refs.c2	/^    void* section = f.map;$/;"	v
map	$C2_ROOT/ir/interference_graph.c2	/^    u16* map;$/;"	v
map	$C2_ROOT/ir/live_map.c2	/^    u16* map;$/;"	v
map	$C2_ROOT/ir/slot_writes_map.c2	/^    SlotWrite* map;$/;"	v
mapRGB	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn u32 PixelFormat.mapRGB(const PixelFormat* format, u8 r, u8 g, u8 b) @(cname="SDL_MapRGB");$/;"	f
map_size	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t map_size;$/;"	v
map_start	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t map_start;$/;"	v
map_start	$C2_ROOT/ir/interference_graph.c2	/^    u32 map_start;$/;"	v
map_start	$C2_ROOT/ir/live_map.c2	/^    u32 map_start;$/;"	v
map_start	$C2_ROOT/ir/slot_writes_map.c2	/^    u32 map_start;$/;"	v
markUsedBlocks	$C2_ROOT/ir/context.c2	/^fn void Tools.markUsedBlocks(Tools* t, FunctionInfo* fi) {$/;"	f
mark_test_mode_decl	$C2_ROOT/generator/generator_utils.c2	/^fn void mark_test_mode_decl(void* arg, Decl* d) {$/;"	f
mark_test_mode_mod	$C2_ROOT/generator/generator_utils.c2	/^fn void mark_test_mode_mod(void* arg, ast.Module* m) {$/;"	f
mark_used	$C2_ROOT/generator/generator_utils.c2	/^public fn void mark_used(component.Component* mainComp, const module_list.List* allmodules, bool/;"	f
mark_used_decl	$C2_ROOT/generator/generator_utils.c2	/^fn void mark_used_decl(void* arg, const Ref* ref) {$/;"	f
mask	$C2_ROOT/ast/value.c2	/^public fn void Value.mask(Value* v, u32 width) {$/;"	f
mat4	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn Mat4 mat4(f32* m) @(cname="sshape_mat4");$/;"	f
mat4Transpose	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn Mat4 mat4Transpose(f32* m) @(cname="sshape_mat4_transpose");$/;"	f
match	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    text = text + match;$/;"	v
match_name	$C2_ROOT/generator/c2_trace.c2	/^fn bool match_name(const char *name, const char *pattern) {$/;"	f
match_node	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^fn u32 Tree.match_node(const Tree* t, u32 node_idx, const char* text, u32 len, u32* cur_match) {$/;"	f
match_pattern	$C2_ROOT/generator/c2_trace.c2	/^fn bool match_pattern(const char *name, const char *pattern) {$/;"	f
match_type	$C2_ROOT/generator/c/c_generator.c2	/^fn bool match_type(const char* s, const char* list, const char** sp) {$/;"	f
matchesTemplate	$C2_ROOT/ast/type_ref.c2	/^fn bool TypeRef.matchesTemplate(const TypeRef* r, u32 template_arg) {$/;"	f
math	$C2_ROOT/libs/math/math.c2i	/^module math;$/;"	v
matrixModeModelview	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void matrixModeModelview() @(cname="sgl_matrix_mode_modelview");$/;"	f
matrixModeProjection	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void matrixModeProjection() @(cname="sgl_matrix_mode_projection");$/;"	f
matrixModeTexture	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void matrixModeTexture() @(cname="sgl_matrix_mode_texture");$/;"	f
max	$C2_ROOT/analyser/init_checker.c2	/^    u32 max;$/;"	v
max	$C2_ROOT/analyser/module_analyser_init.c2	/^    u64 index64 = u64.max;$/;"	v
max	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t max;$/;"	v
max	$C2_ROOT/generator/c2refs.c2	/^const u32 NOT_FOUND = u32.max;$/;"	v
max	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^    l.max_inits = max;$/;"	v
max	$C2_ROOT/ir/inserter.c2	/^    else ins.next_loc = u32.max;$/;"	v
max	$C2_ROOT/ir/interference_graph.c2	/^const u16 NULL = u16.max;$/;"	v
max	$C2_ROOT/ir/live_map.c2	/^const u16 NULL = u16.max;$/;"	v
max	$C2_ROOT/ir/slot_writes_map.c2	/^const u16 NULL = u16.max;$/;"	v
max	$C2_ROOT/libs/sokol/sokol_math.c2i	/^    if (value > max) return max;$/;"	v
max_align	$C2_ROOT/analyser/size_analyser.c2	/^    pos = (pos + max_align - 1) & -max_align;$/;"	v
max_align	$C2_ROOT/bootstrap/bootstrap.c	/^   layout->alignment = max_align;$/;"	v
max_anisotropy	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 max_anisotropy;$/;"	v
max_color_attachments	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 max_color_attachments;$/;"	v
max_commands	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    i32 max_commands;$/;"	v
max_commands	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    i32 max_commands;$/;"	v
max_commit_listeners	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 max_commit_listeners;$/;"	v
max_dropped_file_path_length	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    i32 max_dropped_file_path_length;$/;"	v
max_dropped_files	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    i32 max_dropped_files;$/;"	v
max_elems	$C2_ROOT/ir/interference_graph.c2	/^    u32 max_elems;$/;"	v
max_elems	$C2_ROOT/ir/live_map.c2	/^    u32 max_elems;$/;"	v
max_elems	$C2_ROOT/ir/slot_writes_map.c2	/^    u32 max_elems;$/;"	v
max_files	$C2_ROOT/ast/module.c2	/^    u32 max_files;$/;"	v
max_files	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t max_files;$/;"	v
max_files	$C2_ROOT/common/build_target.c2	/^    u32 max_files;$/;"	v
max_files	$C2_ROOT/common/source_mgr.c2	/^    u32 max_files;$/;"	v
max_files	$C2_ROOT/compiler/c2recipe_parser.c2	/^    u32 max_files;$/;"	v
max_idx	$C2_ROOT/analyser/module_analyser.c2	/^    u32 max_idx;$/;"	v
max_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t max_idx;$/;"	v
max_idx	$C2_ROOT/ir/usage_counter.c2	/^    u32 max_idx;$/;"	v
max_image_array_layers	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 max_image_array_layers;$/;"	v
max_image_size_2d	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 max_image_size_2d;$/;"	v
max_image_size_3d	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 max_image_size_3d;$/;"	v
max_image_size_array	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 max_image_size_array;$/;"	v
max_image_size_cube	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 max_image_size_cube;$/;"	v
max_index	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t max_index;$/;"	v
max_index	$C2_ROOT/parser/keywords.c2	/^    u32 max_index;$/;"	v
max_inits	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t max_inits;$/;"	v
max_inits	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^    u32 max_inits;$/;"	v
max_lengths	$C2_ROOT/generator/c2refs.c2	/^    f.cap = max_lengths;$/;"	v
max_lod	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    f32 max_lod;$/;"	v
max_mods	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t max_mods;$/;"	v
max_mods	$C2_ROOT/common/module_list.c2	/^    u32 max_mods;$/;"	v
max_namesize	$C2_ROOT/generator/c2refs.c2	/^    u32 size = sizeof(Files) + num_files * sizeof(File) + max_namesize;$/;"	v
max_offset	$C2_ROOT/common/source_mgr.c2	/^    u32 max_offset;$/;"	v
max_open	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t max_open;$/;"	v
max_size	$C2_ROOT/analyser/size_analyser.c2	/^    layout.size = max_size;$/;"	v
max_size	$C2_ROOT/bootstrap/bootstrap.c	/^   layout->size = max_size;$/;"	v
max_storage_buffer_bindings_per_stage	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 max_storage_buffer_bindings_per_stage;$/;"	v
max_storage_image_bindings_per_stage	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 max_storage_image_bindings_per_stage;$/;"	v
max_targets	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t max_targets;$/;"	v
max_targets	$C2_ROOT/compiler/c2recipe.c2	/^    u32 max_targets;$/;"	v
max_texture_bindings_per_stage	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 max_texture_bindings_per_stage;$/;"	v
max_u64	$C2_ROOT/ast/value.c2	/^                result.uvalue = max_u64;$/;"	v
max_u64	$C2_ROOT/parser/c2_tokenizer.c2	/^            value = max_u64;$/;"	v
max_val	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^    u64 max_val;$/;"	v
max_val	$C2_ROOT/bootstrap/bootstrap.c	/^   uint64_t max_val;$/;"	v
max_vertex_attrs	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 max_vertex_attrs;$/;"	v
max_vertices	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    i32 max_vertices;$/;"	v
mbedtls	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^module mbedtls;$/;"	v
mblen	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int mblen(const c_char* __s, c_size __n);$/;"	f
mbstowcs	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int mbstowcs(c_int* __pwcs, const c_char* __s, c_size __n);$/;"	f
mbtowc	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int mbtowc(c_int* __pwc, const c_char* __s, c_size __n);$/;"	f
measureText	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn c_int Font.measureText(Font* font, const char* text, c_int measure_width, c_int* extent, c_in/;"	f
mem_end	$C2_ROOT/libs/libc/net_if.c2i	/^    c_ulong mem_end;$/;"	v
mem_map	$C2_ROOT/ir/interference_graph.c2	/^        u32 mem_usage = mem_variables + mem_map;$/;"	v
mem_map	$C2_ROOT/ir/live_map.c2	/^        u32 mem_usage = mem_variables + mem_map;$/;"	v
mem_map	$C2_ROOT/ir/slot_writes_map.c2	/^        u32 mem_usage = mem_blocks + mem_map;$/;"	v
mem_start	$C2_ROOT/libs/libc/net_if.c2i	/^    c_ulong mem_start;$/;"	v
member	$C2_ROOT/analyser/module_analyser_builtin.c2	/^        MemberExpr* m = (MemberExpr*)member;$/;"	v
member	$C2_ROOT/analyser/module_analyser_struct.c2	/^        if (member.isStructType()) sub = (StructTypeDecl*)member;$/;"	v
member	$C2_ROOT/ast/builtin_expr.c2	/^    return b.offset[0].member;$/;"	v
member	$C2_ROOT/bootstrap/bootstrap.c	/^   return b->offset[0].member;$/;"	v
member	$C2_ROOT/parser/ast_builder.c2	/^                                                     member,$/;"	v
memberError	$C2_ROOT/analyser/module_analyser_expr.c2	/^fn void Analyser.memberError(Analyser* ma, u32 name_idx, SrcLoc loc, StructTypeDecl* s) {$/;"	f
memberExprBits	$C2_ROOT/ast/member_expr.c2	/^    const MemberExprBits* bits = &m.base.base.memberExprBits;$/;"	v
memberExprBits	$C2_ROOT/ast/stmt.c2	/^        MemberExprBits memberExprBits;$/;"	v
memberExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_MemberExprBits memberExprBits;$/;"	v
member_idx	$C2_ROOT/analyser/module_analyser_init.c2	/^        f.member_idx = fi.member_idx;$/;"	v
member_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t member_idx;$/;"	v
member_name	$C2_ROOT/analyser/module_analyser_init.c2	/^            f.name_idx = member_name;$/;"	v
member_name	$C2_ROOT/bootstrap/bootstrap.c	/^         f->name_idx = member_name;$/;"	v
members	$C2_ROOT/ast/struct_type_decl.c2	/^    return d.members;$/;"	v
members	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->members;$/;"	v
members	$C2_ROOT/parser/ast_builder.c2	/^                                              members,$/;"	v
memccpy	$C2_ROOT/libs/libc/string.c2i	/^fn void* memccpy(void* dest, const void* src, c_int c, c_size n);$/;"	f
memchr	$C2_ROOT/libs/libc/string.c2i	/^fn void* memchr(const void* s, c_int c, c_size n);$/;"	f
memcmp	$C2_ROOT/libs/libc/string.c2i	/^fn c_int memcmp(const void* s1, const void* s2, c_size n);$/;"	f
memcpy	$C2_ROOT/libs/libc/string.c2i	/^fn void* memcpy(void* dest, const void* src, c_size n);$/;"	f
memmem	$C2_ROOT/libs/libc/string.c2i	/^fn void* memmem(const void* s1, c_size size1, const void* s2, c_size size2);$/;"	f
memmove	$C2_ROOT/libs/libc/string.c2i	/^fn void* memmove(void* dest, const void* src, c_size n);$/;"	f
mempcpy	$C2_ROOT/libs/libc/string.c2i	/^fn void* mempcpy(void* dest, const void* src, c_size n);$/;"	f
memrchr	$C2_ROOT/libs/libc/string.c2i	/^fn void* memrchr(const void* s, c_int c, c_size n);$/;"	f
memset	$C2_ROOT/libs/libc/string.c2i	/^fn void* memset(void* s, c_int c, c_size n);$/;"	f
memset	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void memset(void* dst, c_int c, usize len) @(cname="SDL_memset");$/;"	f
memset_explicit	$C2_ROOT/libs/libc/string.c2i	/^fn void* memset_explicit(void* s, c_int c, c_size n);$/;"	f
merge	$C2_ROOT/ir/block_list.c2	/^public fn void BlockList.merge(BlockList* l1, const BlockList* l2) {$/;"	f
merge	$C2_ROOT/ir/register_alloc.c2	/^fn void LiveVector.merge(LiveVector* v, u32 blk_id) {$/;"	f
merge	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    bool merge;$/;"	v
mergeSmaller	$C2_ROOT/analyser/conversion_checker_expr.c2	/^fn ExprWidth ExprWidth.mergeSmaller(ExprWidth w1, ExprWidth w2) {$/;"	f
mergeWider	$C2_ROOT/analyser/conversion_checker_expr.c2	/^fn ExprWidth ExprWidth.mergeWider(ExprWidth w1, ExprWidth w2) {$/;"	f
merge_zones	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^fn void Tree.merge_zones(Tree* t, Zone* zone) {$/;"	f
message	$C2_ROOT/bootstrap/bootstrap.c	/^   return p->message;$/;"	v
message	$C2_ROOT/common/yaml/yaml_parser.c2	/^    return p.message;$/;"	v
metal	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    MetalSwapchain metal;$/;"	v
metalGetCurrentDrawable	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* metalGetCurrentDrawable() @(cname="sapp_metal_get_current_drawable");$/;"	f
metalGetDepthStencilTexture	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* metalGetDepthStencilTexture() @(cname="sapp_metal_get_depth_stencil_texture");$/;"	f
metalGetDevice	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* metalGetDevice() @(cname="sapp_metal_get_device");$/;"	f
metalGetMsaaColorTexture	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* metalGetMsaaColorTexture() @(cname="sapp_metal_get_msaa_color_texture");$/;"	f
middle	$C2_ROOT/bootstrap/bootstrap.c	/^      sm->last_file = middle;$/;"	v
min	$C2_ROOT/generator/c2_trace.c2	/^        min2 = min;$/;"	v
min	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    c_int min;$/;"	v
min	$C2_ROOT/libs/sokol/sokol_math.c2i	/^    if (value < min) return min;$/;"	v
min2	$C2_ROOT/generator/c2_trace.c2	/^        min2 = min;$/;"	v
min_filter	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    Filter min_filter;$/;"	v
min_idx	$C2_ROOT/analyser/module_analyser.c2	/^    u32 min_idx;$/;"	v
min_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t min_idx;$/;"	v
min_lod	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    f32 min_lod;$/;"	v
min_val	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^    i64 min_val;$/;"	v
min_val	$C2_ROOT/bootstrap/bootstrap.c	/^   int64_t min_val;$/;"	v
minus	$C2_ROOT/ast/value.c2	/^public fn Value Value.minus(const Value* v1, const Value* v2) {$/;"	f
mip_level	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 mip_level;$/;"	v
mip_levels	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    TextureViewRange mip_levels;$/;"	v
mipmap_filter	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    Filter mipmap_filter;$/;"	v
missing_arg	$C2_ROOT/compiler/main.c2	/^fn void missing_arg(const char* option) {$/;"	f
mkdir	$C2_ROOT/libs/libc/sys_stat.c2i	/^fn c_int mkdir(const char* __file, c_uint mode);$/;"	f
mkdtemp	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_char* mkdtemp(c_char* __template);$/;"	f
mkstemp	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int mkstemp(c_char* __template);$/;"	f
mkstemps	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int mkstemps(c_char* __template, c_int __suffixlen);$/;"	f
mktemp	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_char* mktemp(c_char* __template);$/;"	f
mktime	$C2_ROOT/libs/libc/libc_time.c2i	/^fn Time mktime(Tm* tm);$/;"	f
mlock_size	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn isize mlock_size(u32 entries, u32 flags) @(cname="io_uring_mlock_size");$/;"	f
mlock_size_params	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn isize mlock_size_params(u32 entries, Params *p) @(cname="io_uring_mlock_size_params");$/;"	f
mmap	$C2_ROOT/libs/libc/sys_mman.c2i	/^fn void* mmap(void* addr, c_size length, c_int prot, c_int flags, c_int fd, Offset offset);$/;"	f
mod	$C2_ROOT/analyser/module_analyser.c2	/^    ma.mod = mod;$/;"	v
mod	$C2_ROOT/analyser/scope.c2	/^    s.mod = mod;$/;"	v
mod	$C2_ROOT/ast/ast.c2	/^    a.mod = mod;$/;"	v
mod	$C2_ROOT/ast/module_type.c2	/^    t.mod = mod;$/;"	v
mod	$C2_ROOT/bootstrap/bootstrap.c	/^   t->mod = mod;$/;"	v
mod	$C2_ROOT/generator/c/c_generator.c2	/^    Module* mod;$/;"	v
mod	$C2_ROOT/generator/c/dep_finder.c2	/^    f.mod = mod;$/;"	v
mod	$C2_ROOT/generator/c2i/c2i_generator.c2	/^    Module* mod;$/;"	v
mod1	$C2_ROOT/plugins/deps_generator.c2	/^                mod1$/;"	v
mod2	$C2_ROOT/plugins/deps_generator.c2	/^                mod2$/;"	v
mod2idx	$C2_ROOT/analyser/module_sorter.c2	/^fn u32 ModuleSorter.mod2idx(const ModuleSorter* s, const ast.Module* mod) {$/;"	f
mod3	$C2_ROOT/plugins/deps_generator.c2	/^                mod3$/;"	v
mod4	$C2_ROOT/plugins/deps_generator.c2	/^              mod4$/;"	v
mod_loc	$C2_ROOT/parser/ast_builder.c2	/^                                      mod_loc,$/;"	v
mod_name	$C2_ROOT/bootstrap/bootstrap.c	/^   const char* mod_name;$/;"	v
mod_name	$C2_ROOT/generator/c2i/c2i_generator.c2	/^    const char* mod_name;$/;"	v
mod_name	$C2_ROOT/parser/ast_builder.c2	/^                                      mod_name,$/;"	v
mod_name	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^    if (mod_name) mname = mod_name;$/;"	v
modf	$C2_ROOT/libs/math/math.c2i	/^fn c_double modf(c_double, c_double *);$/;"	f
modff	$C2_ROOT/libs/math/math.c2i	/^fn c_float modff(c_float, c_float *);$/;"	f
modifiers	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    u32 modifiers;$/;"	v
mods	$C2_ROOT/bootstrap/bootstrap.c	/^   return l->mods;$/;"	v
mods	$C2_ROOT/common/component.c2	/^    module_list.List mods;$/;"	v
mods	$C2_ROOT/common/module_list.c2	/^    return (const ast.Module**)l.mods;$/;"	v
module	$C2_ROOT/analyser/conversion_checker.c2	/^module conversion_checker;$/;"	v
module	$C2_ROOT/analyser/conversion_checker_expr.c2	/^module conversion_checker;$/;"	v
module	$C2_ROOT/analyser/incr_array_list.c2	/^module incr_array_list;$/;"	v
module	$C2_ROOT/analyser/init_checker.c2	/^module init_checker;$/;"	v
module	$C2_ROOT/analyser/label_vector.c2	/^module label_vector;$/;"	v
module	$C2_ROOT/analyser/module_analyser.c2	/^module module_analyser;$/;"	v
module	$C2_ROOT/analyser/module_analyser_binop.c2	/^module module_analyser;$/;"	v
module	$C2_ROOT/analyser/module_analyser_builtin.c2	/^module module_analyser;$/;"	v
module	$C2_ROOT/analyser/module_analyser_call.c2	/^module module_analyser;$/;"	v
module	$C2_ROOT/analyser/module_analyser_expr.c2	/^module module_analyser;$/;"	v
module	$C2_ROOT/analyser/module_analyser_function.c2	/^module module_analyser;$/;"	v
module	$C2_ROOT/analyser/module_analyser_init.c2	/^module module_analyser;$/;"	v
module	$C2_ROOT/analyser/module_analyser_member.c2	/^module module_analyser;$/;"	v
module	$C2_ROOT/analyser/module_analyser_stmt.c2	/^module module_analyser;$/;"	v
module	$C2_ROOT/analyser/module_analyser_struct.c2	/^module module_analyser;$/;"	v
module	$C2_ROOT/analyser/module_analyser_switch.c2	/^module module_analyser;$/;"	v
module	$C2_ROOT/analyser/module_analyser_type.c2	/^module module_analyser;$/;"	v
module	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^module module_analyser;$/;"	v
module	$C2_ROOT/analyser/module_sorter.c2	/^module module_sorter;$/;"	v
module	$C2_ROOT/analyser/name_vector.c2	/^module name_vector;$/;"	v
module	$C2_ROOT/analyser/scope.c2	/^module scope;$/;"	v
module	$C2_ROOT/analyser/size_analyser.c2	/^module size_analyser;$/;"	v
module	$C2_ROOT/analyser/struct_field_init_checker.c2	/^module module_analyser;$/;"	v
module	$C2_ROOT/analyser/struct_func_list.c2	/^module struct_func_list;$/;"	v
module	$C2_ROOT/analyser/unused_checker.c2	/^module unused_checker;$/;"	v
module	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^module ctv_analyser;$/;"	v
module	$C2_ROOT/analyser_utils/printf_utils.c2	/^module printf_utils;$/;"	v
module	$C2_ROOT/ast/alias_type.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/alias_type_decl.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/array_designated_init_expr.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/array_subscript_expr.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/array_type.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/array_value.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/array_value_list.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/asm_stmt.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/assert_stmt.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/ast.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/ast_evaluator.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/binary_operator.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/bitoffset_expr.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/boolean_literal.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/break_stmt.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/builtin_expr.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/builtin_type.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/call_expr.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/char_literal.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/compound_stmt.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/conditional_operator.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/continue_stmt.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/decl.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/decl_list.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/decl_stmt.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/enum_constant_decl.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/enum_type.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/enum_type_decl.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/explicit_cast_expr.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/expr.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/expr_list.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/fallthrough_stmt.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/field_designated_init_expr.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/float_literal.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/for_stmt.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/function_decl.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/function_decl_list.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/function_type.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/function_type_decl.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/goto_stmt.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/identifier_expr.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/if_stmt.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/implicit_cast_expr.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/import_decl.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/import_decl_list.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/init_list_expr.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/instance_table.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/instantiator.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/integer_literal.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/label_stmt.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/member_expr.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/module.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/module_type.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/nil_expr.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/paren_expr.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/pointer_pool.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/pointer_type.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/qualtype.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/range_expr.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/return_stmt.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/static_assert.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/static_assert_list.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/statistics.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/stmt.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/string_literal.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/string_type_pool.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/struct_type.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/struct_type_decl.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/switch_case.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/switch_stmt.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/symbol_table.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/type.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/type_expr.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/type_ref.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/unary_operator.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/utils.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/value.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/var_decl.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast/while_stmt.c2	/^module ast;$/;"	v
module	$C2_ROOT/ast_utils/attr.c2	/^module attr;$/;"	v
module	$C2_ROOT/ast_utils/attr_table.c2	/^module attr_table;$/;"	v
module	$C2_ROOT/ast_utils/color.c2	/^module color;$/;"	v
module	$C2_ROOT/ast_utils/constants.c2	/^module constants;$/;"	v
module	$C2_ROOT/ast_utils/context.c2	/^module ast_context;$/;"	v
module	$C2_ROOT/ast_utils/number_radix.c2	/^module number_radix;$/;"	v
module	$C2_ROOT/ast_utils/src_loc.c2	/^module src_loc;$/;"	v
module	$C2_ROOT/ast_utils/string_buffer.c2	/^module string_buffer;$/;"	v
module	$C2_ROOT/ast_utils/string_pool.c2	/^module string_pool;$/;"	v
module	$C2_ROOT/common/attr_handler.c2	/^module attr_handler;$/;"	v
module	$C2_ROOT/common/bit_array.c2	/^module bit_array;$/;"	v
module	$C2_ROOT/common/bit_utils.c2	/^module bit_utils;$/;"	v
module	$C2_ROOT/common/build_file.c2	/^module build_file;$/;"	v
module	$C2_ROOT/common/build_target.c2	/^module build_target;$/;"	v
module	$C2_ROOT/common/c2_prec.c2	/^module c2_prec;$/;"	v
module	$C2_ROOT/common/c_prec.c2	/^module c_prec;$/;"	v
module	$C2_ROOT/common/component.c2	/^module component;$/;"	v
module	$C2_ROOT/common/component_sorter.c2	/^module component_sorter;$/;"	v
module	$C2_ROOT/common/console.c2	/^module console;$/;"	v
module	$C2_ROOT/common/diagnostics.c2	/^module diagnostics;$/;"	v
module	$C2_ROOT/common/dsm_sorter.c2	/^module dsm_sorter;$/;"	v
module	$C2_ROOT/common/file/file_utils.c2	/^module file_utils;$/;"	v
module	$C2_ROOT/common/file/reader.c2	/^module file_utils;$/;"	v
module	$C2_ROOT/common/file/writer.c2	/^module file_utils;$/;"	v
module	$C2_ROOT/common/index_list.c2	/^module index_list;$/;"	v
module	$C2_ROOT/common/library_list.c2	/^module library_list;$/;"	v
module	$C2_ROOT/common/linked_list.c2	/^module linked_list;$/;"	v
module	$C2_ROOT/common/manifest_writer.c2	/^module manifest_writer;$/;"	v
module	$C2_ROOT/common/module_list.c2	/^module module_list;$/;"	v
module	$C2_ROOT/common/process_utils.c2	/^module process_utils;$/;"	v
module	$C2_ROOT/common/quicksort.c2	/^module quicksort;$/;"	v
module	$C2_ROOT/common/source_mgr.c2	/^module source_mgr;$/;"	v
module	$C2_ROOT/common/string_list.c2	/^module string_list;$/;"	v
module	$C2_ROOT/common/string_utils.c2	/^module string_utils;$/;"	v
module	$C2_ROOT/common/target_info.c2	/^module target_info;$/;"	v
module	$C2_ROOT/common/utf8.c2	/^module utf8;$/;"	v
module	$C2_ROOT/common/utils.c2	/^module utils;$/;"	v
module	$C2_ROOT/common/value_maplist.c2	/^module value_maplist;$/;"	v
module	$C2_ROOT/common/warning_flags.c2	/^module warning_flags;$/;"	v
module	$C2_ROOT/common/yaml/yaml_data.c2	/^module yaml;$/;"	v
module	$C2_ROOT/common/yaml/yaml_dump.c2	/^module yaml;$/;"	v
module	$C2_ROOT/common/yaml/yaml_iterator.c2	/^module yaml;$/;"	v
module	$C2_ROOT/common/yaml/yaml_parser.c2	/^module yaml;$/;"	v
module	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^module yaml;$/;"	v
module	$C2_ROOT/compiler/c2recipe.c2	/^module c2recipe;$/;"	v
module	$C2_ROOT/compiler/c2recipe_parser.c2	/^module c2recipe;$/;"	v
module	$C2_ROOT/compiler/c2recipe_yaml.c2	/^module c2recipe;$/;"	v
module	$C2_ROOT/compiler/compiler.c2	/^module compiler;$/;"	v
module	$C2_ROOT/compiler/compiler_libs.c2	/^module compiler;$/;"	v
module	$C2_ROOT/compiler/main.c2	/^module c2c_main;$/;"	v
module	$C2_ROOT/compiler/manifest.c2	/^module manifest;$/;"	v
module	$C2_ROOT/compiler/plugin_mgr.c2	/^module plugin_mgr;$/;"	v
module	$C2_ROOT/generator/ast_visitor.c2	/^module ast_visitor;$/;"	v
module	$C2_ROOT/generator/ast_visitor_expr.c2	/^module ast_visitor;$/;"	v
module	$C2_ROOT/generator/c/c_generator.c2	/^module c_generator;$/;"	v
module	$C2_ROOT/generator/c/c_generator_call.c2	/^module c_generator;$/;"	v
module	$C2_ROOT/generator/c/c_generator_expr.c2	/^module c_generator;$/;"	v
module	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^module c_generator;$/;"	v
module	$C2_ROOT/generator/c/c_generator_special.c2	/^module c_generator;$/;"	v
module	$C2_ROOT/generator/c/c_generator_stmt.c2	/^module c_generator;$/;"	v
module	$C2_ROOT/generator/c/c_generator_trace.c2	/^module c_generator;$/;"	v
module	$C2_ROOT/generator/c/dep_finder.c2	/^module dep_finder;$/;"	v
module	$C2_ROOT/generator/c2_trace.c2	/^module c2_trace;$/;"	v
module	$C2_ROOT/generator/c2i/c2i_generator.c2	/^module c2i_generator;$/;"	v
module	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^module c2i_generator;$/;"	v
module	$C2_ROOT/generator/c2i/c2i_generator_expr.c2	/^module c2i_generator;$/;"	v
module	$C2_ROOT/generator/c2i/c2i_generator_stmt.c2	/^module c2i_generator;$/;"	v
module	$C2_ROOT/generator/c2refs.c2	/^module c2refs;$/;"	v
module	$C2_ROOT/generator/generator_utils.c2	/^module generator_utils;$/;"	v
module	$C2_ROOT/generator/ir/array_init_sorter.c2	/^module array_init_sorter;$/;"	v
module	$C2_ROOT/generator/ir/basic_struct_layouter.c2	/^module ir_generator;$/;"	v
module	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^module ir_generator;$/;"	v
module	$C2_ROOT/generator/ir/ir_generator.c2	/^module ir_generator;$/;"	v
module	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^module ir_generator;$/;"	v
module	$C2_ROOT/generator/ir/ir_generator_call.c2	/^module ir_generator;$/;"	v
module	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^module ir_generator;$/;"	v
module	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^module ir_gen_locals;$/;"	v
module	$C2_ROOT/generator/ir/ir_generator_member.c2	/^module ir_generator;$/;"	v
module	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^module ir_generator;$/;"	v
module	$C2_ROOT/generator/ir/ir_generator_switch.c2	/^module ir_generator;$/;"	v
module	$C2_ROOT/generator/ir/ref_list.c2	/^module ref_list;$/;"	v
module	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^module radix_tree;$/;"	v
module	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^module radix_tree;$/;"	v
module	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^module radix_tree;$/;"	v
module	$C2_ROOT/ir/block.c2	/^module ir;$/;"	v
module	$C2_ROOT/ir/block_list.c2	/^module ir;$/;"	v
module	$C2_ROOT/ir/case_list.c2	/^module ir;$/;"	v
module	$C2_ROOT/ir/common.c2	/^module ir;$/;"	v
module	$C2_ROOT/ir/constant.c2	/^module ir_context;$/;"	v
module	$C2_ROOT/ir/constant_list.c2	/^module ir_context;$/;"	v
module	$C2_ROOT/ir/context.c2	/^module ir_context;$/;"	v
module	$C2_ROOT/ir/copy_list.c2	/^module ir_copy_list;$/;"	v
module	$C2_ROOT/ir/function_info.c2	/^module ir;$/;"	v
module	$C2_ROOT/ir/graphviz.c2	/^module ir_context;$/;"	v
module	$C2_ROOT/ir/init_value.c2	/^module ir_context;$/;"	v
module	$C2_ROOT/ir/init_value_list.c2	/^module ir_context;$/;"	v
module	$C2_ROOT/ir/inserter.c2	/^module ir_inserter;$/;"	v
module	$C2_ROOT/ir/instr.c2	/^module ir;$/;"	v
module	$C2_ROOT/ir/instr_kind.c2	/^module ir;$/;"	v
module	$C2_ROOT/ir/instr_list.c2	/^module ir;$/;"	v
module	$C2_ROOT/ir/interference_graph.c2	/^module ir_interference_graph;$/;"	v
module	$C2_ROOT/ir/live_map.c2	/^module ir_live_map;$/;"	v
module	$C2_ROOT/ir/lookup_table.c2	/^module ir_lookup_table;$/;"	v
module	$C2_ROOT/ir/phi_list.c2	/^module ir;$/;"	v
module	$C2_ROOT/ir/print.c2	/^module ir_context;$/;"	v
module	$C2_ROOT/ir/ref.c2	/^module ir;$/;"	v
module	$C2_ROOT/ir/register_alloc.c2	/^module ir_context;$/;"	v
module	$C2_ROOT/ir/rev_list.c2	/^module ir_rev_list;$/;"	v
module	$C2_ROOT/ir/rpo.c2	/^module ir_rpo;$/;"	v
module	$C2_ROOT/ir/slot_collector.c2	/^module ir_slot_collector;$/;"	v
module	$C2_ROOT/ir/slot_values.c2	/^module ir_slot_values;$/;"	v
module	$C2_ROOT/ir/slot_writes_map.c2	/^module ir_slot_writes_map;$/;"	v
module	$C2_ROOT/ir/ssa.c2	/^module ir_context;$/;"	v
module	$C2_ROOT/ir/switch.c2	/^module ir_context;$/;"	v
module	$C2_ROOT/ir/symbol_list.c2	/^module ir_context;$/;"	v
module	$C2_ROOT/ir/types.c2	/^module ir;$/;"	v
module	$C2_ROOT/ir/usage_counter.c2	/^module usage_counter;$/;"	v
module	$C2_ROOT/ir/work_queue.c2	/^module ir_context;$/;"	v
module	$C2_ROOT/ir_examples/arith.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/array.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/bitfield_init.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/builtins.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/calls.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/cond_decl.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/for.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/functions.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/global_arrays.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/global_vars.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/goto.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/hello.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/if_stmt.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/label.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/logic.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/members.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/struct_func.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/struct_init.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/struct_init_anonymous.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/swap.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/types.c2	/^module test;$/;"	v
module	$C2_ROOT/ir_examples/while.c2	/^module test;$/;"	v
module	$C2_ROOT/libs/c2/c2.c2i	/^module c2;$/;"	v
module	$C2_ROOT/libs/c2/c2_test.c2i	/^module c2_test;$/;"	v
module	$C2_ROOT/libs/c2/c2_trace_tables.c2i	/^module c2_trace_tables;$/;"	v
module	$C2_ROOT/libs/c2/char.c2i	/^module char;$/;"	v
module	$C2_ROOT/libs/c2/f32.c2i	/^module f32;$/;"	v
module	$C2_ROOT/libs/c2/f64.c2i	/^module f64;$/;"	v
module	$C2_ROOT/libs/c2/i16.c2i	/^module i16;$/;"	v
module	$C2_ROOT/libs/c2/i32.c2i	/^module i32;$/;"	v
module	$C2_ROOT/libs/c2/i64.c2i	/^module i64;$/;"	v
module	$C2_ROOT/libs/c2/i8.c2i	/^module i8;$/;"	v
module	$C2_ROOT/libs/c2/isize.c2i	/^module isize;$/;"	v
module	$C2_ROOT/libs/c2/u16.c2i	/^module u16;$/;"	v
module	$C2_ROOT/libs/c2/u32.c2i	/^module u32;$/;"	v
module	$C2_ROOT/libs/c2/u64.c2i	/^module u64;$/;"	v
module	$C2_ROOT/libs/c2/u8.c2i	/^module u8;$/;"	v
module	$C2_ROOT/libs/c2/usize.c2i	/^module usize;$/;"	v
module	$C2_ROOT/libs/c2/varargs.c2i	/^module varargs;$/;"	v
module	$C2_ROOT/libs/curses/curses.c2i	/^module curses;$/;"	v
module	$C2_ROOT/libs/dl/dlfcn.c2i	/^module dlfcn;$/;"	v
module	$C2_ROOT/libs/io_uring/io_uring.c2i	/^module io_uring;$/;"	v
module	$C2_ROOT/libs/libc/c_errno.c2i	/^module c_errno;$/;"	v
module	$C2_ROOT/libs/libc/csetjmp.c2i	/^module csetjmp;$/;"	v
module	$C2_ROOT/libs/libc/csignal.c2i	/^module csignal;$/;"	v
module	$C2_ROOT/libs/libc/ctermios.c2i	/^module ctermios;$/;"	v
module	$C2_ROOT/libs/libc/ctype.c2i	/^module ctype;$/;"	v
module	$C2_ROOT/libs/libc/ifaddrs.c2i	/^module ifaddrs;$/;"	v
module	$C2_ROOT/libs/libc/libc_dirent.c2i	/^module libc_dirent;$/;"	v
module	$C2_ROOT/libs/libc/libc_fcntl.c2i	/^module libc_fcntl;$/;"	v
module	$C2_ROOT/libs/libc/libc_poll.c2i	/^module libc_poll;$/;"	v
module	$C2_ROOT/libs/libc/libc_time.c2i	/^module libc_time;$/;"	v
module	$C2_ROOT/libs/libc/libgen.c2i	/^module libgen;$/;"	v
module	$C2_ROOT/libs/libc/linux_ifether.c2i	/^module linux_ifether;$/;"	v
module	$C2_ROOT/libs/libc/linux_sockios.c2i	/^module linux_sockios;$/;"	v
module	$C2_ROOT/libs/libc/linux_types.c2i	/^module linux_types;$/;"	v
module	$C2_ROOT/libs/libc/net_if.c2i	/^module net_if;$/;"	v
module	$C2_ROOT/libs/libc/netinet_tcp.c2i	/^module netinet_tcp;$/;"	v
module	$C2_ROOT/libs/libc/regex.c2i	/^module regex;$/;"	v
module	$C2_ROOT/libs/libc/stdarg.c2i	/^module stdarg;$/;"	v
module	$C2_ROOT/libs/libc/stdio.c2i	/^module stdio;$/;"	v
module	$C2_ROOT/libs/libc/stdlib.c2i	/^module stdlib;$/;"	v
module	$C2_ROOT/libs/libc/string.c2i	/^module string;$/;"	v
module	$C2_ROOT/libs/libc/strings.c2i	/^module strings;$/;"	v
module	$C2_ROOT/libs/libc/sys_ioctl.c2i	/^module sys_ioctl;$/;"	v
module	$C2_ROOT/libs/libc/sys_mman.c2i	/^module sys_mman;$/;"	v
module	$C2_ROOT/libs/libc/sys_sendfile.c2i	/^module sys_sendfile;$/;"	v
module	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^module sys_signalfd;$/;"	v
module	$C2_ROOT/libs/libc/sys_socket.c2i	/^module sys_socket;$/;"	v
module	$C2_ROOT/libs/libc/sys_stat.c2i	/^module sys_stat;$/;"	v
module	$C2_ROOT/libs/libc/sys_time.c2i	/^module sys_time;$/;"	v
module	$C2_ROOT/libs/libc/sys_utsname.c2i	/^module sys_utsname;$/;"	v
module	$C2_ROOT/libs/libc/uio.c2i	/^module uio;$/;"	v
module	$C2_ROOT/libs/libc/unistd.c2i	/^module unistd;$/;"	v
module	$C2_ROOT/libs/lua/lua.c2i	/^module lua;$/;"	v
module	$C2_ROOT/libs/lua/lua_auxlib.c2i	/^module lua_auxlib;$/;"	v
module	$C2_ROOT/libs/lua/lua_lib.c2i	/^module lua_lib;$/;"	v
module	$C2_ROOT/libs/math/math.c2i	/^module math;$/;"	v
module	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^module mbedtls;$/;"	v
module	$C2_ROOT/libs/pthread/pthread.c2i	/^module pthread;$/;"	v
module	$C2_ROOT/libs/sdl2/sdl.c2i	/^module sdl;$/;"	v
module	$C2_ROOT/libs/sdl2_image/sdl_image.c2i	/^module sdl_image;$/;"	v
module	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^module sdl_mixer;$/;"	v
module	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^module sdl_ttf;$/;"	v
module	$C2_ROOT/libs/sokol/sokol_app.c2i	/^module sokol_app;$/;"	v
module	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^module sokol_audio;$/;"	v
module	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^module sokol_debugtext;$/;"	v
module	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^module sokol_gfx;$/;"	v
module	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^module sokol_gl;$/;"	v
module	$C2_ROOT/libs/sokol/sokol_glue.c2i	/^module sokol_glue;$/;"	v
module	$C2_ROOT/libs/sokol/sokol_log.c2i	/^module sokol_log;$/;"	v
module	$C2_ROOT/libs/sokol/sokol_math.c2i	/^module sokol_math;$/;"	v
module	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^module sokol_shape;$/;"	v
module	$C2_ROOT/libs/sokol/sokol_time.c2i	/^module sokol_time;$/;"	v
module	$C2_ROOT/parser/ast_builder.c2	/^module ast_builder;$/;"	v
module	$C2_ROOT/parser/c2_parser.c2	/^module c2_parser;$/;"	v
module	$C2_ROOT/parser/c2_parser_expr.c2	/^module c2_parser;$/;"	v
module	$C2_ROOT/parser/c2_parser_stmt.c2	/^module c2_parser;$/;"	v
module	$C2_ROOT/parser/c2_parser_switch.c2	/^module c2_parser;$/;"	v
module	$C2_ROOT/parser/c2_parser_type.c2	/^module c2_parser;$/;"	v
module	$C2_ROOT/parser/c2_tokenizer.c2	/^module c2_tokenizer;$/;"	v
module	$C2_ROOT/parser/case_list.c2	/^module case_list;$/;"	v
module	$C2_ROOT/parser/expr_list.c2	/^module expr_list;$/;"	v
module	$C2_ROOT/parser/keywords.c2	/^module keywords;$/;"	v
module	$C2_ROOT/parser/stmt_list.c2	/^module stmt_list;$/;"	v
module	$C2_ROOT/parser/token.c2	/^module token;$/;"	v
module	$C2_ROOT/plugins/deps_generator.c2	/^module deps_generator;$/;"	v
module	$C2_ROOT/plugins/deps_generator_plugin.c2	/^module plugin_main;$/;"	v
module	$C2_ROOT/plugins/deps_generator_utils.c2	/^module deps_generator_utils;$/;"	v
module	$C2_ROOT/plugins/git_version_plugin.c2	/^module plugin_main;$/;"	v
module	$C2_ROOT/plugins/plugin_info.c2	/^module plugin_info;$/;"	v
module	$C2_ROOT/plugins/refs_generator.c2	/^module refs_generator;$/;"	v
module	$C2_ROOT/plugins/refs_generator_plugin.c2	/^module plugin_main;$/;"	v
module	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^module plugin_main;$/;"	v
module	$C2_ROOT/plugins/unit_test1.c2	/^module c2test;$/;"	v
module	$C2_ROOT/plugins/unit_test_plugin.c2	/^module plugin_main;$/;"	v
module_analyser	$C2_ROOT/analyser/module_analyser.c2	/^module module_analyser;$/;"	v
module_analyser	$C2_ROOT/analyser/module_analyser_binop.c2	/^module module_analyser;$/;"	v
module_analyser	$C2_ROOT/analyser/module_analyser_builtin.c2	/^module module_analyser;$/;"	v
module_analyser	$C2_ROOT/analyser/module_analyser_call.c2	/^module module_analyser;$/;"	v
module_analyser	$C2_ROOT/analyser/module_analyser_expr.c2	/^module module_analyser;$/;"	v
module_analyser	$C2_ROOT/analyser/module_analyser_function.c2	/^module module_analyser;$/;"	v
module_analyser	$C2_ROOT/analyser/module_analyser_init.c2	/^module module_analyser;$/;"	v
module_analyser	$C2_ROOT/analyser/module_analyser_member.c2	/^module module_analyser;$/;"	v
module_analyser	$C2_ROOT/analyser/module_analyser_stmt.c2	/^module module_analyser;$/;"	v
module_analyser	$C2_ROOT/analyser/module_analyser_struct.c2	/^module module_analyser;$/;"	v
module_analyser	$C2_ROOT/analyser/module_analyser_switch.c2	/^module module_analyser;$/;"	v
module_analyser	$C2_ROOT/analyser/module_analyser_type.c2	/^module module_analyser;$/;"	v
module_analyser	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^module module_analyser;$/;"	v
module_analyser	$C2_ROOT/analyser/struct_field_init_checker.c2	/^module module_analyser;$/;"	v
module_analyser	$C2_ROOT/compiler/compiler.c2	/^import module_analyser;$/;"	v
module_analyser_Analyser	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct module_analyser_Analyser_ module_analyser_Analyser;$/;"	v
module_analyser_FillInfo	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct module_analyser_FillInfo_ module_analyser_FillInfo;$/;"	v
module_analyser_FormatAnalyser	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct module_analyser_FormatAnalyser_ module_analyser_FormatAnalyser;$/;"	v
module_analyser_LHS	$C2_ROOT/bootstrap/bootstrap.c	/^   module_analyser_LHS,$/;"	v
module_analyser_MainMarker	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct module_analyser_MainMarker_ module_analyser_MainMarker;$/;"	v
module_analyser_RHS	$C2_ROOT/bootstrap/bootstrap.c	/^   module_analyser_RHS,$/;"	v
module_analyser_StackLayer	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct module_analyser_StackLayer_ module_analyser_StackLayer;$/;"	v
module_analyser_StructFieldInitChecker	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct module_analyser_StructFieldInitChecker_ module_analyser_StructFieldInitChecker;$/;"	v
module_list	$C2_ROOT/analyser/module_analyser.c2	/^import module_list;$/;"	v
module_list	$C2_ROOT/analyser/module_sorter.c2	/^import module_list;$/;"	v
module_list	$C2_ROOT/analyser/scope.c2	/^import module_list;$/;"	v
module_list	$C2_ROOT/common/component.c2	/^import module_list;$/;"	v
module_list	$C2_ROOT/common/module_list.c2	/^module module_list;$/;"	v
module_list	$C2_ROOT/compiler/compiler.c2	/^import module_list;$/;"	v
module_list	$C2_ROOT/compiler/compiler_libs.c2	/^import module_list;$/;"	v
module_list	$C2_ROOT/generator/c/c_generator.c2	/^import module_list;$/;"	v
module_list	$C2_ROOT/generator/c/c_generator_special.c2	/^import module_list;$/;"	v
module_list	$C2_ROOT/generator/generator_utils.c2	/^import module_list;$/;"	v
module_list_List	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct module_list_List_ module_list_List;$/;"	v
module_sorter	$C2_ROOT/analyser/module_sorter.c2	/^module module_sorter;$/;"	v
module_sorter	$C2_ROOT/compiler/compiler.c2	/^import module_sorter;$/;"	v
module_sorter	$C2_ROOT/compiler/compiler_libs.c2	/^import module_sorter;$/;"	v
module_sorter_ModuleSorter	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct module_sorter_ModuleSorter_ module_sorter_ModuleSorter;$/;"	v
modules	$C2_ROOT/analyser/module_sorter.c2	/^    ast.Module** modules;$/;"	v
modules	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_Module** modules;$/;"	v
mon	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    c_int mon;$/;"	v
more	$C2_ROOT/bootstrap/bootstrap.c	/^         more = false;$/;"	v
more	$C2_ROOT/parser/c2_parser_switch.c2	/^            more = false;$/;"	v
mouseLocked	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn bool mouseLocked() @(cname="sapp_mouse_locked");$/;"	f
mouseShown	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn bool mouseShown() @(cname="sapp_mouse_shown");$/;"	f
mouse_button	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    Mousebutton mouse_button;$/;"	v
mouse_dx	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    f32 mouse_dx;$/;"	v
mouse_dy	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    f32 mouse_dy;$/;"	v
mouse_x	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    f32 mouse_x;$/;"	v
mouse_y	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    f32 mouse_y;$/;"	v
move	$C2_ROOT/common/linked_list.c2	/^public fn void Element.move(Element* src, Element* dest) @(unused) {$/;"	f
move	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void move(f32 dx, f32 dy) @(cname="sdtx_move");$/;"	f
moveX	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void moveX(f32 dx) @(cname="sdtx_move_x");$/;"	f
moveY	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void moveY(f32 dy) @(cname="sdtx_move_y");$/;"	f
mrand48	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_long mrand48();$/;"	f
mrand48_r	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int mrand48_r(Drand48_data* __buffer, c_long* __result);$/;"	f
mrt_independent_blend_state	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool mrt_independent_blend_state;$/;"	v
mrt_independent_write_mask	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool mrt_independent_write_mask;$/;"	v
ms	$C2_ROOT/libs/sokol/sokol_time.c2i	/^fn f64 ms(u64 ticks) @(cname="stm_ms");$/;"	f
msaa	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool msaa;$/;"	v
msaa_color_texture	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* msaa_color_texture;$/;"	v
msaa_render_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 msaa_render_buffer;$/;"	v
msaa_resolve_frame_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 msaa_resolve_frame_buffer;$/;"	v
msaa_texture_bindings	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool msaa_texture_bindings;$/;"	v
msan	$C2_ROOT/bootstrap/bootstrap.c	/^   gen.msan = msan;$/;"	v
msan	$C2_ROOT/compiler/compiler.c2	/^    bool msan;$/;"	v
msan	$C2_ROOT/generator/c/c_generator.c2	/^    gen.msan = msan;$/;"	v
msg	$C2_ROOT/ast/qualtype.c2	/^    return msg;$/;"	v
msg	$C2_ROOT/bootstrap/bootstrap.c	/^   return msg;$/;"	v
msg	$C2_ROOT/common/process_utils.c2	/^    char[256] msg;$/;"	v
msg	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    return msg;$/;"	v
msg	$C2_ROOT/compiler/c2recipe_parser.c2	/^    char[128] msg;$/;"	v
msg	$C2_ROOT/parser/c2_tokenizer.c2	/^    char[constants.MaxErrorMsgLen+1] msg;$/;"	v
msg_end	$C2_ROOT/plugins/unit_test2.c2	/^fn void msg_end() {$/;"	f
msg_flags	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        u32       msg_flags;$/;"	v
msg_start	$C2_ROOT/plugins/unit_test2.c2	/^fn void msg_start(const char* color, const char* title) {$/;"	f
msgs	$C2_ROOT/ast/qualtype.c2	/^    local char[4][128] msgs;$/;"	v
msl_buffer_n	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u8 msl_buffer_n;$/;"	v
msl_sampler_n	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u8 msl_sampler_n;$/;"	v
msl_texture_n	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u8 msl_texture_n;$/;"	v
mt	$C2_ROOT/ast/module.c2	/^    ModuleType* mt;$/;"	v
mt	$C2_ROOT/bootstrap/bootstrap.c	/^   return m->mt;$/;"	v
mtlComputeCommandEncoder	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void* mtlComputeCommandEncoder() @(cname="sg_mtl_compute_command_encoder");$/;"	f
mtlDevice	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void* mtlDevice() @(cname="sg_mtl_device");$/;"	f
mtlQueryBufferInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn MtlBufferInfo mtlQueryBufferInfo(Buffer buf) @(cname="sg_mtl_query_buffer_info");$/;"	f
mtlQueryImageInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn MtlImageInfo mtlQueryImageInfo(Image img) @(cname="sg_mtl_query_image_info");$/;"	f
mtlQueryPipelineInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn MtlPipelineInfo mtlQueryPipelineInfo(Pipeline pip) @(cname="sg_mtl_query_pipeline_info");$/;"	f
mtlQuerySamplerInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn MtlSamplerInfo mtlQuerySamplerInfo(Sampler smp) @(cname="sg_mtl_query_sampler_info");$/;"	f
mtlQueryShaderInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn MtlShaderInfo mtlQueryShaderInfo(Shader shd) @(cname="sg_mtl_query_shader_info");$/;"	f
mtlRenderCommandEncoder	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void* mtlRenderCommandEncoder() @(cname="sg_mtl_render_command_encoder");$/;"	f
mtl_buffers	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void*[2] mtl_buffers;$/;"	v
mtl_force_managed_storage_mode	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool mtl_force_managed_storage_mode;$/;"	v
mtl_sampler	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* mtl_sampler;$/;"	v
mtl_textures	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void*[2] mtl_textures;$/;"	v
mtl_threads_per_threadgroup	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    MtlShaderThreadsPerThreadgroup mtl_threads_per_threadgroup;$/;"	v
mtl_use_command_buffer_with_retained_references	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool mtl_use_command_buffer_with_retained_references;$/;"	v
mul	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec4 Vec4.mul(const Vec4* v, f32 scalar) {$/;"	f
multMatrix	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void multMatrix(f32* m) @(cname="sgl_mult_matrix");$/;"	f
multTransposeMatrix	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void multTransposeMatrix(f32* m) @(cname="sgl_mult_transpose_matrix");$/;"	f
multi	$C2_ROOT/ir_examples/global_arrays.c2	/^i32[2][3] multi;$/;"	v
multi_string	$C2_ROOT/bootstrap/bootstrap.c	/^      char* tmp = p->multi_string;$/;"	v
multi_string	$C2_ROOT/parser/c2_parser.c2	/^    char[constants.MaxMultiString] multi_string;$/;"	v
multi_string	$C2_ROOT/parser/c2_parser_expr.c2	/^        char* tmp = p.multi_string;$/;"	v
multiply	$C2_ROOT/ast/value.c2	/^fn Value Value.multiply(const Value* v1, const Value* v2) {$/;"	f
multisampled	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool multisampled;$/;"	v
munmap	$C2_ROOT/libs/libc/sys_mman.c2i	/^fn c_int munmap(void* addr, c_size length);$/;"	f
must	$C2_ROOT/analyser/module_analyser.c2	/^            const char* msg = "a type-function type must be a struct\/union\/enum";$/;"	t
must	$C2_ROOT/bootstrap/bootstrap.c	/^      c2_parser_Parser_error(p, "enum type must be an integer");$/;"	t
must	$C2_ROOT/parser/c2_parser_type.c2	/^        p.error("enum type must be an integer");$/;"	t
mvaddch	$C2_ROOT/libs/curses/curses.c2i	/^fn c_int mvaddch(c_int y, c_int x, const c_char ch);$/;"	f
n_idx	$C2_ROOT/bootstrap/bootstrap.c	/^         top->node->next_idx = n_idx;$/;"	v
n_idx	$C2_ROOT/common/yaml/yaml_parser.c2	/^            top.node.next_idx = n_idx;$/;"	v
name	$C2_ROOT/analyser/incr_array_list.c2	/^    u32 name;$/;"	v
name	$C2_ROOT/analyser/module_analyser.c2	/^    u32 name = entry.name;$/;"	v
name	$C2_ROOT/analyser/module_analyser_call.c2	/^        char[64] name;$/;"	v
name	$C2_ROOT/ast/array_value.c2	/^    d.name_idx = name;$/;"	v
name	$C2_ROOT/ast/ast.c2	/^    a.name = name;$/;"	v
name	$C2_ROOT/ast/goto_stmt.c2	/^    u32 name;$/;"	v
name	$C2_ROOT/ast/identifier_expr.c2	/^    e.name_idx = name;$/;"	v
name	$C2_ROOT/ast/label_stmt.c2	/^    u32 name;$/;"	v
name	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t name;$/;"	v
name	$C2_ROOT/common/attr_handler.c2	/^    u32 name;$/;"	v
name	$C2_ROOT/common/build_target.c2	/^    p.name = name;$/;"	v
name	$C2_ROOT/common/library_list.c2	/^    l.libs[l.count].name = name;$/;"	v
name	$C2_ROOT/compiler/c2recipe_parser.c2	/^    s.name_idx = name;$/;"	v
name	$C2_ROOT/compiler/plugin_mgr.c2	/^    p.name = name;$/;"	v
name	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^    u32 name;$/;"	v
name	$C2_ROOT/ir/symbol_list.c2	/^    u32 name;$/;"	v
name	$C2_ROOT/ir_examples/builtins.c2	/^    char[5] name;$/;"	v
name	$C2_ROOT/parser/ast_builder.c2	/^        b.diags.error(mod_loc, "module name 'main' is reserved");$/;"	m
name	$C2_ROOT/parser/c2_parser.c2	/^        p.error("a module name must start with a lower case character");$/;"	m
name	$C2_ROOT/parser/c2_parser_stmt.c2	/^                refs[0].name_idx = name;$/;"	v
name	$C2_ROOT/parser/c2_parser_type.c2	/^    if (!isupper(name[0]) && !p.is_interface) p.error("a type name must start with an upper case/;"	t
name	$C2_ROOT/plugins/plugin_info.c2	/^    const char* name;$/;"	v
name	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^    const char* name;$/;"	v
name	$C2_ROOT/plugins/unit_test1.c2	/^   const char* name;$/;"	v
name2idx	$C2_ROOT/generator/c2refs.c2	/^fn u32 Files.name2idx(const Files* f, const char* filename) {$/;"	f
name_buf	$C2_ROOT/bootstrap/bootstrap.c	/^   string_buffer_Buf* out = gen->name_buf;$/;"	v
name_buf	$C2_ROOT/generator/ir/ir_generator.c2	/^    string_buffer.Buf* out = gen.name_buf;$/;"	v
name_idx	$C2_ROOT/analyser/label_vector.c2	/^    u32 name_idx;$/;"	v
name_idx	$C2_ROOT/analyser/module_analyser.c2	/^    u32 prefix_name_idx = prefix.name_idx;$/;"	v
name_idx	$C2_ROOT/analyser/name_vector.c2	/^    v.data[index] = name_idx;$/;"	v
name_idx	$C2_ROOT/analyser/scope.c2	/^    s.stack_symbols[s.stack_count] = name_idx;$/;"	v
name_idx	$C2_ROOT/ast/array_value.c2	/^    return d.name_idx;$/;"	v
name_idx	$C2_ROOT/ast/decl.c2	/^    u32 name_idx;$/;"	v
name_idx	$C2_ROOT/ast/function_decl.c2	/^    return ref.name_idx;$/;"	v
name_idx	$C2_ROOT/ast/identifier_expr.c2	/^    return e.name_idx;$/;"	v
name_idx	$C2_ROOT/ast/import_decl.c2	/^    return d.base.name_idx;$/;"	v
name_idx	$C2_ROOT/ast/member_expr.c2	/^    u32 name_idx;$/;"	v
name_idx	$C2_ROOT/ast/module.c2	/^    u32 name_idx;$/;"	v
name_idx	$C2_ROOT/ast/struct_type_decl.c2	/^    u32 name_idx;$/;"	v
name_idx	$C2_ROOT/ast/symbol_table.c2	/^        t.symbols[t.num_public] = name_idx;$/;"	v
name_idx	$C2_ROOT/ast/type_ref.c2	/^    u32 name_idx;$/;"	v
name_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   v->data[index] = name_idx;$/;"	v
name_idx	$C2_ROOT/common/build_target.c2	/^    t.name_idx = name_idx;$/;"	v
name_idx	$C2_ROOT/common/component.c2	/^    return c.name_idx;$/;"	v
name_idx	$C2_ROOT/common/string_list.c2	/^    l.indexes[l.count] = name_idx;$/;"	v
name_idx	$C2_ROOT/common/yaml/yaml_data.c2	/^    result.name_idx = name_idx;$/;"	v
name_idx	$C2_ROOT/compiler/compiler_libs.c2	/^                                                   name_idx,$/;"	v
name_idx	$C2_ROOT/generator/c2refs.c2	/^    u32 name_idx;$/;"	v
name_idx	$C2_ROOT/parser/c2_parser.c2	/^    u32 name = p.tok.name_idx;$/;"	v
name_idx	$C2_ROOT/parser/c2_parser_expr.c2	/^    u32 field = p.tok.name_idx;$/;"	v
name_idx	$C2_ROOT/parser/c2_parser_stmt.c2	/^    u32 name = p.tok.name_idx;$/;"	v
name_idx	$C2_ROOT/parser/c2_parser_type.c2	/^    u32 type_name = p.tok.name_idx;$/;"	v
name_idx	$C2_ROOT/plugins/deps_generator.c2	/^    u32 name_idx;$/;"	v
name_indexes	$C2_ROOT/ast_utils/attr.c2	/^const u32* name_indexes;$/;"	v
name_ref	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Ref name_ref;$/;"	v
name_ref	$C2_ROOT/generator/ir/ir_generator_call.c2	/^    ir.Ref name_ref;$/;"	v
name_vector	$C2_ROOT/analyser/name_vector.c2	/^module name_vector;$/;"	v
name_vector_NameVector	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct name_vector_NameVector_ name_vector_NameVector;$/;"	v
names	$C2_ROOT/bootstrap/bootstrap.c	/^   string_pool_Pool* names;$/;"	v
names	$C2_ROOT/generator/c2refs.c2	/^fn void* Files.names(const Files* f) {$/;"	f
names	$C2_ROOT/generator/ir/ir_generator.c2	/^    string_pool.Pool* names;$/;"	v
names	$C2_ROOT/parser/ast_builder.c2	/^                                      names,$/;"	v
names_cap	$C2_ROOT/generator/c2refs.c2	/^    u32 names_cap;$/;"	v
names_len	$C2_ROOT/generator/c2refs.c2	/^    file.name_idx = f.names_len;$/;"	v
names_pool	$C2_ROOT/ast/utils.c2	/^    string_pool.Pool* names_pool;$/;"	v
names_pool	$C2_ROOT/bootstrap/bootstrap.c	/^   string_pool_Pool* names_pool;$/;"	v
nan	$C2_ROOT/libs/math/math.c2i	/^fn c_double nan(const char *);$/;"	f
nanf	$C2_ROOT/libs/math/math.c2i	/^fn c_float nanf(const char *);$/;"	f
native_kind	$C2_ROOT/analyser/conversion_checker.c2	/^    BuiltinKind native_kind;$/;"	v
native_kind	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_BuiltinKind native_kind;$/;"	v
nc	$C2_ROOT/bootstrap/bootstrap.c	/^   return nc;$/;"	v
nc	$C2_ROOT/parser/c2_tokenizer.c2	/^    return nc;$/;"	v
ncolors	$C2_ROOT/libs/sdl2/sdl.c2i	/^    c_int ncolors;$/;"	v
ncpus	$C2_ROOT/ir/work_queue.c2	/^    if (ncpus > 0) return (u32)ncpus;$/;"	v
nearbyint	$C2_ROOT/libs/math/math.c2i	/^fn c_double nearbyint(c_double);$/;"	f
nearbyintf	$C2_ROOT/libs/math/math.c2i	/^fn c_float nearbyintf(c_float);$/;"	f
needFormatChange	$C2_ROOT/ast/call_expr.c2	/^public fn bool CallExpr.needFormatChange(const CallExpr* e) {$/;"	f
need_const_expr	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t need_const_expr;$/;"	v
need_const_expr	$C2_ROOT/generator/c/c_generator.c2	/^    u32 need_const_expr;$/;"	v
need_dot	$C2_ROOT/bootstrap/bootstrap.c	/^      need_dot = true;$/;"	v
need_dot	$C2_ROOT/generator/c/c_generator_expr.c2	/^        need_dot = true;$/;"	v
need_node_space	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^fn bool Tree.need_node_space(const Tree* t, u32 required) {$/;"	f
need_rvalue	$C2_ROOT/analyser/module_analyser_stmt.c2	/^        bool need_rvalue;$/;"	v
need_rvalue	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^        need_rvalue = false;$/;"	v
need_rvalue	$C2_ROOT/bootstrap/bootstrap.c	/^      need_rvalue = false;$/;"	v
need_semi	$C2_ROOT/bootstrap/bootstrap.c	/^      need_semi = true;$/;"	v
need_semi	$C2_ROOT/parser/c2_parser.c2	/^        need_semi = true;$/;"	v
need_semi	$C2_ROOT/parser/c2_parser_stmt.c2	/^        need_semi = true;$/;"	v
needed	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool needed;$/;"	v
needed	$C2_ROOT/generator/c2refs.c2	/^    f.count = needed;$/;"	v
needsCtvInit	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.needsCtvInit(const QualType* qt) {$/;"	f
needsFixup	$C2_ROOT/ir/inserter.c2	/^public fn bool Inserter.needsFixup(const Inserter* ins) {$/;"	f
needsMain	$C2_ROOT/common/build_target.c2	/^public fn bool Target.needsMain(const Target* t) {$/;"	f
needsSemi	$C2_ROOT/ast/expr.c2	/^public fn bool Expr.needsSemi(const Expr* e) {$/;"	f
needs_comma	$C2_ROOT/bootstrap/bootstrap.c	/^         needs_comma = true;$/;"	v
needs_comma	$C2_ROOT/generator/c/c_generator_call.c2	/^            needs_comma = true;$/;"	v
negate	$C2_ROOT/ast/value.c2	/^fn Value Value.negate(const Value* v) {$/;"	f
negative	$C2_ROOT/ast/value.c2	/^    u64 value = v.uvalue - v.negative;$/;"	v
negative	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t width = v->negative;$/;"	v
net_connect	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int net_connect( Net_context *ctx, const char *host, const char *port, c_int proto ) @(cnam/;"	f
net_if	$C2_ROOT/libs/libc/net_if.c2i	/^module net_if;$/;"	v
net_init	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void net_init( Net_context *ctx ) @(cname="mbedtls_net_init");$/;"	f
net_recv	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int net_recv(void *ctx, c_uchar *buf, c_size len) @(cname="mbedtls_net_recv");$/;"	f
net_recv_timeout	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int net_recv_timeout( void *ctx, c_uchar *buf, c_size len, c_uint timeout) @(cname="mbedtls/;"	f
net_send	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int net_send(void *ctx, const c_uchar *buf, c_size len) @(cname="mbedtls_net_send");$/;"	f
net_set_block	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int net_set_block( Net_context *ctx) @(cname="mbedtls_net_set_block");$/;"	f
net_set_nonblock	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int net_set_nonblock( Net_context *ctx) @(cname="net_set_nonblock");$/;"	f
netinet_tcp	$C2_ROOT/libs/libc/netinet_tcp.c2i	/^module netinet_tcp;$/;"	v
new_blk	$C2_ROOT/bootstrap/bootstrap.c	/^      return new_blk;$/;"	v
new_blk	$C2_ROOT/ir/context.c2	/^        return new_blk;$/;"	v
new_blk	$C2_ROOT/ir/register_alloc.c2	/^                pc.src = new_blk;$/;"	v
new_blocks	$C2_ROOT/ir/inserter.c2	/^    BlockList new_blocks;$/;"	v
new_cap	$C2_ROOT/ast_utils/string_buffer.c2	/^    buf.capacity = new_cap;$/;"	v
new_capacity	$C2_ROOT/common/source_mgr.c2	/^        sm.index_capacity = new_capacity;$/;"	v
new_index	$C2_ROOT/bootstrap/bootstrap.c	/^      uint32_t new_start = new_index;$/;"	v
new_index	$C2_ROOT/common/source_mgr.c2	/^        sm.index = new_index;$/;"	v
new_index	$C2_ROOT/ir/ssa.c2	/^        u32 new_start = new_index;$/;"	v
new_instr_idx	$C2_ROOT/ir/inserter.c2	/^    u32 new_instr_idx;$/;"	v
new_line	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool new_line;$/;"	v
new_line	$C2_ROOT/compiler/c2recipe_parser.c2	/^    bool new_line;$/;"	v
new_node	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    subroot.children[1] = new_node;$/;"	v
new_sockfd	$C2_ROOT/libs/libc/sys_socket.c2i	/^    return new_sockfd;$/;"	v
new_start	$C2_ROOT/bootstrap/bootstrap.c	/^      b->instr.start = new_start;$/;"	v
new_start	$C2_ROOT/ir/ssa.c2	/^        b.instr.start = new_start;$/;"	v
newb	$C2_ROOT/ast_utils/context.c2	/^        c.blk_tail = newb;$/;"	v
newb	$C2_ROOT/bootstrap/bootstrap.c	/^      c->blk_tail = newb;$/;"	v
newline	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void Buf.newline(Buf* buf) { buf.add1('\\n'); }$/;"	f
newlines	$C2_ROOT/bootstrap/bootstrap.c	/^         newlines = true;$/;"	v
newlines	$C2_ROOT/generator/c/c_generator_expr.c2	/^            newlines = true;$/;"	v
newlines	$C2_ROOT/generator/c2i/c2i_generator_expr.c2	/^            newlines = true;$/;"	v
newstate	$C2_ROOT/libs/lua/lua.c2i	/^fn State* newstate(Alloc f, void *ud) @(cname="lua_newstate");$/;"	f
newthread	$C2_ROOT/libs/lua/lua.c2i	/^fn State* newthread(State *L) @(cname="lua_newthread");$/;"	f
next	$C2_ROOT/ast_utils/context.c2	/^    return next;$/;"	v
next	$C2_ROOT/ast_utils/string_pool.c2	/^            i = next;$/;"	v
next	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_Token next;$/;"	v
next	$C2_ROOT/common/linked_list.c2	/^    prev.next = next;$/;"	v
next	$C2_ROOT/common/yaml/yaml_iterator.c2	/^public fn void Iter.next(Iter* iter) {$/;"	f
next	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    return &t.next;$/;"	v
next	$C2_ROOT/compiler/c2recipe_parser.c2	/^    s.next = next;$/;"	v
next	$C2_ROOT/generator/ir/ir_generator_member.c2	/^            goto next;$/;"	v
next	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    linked_list.Element* cur = t.used_zones.next;$/;"	v
next	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^    linked_list.Element* cur = t.used_zones.next;$/;"	v
next	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    linked_list.Element* cur = t.used_zones.next;$/;"	v
next	$C2_ROOT/ir/inserter.c2	/^public fn void Inserter.next(Inserter* ins) {$/;"	f
next	$C2_ROOT/ir/interference_graph.c2	/^    u16 next;$/;"	v
next	$C2_ROOT/ir/live_map.c2	/^    u16 next;$/;"	v
next	$C2_ROOT/ir/slot_collector.c2	/^                    goto next;$/;"	v
next	$C2_ROOT/ir/slot_writes_map.c2	/^    u16 next;$/;"	v
next	$C2_ROOT/ir_examples/goto.c2	/^    if (a == 2) goto next;$/;"	v
next	$C2_ROOT/ir_examples/members.c2	/^    Struct* next;$/;"	v
next	$C2_ROOT/libs/libc/stdio.c2i	/^    IO_marker* next;$/;"	v
next	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int next(State *L, c_int idx) @(cname="lua_next");$/;"	f
next	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    X509_crl_entry *next;$/;"	v
next	$C2_ROOT/libs/sdl2/sdl.c2i	/^    PixelFormat *next;$/;"	v
next	$C2_ROOT/parser/c2_parser.c2	/^    Token[MaxLookahead] next;$/;"	v
next	$C2_ROOT/parser/c2_parser_stmt.c2	/^        Token next;$/;"	v
nextTokPrec	$C2_ROOT/bootstrap/bootstrap.c	/^      c2_prec_Prec thisPrec = nextTokPrec;$/;"	v
nextTokPrec	$C2_ROOT/parser/c2_parser_expr.c2	/^        Prec thisPrec = nextTokPrec;$/;"	v
next_checkpoint	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t next_checkpoint;$/;"	v
next_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t next_count;$/;"	v
next_count	$C2_ROOT/parser/c2_parser.c2	/^    u32 next_count;$/;"	v
next_head	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t next_head;$/;"	v
next_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t next_idx;$/;"	v
next_idx	$C2_ROOT/common/yaml/yaml_iterator.c2	/^        next = node.next_idx;$/;"	v
next_loc	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t next_loc;$/;"	v
next_loc	$C2_ROOT/ir/inserter.c2	/^    return loc == ins.next_loc;$/;"	v
next_update	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    X509_time next_update;$/;"	v
nextafter	$C2_ROOT/libs/math/math.c2i	/^fn c_double nextafter(c_double, c_double);$/;"	f
nextafterf	$C2_ROOT/libs/math/math.c2i	/^fn c_float nextafterf(c_float, c_float);$/;"	f
nil	$C2_ROOT/analyser/conversion_checker.c2	/^    c.expr_ptr = nil;$/;"	v
nil	$C2_ROOT/analyser/incr_array_list.c2	/^    v.entries = nil;$/;"	v
nil	$C2_ROOT/analyser/init_checker.c2	/^    c.entries = nil;$/;"	v
nil	$C2_ROOT/analyser/label_vector.c2	/^    v.data = nil;$/;"	v
nil	$C2_ROOT/analyser/module_analyser.c2	/^    return ma.curFunction == nil;$/;"	v
nil	$C2_ROOT/analyser/module_analyser_builtin.c2	/^    Decl* d = nil;$/;"	v
nil	$C2_ROOT/analyser/module_analyser_call.c2	/^    if (templateType.isInvalid()) return nil;$/;"	v
nil	$C2_ROOT/analyser/module_analyser_expr.c2	/^    if (qt.isInvalid()) return nil;$/;"	v
nil	$C2_ROOT/analyser/module_analyser_init.c2	/^            BitFieldLayout* bit_layout = nil;$/;"	v
nil	$C2_ROOT/analyser/module_analyser_member.c2	/^    if (!d) return nil;$/;"	v
nil	$C2_ROOT/analyser/module_analyser_stmt.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/analyser/module_analyser_struct.c2	/^        StructTypeDecl* sub = nil;$/;"	v
nil	$C2_ROOT/analyser/module_analyser_switch.c2	/^    SwitchCase* defaultCase = nil;$/;"	v
nil	$C2_ROOT/analyser/module_analyser_type.c2	/^    Decl* d = nil;$/;"	v
nil	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/analyser/name_vector.c2	/^    v.data = nil;$/;"	v
nil	$C2_ROOT/analyser/scope.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/analyser/size_analyser.c2	/^        BitFieldLayout* bit_layout = nil;$/;"	v
nil	$C2_ROOT/analyser/struct_func_list.c2	/^    v.data = nil;$/;"	v
nil	$C2_ROOT/analyser_utils/printf_utils.c2	/^    const char* format_text = nil;$/;"	v
nil	$C2_ROOT/ast/array_value_list.c2	/^    l.values = nil;$/;"	v
nil	$C2_ROOT/ast/ast.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/ast_evaluator.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/builtin_expr.c2	/^    BuiltinExpr* bi = nil;$/;"	v
nil	$C2_ROOT/ast/call_expr.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/compound_stmt.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/decl.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/enum_constant_decl.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/enum_type_decl.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/expr.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/field_designated_init_expr.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/for_stmt.c2	/^    Stmt* init2 = s.init ? s.init.instantiate(inst) : nil;$/;"	v
nil	$C2_ROOT/ast/function_decl.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/function_decl_list.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/identifier_expr.c2	/^    if (!e.base.base.identifierExprBits.has_decl) return nil;$/;"	v
nil	$C2_ROOT/ast/if_stmt.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/import_decl.c2	/^    d.dest = nil;$/;"	v
nil	$C2_ROOT/ast/import_decl_list.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/instance_table.c2	/^    t.funcs = nil;$/;"	v
nil	$C2_ROOT/ast/member_expr.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/module.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/pointer_pool.c2	/^    p.slots = nil;$/;"	v
nil	$C2_ROOT/ast/qualtype.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/return_stmt.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/static_assert_list.c2	/^    l.asserts = nil;$/;"	v
nil	$C2_ROOT/ast/stmt.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/string_type_pool.c2	/^    p.slots = nil;$/;"	v
nil	$C2_ROOT/ast/struct_type_decl.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/switch_case.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/switch_stmt.c2	/^    return s.cond ? &s.cond : nil;$/;"	v
nil	$C2_ROOT/ast/symbol_table.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/type_ref.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/utils.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast/var_decl.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast_utils/attr_table.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ast_utils/context.c2	/^    c.cur_data = nil;$/;"	v
nil	$C2_ROOT/ast_utils/string_buffer.c2	/^    buf.data_ = nil;$/;"	v
nil	$C2_ROOT/common/build_file.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/common/component.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/common/file/file_utils.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/common/file/reader.c2	/^    return file.contents != nil;$/;"	v
nil	$C2_ROOT/common/index_list.c2	/^    l.data = nil;$/;"	v
nil	$C2_ROOT/common/module_list.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/common/process_utils.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/common/source_mgr.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/common/string_list.c2	/^    l.indexes = nil;$/;"	v
nil	$C2_ROOT/common/utils.c2	/^    if (error) return nil;$/;"	v
nil	$C2_ROOT/common/yaml/yaml_iterator.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/common/yaml/yaml_parser.c2	/^    top.last_child = nil;$/;"	v
nil	$C2_ROOT/compiler/c2recipe_parser.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/compiler/c2recipe_yaml.c2	/^    if (maxlen == 0) return nil;$/;"	v
nil	$C2_ROOT/compiler/compiler_libs.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/generator/c/c_generator.c2	/^    gen.cur_function = nil;$/;"	v
nil	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/generator/c/c_generator_special.c2	/^    const char* cflags = nil;$/;"	v
nil	$C2_ROOT/generator/c/c_generator_trace.c2	/^        cl.array = nil;$/;"	v
nil	$C2_ROOT/generator/c/dep_finder.c2	/^    f.current = nil;$/;"	v
nil	$C2_ROOT/generator/c2_trace.c2	/^    const char *pattern = nil;$/;"	v
nil	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^    Decl* decl = nil;$/;"	v
nil	$C2_ROOT/generator/c2refs.c2	/^    if (size < minSize) return nil;$/;"	v
nil	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^    l.inits = nil;$/;"	v
nil	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    if (t.nodes.root_idx == 0) return nil;$/;"	v
nil	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    if (load_size > input.size) return nil;$/;"	v
nil	$C2_ROOT/ir/block_list.c2	/^    l.blocks = nil;$/;"	v
nil	$C2_ROOT/ir/case_list.c2	/^    l.cases = nil;$/;"	v
nil	$C2_ROOT/ir/context.c2	/^    t.arg2 = nil;$/;"	v
nil	$C2_ROOT/ir/copy_list.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ir/lookup_table.c2	/^    t.data = nil;$/;"	v
nil	$C2_ROOT/ir/phi_list.c2	/^    l.clauses = nil;$/;"	v
nil	$C2_ROOT/ir/print.c2	/^    ph.cur_info = nil;$/;"	v
nil	$C2_ROOT/ir/ref.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ir/slot_collector.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ir/symbol_list.c2	/^        s.f.info = nil;$/;"	v
nil	$C2_ROOT/ir/usage_counter.c2	/^    c.counts = nil;$/;"	v
nil	$C2_ROOT/ir/work_queue.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ir_examples/functions.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/ir_examples/members.c2	/^    s.p = nil;$/;"	v
nil	$C2_ROOT/parser/ast_builder.c2	/^    b.mod = nil;$/;"	v
nil	$C2_ROOT/parser/c2_parser.c2	/^    Ref* prefix = nil;$/;"	v
nil	$C2_ROOT/parser/c2_parser_expr.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/parser/c2_parser_stmt.c2	/^    return nil;$/;"	v
nil	$C2_ROOT/parser/c2_parser_switch.c2	/^        SwitchCase* c = nil;$/;"	v
nil	$C2_ROOT/parser/c2_parser_type.c2	/^            Expr* init_expr = nil;$/;"	v
nil	$C2_ROOT/plugins/refs_generator.c2	/^    gen.curfile = nil;$/;"	v
no_context	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    bool no_context;$/;"	v
no_libc	$C2_ROOT/bootstrap/bootstrap.c	/^   return t->no_libc;$/;"	v
no_libc	$C2_ROOT/common/build_target.c2	/^    return t.no_libc;$/;"	v
no_plugins	$C2_ROOT/bootstrap/bootstrap.c	/^   m->no_plugins = no_plugins;$/;"	v
no_plugins	$C2_ROOT/compiler/main.c2	/^    bool no_plugins;$/;"	v
no_plugins	$C2_ROOT/compiler/plugin_mgr.c2	/^    m.no_plugins = no_plugins;$/;"	v
no_trace	$C2_ROOT/generator/c/c_generator_call.c2	/^            bool no_trace = gen.no_trace;$/;"	v
no_unreachable_code	$C2_ROOT/common/warning_flags.c2	/^    bool no_unreachable_code;$/;"	v
no_unused	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool no_unused;$/;"	v
no_unused	$C2_ROOT/common/warning_flags.c2	/^    bool no_unused;$/;"	v
no_unused_enum_constant	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool no_unused_enum_constant;$/;"	v
no_unused_enum_constant	$C2_ROOT/common/warning_flags.c2	/^    bool no_unused_enum_constant;$/;"	v
no_unused_function	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool no_unused_function;$/;"	v
no_unused_function	$C2_ROOT/common/warning_flags.c2	/^    bool no_unused_function;$/;"	v
no_unused_import	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool no_unused_import;$/;"	v
no_unused_import	$C2_ROOT/common/warning_flags.c2	/^    bool no_unused_import;$/;"	v
no_unused_label	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool no_unused_label;$/;"	v
no_unused_label	$C2_ROOT/common/warning_flags.c2	/^    bool no_unused_label;$/;"	v
no_unused_module	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool no_unused_module;$/;"	v
no_unused_module	$C2_ROOT/common/warning_flags.c2	/^    bool no_unused_module;$/;"	v
no_unused_parameter	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool no_unused_parameter;$/;"	v
no_unused_parameter	$C2_ROOT/common/warning_flags.c2	/^    bool no_unused_parameter;$/;"	v
no_unused_public	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool no_unused_public;$/;"	v
no_unused_public	$C2_ROOT/common/warning_flags.c2	/^    bool no_unused_public;$/;"	v
no_unused_type	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool no_unused_type;$/;"	v
no_unused_type	$C2_ROOT/common/warning_flags.c2	/^    bool no_unused_type;$/;"	v
no_unused_variable	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool no_unused_variable;$/;"	v
no_unused_variable	$C2_ROOT/common/warning_flags.c2	/^    bool no_unused_variable;$/;"	v
node	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_Node* parent = prev->node;$/;"	v
node	$C2_ROOT/common/build_file.c2	/^    return node;$/;"	v
node	$C2_ROOT/common/linked_list.c2	/^    return node;$/;"	v
node	$C2_ROOT/common/yaml/yaml_data.c2	/^    Node* node;$/;"	v
node	$C2_ROOT/common/yaml/yaml_iterator.c2	/^    const Node* node;$/;"	v
node	$C2_ROOT/common/yaml/yaml_parser.c2	/^    Node* parent = prev.node;$/;"	v
node	$C2_ROOT/compiler/manifest.c2	/^    return node;$/;"	v
node2idx	$C2_ROOT/common/yaml/yaml_data.c2	/^fn u32 Data.node2idx(const Data* d, const Node* n) @(inline) {$/;"	f
node_idx	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    subroot.children[0] = node_idx;$/;"	v
node_idx	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    return node_idx;$/;"	v
node_idx2	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    return node_idx2;$/;"	v
node_size	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    zone.start += node_size;$/;"	v
node_size	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    tr.nodes_size += node_size;$/;"	v
nodename	$C2_ROOT/libs/libc/sys_utsname.c2i	/^    char[NAME_LEN] nodename;$/;"	v
nodes	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_Node* nodes;$/;"	v
nodes	$C2_ROOT/common/yaml/yaml_data.c2	/^    Node* nodes;$/;"	v
nodes	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    u8[0] nodes;$/;"	v
nodes	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    t.nodes = tr.nodes;$/;"	v
nodes	$C2_ROOT/ir/rev_list.c2	/^    u8* nodes;$/;"	v
nodes2	$C2_ROOT/bootstrap/bootstrap.c	/^   d->nodes = nodes2;$/;"	v
nodes2	$C2_ROOT/common/yaml/yaml_data.c2	/^    d.nodes = nodes2;$/;"	v
nodes2	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    t.nodes = nodes2;$/;"	v
nodes_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t nodes_count;$/;"	v
nodes_count	$C2_ROOT/common/yaml/yaml_data.c2	/^    u32 nodes_count;$/;"	v
nodes_cur	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_Node* result = d->nodes_cur;$/;"	v
nodes_cur	$C2_ROOT/common/yaml/yaml_data.c2	/^    Node* result = d.nodes_cur;$/;"	v
nodes_resize	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^fn void Tree.nodes_resize(Tree* t, u32 capacity) {$/;"	f
nodes_size	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    u32 nodes_size;$/;"	v
noecho	$C2_ROOT/libs/curses/curses.c2i	/^fn void noecho();$/;"	f
normal	$C2_ROOT/ast_utils/string_buffer.c2	/^            if (sep && sep != c) goto normal;$/;"	v
normal	$C2_ROOT/bootstrap/bootstrap.c	/^         if ((sep && (sep != c))) goto normal;$/;"	v
normal	$C2_ROOT/ir_examples/while.c2	/^fn void normal(i32 loops) {$/;"	f
normal	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    u32 normal;$/;"	v
normalVertexAttrState	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn VertexAttrState normalVertexAttrState() @(cname="sshape_normal_vertex_attr_state");$/;"	f
normalize	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec3 Vec3.normalize(const Vec3* v) {$/;"	f
not	$C2_ROOT/ast/ast_evaluator.c2	/^                return Value.error("function prototype not supported");$/;"	t
not	$C2_ROOT/bootstrap/bootstrap.c	/^            return ast_Value_error("function prototype not supported");$/;"	t
not_constant	$C2_ROOT/analyser/module_analyser_call.c2	/^    if (!ic.isArrayToPointerDecay()) goto not_constant;$/;"	v
not_constant	$C2_ROOT/bootstrap/bootstrap.c	/^   if (!format_text) goto not_constant;$/;"	v
note	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.note(Analyser* ma, SrcLoc loc, const char* format @(printf_format), ...) {$/;"	f
note	$C2_ROOT/common/diagnostics.c2	/^public fn void Diags.note(Diags* diags, SrcLoc loc, const char* format @(printf_format), ...) {$/;"	f
note2	$C2_ROOT/common/diagnostics.c2	/^public fn void Diags.note2(Diags* diags, SrcLoc loc, const char* format, va_list args) {$/;"	f
now	$C2_ROOT/common/utils.c2	/^public fn u64 now() @(unused) {$/;"	f
now	$C2_ROOT/libs/sokol/sokol_time.c2i	/^fn u64 now() @(cname="stm_now");$/;"	f
now	$C2_ROOT/plugins/unit_test2.c2	/^public fn u64 now() {$/;"	f
now64	$C2_ROOT/bootstrap/bootstrap.c	/^   return now64;$/;"	v
now64	$C2_ROOT/common/utils.c2	/^    return now64;$/;"	v
now64	$C2_ROOT/plugins/unit_test2.c2	/^  return now64;$/;"	v
nr	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        *cq.khead = *cq.khead + nr;$/;"	v
nrand48	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_long nrand48(u16* __xsubi);$/;"	f
nrand48_r	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int nrand48_r(u16* __xsubi, Drand48_data* __buffer, c_long* __result);$/;"	f
nread	$C2_ROOT/bootstrap/bootstrap.c	/^         total_read += nread;$/;"	v
nread	$C2_ROOT/common/file/reader.c2	/^            total_read += nread;$/;"	v
ns	$C2_ROOT/libs/sokol/sokol_time.c2i	/^fn f64 ns(u64 ticks) @(cname="stm_ns");$/;"	f
ntohl	$C2_ROOT/libs/libc/sys_socket.c2i	/^fn u32 ntohl(u32 netlong);$/;"	f
ntohs	$C2_ROOT/libs/libc/sys_socket.c2i	/^fn u16 ntohs(u16 netshort);$/;"	f
num	$C2_ROOT/ast/function_decl.c2	/^    d.flags.num_auto_args = num;$/;"	v
num	$C2_ROOT/ast_utils/string_pool.c2	/^            count += num;$/;"	v
num	$C2_ROOT/bootstrap/bootstrap.c	/^   d->flags.num_auto_args = num;$/;"	v
num	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^    eval.num_values = num;$/;"	v
num	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    u32 num;$/;"	v
numAsmFiles	$C2_ROOT/common/build_target.c2	/^public fn u32 Target.numAsmFiles(const Target* t) { return t.asm_file_count; }$/;"	f
numCases	$C2_ROOT/ast/switch_stmt.c2	/^    s.base.switchStmtBits.num_cases = numCases;$/;"	v
numCases	$C2_ROOT/bootstrap/bootstrap.c	/^   s->base.switchStmtBits.num_cases = numCases;$/;"	v
numCommands	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn i32 numCommands() @(cname="sgl_num_commands");$/;"	f
numFiles	$C2_ROOT/common/build_target.c2	/^public fn u32 Target.numFiles(const Target* t) { return t.num_files; }$/;"	f
numTargets	$C2_ROOT/compiler/c2recipe.c2	/^public fn u32 Recipe.numTargets(const Recipe* r) { return r.num_targets; }$/;"	f
numValues	$C2_ROOT/bootstrap/bootstrap.c	/^   current_index = numValues;$/;"	v
numVertices	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn i32 numVertices() @(cname="sgl_num_vertices");$/;"	f
num_active_texture	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_active_texture;$/;"	v
num_added	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_added;$/;"	v
num_adds	$C2_ROOT/ast_utils/string_pool.c2	/^    u32 num_adds;$/;"	v
num_adds	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_adds;$/;"	v
num_allocs	$C2_ROOT/ast_utils/context.c2	/^    u32 num_allocs;$/;"	v
num_allocs	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_allocs;$/;"	v
num_append_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_append_buffer;$/;"	v
num_apply_bindings	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_apply_bindings;$/;"	v
num_apply_pipeline	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_apply_pipeline;$/;"	v
num_apply_scissor_rect	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_apply_scissor_rect;$/;"	v
num_apply_uniforms	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_apply_uniforms;$/;"	v
num_apply_viewport	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_apply_viewport;$/;"	v
num_args	$C2_ROOT/analyser/module_analyser_call.c2	/^    u32 num_args;$/;"	v
num_args	$C2_ROOT/ast/ast_evaluator.c2	/^    u32 num_args;$/;"	v
num_args	$C2_ROOT/ast/call_expr.c2	/^    u32 num_args = e.base.base.callExprBits.num_args;$/;"	v
num_args	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t num_args;$/;"	v
num_args	$C2_ROOT/ir/function_info.c2	/^    u8 num_args;$/;"	v
num_args	$C2_ROOT/ir/print.c2	/^    ph.temp_count = num_args;$/;"	v
num_arrays	$C2_ROOT/ast/type_ref.c2	/^    return r.flags.num_arrays;$/;"	v
num_arrays	$C2_ROOT/bootstrap/bootstrap.c	/^   return r->flags.num_arrays;$/;"	v
num_attrs	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_attrs;$/;"	v
num_attrs	$C2_ROOT/parser/ast_builder.c2	/^    u32 num_attrs;$/;"	v
num_auto_args	$C2_ROOT/ast/function_decl.c2	/^    return d.flags.num_auto_args;$/;"	v
num_auto_args	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->flags.num_auto_args;$/;"	v
num_bind_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_bind_buffer;$/;"	v
num_bind_image_texture	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_bind_image_texture;$/;"	v
num_bind_sampler	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_bind_sampler;$/;"	v
num_bind_texture	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_bind_texture;$/;"	v
num_bindgroup_cache_collisions	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_bindgroup_cache_collisions;$/;"	v
num_bindgroup_cache_hash_vs_key_mismatch	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_bindgroup_cache_hash_vs_key_mismatch;$/;"	v
num_bindgroup_cache_hits	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_bindgroup_cache_hits;$/;"	v
num_bindgroup_cache_invalidates	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_bindgroup_cache_invalidates;$/;"	v
num_bindgroup_cache_misses	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_bindgroup_cache_misses;$/;"	v
num_blocks	$C2_ROOT/bootstrap/bootstrap.c	/^   v->index_cap = num_blocks;$/;"	v
num_blocks	$C2_ROOT/ir/inserter.c2	/^    ins.new_blk_id = num_blocks;$/;"	v
num_blocks	$C2_ROOT/ir/rev_list.c2	/^    r.block_count = num_blocks;$/;"	v
num_blocks	$C2_ROOT/ir/slot_collector.c2	/^    u32 num_blocks;$/;"	v
num_blocks	$C2_ROOT/ir/slot_writes_map.c2	/^    u32 num_blocks;$/;"	v
num_cases	$C2_ROOT/ast/switch_stmt.c2	/^    return s.base.switchStmtBits.num_cases;$/;"	v
num_cases	$C2_ROOT/bootstrap/bootstrap.c	/^   return s->base.switchStmtBits.num_cases;$/;"	v
num_channels	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    i32 num_channels;$/;"	v
num_children	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    child.num_children = num_children;$/;"	v
num_children	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    n.num_children = num_children;$/;"	v
num_clauses	$C2_ROOT/bootstrap/bootstrap.c	/^   i->phi_clauses.count = num_clauses;$/;"	v
num_clear_depth_stencil_view	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_clear_depth_stencil_view;$/;"	v
num_clear_render_target_view	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_clear_render_target_view;$/;"	v
num_clobbers	$C2_ROOT/ast/asm_stmt.c2	/^    u8 num_clobbers;$/;"	v
num_clobbers	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t num_clobbers;$/;"	v
num_conds	$C2_ROOT/ast/switch_case.c2	/^    u32 num_conds = src.bits.num_conds;$/;"	v
num_conds	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_conds = src->bits.num_conds;$/;"	v
num_constants	$C2_ROOT/ast/enum_type_decl.c2	/^    return d.base.enumTypeDeclBits.num_constants;$/;"	v
num_constants	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->base.enumTypeDeclBits.num_constants;$/;"	v
num_constraints	$C2_ROOT/ast/asm_stmt.c2	/^    u8 num_constraints;$/;"	v
num_constraints	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t num_constraints;$/;"	v
num_create_bindgroup	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_create_bindgroup;$/;"	v
num_cs_set_constant_buffers	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_cs_set_constant_buffers;$/;"	v
num_cs_set_samplers	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_cs_set_samplers;$/;"	v
num_cs_set_shader	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_cs_set_shader;$/;"	v
num_cs_set_shader_resources	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_cs_set_shader_resources;$/;"	v
num_cs_set_unordered_access_views	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_cs_set_unordered_access_views;$/;"	v
num_disable_vertex_attrib_array	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_disable_vertex_attrib_array;$/;"	v
num_discard_bindgroup	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_discard_bindgroup;$/;"	v
num_dispatch	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_dispatch;$/;"	v
num_draw	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_draw;$/;"	v
num_draw_ex	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_draw_ex;$/;"	v
num_draw_indexed	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_draw_indexed;$/;"	v
num_draw_indexed_instanced	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_draw_indexed_instanced;$/;"	v
num_draw_instanced	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_draw_instanced;$/;"	v
num_elements	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    i32 num_elements;$/;"	v
num_enable_vertex_attrib_array	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_enable_vertex_attrib_array;$/;"	v
num_enum_functions	$C2_ROOT/ast/enum_type_decl.c2	/^    u32 num_enum_functions;$/;"	v
num_enum_functions	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_enum_functions;$/;"	v
num_error	$C2_ROOT/parser/c2_tokenizer.c2	/^fn void Tokenizer.num_error(Tokenizer* t, Token* result, const char* p, const char* format @(pri/;"	f
num_errors	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_errors;$/;"	v
num_errors	$C2_ROOT/common/diagnostics.c2	/^    u32 num_errors;$/;"	v
num_errors	$C2_ROOT/compiler/main.c2	/^    return c.diags.getNumErrors() > num_errors;$/;"	v
num_exprs	$C2_ROOT/ast/asm_stmt.c2	/^    u8 num_exprs;$/;"	v
num_exprs	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t num_exprs;$/;"	v
num_fields	$C2_ROOT/ast/struct_type_decl.c2	/^    if (d.field_info) return d.field_info.num_fields;$/;"	v
num_fields	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_fields;$/;"	v
num_files	$C2_ROOT/ast/module.c2	/^    u32 num_files;$/;"	v
num_files	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t right = sm->num_files;$/;"	v
num_files	$C2_ROOT/common/build_target.c2	/^    u32 num_files;$/;"	v
num_files	$C2_ROOT/common/source_mgr.c2	/^    u32 num_files;$/;"	v
num_files	$C2_ROOT/compiler/c2recipe_parser.c2	/^    u32 num_files;$/;"	v
num_files	$C2_ROOT/generator/c2refs.c2	/^    f.files_cap = num_files;$/;"	v
num_garbage_collected	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_garbage_collected;$/;"	v
num_ia_set_index_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_ia_set_index_buffer;$/;"	v
num_ia_set_input_layout	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_ia_set_input_layout;$/;"	v
num_ia_set_primitive_topology	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_ia_set_primitive_topology;$/;"	v
num_ia_set_vertex_buffers	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_ia_set_vertex_buffers;$/;"	v
num_indexes	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_indexes;$/;"	v
num_inits	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_inits;$/;"	v
num_inits	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^    u32 num_inits;$/;"	v
num_inputs	$C2_ROOT/ast/asm_stmt.c2	/^    u8 num_inputs;$/;"	v
num_inputs	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t num_inputs;$/;"	v
num_inputs	$C2_ROOT/parser/c2_parser_stmt.c2	/^                                     num_inputs,$/;"	v
num_instr	$C2_ROOT/ir/inserter.c2	/^    ins.new_instr_idx = num_instr;$/;"	v
num_map	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_map;$/;"	v
num_members	$C2_ROOT/ast/struct_type_decl.c2	/^    u32 num_members;$/;"	v
num_members	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_members;$/;"	v
num_memory_barriers	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_memory_barriers;$/;"	v
num_mipmaps	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 num_mipmaps;$/;"	v
num_mods	$C2_ROOT/analyser/module_sorter.c2	/^    u32 num_mods;$/;"	v
num_mods	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_mods;$/;"	v
num_mods	$C2_ROOT/common/module_list.c2	/^    u32 num_mods;$/;"	v
num_om_set_blend_state	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_om_set_blend_state;$/;"	v
num_om_set_depth_stencil_state	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_om_set_depth_stencil_state;$/;"	v
num_om_set_render_targets	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_om_set_render_targets;$/;"	v
num_open	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_open;$/;"	v
num_outputs	$C2_ROOT/ast/asm_stmt.c2	/^    u8 num_outputs;$/;"	v
num_outputs	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t num_outputs;$/;"	v
num_outputs	$C2_ROOT/generator/c/c_generator_stmt.c2	/^                u32 idx = i + num_outputs;$/;"	v
num_outputs	$C2_ROOT/generator/c2i/c2i_generator_stmt.c2	/^                u32 idx = i + num_outputs;$/;"	v
num_outputs	$C2_ROOT/parser/c2_parser_stmt.c2	/^    u32 num_inputs = names.length() - num_outputs;$/;"	v
num_packets	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    i32 num_packets;$/;"	v
num_params	$C2_ROOT/ast/function_decl.c2	/^    u8 num_params;$/;"	v
num_params	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t num_params;$/;"	v
num_params	$C2_ROOT/parser/ast_builder.c2	/^                                          num_params,$/;"	v
num_passes	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_passes;$/;"	v
num_private	$C2_ROOT/ast/symbol_table.c2	/^    u32 num_private;$/;"	v
num_private	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_private;$/;"	v
num_ps_set_constant_buffers	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_ps_set_constant_buffers;$/;"	v
num_ps_set_samplers	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_ps_set_samplers;$/;"	v
num_ps_set_shader	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_ps_set_shader;$/;"	v
num_ps_set_shader_resources	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_ps_set_shader_resources;$/;"	v
num_ptrs	$C2_ROOT/ast/type_ref.c2	/^    return r.flags.num_ptrs;$/;"	v
num_ptrs	$C2_ROOT/bootstrap/bootstrap.c	/^   return r->flags.num_ptrs;$/;"	v
num_public	$C2_ROOT/ast/symbol_table.c2	/^    u32 num_public;$/;"	v
num_public	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_public;$/;"	v
num_refs	$C2_ROOT/ast/member_expr.c2	/^    u32 refcount = e.base.base.memberExprBits.num_refs;$/;"	v
num_refs	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t refcount = e->base.base.memberExprBits.num_refs;$/;"	v
num_released	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_released;$/;"	v
num_render_state	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_render_state;$/;"	v
num_resolve_subresource	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_resolve_subresource;$/;"	v
num_rs_set_state	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_rs_set_state;$/;"	v
num_scopes	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_scopes;$/;"	v
num_scopes	$C2_ROOT/generator/ir/ir_generator.c2	/^    u32 num_scopes;$/;"	v
num_scopes	$C2_ROOT/ir/context.c2	/^    u32 num_scopes;$/;"	v
num_set_bindgroup	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_bindgroup;$/;"	v
num_set_blend_color	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_blend_color;$/;"	v
num_set_compute_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_compute_buffer;$/;"	v
num_set_compute_buffer_offset	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_compute_buffer_offset;$/;"	v
num_set_compute_sampler_state	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_compute_sampler_state;$/;"	v
num_set_compute_texture	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_compute_texture;$/;"	v
num_set_cull_mode	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_cull_mode;$/;"	v
num_set_depth_bias	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_depth_bias;$/;"	v
num_set_depth_stencil_state	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_depth_stencil_state;$/;"	v
num_set_fragment_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_fragment_buffer;$/;"	v
num_set_fragment_buffer_offset	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_fragment_buffer_offset;$/;"	v
num_set_fragment_sampler_state	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_fragment_sampler_state;$/;"	v
num_set_fragment_texture	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_fragment_texture;$/;"	v
num_set_front_facing_winding	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_front_facing_winding;$/;"	v
num_set_index_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_index_buffer;$/;"	v
num_set_render_pipeline_state	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_render_pipeline_state;$/;"	v
num_set_stencil_reference_value	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_stencil_reference_value;$/;"	v
num_set_vertex_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_vertex_buffer;$/;"	v
num_set_vertex_buffer_offset	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_vertex_buffer_offset;$/;"	v
num_set_vertex_sampler_state	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_vertex_sampler_state;$/;"	v
num_set_vertex_texture	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_set_vertex_texture;$/;"	v
num_skip_redundant_bindgroup	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_skip_redundant_bindgroup;$/;"	v
num_skip_redundant_compute_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_skip_redundant_compute_buffer;$/;"	v
num_skip_redundant_compute_sampler_state	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_skip_redundant_compute_sampler_state;$/;"	v
num_skip_redundant_compute_texture	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_skip_redundant_compute_texture;$/;"	v
num_skip_redundant_fragment_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_skip_redundant_fragment_buffer;$/;"	v
num_skip_redundant_fragment_sampler_state	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_skip_redundant_fragment_sampler_state;$/;"	v
num_skip_redundant_fragment_texture	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_skip_redundant_fragment_texture;$/;"	v
num_skip_redundant_index_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_skip_redundant_index_buffer;$/;"	v
num_skip_redundant_vertex_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_skip_redundant_vertex_buffer;$/;"	v
num_skip_redundant_vertex_sampler_state	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_skip_redundant_vertex_sampler_state;$/;"	v
num_skip_redundant_vertex_texture	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_skip_redundant_vertex_texture;$/;"	v
num_slices	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 num_slices;$/;"	v
num_slots	$C2_ROOT/bootstrap/bootstrap.c	/^   uint16_t num_slots;$/;"	v
num_slots	$C2_ROOT/ir/function_info.c2	/^    u16 num_slots;$/;"	v
num_slots	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 num_slots;$/;"	v
num_static_slots	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_static_slots;$/;"	v
num_static_slots	$C2_ROOT/ir/slot_collector.c2	/^    u32 num_static_slots;$/;"	v
num_stmts	$C2_ROOT/ast/switch_case.c2	/^    u32 num_stmts = src.bits.num_stmts;$/;"	v
num_stmts	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_stmts = src->bits.num_stmts;$/;"	v
num_struct_functions	$C2_ROOT/ast/struct_type_decl.c2	/^    u32 num_struct_functions;$/;"	v
num_struct_functions	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_struct_functions;$/;"	v
num_targets	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_targets;$/;"	v
num_targets	$C2_ROOT/compiler/c2recipe.c2	/^    u32 num_targets;$/;"	v
num_tests	$C2_ROOT/plugins/unit_test1.c2	/^   u32 num_tests;$/;"	v
num_tests	$C2_ROOT/plugins/unit_test2.c2	/^    stats.total += groups[i].num_tests;$/;"	v
num_touches	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    i32 num_touches;$/;"	v
num_uniform	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_uniform;$/;"	v
num_unmap	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_unmap;$/;"	v
num_update_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_update_buffer;$/;"	v
num_update_image	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_update_image;$/;"	v
num_update_subresource	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_update_subresource;$/;"	v
num_use_program	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_use_program;$/;"	v
num_values	$C2_ROOT/ast/init_list_expr.c2	/^    u32 num_values;$/;"	v
num_values	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_values;$/;"	v
num_values	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^    u32 num_values;$/;"	v
num_values	$C2_ROOT/generator/ir/ir_generator.c2	/^        u32 missing = array_size - num_values;$/;"	v
num_variables	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_variables;$/;"	v
num_variables	$C2_ROOT/ir/interference_graph.c2	/^    u32 num_variables;$/;"	v
num_variables	$C2_ROOT/ir/live_map.c2	/^    u32 num_variables;$/;"	v
num_vertex_attrib_divisor	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_vertex_attrib_divisor;$/;"	v
num_vertex_attrib_pointer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_vertex_attrib_pointer;$/;"	v
num_vs_set_constant_buffers	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_vs_set_constant_buffers;$/;"	v
num_vs_set_samplers	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_vs_set_samplers;$/;"	v
num_vs_set_shader	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_vs_set_shader;$/;"	v
num_vs_set_shader_resources	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 num_vs_set_shader_resources;$/;"	v
num_warnings	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_warnings;$/;"	v
num_warnings	$C2_ROOT/common/diagnostics.c2	/^    u32 num_warnings;$/;"	v
num_writes	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t num_writes;$/;"	v
number	$C2_ROOT/ast_utils/attr.c2	/^        u32 number;$/;"	v
number	$C2_ROOT/bootstrap/bootstrap.c	/^      uint32_t number;$/;"	v
number_radix	$C2_ROOT/ast_utils/number_radix.c2	/^module number_radix;$/;"	v
number_radix_Radix	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t number_radix_Radix;$/;"	v
number_radix_Radix_Binary	$C2_ROOT/bootstrap/bootstrap.c	/^   number_radix_Radix_Binary,$/;"	v
number_radix_Radix_Default	$C2_ROOT/bootstrap/bootstrap.c	/^   number_radix_Radix_Default,$/;"	v
number_radix_Radix_Hex	$C2_ROOT/bootstrap/bootstrap.c	/^   number_radix_Radix_Hex,$/;"	v
number_radix_Radix_Octal	$C2_ROOT/bootstrap/bootstrap.c	/^   number_radix_Radix_Octal,$/;"	v
octconv	$C2_ROOT/parser/c2_tokenizer.c2	/^fn u32 octconv(const char* p, u32 maxn, u32* pc) {$/;"	f
of	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u8    opcode;     \/* type of operation for this sqe *\/$/;"	t
off_in	$C2_ROOT/libs/io_uring/io_uring.c2i	/^	sqe->splice_off_in = (__u64) off_in;$/;"	v
off_t	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint64_t off_t;$/;"	v
offset	$C2_ROOT/analyser/module_analyser_init.c2	/^        u32 offset = base_offset + ml.offset;$/;"	v
offset	$C2_ROOT/ast/member_expr.c2	/^        offset = 1;$/;"	v
offset	$C2_ROOT/ast/struct_type_decl.c2	/^    u32 offset;$/;"	v
offset	$C2_ROOT/ast/var_decl.c2	/^    return d.base.offset;$/;"	v
offset	$C2_ROOT/ast_utils/string_pool.c2	/^            text = p.data + offset;$/;"	v
offset	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t offset;$/;"	v
offset	$C2_ROOT/common/source_mgr.c2	/^    u32 offset;$/;"	v
offset	$C2_ROOT/generator/c2refs.c2	/^    return offset;$/;"	v
offset	$C2_ROOT/generator/ir/basic_struct_layouter.c2	/^    u32 offset = ml.offset;$/;"	v
offset	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^    u32 offset = info.offset;$/;"	v
offset	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^            offset = ml.offset;$/;"	v
offset	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^            text = t.words.data + offset;$/;"	v
offset	$C2_ROOT/libs/io_uring/io_uring.c2i	/^	sqe.off = offset;$/;"	v
offset	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 offset;$/;"	v
offset2loc	$C2_ROOT/plugins/refs_generator.c2	/^fn Loc LineCounter.offset2loc(const LineCounter* l, u32 offset) {$/;"	f
ok	$C2_ROOT/analyser/module_analyser.c2	/^    return ok;$/;"	v
ok	$C2_ROOT/analyser/module_analyser_init.c2	/^    return ok;$/;"	v
ok	$C2_ROOT/bootstrap/bootstrap.c	/^   return ok;$/;"	v
ok	$C2_ROOT/common/build_file.c2	/^    return ok;$/;"	v
ok	$C2_ROOT/compiler/c2recipe_yaml.c2	/^    return ok;$/;"	v
ok	$C2_ROOT/compiler/manifest.c2	/^    return ok;$/;"	v
ok	$C2_ROOT/plugins/unit_test2.c2	/^  u32 ok;$/;"	v
old_capacity	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    new_zone.start = old_capacity;$/;"	v
old_head	$C2_ROOT/bootstrap/bootstrap.c	/^   item->next = old_head;$/;"	v
old_head	$C2_ROOT/common/linked_list.c2	/^    item.next = old_head;$/;"	v
old_index	$C2_ROOT/analyser/module_analyser_struct.c2	/^            u32 old_index;$/;"	v
old_index	$C2_ROOT/bootstrap/bootstrap.c	/^         uint32_t old_index;$/;"	v
old_len	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^        iter.len = old_len;$/;"	v
old_tail	$C2_ROOT/bootstrap/bootstrap.c	/^   item->prev = old_tail;$/;"	v
old_tail	$C2_ROOT/common/linked_list.c2	/^    item.prev = old_tail;$/;"	v
onDep	$C2_ROOT/generator/c/dep_finder.c2	/^fn void Finder.onDep(Finder* s, const Decl* d, bool full) {$/;"	f
onLib	$C2_ROOT/compiler/compiler_libs.c2	/^fn void Compiler.onLib(void* arg, u32 name, bool is_static) {$/;"	f
on_ast	$C2_ROOT/generator/ir/ir_generator.c2	/^fn void Generator.on_ast(void* arg, AST* a) {$/;"	f
on_ast	$C2_ROOT/plugins/deps_generator.c2	/^fn void Generator.on_ast(void* arg, AST* a) {$/;"	f
on_ast	$C2_ROOT/plugins/refs_generator.c2	/^fn void Generator.on_ast(void* arg, AST* a) {$/;"	f
on_ast_decl	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.on_ast_decl(void* arg, AST* a) {$/;"	f
on_ast_structs	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.on_ast_structs(void* arg, AST* a) {$/;"	f
on_decl	$C2_ROOT/bootstrap/bootstrap.c	/^   f->on_decl = on_decl;$/;"	v
on_decl	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.on_decl(void* arg, Decl* d) {$/;"	f
on_decl	$C2_ROOT/generator/c/dep_finder.c2	/^    f.on_decl = on_decl;$/;"	v
on_decl	$C2_ROOT/generator/c2i/c2i_generator.c2	/^fn void on_decl(void* arg, Decl* d) {$/;"	f
on_decl	$C2_ROOT/plugins/deps_generator.c2	/^fn void Generator.on_decl(void* arg, Decl* d, bool global) {$/;"	f
on_decl	$C2_ROOT/plugins/refs_generator.c2	/^fn void Generator.on_decl(void* arg, Decl* d, bool global) {$/;"	f
on_error	$C2_ROOT/ast/instantiator.c2	/^    OpaqueErrorfn on_error;$/;"	v
on_error	$C2_ROOT/bootstrap/bootstrap.c	/^   t->on_error = on_error;$/;"	v
on_error	$C2_ROOT/parser/c2_tokenizer.c2	/^    t.on_error = on_error;$/;"	v
on_error	$C2_ROOT/plugins/unit_test1.c2	/^  ErrorFn on_error;$/;"	v
on_error	$C2_ROOT/plugins/unit_test2.c2	/^fn void on_error(const char* fmt @(printf_format), ...) {$/;"	f
on_exit	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int on_exit(OnExitFn __func, void* __arg);$/;"	f
on_expr	$C2_ROOT/generator/ir/ir_generator.c2	/^fn void on_expr(void* arg, const Expr* e, u32 elem_size) {$/;"	f
on_file	$C2_ROOT/plugins/refs_generator.c2	/^fn void Generator.on_file(void* arg, u32 start, u32 size, const char* filename, const char* cont/;"	f
on_format_specifier	$C2_ROOT/analyser/module_analyser_call.c2	/^fn bool on_format_specifier(void* context, printf_utils.Specifier specifier, u32 offset, i32 sta/;"	f
on_format_specifier	$C2_ROOT/generator/c/c_generator_expr.c2	/^fn bool on_format_specifier(void* context, printf_utils.Specifier specifier, u32 offset, i32 sta/;"	f
on_forward_structs	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.on_forward_structs(void* arg, Decl* d) {$/;"	f
on_function_decl	$C2_ROOT/generator/ir/ir_generator.c2	/^fn void on_function_decl(void* arg, FunctionDecl* d) {$/;"	f
on_global_decl	$C2_ROOT/plugins/deps_generator.c2	/^fn void Generator.on_global_decl(void* arg, Decl* d) {$/;"	f
on_global_decl	$C2_ROOT/plugins/refs_generator.c2	/^fn void Generator.on_global_decl(void* arg, Decl* d) {$/;"	f
on_header_decl	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.on_header_decl(void* arg, Decl* d) {$/;"	f
on_import	$C2_ROOT/generator/c2i/c2i_generator.c2	/^fn void on_import(void* arg, ImportDecl* i) {$/;"	f
on_import	$C2_ROOT/plugins/deps_generator.c2	/^fn void Generator.on_import(void* arg, ImportDecl* d) {$/;"	f
on_interface_decl	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.on_interface_decl(void* arg, Decl* d) {$/;"	f
on_interface_import	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.on_interface_import(void* arg, ImportDecl* i) {$/;"	f
on_log	$C2_ROOT/plugins/unit_test1.c2	/^  LogFn on_log;$/;"	v
on_log	$C2_ROOT/plugins/unit_test2.c2	/^public fn void on_log(const char* fmt, va_list args) {$/;"	f
on_module	$C2_ROOT/common/manifest_writer.c2	/^fn void on_module(void* arg, ast.Module* m) {$/;"	f
on_module	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.on_module(void* arg, Module* m) {$/;"	f
on_module	$C2_ROOT/generator/c2i/c2i_generator.c2	/^fn void Generator.on_module(void* arg, Module* m) {$/;"	f
on_module	$C2_ROOT/generator/ir/ir_generator.c2	/^fn void Generator.on_module(void* arg, Module* m) {$/;"	f
on_module	$C2_ROOT/plugins/deps_generator.c2	/^fn void Generator.on_module(void* arg, Module* m) {$/;"	f
on_module	$C2_ROOT/plugins/refs_generator.c2	/^fn void Generator.on_module(void* arg, Module* m) {$/;"	f
on_opaque	$C2_ROOT/ast/instantiator.c2	/^fn void Instantiator.on_opaque(Instantiator* inst, src_loc.SrcLoc loc, Decl* decl) {$/;"	f
on_private_ast_imports	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.on_private_ast_imports(void* arg, AST* a) {$/;"	f
on_private_import_decl	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.on_private_import_decl(void* arg, ImportDecl* i) {$/;"	f
on_public_ast_imports	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.on_public_ast_imports(void* arg, AST* a) {$/;"	f
on_public_import_decl	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.on_public_import_decl(void* arg, ImportDecl* i) {$/;"	f
on_ref	$C2_ROOT/bootstrap/bootstrap.c	/^   v->on_ref = on_ref;$/;"	v
on_ref	$C2_ROOT/generator/ast_visitor.c2	/^    v.on_ref = on_ref;$/;"	v
on_ref	$C2_ROOT/plugins/deps_generator.c2	/^fn void Generator.on_ref(void* arg, const Ref* ref) {$/;"	f
on_ref	$C2_ROOT/plugins/refs_generator.c2	/^fn void Generator.on_ref(void* arg, const Ref* ref) {$/;"	f
on_static_assert	$C2_ROOT/plugins/refs_generator.c2	/^fn void Generator.on_static_assert(void* arg, StaticAssert* d) {$/;"	f
on_tokenizer_error	$C2_ROOT/parser/c2_parser.c2	/^fn void on_tokenizer_error(void* arg, SrcLoc loc) {$/;"	f
on_tokenizer_warning	$C2_ROOT/parser/c2_parser.c2	/^fn void on_tokenizer_warning(void* arg, SrcLoc loc) {$/;"	f
on_var_decl	$C2_ROOT/generator/ir/ir_generator.c2	/^fn void on_var_decl(void* arg, VarDecl* vd) {$/;"	f
on_warning	$C2_ROOT/bootstrap/bootstrap.c	/^   t->on_warning = on_warning;$/;"	v
on_warning	$C2_ROOT/parser/c2_tokenizer.c2	/^    t.on_warning = on_warning;$/;"	v
on_zero	$C2_ROOT/generator/ir/ir_generator.c2	/^fn void on_zero(void* arg, u32 size) {$/;"	f
one	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Ref one;$/;"	v
one	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^    ir.Ref one;$/;"	v
one	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        ir.Ref one;$/;"	v
one	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec4 Vec4.one() {$/;"	f
online_cpus	$C2_ROOT/ir/work_queue.c2	/^fn u32 online_cpus() {$/;"	f
op	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind op;$/;"	v
op	$C2_ROOT/libs/io_uring/io_uring.c2i	/^	sqe.opcode = (u8)op;$/;"	v
op	$C2_ROOT/parser/c2_tokenizer.c2	/^    Kind op;$/;"	v
op_alpha	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BlendOp op_alpha;$/;"	v
op_rgb	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BlendOp op_rgb;$/;"	v
opaque	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    c_uchar[32] opaque;$/;"	v
opaque_callback	$C2_ROOT/analyser/module_analyser_call.c2	/^fn void Analyser.opaque_callback(void* arg, SrcLoc loc, Decl* d) {$/;"	f
open	$C2_ROOT/libs/libc/libc_fcntl.c2i	/^fn c_int open(const char* __file, c_int __oflag, ...);$/;"	f
openAudioDevice	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn AudioDeviceID openAudioDevice(const char* device,$/;"	f
openFont	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn Font* openFont(const char* file, c_int ptsize) @(cname="TTF_OpenFont");$/;"	f
open_file	$C2_ROOT/generator/c2refs.c2	/^fn MapFile open_file(const char* filename) {$/;"	f
open_flags	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        u32       open_flags;$/;"	v
open_lib	$C2_ROOT/compiler/compiler_libs.c2	/^fn void Compiler.open_lib(Compiler* c, Component* comp) {$/;"	f
open_memstream	$C2_ROOT/libs/libc/stdio.c2i	/^fn FILE* open_memstream(c_char** __bufloc, c_size* __sizeloc);$/;"	f
openat	$C2_ROOT/libs/libc/libc_fcntl.c2i	/^fn c_int openat(i32 dirfd, const char* pathname, i32 flags, ...);$/;"	f
opendir	$C2_ROOT/libs/libc/libc_dirent.c2i	/^fn DIR* opendir(const c_char* name);$/;"	f
optarg	$C2_ROOT/libs/libc/unistd.c2i	/^char* optarg;$/;"	v
opterr	$C2_ROOT/libs/libc/unistd.c2i	/^c_int opterr;$/;"	v
optind	$C2_ROOT/libs/libc/unistd.c2i	/^c_int optind;$/;"	v
option	$C2_ROOT/compiler/c2recipe_parser.c2	/^    char[24] option;$/;"	v
options	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t options;$/;"	v
options	$C2_ROOT/common/build_target.c2	/^    p.options = options;$/;"	v
optopt	$C2_ROOT/libs/libc/unistd.c2i	/^c_int optopt;$/;"	v
opts	$C2_ROOT/bootstrap/bootstrap.c	/^   const compiler_Options* opts;$/;"	v
opts	$C2_ROOT/compiler/compiler.c2	/^    c.opts = opts;$/;"	v
opts	$C2_ROOT/compiler/main.c2	/^    Options opts;$/;"	v
optype	$C2_ROOT/analyser/module_analyser_binop.c2	/^    return optype;$/;"	v
optype	$C2_ROOT/bootstrap/bootstrap.c	/^   return optype;$/;"	v
or	$C2_ROOT/ast/value.c2	/^fn Value Value.or(const Value* v1, const Value* v2) {$/;"	f
or	$C2_ROOT/bootstrap/bootstrap.c	/^         c2_parser_Parser_error(p, "expect a type or variable name");$/;"	t
orig	$C2_ROOT/analyser/module_analyser_switch.c2	/^                StringLiteral* lit = (StringLiteral*)orig;$/;"	v
orig	$C2_ROOT/analyser/module_sorter.c2	/^    s.modules = orig;$/;"	v
orig	$C2_ROOT/bootstrap/bootstrap.c	/^   s.modules = orig;$/;"	v
origFn	$C2_ROOT/analyser/module_analyser_call.c2	/^        m = (MemberExpr*)origFn;$/;"	v
origin	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void origin(f32 x, f32 y) @(cname="sdtx_origin");$/;"	f
origin_top_left	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool origin_top_left;$/;"	v
ortho	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void ortho(f32 l, f32 r, f32 b, f32 t, f32 n, f32 f) @(cname="sgl_ortho");$/;"	f
ortho	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Mat4 Mat4.ortho(f32 left, f32 right, f32 bottom, f32 top, f32 near, f32 far) {$/;"	f
other	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_InstrList tmp = *other;$/;"	v
other	$C2_ROOT/common/quicksort.c2	/^        u8 tmp = *other;$/;"	v
other	$C2_ROOT/ir/instr_list.c2	/^    InstrList tmp = *other;$/;"	v
otherCount	$C2_ROOT/ast/statistics.c2	/^    u32 totalCount = typesCount + exprCount + stmtCount + declCount + otherCount;$/;"	v
otherTotal	$C2_ROOT/ast/statistics.c2	/^    u32 totalSize = typesTotal + exprTotal + stmtTotal + declTotal + otherTotal;$/;"	v
other_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t other_count;$/;"	v
other_dir	$C2_ROOT/bootstrap/bootstrap.c	/^   const char* other_dir;$/;"	v
other_dir	$C2_ROOT/compiler/main.c2	/^    const char* other_dir;$/;"	v
other_size	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t other_size;$/;"	v
out	$C2_ROOT/analyser/module_analyser_init.c2	/^        if (!ok) goto out;$/;"	v
out	$C2_ROOT/ast/value.c2	/^    return out;$/;"	v
out	$C2_ROOT/bootstrap/bootstrap.c	/^   string_buffer_Buf* saved = gen->out;$/;"	v
out	$C2_ROOT/common/diagnostics.c2	/^    string_buffer.Buf* out = diags.out;$/;"	v
out	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^            if (*t.cur == delim) goto out;$/;"	v
out	$C2_ROOT/generator/c/c_generator.c2	/^    string_buffer.Buf* saved = gen.out;$/;"	v
out	$C2_ROOT/generator/c/c_generator_expr.c2	/^    string_buffer.Buf* out;$/;"	v
out	$C2_ROOT/generator/c/c_generator_special.c2	/^    string_buffer.Buf* out = gen.out;$/;"	v
out	$C2_ROOT/generator/c/c_generator_stmt.c2	/^    string_buffer.Buf* out = gen.out;$/;"	v
out	$C2_ROOT/generator/c2i/c2i_generator.c2	/^    string_buffer.Buf* out;$/;"	v
out	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^    string_buffer.Buf* out = gen.out;$/;"	v
out	$C2_ROOT/generator/c2i/c2i_generator_stmt.c2	/^    string_buffer.Buf* out = gen.out;$/;"	v
out	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^    string_buffer.Buf* out = gen.out;$/;"	v
out	$C2_ROOT/ir/context.c2	/^    return out;$/;"	v
out	$C2_ROOT/ir/print.c2	/^    string_buffer.Buf* out;$/;"	v
out	$C2_ROOT/ir/ssa.c2	/^    return out;$/;"	v
out	$C2_ROOT/plugins/deps_generator.c2	/^    string_buffer.Buf* out = gen.out;$/;"	v
out_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   c->write_idx = out_idx;$/;"	v
outfile	$C2_ROOT/generator/c/c_generator.c2	/^    char[64] outfile;$/;"	v
outfile	$C2_ROOT/plugins/refs_generator.c2	/^    char[file_utils.Max_path] outfile;$/;"	v
output	$C2_ROOT/bootstrap/bootstrap.c	/^   return output;$/;"	v
output	$C2_ROOT/common/string_utils.c2	/^    return output;$/;"	v
output	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^    char[4096] output;$/;"	v
output_base	$C2_ROOT/bootstrap/bootstrap.c	/^         output_base = output_dir2;$/;"	v
output_base	$C2_ROOT/compiler/compiler.c2	/^            output_base = output_dir2;$/;"	v
output_dir	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t output_dir;$/;"	v
output_dir	$C2_ROOT/common/build_file.c2	/^    u32 output_dir;$/;"	v
output_dir	$C2_ROOT/compiler/compiler.c2	/^    const char* output_base = constants.output_dir;$/;"	v
output_dir	$C2_ROOT/generator/c/c_generator.c2	/^    gen.output_dir = output_dir;$/;"	v
output_dir	$C2_ROOT/generator/c2i/c2i_generator.c2	/^    gen.output_dir = output_dir;$/;"	v
output_dir	$C2_ROOT/generator/ir/ir_generator.c2	/^    gen.output_dir = output_dir;$/;"	v
output_dir	$C2_ROOT/plugins/plugin_info.c2	/^    char[file_utils.Max_path] output_dir;$/;"	v
output_dir2	$C2_ROOT/bootstrap/bootstrap.c	/^         output_base = output_dir2;$/;"	v
output_dir2	$C2_ROOT/compiler/compiler.c2	/^            output_base = output_dir2;$/;"	v
output_name	$C2_ROOT/bootstrap/bootstrap.c	/^   const char* output_name;$/;"	v
output_name	$C2_ROOT/compiler/main.c2	/^    const char* output_name;$/;"	v
overflow	$C2_ROOT/ast/value.c2	/^    result.overflow |= v2.overflow;$/;"	v
overflow	$C2_ROOT/bootstrap/bootstrap.c	/^   result.overflow |= v2->overflow;$/;"	v
overflow	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32 overflow;$/;"	v
overflow	$C2_ROOT/parser/c2_tokenizer.c2	/^            overflow = true;$/;"	v
own	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool own;$/;"	v
owns_modules	$C2_ROOT/bootstrap/bootstrap.c	/^   l->owns_modules = owns_modules;$/;"	v
owns_modules	$C2_ROOT/common/module_list.c2	/^    l.owns_modules = owns_modules;$/;"	v
p0	$C2_ROOT/bootstrap/bootstrap.c	/^      p = p0;$/;"	v
p0	$C2_ROOT/parser/c2_tokenizer.c2	/^        p = p0;$/;"	v
p2	$C2_ROOT/ir_examples/struct_init.c2	/^        void* p2;$/;"	v
packet_frames	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    i32 packet_frames;$/;"	v
pad	$C2_ROOT/libs/c2/varargs.c2i	/^    u8[24] pad;$/;"	v
pad	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32[4] pad;$/;"	v
pad	$C2_ROOT/libs/libc/stdarg.c2i	/^    c_char[24] pad;$/;"	v
padding	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u8[56] padding;$/;"	v
padding1	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u8 padding1;$/;"	v
padding2	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u8 padding2;$/;"	v
padding3	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u8 padding3;$/;"	v
palette	$C2_ROOT/libs/sdl2/sdl.c2i	/^    Palette *palette;$/;"	v
param	$C2_ROOT/bootstrap/bootstrap.c	/^   return param;$/;"	v
param	$C2_ROOT/parser/c2_parser.c2	/^    return param;$/;"	v
param_refs	$C2_ROOT/generator/ir/ir_generator.c2	/^    ir.Ref[constants.MaxCallArgs] param_refs;$/;"	v
parameter	$C2_ROOT/libs/libc/sys_socket.c2i	/^\/* Flags to be ORed into the type parameter of socket and socketpair and$/;"	t
params	$C2_ROOT/parser/ast_builder.c2	/^                                          params,$/;"	v
parenExprBits	$C2_ROOT/ast/stmt.c2	/^        ParenExprBits parenExprBits;$/;"	v
parenExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_ParenExprBits parenExprBits;$/;"	v
parent_kind	$C2_ROOT/bootstrap/bootstrap.c	/^         parent->kind = parent_kind;$/;"	v
parent_kind	$C2_ROOT/common/yaml/yaml_parser.c2	/^            parent.kind = parent_kind;$/;"	v
parse	$C2_ROOT/common/build_file.c2	/^public fn Info* parse(source_mgr.SourceMgr* sm, string_pool.Pool* pool, const char* filename) {$/;"	f
parse	$C2_ROOT/common/yaml/yaml_parser.c2	/^public fn bool Parser.parse(Parser* p, const char* input) {$/;"	f
parse	$C2_ROOT/compiler/c2recipe.c2	/^public fn bool Recipe.parse(Recipe* r, i32 file_id) {$/;"	f
parse	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn bool Parser.parse(Recipe* recipe, string_pool.Pool* pool, source_mgr.SourceMgr* sm, i32 file_/;"	f
parse	$C2_ROOT/compiler/manifest.c2	/^public fn bool parse(source_mgr.SourceMgr* sm,$/;"	f
parse	$C2_ROOT/parser/c2_parser.c2	/^public fn void Parser.parse(Parser* p, i32 file_id, bool is_interface, bool is_generated) {$/;"	f
parseAliasType	$C2_ROOT/parser/c2_parser_type.c2	/^fn void Parser.parseAliasType(Parser* p, u32 name, SrcLoc loc, bool is_public) {$/;"	f
parseArgs	$C2_ROOT/common/process_utils.c2	/^fn u32 parseArgs(const char* args, char** argv, u32 maxargs, char *tmp, usize tmp_size) {$/;"	f
parseArrayDesignator	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseArrayDesignator(Parser* p) {$/;"	f
parseArrayEntry	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.parseArrayEntry(Parser* p) {$/;"	f
parseAsCastType	$C2_ROOT/parser/c2_parser_expr.c2	/^fn u32 Parser.parseAsCastType(Parser* p, u32 ahead, Kind close_tok) {$/;"	f
parseAsType	$C2_ROOT/parser/c2_parser_expr.c2	/^fn bool Parser.parseAsType(Parser* p) {$/;"	f
parseAsmOperandsOpt	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn void Parser.parseAsmOperandsOpt(Parser* p,$/;"	f
parseAsmStmt	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn Stmt* Parser.parseAsmStmt(Parser* p) {$/;"	f
parseAssertStmt	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn Stmt* Parser.parseAssertStmt(Parser* p) {$/;"	f
parseAssignmentExpression	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseAssignmentExpression(Parser* p) {$/;"	f
parseBackEndOptions	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Parser.parseBackEndOptions(Parser* p) {$/;"	f
parseBackend	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Parser.parseBackend(Parser* p) {$/;"	f
parseBreakStmt	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn Stmt* Parser.parseBreakStmt(Parser* p) {$/;"	f
parseCallExpr	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseCallExpr(Parser* p, Expr* func) {$/;"	f
parseCase	$C2_ROOT/parser/c2_parser_switch.c2	/^fn SwitchCase* Parser.parseCase(Parser* p, bool is_default) {$/;"	f
parseCaseCondition	$C2_ROOT/parser/c2_parser_switch.c2	/^fn void Parser.parseCaseCondition(Parser* p, expr_list.List* list) {$/;"	f
parseCastExpr	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseCastExpr(Parser* p, bool \/*isUnaryExpr*\/, bool \/*isAddrOfOp*\/) {$/;"	f
parseCompoundStmt	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn CompoundStmt* Parser.parseCompoundStmt(Parser* p) {$/;"	f
parseCondition	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn Stmt* Parser.parseCondition(Parser* p) {$/;"	f
parseContinueStmt	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn Stmt* Parser.parseContinueStmt(Parser* p) {$/;"	f
parseDeclOrStmt	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn Stmt* Parser.parseDeclOrStmt(Parser* p) {$/;"	f
parseDeclStmt	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn Stmt* Parser.parseDeclStmt(Parser* p, bool checkSemi, bool allowLocal, bool isCondition) {$/;"	f
parseElemsof	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseElemsof(Parser* p) {$/;"	f
parseEnumMinMax	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseEnumMinMax(Parser* p, bool is_min) {$/;"	f
parseEnumType	$C2_ROOT/parser/c2_parser_type.c2	/^fn void Parser.parseEnumType(Parser* p, u32 name, SrcLoc loc, bool is_public) {$/;"	f
parseExecutable	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Parser.parseExecutable(Parser* p) {$/;"	f
parseExplicitCastExpr	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseExplicitCastExpr(Parser* p) {$/;"	f
parseExpr	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseExpr(Parser* p) {$/;"	f
parseExprStmt	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn Stmt* Parser.parseExprStmt(Parser* p) {$/;"	f
parseExternalModule	$C2_ROOT/compiler/compiler_libs.c2	/^fn void Compiler.parseExternalModule(void* arg, ast.Module* m) {$/;"	f
parseFallthroughStmt	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn Stmt* Parser.parseFallthroughStmt(Parser* p) {$/;"	f
parseFieldDesignator	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseFieldDesignator(Parser* p) {$/;"	f
parseForStmt	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn Stmt* Parser.parseForStmt(Parser* p) {$/;"	f
parseFormat	$C2_ROOT/analyser_utils/printf_utils.c2	/^public fn bool parseFormat(const char* format, FormatHandler handler, void* arg) {$/;"	f
parseFullIdentifier	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseFullIdentifier(Parser* p) {$/;"	f
parseFullTypeIdentifier	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.parseFullTypeIdentifier(Parser* p, TypeRefHolder* ref) {$/;"	f
parseFuncDecl	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.parseFuncDecl(Parser* p, bool is_public) {$/;"	f
parseFunctionParams	$C2_ROOT/parser/c2_parser.c2	/^fn bool Parser.parseFunctionParams(Parser* p, DeclList* params, bool is_public, bool accept_defa/;"	f
parseFunctionType	$C2_ROOT/parser/c2_parser_type.c2	/^fn void Parser.parseFunctionType(Parser* p, u32 name, SrcLoc loc, bool is_public) {$/;"	f
parseGotoStmt	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn Stmt* Parser.parseGotoStmt(Parser* p) {$/;"	f
parseIdentifier	$C2_ROOT/parser/c2_parser_expr.c2	/^fn IdentifierExpr* Parser.parseIdentifier(Parser* p) {$/;"	f
parseIfStmt	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn Stmt* Parser.parseIfStmt(Parser* p) {$/;"	f
parseImage	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Parser.parseImage(Parser* p) {$/;"	f
parseImports	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.parseImports(Parser* p) {$/;"	f
parseImpureMemberExpr	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseImpureMemberExpr(Parser* p, Expr* base) {$/;"	f
parseInitList	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseInitList(Parser* p) {$/;"	f
parseInitValue	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseInitValue(Parser* p, bool allow_designators) {$/;"	f
parseLabelStmt	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn Stmt* Parser.parseLabelStmt(Parser* p) {$/;"	f
parseLibrary	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Parser.parseLibrary(Parser* p) {$/;"	f
parseModule	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.parseModule(Parser* p, bool is_interface, bool is_generated) {$/;"	f
parseOffsetOfExpr	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseOffsetOfExpr(Parser* p) {$/;"	f
parseOptionalAccessSpecifier	$C2_ROOT/parser/c2_parser.c2	/^fn bool Parser.parseOptionalAccessSpecifier(Parser* p) {$/;"	f
parseOptionalArray	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.parseOptionalArray(Parser* p, TypeRefHolder* ref) {$/;"	f
parseOptionalAttributes	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.parseOptionalAttributes(Parser* p) {$/;"	f
parseOptionalTypeQualifier	$C2_ROOT/parser/c2_parser.c2	/^fn u32 Parser.parseOptionalTypeQualifier(Parser* p) {$/;"	f
parseParamDecl	$C2_ROOT/parser/c2_parser.c2	/^fn VarDecl* Parser.parseParamDecl(Parser* p, bool is_public, bool accept_default) {$/;"	f
parseParamOptionalAttributes	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.parseParamOptionalAttributes(Parser* p, VarDecl* d) {$/;"	f
parseParenExpr	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseParenExpr(Parser* p) {$/;"	f
parsePlugin	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Parser.parsePlugin(Parser* p, bool is_global) {$/;"	f
parsePostfixExprSuffix	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parsePostfixExprSuffix(Parser* p, Expr* lhs, bool couldBeTemplateCall) {$/;"	f
parsePureMemberExpr	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parsePureMemberExpr(Parser* p) {$/;"	f
parseRHSOfBinaryExpression	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseRHSOfBinaryExpression(Parser* p, Expr* lhs, Prec minPrec) {$/;"	f
parseReturnStmt	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn Stmt* Parser.parseReturnStmt(Parser* p) {$/;"	f
parseSet	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Parser.parseSet(Parser* p) {$/;"	f
parseSingleTypeSpecifier	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.parseSingleTypeSpecifier(Parser* p, TypeRefHolder* ref) {$/;"	f
parseSizeof	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseSizeof(Parser* p) {$/;"	f
parseStaticAssert	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.parseStaticAssert(Parser* p) {$/;"	f
parseStmt	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn Stmt* Parser.parseStmt(Parser* p) {$/;"	f
parseStringLiteral	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseStringLiteral(Parser* p) {$/;"	f
parseStructBlock	$C2_ROOT/parser/c2_parser_type.c2	/^fn void Parser.parseStructBlock(Parser* p, DeclList* members, bool is_public) {$/;"	f
parseStructType	$C2_ROOT/parser/c2_parser_type.c2	/^fn void Parser.parseStructType(Parser* p, bool is_struct, u32 name, SrcLoc loc, bool is_public) /;"	f
parseSwitchStmt	$C2_ROOT/parser/c2_parser_switch.c2	/^fn Stmt* Parser.parseSwitchStmt(Parser* p) {$/;"	f
parseTarget	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Parser.parseTarget(Parser* p) {$/;"	f
parseTemplateCallExpr	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseTemplateCallExpr(Parser* p, Expr* func, const TypeRefHolder* ref) {$/;"	f
parseToContainerExpr	$C2_ROOT/parser/c2_parser_expr.c2	/^fn Expr* Parser.parseToContainerExpr(Parser* p) {$/;"	f
parseTop	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Parser.parseTop(Parser* p) {$/;"	f
parseTopLevel	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.parseTopLevel(Parser* p) {$/;"	f
parseTypeDecl	$C2_ROOT/parser/c2_parser_type.c2	/^fn void Parser.parseTypeDecl(Parser* p, bool is_public) {$/;"	f
parseTypeSpecifier	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.parseTypeSpecifier(Parser* p, TypeRefHolder* ref) {$/;"	f
parseVarDecl	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.parseVarDecl(Parser* p, bool is_public) {$/;"	f
parseWarnings	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Parser.parseWarnings(Parser* p) {$/;"	f
parseWhileStmt	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn Stmt* Parser.parseWhileStmt(Parser* p) {$/;"	f
parseYaml	$C2_ROOT/compiler/c2recipe_yaml.c2	/^public fn bool Recipe.parseYaml(Recipe* r, i32 file_id) {$/;"	f
parse_config	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^fn bool parse_config(yaml.Parser* parser, const char* config_file, string_buffer.Buf* out) {$/;"	f
parse_doc	$C2_ROOT/common/yaml/yaml_parser.c2	/^fn void Parser.parse_doc(Parser* p) {$/;"	f
parse_error_warn	$C2_ROOT/parser/c2_tokenizer.c2	/^fn bool Tokenizer.parse_error_warn(Tokenizer* t, Token* result, Kind kind) {$/;"	f
parse_lib	$C2_ROOT/compiler/compiler_libs.c2	/^fn void Compiler.parse_lib(Compiler* c, Component* comp) {$/;"	f
parse_long_opt	$C2_ROOT/compiler/main.c2	/^fn i32 parse_long_opt(i32 i, i32 argc, char** argv, compiler.Options* comp_opts, Options* opts) /;"	f
parse_node	$C2_ROOT/common/yaml/yaml_parser.c2	/^fn void Parser.parse_node(Parser* p) {$/;"	f
parse_node_or_value	$C2_ROOT/common/yaml/yaml_parser.c2	/^fn void Parser.parse_node_or_value(Parser* p) {$/;"	f
parse_opts	$C2_ROOT/compiler/main.c2	/^fn void parse_opts(i32 argc, char** argv, compiler.Options* comp_opts, Options* opts) {$/;"	f
parse_ppexpr	$C2_ROOT/parser/c2_tokenizer.c2	/^fn i64 Tokenizer.parse_ppexpr(Tokenizer* t, Token *result) {$/;"	f
parse_queue	$C2_ROOT/bootstrap/bootstrap.c	/^   module_list_List parse_queue;$/;"	v
parse_queue	$C2_ROOT/compiler/compiler.c2	/^    module_list.List parse_queue;$/;"	v
parse_value	$C2_ROOT/common/yaml/yaml_parser.c2	/^fn void Parser.parse_value(Parser* p) {$/;"	f
parser	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_parser_Parser* parser;$/;"	v
parser	$C2_ROOT/compiler/compiler.c2	/^    c2_parser.Parser* parser;$/;"	v
pass	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FrameStatsD3d11Pass pass;$/;"	v
pass_op	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    StencilOp pass_op;$/;"	v
path	$C2_ROOT/bootstrap/bootstrap.c	/^            path = rest;$/;"	v
path	$C2_ROOT/common/file/file_utils.c2	/^    char[Max_path] path;$/;"	v
path	$C2_ROOT/common/yaml/yaml_iterator.c2	/^                path = rest;$/;"	v
path	$C2_ROOT/compiler/compiler_libs.c2	/^            char[file_utils.Max_path] path;$/;"	v
path	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^    const char* path;$/;"	v
path_exists	$C2_ROOT/common/file/file_utils.c2	/^public fn bool path_exists(const char* path) {$/;"	f
path_info	$C2_ROOT/bootstrap/bootstrap.c	/^   utils_PathInfo path_info;$/;"	v
path_info	$C2_ROOT/common/diagnostics.c2	/^    diags.path_info = path_info;$/;"	v
path_info	$C2_ROOT/compiler/main.c2	/^    utils.PathInfo path_info;$/;"	v
paths	$C2_ROOT/bootstrap/bootstrap.c	/^   string_list_List paths;$/;"	v
paths	$C2_ROOT/compiler/plugin_mgr.c2	/^    string_list.List paths;$/;"	v
pcallk	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int pcallk(State *L, c_int nargs, c_int nresults, c_int errfunc,$/;"	f
pclose	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int pclose(FILE* __stream);$/;"	f
peekToken	$C2_ROOT/parser/c2_parser.c2	/^fn Kind Parser.peekToken(Parser* p, u32 n) {$/;"	f
peekToken2	$C2_ROOT/parser/c2_parser.c2	/^fn Kind Parser.peekToken2(Parser* p, u32 n, Token *tok) {$/;"	f
peek_batch_cqe	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn u32 peek_batch_cqe(Ring *ring, Cqe** cqes, u32 count) @(cname="io_uring_peek_batch_cqe");$/;"	f
peek_cqe	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn c_int Ring.peek_cqe(Ring* ring, Cqe** cqe_ptr) @(cname="io_uring_peek_cqe")$/;"	f
perror	$C2_ROOT/libs/libc/stdio.c2i	/^fn void perror(const c_char* __s);$/;"	f
personality	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u16   personality;$/;"	v
perspective	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void perspective(f32 fov_y, f32 aspect, f32 z_near, f32 z_far) @(cname="sgl_perspective");$/;"	f
perspective	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Mat4 Mat4.perspective(f32 fov, f32 aspect, f32 near, f32 far) {$/;"	f
phi_clauses	$C2_ROOT/bootstrap/bootstrap.c	/^      ir_Index phi_clauses;$/;"	v
phi_ref	$C2_ROOT/bootstrap/bootstrap.c	/^               ref = phi_ref;$/;"	v
phi_source	$C2_ROOT/ir/context.c2	/^        blocks[i].used = blocks[i].phi_source;$/;"	v
phis	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_PhiList phis;$/;"	v
pid_t	$C2_ROOT/bootstrap/bootstrap.c	/^typedef int32_t pid_t;$/;"	v
pipe	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int pipe(c_int* pipefd);$/;"	f
pipe2	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int pipe2(c_int* pipefd, c_int flags);$/;"	f
pipeline	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FrameStatsMetalPipeline pipeline;$/;"	v
pipeline_pool_size	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 pipeline_pool_size;$/;"	v
pipeline_pool_size	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    i32 pipeline_pool_size;$/;"	v
pipelines	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ResourceStats pipelines;$/;"	v
pitch	$C2_ROOT/libs/sdl2/sdl.c2i	/^    c_int pitch;$/;"	v
pivot	$C2_ROOT/common/quicksort.c2	/^                pivot = right;$/;"	v
pixel_format	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    PixelFormat pixel_format;$/;"	v
pixels	$C2_ROOT/libs/sdl2/sdl.c2i	/^    void* pixels;$/;"	v
pixels	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    Range pixels;$/;"	v
pk_free	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void pk_free( Pk_context *ctx) @(cname="mbedtls_pk_free");$/;"	f
pk_init	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void pk_init(Pk_context* ctx) @(cname="mbedtls_pk_init");$/;"	f
pk_raw	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    X509_buf pk_raw;$/;"	v
pl	$C2_ROOT/bootstrap/bootstrap.c	/^   const build_target_PluginList* pl;$/;"	v
pl	$C2_ROOT/compiler/main.c2	/^    const build_target.PluginList* pl;$/;"	v
planeSizes	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn Sizes planeSizes(u32 tiles) @(cname="sshape_plane_sizes");$/;"	f
pluginHandler	$C2_ROOT/bootstrap/bootstrap.c	/^   compiler_PluginHandler pluginHandler;$/;"	v
pluginHandler	$C2_ROOT/compiler/main.c2	/^    compiler.PluginHandler pluginHandler;$/;"	v
plugin_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t plugin_count;$/;"	v
plugin_count	$C2_ROOT/common/build_file.c2	/^    u32 plugin_count;$/;"	v
plugin_count	$C2_ROOT/compiler/plugin_mgr.c2	/^    u32 plugin_count;$/;"	v
plugin_dirs	$C2_ROOT/bootstrap/bootstrap.c	/^   string_list_List plugin_dirs;$/;"	v
plugin_dirs	$C2_ROOT/common/build_file.c2	/^    string_list.List plugin_dirs;$/;"	v
plugin_info	$C2_ROOT/compiler/compiler.c2	/^import plugin_info;$/;"	v
plugin_info	$C2_ROOT/compiler/main.c2	/^import plugin_info;$/;"	v
plugin_info	$C2_ROOT/compiler/plugin_mgr.c2	/^import plugin_info;$/;"	v
plugin_info	$C2_ROOT/plugins/deps_generator_plugin.c2	/^import plugin_info;$/;"	v
plugin_info	$C2_ROOT/plugins/git_version_plugin.c2	/^import plugin_info;$/;"	v
plugin_info	$C2_ROOT/plugins/plugin_info.c2	/^module plugin_info;$/;"	v
plugin_info	$C2_ROOT/plugins/refs_generator_plugin.c2	/^import plugin_info;$/;"	v
plugin_info	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^import plugin_info;$/;"	v
plugin_info	$C2_ROOT/plugins/unit_test_plugin.c2	/^import plugin_info;$/;"	v
plugin_info_AddSourceFn	$C2_ROOT/bootstrap/bootstrap.c	/^   plugin_info_AddSourceFn addSource;$/;"	v
plugin_info_Info	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct plugin_info_Info_ plugin_info_Info;$/;"	v
plugin_info_InitFn	$C2_ROOT/bootstrap/bootstrap.c	/^   plugin_info_InitFn init;$/;"	v
plugin_info_LoadFn	$C2_ROOT/bootstrap/bootstrap.c	/^   plugin_info_LoadFn load;$/;"	v
plugin_info_Plugin	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct plugin_info_Plugin_ plugin_info_Plugin;$/;"	v
plugin_info_PostAnalysisFn	$C2_ROOT/bootstrap/bootstrap.c	/^   plugin_info_PostAnalysisFn post_analysis;$/;"	v
plugin_info_PostParseFn	$C2_ROOT/bootstrap/bootstrap.c	/^   plugin_info_PostParseFn post_parse;$/;"	v
plugin_info_RegisterAttrFn	$C2_ROOT/bootstrap/bootstrap.c	/^   plugin_info_RegisterAttrFn register_attr;$/;"	v
plugin_info_UnloadFn	$C2_ROOT/bootstrap/bootstrap.c	/^   plugin_info_UnloadFn unload;$/;"	v
plugin_init	$C2_ROOT/plugins/unit_test_plugin.c2	/^fn void plugin_init(void* arg, plugin_info.Info* info) {$/;"	f
plugin_main	$C2_ROOT/plugins/deps_generator_plugin.c2	/^module plugin_main;$/;"	v
plugin_main	$C2_ROOT/plugins/git_version_plugin.c2	/^module plugin_main;$/;"	v
plugin_main	$C2_ROOT/plugins/refs_generator_plugin.c2	/^module plugin_main;$/;"	v
plugin_main	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^module plugin_main;$/;"	v
plugin_main	$C2_ROOT/plugins/unit_test_plugin.c2	/^module plugin_main;$/;"	v
plugin_max	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t plugin_max;$/;"	v
plugin_max	$C2_ROOT/common/build_file.c2	/^    u32 plugin_max;$/;"	v
plugin_max	$C2_ROOT/compiler/plugin_mgr.c2	/^    u32 plugin_max;$/;"	v
plugin_mgr	$C2_ROOT/compiler/main.c2	/^import plugin_mgr;$/;"	v
plugin_mgr	$C2_ROOT/compiler/plugin_mgr.c2	/^module plugin_mgr;$/;"	v
plugin_mgr_Mgr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct plugin_mgr_Mgr_ plugin_mgr_Mgr;$/;"	v
plugin_mgr_Plugin	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct plugin_mgr_Plugin_ plugin_mgr_Plugin;$/;"	v
plugins	$C2_ROOT/bootstrap/bootstrap.c	/^   return &t->plugins;$/;"	v
plugins	$C2_ROOT/common/build_target.c2	/^    PluginList plugins;$/;"	v
plugins	$C2_ROOT/compiler/c2recipe.c2	/^    return &r.plugins;$/;"	v
plugins	$C2_ROOT/compiler/main.c2	/^    plugin_mgr.Mgr* plugins;$/;"	v
plugins	$C2_ROOT/compiler/plugin_mgr.c2	/^    Plugin* plugins;$/;"	v
plugins2	$C2_ROOT/bootstrap/bootstrap.c	/^      m->plugins = plugins2;$/;"	v
plugins2	$C2_ROOT/common/build_file.c2	/^        info.plugins = plugins2;$/;"	v
plugins2	$C2_ROOT/common/build_target.c2	/^        l.plugins = plugins2;$/;"	v
plugins2	$C2_ROOT/compiler/plugin_mgr.c2	/^        m.plugins = plugins2;$/;"	v
plugins_after_analysis	$C2_ROOT/compiler/main.c2	/^fn void plugins_after_analysis(void* arg) {$/;"	f
plugins_after_parsing	$C2_ROOT/compiler/main.c2	/^fn void plugins_after_parsing(void* arg) {$/;"	f
plugins_end_target	$C2_ROOT/compiler/main.c2	/^fn void plugins_end_target(void* arg) {$/;"	f
plugins_feature	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t plugins_feature;$/;"	v
plugins_feature	$C2_ROOT/compiler/main.c2	/^    u32 plugins_feature;$/;"	v
plugins_start_target	$C2_ROOT/compiler/main.c2	/^fn void plugins_start_target(void* arg, plugin_info.Info* info) {$/;"	f
pointSize	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void pointSize(f32 s) @(cname="sgl_point_size");$/;"	f
pointer	$C2_ROOT/ast/builtin_expr.c2	/^    return b.container[0].pointer;$/;"	v
pointer	$C2_ROOT/bootstrap/bootstrap.c	/^   return b->container[0].pointer;$/;"	v
pointerSize	$C2_ROOT/analyser/size_analyser.c2	/^        result.size = pointerSize;$/;"	v
pointerSize	$C2_ROOT/bootstrap/bootstrap.c	/^      result.size = pointerSize;$/;"	v
pointer_conversion_allowed	$C2_ROOT/analyser/conversion_checker.c2	/^fn bool pointer_conversion_allowed(QualType linner, QualType rinner) {$/;"	f
pointers	$C2_ROOT/ast/utils.c2	/^    PointerPool pointers;$/;"	v
pointers	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_PointerPool pointers;$/;"	v
poll	$C2_ROOT/libs/libc/libc_poll.c2i	/^fn c_int poll(Pollfd* fds, c_ulong nfds, c_int timeout);$/;"	f
poll	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Event.poll(Event* event) @(cname="SDL_PollEvent");$/;"	f
poll_mask	$C2_ROOT/libs/io_uring/io_uring.c2i	/^	return poll_mask;$/;"	v
pool	$C2_ROOT/bootstrap/bootstrap.c	/^   t->pool = pool;$/;"	v
pool	$C2_ROOT/common/build_file.c2	/^    info.pool = pool;$/;"	v
pool	$C2_ROOT/common/source_mgr.c2	/^    string_pool.Pool* pool;$/;"	v
pool	$C2_ROOT/common/string_list.c2	/^    string_pool.Pool* pool;$/;"	v
pool	$C2_ROOT/compiler/c2recipe.c2	/^    string_pool.Pool* pool;$/;"	v
pool	$C2_ROOT/compiler/c2recipe_parser.c2	/^    string_pool.Pool* pool;$/;"	v
pool	$C2_ROOT/ir/context.c2	/^    string_pool.Pool* pool;$/;"	v
pool	$C2_ROOT/parser/c2_parser.c2	/^    string_pool.Pool* pool;$/;"	v
pool	$C2_ROOT/parser/c2_tokenizer.c2	/^    t.pool = pool;$/;"	v
pool	$C2_ROOT/plugins/deps_generator.c2	/^    string_pool.Pool* pool;$/;"	v
pop	$C2_ROOT/common/yaml/yaml_parser.c2	/^fn void Parser.pop(Parser* p) {$/;"	f
popCheck	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.popCheck(Analyser* ma) {$/;"	f
popDebugGroup	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void popDebugGroup() @(cname="sg_pop_debug_group");$/;"	f
popFront	$C2_ROOT/common/linked_list.c2	/^public fn Element* Element.popFront(Element* item) @(unused) {$/;"	f
popHead	$C2_ROOT/ir/usage_counter.c2	/^public fn u32 Counter.popHead(Counter* c) {$/;"	f
popMatrix	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void popMatrix() @(cname="sgl_pop_matrix");$/;"	f
popPipeline	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void popPipeline() @(cname="sgl_pop_pipeline");$/;"	f
popen	$C2_ROOT/libs/libc/stdio.c2i	/^fn FILE* popen(const c_char* __command, const c_char* __modes);$/;"	f
port	$C2_ROOT/libs/libc/net_if.c2i	/^    c_uchar port;$/;"	v
pos	$C2_ROOT/analyser/size_analyser.c2	/^    layout.size = pos;$/;"	v
pos	$C2_ROOT/bootstrap/bootstrap.c	/^   layout->size = pos;$/;"	v
pos	$C2_ROOT/common/file/file_utils.c2	/^    return pos;$/;"	v
pos	$C2_ROOT/common/source_mgr.c2	/^    *cp = pos;$/;"	v
pos	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void pos(f32 x, f32 y) @(cname="sdtx_pos");$/;"	f
posX	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void posX(f32 x) @(cname="sdtx_pos_x");$/;"	f
posY	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void posY(f32 y) @(cname="sdtx_pos_y");$/;"	f
pos_x	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    f32 pos_x;$/;"	v
pos_y	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    f32 pos_y;$/;"	v
positionVertexAttrState	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn VertexAttrState positionVertexAttrState() @(cname="sshape_position_vertex_attr_state");$/;"	f
posix_memalign	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int posix_memalign(void** __memptr, c_size __alignment, c_size __size);$/;"	f
postAnalysis	$C2_ROOT/compiler/plugin_mgr.c2	/^public fn void Mgr.postAnalysis(Mgr* m) {$/;"	f
postParse	$C2_ROOT/compiler/plugin_mgr.c2	/^public fn void Mgr.postParse(Mgr* m) {$/;"	f
post_analysis	$C2_ROOT/bootstrap/bootstrap.c	/^   plugin_info_PostAnalysisFn post_analysis;$/;"	v
post_analysis	$C2_ROOT/plugins/deps_generator_plugin.c2	/^fn void post_analysis(void* arg) {$/;"	f
post_analysis	$C2_ROOT/plugins/plugin_info.c2	/^    PostAnalysisFn post_analysis;$/;"	v
post_analysis	$C2_ROOT/plugins/refs_generator_plugin.c2	/^fn void post_analysis(void* arg) {$/;"	f
post_parse	$C2_ROOT/bootstrap/bootstrap.c	/^   plugin_info_PostParseFn post_parse;$/;"	v
post_parse	$C2_ROOT/plugins/plugin_info.c2	/^    PostParseFn post_parse;$/;"	v
post_parse	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^fn void post_parse(void* arg) {$/;"	f
pow	$C2_ROOT/libs/math/math.c2i	/^fn c_double pow(c_double, c_double);$/;"	f
powf	$C2_ROOT/libs/math/math.c2i	/^fn c_float powf(c_float, c_float);$/;"	f
prec	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t prec;$/;"	v
prec	$C2_ROOT/parser/c2_tokenizer.c2	/^    u8 prec;$/;"	v
prec2	$C2_ROOT/generator/c/c_generator_expr.c2	/^    bool need_paren = prec > prec2;$/;"	v
prefix	$C2_ROOT/ast/function_decl.c2	/^    if (d.hasPrefix()) return &d.prefix;$/;"	v
prefix	$C2_ROOT/ast/type_ref.c2	/^    Ref prefix;$/;"	v
prefix	$C2_ROOT/bootstrap/bootstrap.c	/^   if (ast_FunctionDecl_hasPrefix(d)) return &d->prefix;$/;"	v
prefix	$C2_ROOT/compiler/c2recipe_yaml.c2	/^        char[32] prefix;$/;"	v
prefix	$C2_ROOT/generator/ir/ir_generator_member.c2	/^        if (base.isImport()) {  \/\/ skip module prefix$/;"	m
prefix	$C2_ROOT/parser/ast_builder.c2	/^                                          prefix,$/;"	v
prefix	$C2_ROOT/parser/c2_parser.c2	/^                                        prefix,$/;"	v
prefix	$C2_ROOT/parser/c2_tokenizer.c2	/^        prefix = true;$/;"	v
prefix_cache_idx	$C2_ROOT/analyser/module_analyser.c2	/^    u32 prefix_cache_idx;$/;"	v
prefix_cache_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t prefix_cache_idx;$/;"	v
prefix_cache_name	$C2_ROOT/analyser/module_analyser.c2	/^    u32 prefix_cache_name;$/;"	v
prefix_cache_name	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t prefix_cache_name;$/;"	v
prefix_name_idx	$C2_ROOT/analyser/module_analyser.c2	/^        ma.prefix_cache_name = prefix_name_idx;$/;"	v
prefix_name_idx	$C2_ROOT/bootstrap/bootstrap.c	/^      ma->prefix_cache_name = prefix_name_idx;$/;"	v
prefix_ref	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_Ref prefix_ref;$/;"	v
prefix_ref	$C2_ROOT/parser/c2_parser.c2	/^    Ref prefix_ref;$/;"	v
prefixes	$C2_ROOT/analyser/module_analyser.c2	/^    NameVector prefixes;$/;"	v
prefixes	$C2_ROOT/bootstrap/bootstrap.c	/^   name_vector_NameVector prefixes;$/;"	v
prep_accept	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void Sqe.prep_accept(Sqe* sqe, c_int fd,$/;"	f
prep_cancel	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void Sqe.prep_cancel(Sqe* sqe, void* user_data, c_int flags) @(cname="io_uring_prep_cancel")$/;"	f
prep_close	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void Sqe.prep_close(Sqe* sqe, c_int fd) @(cname="io_uring_prep_close")$/;"	f
prep_link_timeout	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void Sqe.prep_link_timeout(Sqe* sqe, linux_types.Timespec* ts,$/;"	f
prep_nop	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void Sqe.prep_nop(Sqe* sqe) @(cname="io_uring_prep_nop")$/;"	f
prep_read	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void Sqe.prep_read(Sqe* sqe, c_int fd, void* buf, u32 nbytes, u64 offset) @(cname="io_uring_p/;"	f
prep_read_fixed	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void Sqe.prep_read_fixed(Sqe* sqe, c_int fd, void* buf, u32 nbytes, u64 offset, c_int buf_ind/;"	f
prep_readv	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void Sqe.prep_readv(Sqe* sqe, c_int fd, const uio.Iovec* iovecs, u32 nr_vecs, u64 offset) @(c/;"	f
prep_rw	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void prep_rw(c_int op, Sqe* sqe, c_int fd, const void* addr, u32 len, u64 offset) @(cname="io/;"	f
prep_timeout	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void Sqe.prep_timeout(Sqe* sqe, linux_types.Timespec* ts,$/;"	f
prep_timeout_remove	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void Sqe.prep_timeout_remove(Sqe* sqe, u64 user_data, u32 flags) @(cname="io_uring_prep_timeo/;"	f
prep_timeout_update	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void Sqe.prep_timeout_update(Sqe* sqe, linux_types.Timespec* ts, u64 user_data, u32 flags) @(/;"	f
prep_write	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void Sqe.prep_write(Sqe* sqe, c_int fd, const void* buf, u32 nbytes, u64 offset) @(cname="io_/;"	f
prep_write_fixed	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void Sqe.prep_write_fixed(Sqe* sqe, c_int fd, const void* buf, u32 nbytes, u64 offset, c_int /;"	f
prep_writev	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void Sqe.prep_writev(Sqe* sqe, c_int fd, const uio.Iovec* iovecs, u32 nr_vecs, u64 offset) @(/;"	f
present	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void Renderer.present(Renderer* renderer) @(cname="SDL_RenderPresent");$/;"	f
prev	$C2_ROOT/ast/ast_evaluator.c2	/^    Evaluator* prev;$/;"	v
prev	$C2_ROOT/bootstrap/bootstrap.c	/^   uint16_t prev;$/;"	v
prev	$C2_ROOT/common/linked_list.c2	/^    next.prev = prev;$/;"	v
prev	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    linked_list.Element* e = t.used_zones.prev;$/;"	v
prev	$C2_ROOT/ir/inserter.c2	/^        idx = prev;$/;"	v
prev	$C2_ROOT/ir/interference_graph.c2	/^    u16 prev;$/;"	v
prev	$C2_ROOT/ir/live_map.c2	/^    u16 prev;$/;"	v
prev	$C2_ROOT/ir/slot_writes_map.c2	/^    u16 prev;$/;"	v
prev	$C2_ROOT/ir_examples/goto.c2	/^    if (a == 3) goto prev;$/;"	v
prevColor	$C2_ROOT/analyser/module_analyser_init.c2	/^        } \/\/ else could be Color c = prevColor;$/;"	v
prev_loc	$C2_ROOT/bootstrap/bootstrap.c	/^   src_loc_SrcLoc prev_loc;$/;"	v
prev_loc	$C2_ROOT/parser/c2_parser.c2	/^    SrcLoc prev_loc;$/;"	v
primitive_type	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    PrimitiveType primitive_type;$/;"	v
print	$C2_ROOT/analyser/module_sorter.c2	/^fn void ModuleSorter.print(const ModuleSorter* s) {$/;"	f
print	$C2_ROOT/ast/alias_type.c2	/^fn void AliasType.print(const AliasType* t, string_buffer.Buf* out) {$/;"	f
print	$C2_ROOT/ast/alias_type_decl.c2	/^fn void AliasTypeDecl.print(const AliasTypeDecl* d, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/array_designated_init_expr.c2	/^fn void ArrayDesignatedInitExpr.print(const ArrayDesignatedInitExpr* e, string_buffer.Buf* out, /;"	f
print	$C2_ROOT/ast/array_subscript_expr.c2	/^fn void ArraySubscriptExpr.print(const ArraySubscriptExpr* e, string_buffer.Buf* out, u32 indent/;"	f
print	$C2_ROOT/ast/array_type.c2	/^fn void ArrayType.print(const ArrayType* t, string_buffer.Buf* out) {$/;"	f
print	$C2_ROOT/ast/array_value.c2	/^fn void ArrayValue.print(const ArrayValue* d, string_buffer.Buf* out) @(unused) {$/;"	f
print	$C2_ROOT/ast/asm_stmt.c2	/^fn void AsmStmt.print(const AsmStmt* s, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/assert_stmt.c2	/^fn void AssertStmt.print(const AssertStmt* s, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/ast.c2	/^fn void AST.print(const AST* a, string_buffer.Buf* out, bool show_funcs) {$/;"	f
print	$C2_ROOT/ast/binary_operator.c2	/^fn void BinaryOperator.print(const BinaryOperator* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/bitoffset_expr.c2	/^fn void BitOffsetExpr.print(const BitOffsetExpr* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/boolean_literal.c2	/^fn void BooleanLiteral.print(const BooleanLiteral* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/break_stmt.c2	/^fn void BreakStmt.print(const BreakStmt* s, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/builtin_expr.c2	/^fn void BuiltinExpr.print(const BuiltinExpr* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/builtin_type.c2	/^fn void BuiltinType.print(const BuiltinType* b, string_buffer.Buf* out) {$/;"	f
print	$C2_ROOT/ast/call_expr.c2	/^fn void CallExpr.print(const CallExpr* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/char_literal.c2	/^fn void CharLiteral.print(const CharLiteral* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/compound_stmt.c2	/^fn void CompoundStmt.print(const CompoundStmt* s, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/conditional_operator.c2	/^fn void ConditionalOperator.print(const ConditionalOperator* e, string_buffer.Buf* out, u32 inde/;"	f
print	$C2_ROOT/ast/continue_stmt.c2	/^fn void ContinueStmt.print(const ContinueStmt* s, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/decl.c2	/^fn void Decl.print(const Decl* d, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/decl_stmt.c2	/^fn void DeclStmt.print(const DeclStmt* s, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/enum_constant_decl.c2	/^fn void EnumConstantDecl.print(const EnumConstantDecl* d, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/enum_type.c2	/^fn void EnumType.print(const EnumType* t, string_buffer.Buf* out) {$/;"	f
print	$C2_ROOT/ast/enum_type_decl.c2	/^fn void EnumTypeDecl.print(EnumTypeDecl* d, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/explicit_cast_expr.c2	/^fn void ExplicitCastExpr.print(const ExplicitCastExpr* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/expr.c2	/^fn void Expr.print(const Expr* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/fallthrough_stmt.c2	/^fn void FallthroughStmt.print(const FallthroughStmt* s, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/field_designated_init_expr.c2	/^fn void FieldDesignatedInitExpr.print(const FieldDesignatedInitExpr* e, string_buffer.Buf* out, /;"	f
print	$C2_ROOT/ast/float_literal.c2	/^fn void FloatLiteral.print(const FloatLiteral* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/for_stmt.c2	/^fn void ForStmt.print(const ForStmt* s, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/function_decl.c2	/^fn void FunctionDecl.print(const FunctionDecl* d, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/function_type.c2	/^fn void FunctionType.print(const FunctionType* t, string_buffer.Buf* out) {$/;"	f
print	$C2_ROOT/ast/function_type_decl.c2	/^fn void FunctionTypeDecl.print(const FunctionTypeDecl* d, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/goto_stmt.c2	/^fn void GotoStmt.print(const GotoStmt* s, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/identifier_expr.c2	/^fn void IdentifierExpr.print(const IdentifierExpr* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/if_stmt.c2	/^fn void IfStmt.print(const IfStmt* s, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/implicit_cast_expr.c2	/^fn void ImplicitCastExpr.print(const ImplicitCastExpr* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/import_decl.c2	/^fn void ImportDecl.print(const ImportDecl* d, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/init_list_expr.c2	/^fn void InitListExpr.print(const InitListExpr* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/integer_literal.c2	/^fn void IntegerLiteral.print(const IntegerLiteral* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/label_stmt.c2	/^fn void LabelStmt.print(const LabelStmt* s, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/member_expr.c2	/^fn void MemberExpr.print(const MemberExpr* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/module.c2	/^public fn void Module.print(const Module* m, string_buffer.Buf* out, bool show_funcs) {$/;"	f
print	$C2_ROOT/ast/module_type.c2	/^fn void ModuleType.print(const ModuleType* t, string_buffer.Buf* out) {$/;"	f
print	$C2_ROOT/ast/nil_expr.c2	/^fn void NilExpr.print(const NilExpr* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/paren_expr.c2	/^fn void ParenExpr.print(const ParenExpr* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/pointer_type.c2	/^fn void PointerType.print(const PointerType* t, string_buffer.Buf* out) {$/;"	f
print	$C2_ROOT/ast/qualtype.c2	/^public fn void QualType.print(const QualType* qt, string_buffer.Buf* out) {$/;"	f
print	$C2_ROOT/ast/range_expr.c2	/^fn void RangeExpr.print(const RangeExpr* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/return_stmt.c2	/^fn void ReturnStmt.print(const ReturnStmt* s, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/static_assert.c2	/^fn void StaticAssert.print(const StaticAssert* d, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/stmt.c2	/^fn void Stmt.print(const Stmt* s, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/string_literal.c2	/^fn void StringLiteral.print(const StringLiteral* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/struct_type.c2	/^fn void StructType.print(const StructType* t, string_buffer.Buf* out) {$/;"	f
print	$C2_ROOT/ast/struct_type_decl.c2	/^fn void StructTypeDecl.print(const StructTypeDecl* d, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/switch_case.c2	/^fn void SwitchCase.print(const SwitchCase* s, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/switch_stmt.c2	/^fn void SwitchStmt.print(const SwitchStmt* s, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/symbol_table.c2	/^public fn void SymbolTable.print(const SymbolTable* t, string_buffer.Buf* out) {$/;"	f
print	$C2_ROOT/ast/type.c2	/^fn void Type.print(const Type* t, string_buffer.Buf* out) {$/;"	f
print	$C2_ROOT/ast/type_expr.c2	/^fn void TypeExpr.print(const TypeExpr* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/type_ref.c2	/^fn void TypeRef.print(const TypeRef* r, string_buffer.Buf* out, bool filled) {$/;"	f
print	$C2_ROOT/ast/unary_operator.c2	/^fn void UnaryOperator.print(const UnaryOperator* e, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/var_decl.c2	/^fn void VarDecl.print(const VarDecl* d, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast/while_stmt.c2	/^fn void WhileStmt.print(const WhileStmt* s, string_buffer.Buf* out, u32 indent) {$/;"	f
print	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void Buf.print(Buf* buf, const char* format @(printf_format), ...) {$/;"	f
print	$C2_ROOT/bootstrap/bootstrap.c	/^   gen->print = print;$/;"	v
print	$C2_ROOT/common/component.c2	/^public fn void Component.print(const Component* c, bool show_funcs) {$/;"	f
print	$C2_ROOT/generator/ir/ir_generator.c2	/^    gen.print = print;$/;"	v
print	$C2_ROOT/ir/context.c2	/^    t.print_all = print;$/;"	v
print	$C2_ROOT/ir/print.c2	/^public fn void Context.print(const Context* c) {$/;"	f
printAttrs	$C2_ROOT/ast/decl.c2	/^fn void Decl.printAttrs(const Decl* d, string_buffer.Buf* out) {$/;"	f
printBinary	$C2_ROOT/ast/integer_literal.c2	/^fn void printBinary(string_buffer.Buf* out, u64 value) {$/;"	f
printBits	$C2_ROOT/ast/decl.c2	/^fn void Decl.printBits(const Decl* d, string_buffer.Buf* out) {$/;"	f
printInitValue	$C2_ROOT/ir/print.c2	/^fn void PrintHelper.printInitValue(PrintHelper* ph, const InitValue* v, string_buffer.Buf* out) /;"	f
printInner	$C2_ROOT/ast/qualtype.c2	/^fn void QualType.printInner(const QualType* qt, string_buffer.Buf* out,  bool printCanon, bool p/;"	f
printInstr	$C2_ROOT/ir/print.c2	/^fn void PrintHelper.printInstr(PrintHelper* ph, const Instr* blk_instrs, u32 blk_instr_idx, u32 /;"	f
printKind	$C2_ROOT/ast/decl.c2	/^fn void Decl.printKind(const Decl* d, string_buffer.Buf* out, u32 indent, bool print_type) {$/;"	f
printKind	$C2_ROOT/ast/expr.c2	/^fn void Expr.printKind(const Expr* e, string_buffer.Buf* out, u32 indent) {$/;"	f
printKind	$C2_ROOT/ast/stmt.c2	/^fn void Stmt.printKind(const Stmt* s, string_buffer.Buf* out, u32 indent) {$/;"	f
printLiteral	$C2_ROOT/ast/array_designated_init_expr.c2	/^fn void ArrayDesignatedInitExpr.printLiteral(const ArrayDesignatedInitExpr* e, string_buffer.Buf/;"	f
printLiteral	$C2_ROOT/ast/array_subscript_expr.c2	/^fn void ArraySubscriptExpr.printLiteral(const ArraySubscriptExpr* e, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/binary_operator.c2	/^fn void BinaryOperator.printLiteral(const BinaryOperator* e, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/bitoffset_expr.c2	/^fn void BitOffsetExpr.printLiteral(const BitOffsetExpr* e, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/boolean_literal.c2	/^public fn void BooleanLiteral.printLiteral(const BooleanLiteral* e, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/builtin_expr.c2	/^fn void BuiltinExpr.printLiteral(const BuiltinExpr* e, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/call_expr.c2	/^fn void CallExpr.printLiteral(const CallExpr* e, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/char_literal.c2	/^public fn void CharLiteral.printLiteral(const CharLiteral* e, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/conditional_operator.c2	/^fn void ConditionalOperator.printLiteral(const ConditionalOperator* e, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/explicit_cast_expr.c2	/^fn void ExplicitCastExpr.printLiteral(const ExplicitCastExpr* e, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/expr.c2	/^public fn void Expr.printLiteral(const Expr* e, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/field_designated_init_expr.c2	/^fn void FieldDesignatedInitExpr.printLiteral(const FieldDesignatedInitExpr* e, string_buffer.Buf/;"	f
printLiteral	$C2_ROOT/ast/float_literal.c2	/^public fn void FloatLiteral.printLiteral(const FloatLiteral* e, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/identifier_expr.c2	/^fn void IdentifierExpr.printLiteral(const IdentifierExpr* e, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/implicit_cast_expr.c2	/^fn void ImplicitCastExpr.printLiteral(const ImplicitCastExpr* e, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/init_list_expr.c2	/^fn void InitListExpr.printLiteral(const InitListExpr* e, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/integer_literal.c2	/^public fn void IntegerLiteral.printLiteral(const IntegerLiteral* e, string_buffer.Buf* out, bool/;"	f
printLiteral	$C2_ROOT/ast/member_expr.c2	/^fn void MemberExpr.printLiteral(const MemberExpr* e, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/nil_expr.c2	/^fn void NilExpr.printLiteral(const NilExpr*, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/paren_expr.c2	/^fn void ParenExpr.printLiteral(const ParenExpr* e, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/range_expr.c2	/^fn void RangeExpr.printLiteral(const RangeExpr* e, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/string_literal.c2	/^public fn void StringLiteral.printLiteral(const StringLiteral* e, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/type_expr.c2	/^fn void TypeExpr.printLiteral(const TypeExpr* e, string_buffer.Buf* out) {$/;"	f
printLiteral	$C2_ROOT/ast/type_ref.c2	/^fn void TypeRef.printLiteral(const TypeRef* r, string_buffer.Buf* out, bool print_prefix) {$/;"	f
printLiteral	$C2_ROOT/ast/unary_operator.c2	/^fn void UnaryOperator.printLiteral(const UnaryOperator* e, string_buffer.Buf* out) {$/;"	f
printLiteral2	$C2_ROOT/ast/type_ref.c2	/^public fn void TypeRef.printLiteral2(const TypeRef* r, string_buffer.Buf* out, bool print_prefix/;"	f
printModules	$C2_ROOT/common/component.c2	/^public fn void Component.printModules(const Component* c) {$/;"	f
printName	$C2_ROOT/ast/decl.c2	/^fn void Decl.printName(const Decl* d, string_buffer.Buf* out) {$/;"	f
printOctal	$C2_ROOT/ast/integer_literal.c2	/^fn void printOctal(string_buffer.Buf* out, u64 value) {$/;"	f
printPostName	$C2_ROOT/ast/array_type.c2	/^fn void ArrayType.printPostName(const ArrayType* t, string_buffer.Buf* out) {$/;"	f
printPreName	$C2_ROOT/ast/array_type.c2	/^fn void ArrayType.printPreName(const ArrayType* t, string_buffer.Buf* out) {$/;"	f
printQuoted	$C2_ROOT/ast/qualtype.c2	/^fn void QualType.printQuoted(const QualType* qt, string_buffer.Buf* out) {$/;"	f
printRef	$C2_ROOT/ir/print.c2	/^fn void PrintHelper.printRef(PrintHelper* ph, Ref r, bool print_type) {$/;"	f
printStatus	$C2_ROOT/common/diagnostics.c2	/^public fn void Diags.printStatus(const Diags* diags) {$/;"	f
printSymbols	$C2_ROOT/common/component.c2	/^public fn void Component.printSymbols(const Component* c, bool print_external) {$/;"	f
printType	$C2_ROOT/ast/function_decl.c2	/^fn void FunctionDecl.printType(const FunctionDecl* d, string_buffer.Buf* out) {$/;"	f
printType	$C2_ROOT/ast/var_decl.c2	/^fn void VarDecl.printType(const VarDecl* d, string_buffer.Buf* out) {$/;"	f
printTypeBits	$C2_ROOT/ast/expr.c2	/^fn void Expr.printTypeBits(const Expr* e, string_buffer.Buf* out) {$/;"	f
printUsed	$C2_ROOT/ast/decl.c2	/^fn void Decl.printUsed(const Decl* d, string_buffer.Buf* out) {$/;"	f
print_all	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool print_all;$/;"	v
print_all	$C2_ROOT/ir/context.c2	/^    bool print_all;$/;"	v
print_all_ir	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool print_all_ir;$/;"	v
print_all_ir	$C2_ROOT/compiler/compiler.c2	/^    bool print_all_ir;$/;"	v
print_ast	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool print_ast;$/;"	v
print_ast	$C2_ROOT/compiler/compiler.c2	/^    bool print_ast;$/;"	v
print_ast_early	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool print_ast_early;$/;"	v
print_ast_early	$C2_ROOT/compiler/compiler.c2	/^    bool print_ast_early;$/;"	v
print_ast_stats	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool print_ast_stats;$/;"	v
print_ast_stats	$C2_ROOT/compiler/compiler.c2	/^    bool print_ast_stats;$/;"	v
print_dest	$C2_ROOT/ir/print.c2	/^fn void print_dest(string_buffer.Buf* out, BlockId id) {$/;"	f
print_errormsg	$C2_ROOT/plugins/unit_test2.c2	/^fn void print_errormsg(const char* fmt @(printf_format), ...) {$/;"	f
print_external_symbols	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool print_external_symbols;$/;"	v
print_external_symbols	$C2_ROOT/compiler/compiler.c2	/^    bool print_external_symbols;$/;"	v
print_func	$C2_ROOT/ir/context.c2	/^fn void Tools.print_func(const Tools* t, const char* label) {$/;"	f
print_func	$C2_ROOT/ir/print.c2	/^fn void PrintHelper.print_func(PrintHelper* ph, const Symbol* s, const FunctionInfo* info) {$/;"	f
print_function	$C2_ROOT/ir/print.c2	/^fn void Context.print_function(const Context* c,$/;"	f
print_idx	$C2_ROOT/ir/interference_graph.c2	/^fn void print_idx(u16 idx) {$/;"	f
print_idx	$C2_ROOT/ir/live_map.c2	/^fn void print_idx(u16 idx) {$/;"	f
print_idx	$C2_ROOT/ir/slot_writes_map.c2	/^fn void print_idx(u16 idx) {$/;"	f
print_ir	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool print_ir;$/;"	v
print_ir	$C2_ROOT/compiler/compiler.c2	/^    bool print_ir;$/;"	v
print_lib_ast	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool print_lib_ast;$/;"	v
print_lib_ast	$C2_ROOT/compiler/compiler.c2	/^    bool print_lib_ast;$/;"	v
print_modules	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool print_modules;$/;"	v
print_modules	$C2_ROOT/compiler/compiler.c2	/^    bool print_modules;$/;"	v
print_recipe_help	$C2_ROOT/compiler/main.c2	/^fn void print_recipe_help() {$/;"	f
print_reports	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool print_reports;$/;"	v
print_reports	$C2_ROOT/compiler/compiler.c2	/^    u8 print_reports;$/;"	v
print_symbols	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool print_symbols;$/;"	v
print_symbols	$C2_ROOT/compiler/compiler.c2	/^    bool print_symbols;$/;"	v
print_timing	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool print_timing;$/;"	v
print_timing	$C2_ROOT/compiler/main.c2	/^    bool print_timing;$/;"	v
print_version	$C2_ROOT/compiler/main.c2	/^fn void print_version() {$/;"	f
print_word	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^fn void print_word(void* arg, const char* text, u32 value) {$/;"	f
printf	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int printf(const c_char* __format @(printf_format), ...);$/;"	f
printf_buf_size	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    i32 printf_buf_size;$/;"	v
printf_call_idx	$C2_ROOT/analyser/module_analyser_call.c2	/^            printf_call_idx = call_arg_index;$/;"	v
printf_call_idx	$C2_ROOT/bootstrap/bootstrap.c	/^         printf_call_idx = call_arg_index;$/;"	v
printf_format	$C2_ROOT/ast/var_decl.c2	/^    return d.base.varDeclBits.printf_format;$/;"	v
printf_format	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->base.varDeclBits.printf_format;$/;"	v
printf_utils	$C2_ROOT/analyser/module_analyser_call.c2	/^import printf_utils;$/;"	v
printf_utils	$C2_ROOT/analyser_utils/printf_utils.c2	/^module printf_utils;$/;"	v
printf_utils	$C2_ROOT/generator/c/c_generator_call.c2	/^import printf_utils;$/;"	v
printf_utils	$C2_ROOT/generator/c/c_generator_expr.c2	/^import printf_utils;$/;"	v
printf_utils_Specifier	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t printf_utils_Specifier;$/;"	v
printf_utils_Specifier_Char	$C2_ROOT/bootstrap/bootstrap.c	/^   printf_utils_Specifier_Char,$/;"	v
printf_utils_Specifier_FloatingPoint	$C2_ROOT/bootstrap/bootstrap.c	/^   printf_utils_Specifier_FloatingPoint,$/;"	v
printf_utils_Specifier_Integer	$C2_ROOT/bootstrap/bootstrap.c	/^   printf_utils_Specifier_Integer,$/;"	v
printf_utils_Specifier_Invalid	$C2_ROOT/bootstrap/bootstrap.c	/^   printf_utils_Specifier_Invalid,$/;"	v
printf_utils_Specifier_Other	$C2_ROOT/bootstrap/bootstrap.c	/^   printf_utils_Specifier_Other,$/;"	v
printf_utils_Specifier_Pointer	$C2_ROOT/bootstrap/bootstrap.c	/^   printf_utils_Specifier_Pointer,$/;"	v
printf_utils_Specifier_String	$C2_ROOT/bootstrap/bootstrap.c	/^   printf_utils_Specifier_String,$/;"	v
process_utils	$C2_ROOT/common/process_utils.c2	/^module process_utils;$/;"	v
process_utils	$C2_ROOT/generator/c/c_generator.c2	/^import process_utils;$/;"	v
process_utils	$C2_ROOT/plugins/git_version_plugin.c2	/^import process_utils;$/;"	v
process_utils	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^import process_utils;$/;"	v
prog	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 prog;$/;"	v
project	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec3 Vec3.project(const Vec3* v, const Vec3* onto) {$/;"	f
promoteBlockSlots	$C2_ROOT/ir/slot_collector.c2	/^fn void SlotCollector.promoteBlockSlots(SlotCollector* c, BlockId blk_id) {$/;"	f
promote_warnings	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool promote_warnings;$/;"	v
promote_warnings	$C2_ROOT/common/diagnostics.c2	/^    bool promote_warnings;$/;"	v
promotesToInt32	$C2_ROOT/ast/qualtype.c2	/^public fn bool QualType.promotesToInt32(const QualType* qt) {$/;"	f
propagateConstants	$C2_ROOT/ir/ssa.c2	/^fn bool Tools.propagateConstants(Tools* t) {$/;"	f
prune	$C2_ROOT/ir/instr_list.c2	/^public fn void InstrList.prune(InstrList* l) {$/;"	f
pstrcpy	$C2_ROOT/common/file/file_utils.c2	/^fn usize pstrcpy(char *dest, usize size, const char* src) {$/;"	f
pthread	$C2_ROOT/ir/work_queue.c2	/^import pthread;$/;"	v
pthread	$C2_ROOT/libs/pthread/pthread.c2i	/^module pthread;$/;"	v
ptr	$C2_ROOT/ast/pointer_pool.c2	/^    slot.ptrs[quals] = ptr;$/;"	v
ptr	$C2_ROOT/ast/qualtype.c2	/^    usize ptr;$/;"	v
ptr	$C2_ROOT/ast/type_ref.c2	/^    Expr** arrays = (Expr**)ptr;$/;"	v
ptr	$C2_ROOT/bootstrap/bootstrap.c	/^   void* ptr;$/;"	v
ptr	$C2_ROOT/generator/c2refs.c2	/^    return *ptr;$/;"	v
ptr	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    return *ptr;$/;"	v
ptr	$C2_ROOT/ir_examples/global_vars.c2	/^void* ptr;$/;"	v
ptr	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    void* ptr;$/;"	v
ptr	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    void* ptr;$/;"	v
ptr	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* ptr;$/;"	v
ptr	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    void* ptr;$/;"	v
ptr	$C2_ROOT/parser/ast_builder.c2	/^    return ptr;$/;"	v
ptr_pool_idx	$C2_ROOT/ast/pointer_pool.c2	/^    const u32 ptr_pool_idx = t.ptr_pool_idx;$/;"	v
ptr_pool_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t ptr_pool_idx;$/;"	v
ptr_ref	$C2_ROOT/bootstrap/bootstrap.c	/^         ir_Ref ptr_ref;$/;"	v
ptr_ref	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^            ir.Ref ptr_ref;$/;"	v
ptr_type	$C2_ROOT/generator/ir/ir_generator.c2	/^    ir.Type ptr_type;$/;"	v
push	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^fn i32 push(f32* frames, i32 num_frames) @(cname="saudio_push");$/;"	f
pushCheck	$C2_ROOT/analyser/module_analyser.c2	/^fn bool Analyser.pushCheck(Analyser* ma, Decl* d, scope.Scope* s, FunctionDecl* fd) {$/;"	f
pushDebugGroup	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void pushDebugGroup(const char* name) @(cname="sg_push_debug_group");$/;"	f
pushEvent	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int pushEvent(Event* event)  @(cname="SDL_PushEvent");$/;"	f
pushMatrix	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void pushMatrix() @(cname="sgl_push_matrix");$/;"	f
pushPipeline	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void pushPipeline() @(cname="sgl_push_pipeline");$/;"	f
push_node	$C2_ROOT/common/yaml/yaml_parser.c2	/^fn void Parser.push_node(Parser* p, Node* n, NodeKind parent_kind, i32 indent) {$/;"	f
push_root	$C2_ROOT/common/yaml/yaml_parser.c2	/^fn void Parser.push_root(Parser* p) {$/;"	f
pushboolean	$C2_ROOT/libs/lua/lua.c2i	/^fn void pushboolean(State *L, c_int b) @(cname="lua_pushboolean");$/;"	f
pushcclosure	$C2_ROOT/libs/lua/lua.c2i	/^fn void pushcclosure(State *L, CFunction func, c_int n) @(cname="lua_pushcclosure");$/;"	f
pushinteger	$C2_ROOT/libs/lua/lua.c2i	/^fn void pushinteger(State *L, Integer n) @(cname="lua_pushinteger");$/;"	f
pushlightuserdata	$C2_ROOT/libs/lua/lua.c2i	/^fn void pushlightuserdata(State *L, void *p) @(cname="lua_pushlightuserdata");$/;"	f
pushlstring	$C2_ROOT/libs/lua/lua.c2i	/^fn const c_char* pushlstring(State *L, const c_char* s, c_size len) @(cname="lua_pushlstring");$/;"	f
pushnil	$C2_ROOT/libs/lua/lua.c2i	/^fn void pushnil(State *L) @(cname="lua_pushnil");$/;"	f
pushnumber	$C2_ROOT/libs/lua/lua.c2i	/^fn void pushnumber(State *L, Number n) @(cname="lua_pushnumber");$/;"	f
pushstring	$C2_ROOT/libs/lua/lua.c2i	/^fn const c_char* pushstring(State *L, const c_char* s) @(cname="lua_pushstring");$/;"	f
pushthread	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int pushthread(State *L) @(cname="lua_pushthread");$/;"	f
pushvalue	$C2_ROOT/libs/lua/lua.c2i	/^fn void pushvalue(State* L, c_int idx) @(cname="lua_pushvalue");$/;"	f
putInitChecker	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.putInitChecker(Analyser* ma, init_checker.Checker* c) {$/;"	f
putStmtList	$C2_ROOT/parser/c2_parser.c2	/^fn void Parser.putStmtList(Parser* p) {$/;"	f
putc	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int putc(c_int __c, FILE* __stream);$/;"	f
putc	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void putc(char c) @(cname="sdtx_putc");$/;"	f
putc_unlocked	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int putc_unlocked(c_int __c, FILE* __stream);$/;"	f
putchar	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int putchar(c_int __c);$/;"	f
putchar_unlocked	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int putchar_unlocked(c_int __c);$/;"	f
putenv	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int putenv(c_char* __string);$/;"	f
putr	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void putr(const char* str, i32 len) @(cname="sdtx_putr");$/;"	f
puts	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int puts(const c_char* __s);$/;"	f
puts	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void puts(const char* str) @(cname="sdtx_puts");$/;"	f
putw	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int putw(c_int __w, FILE* __stream);$/;"	f
qecvt	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_char* qecvt(c_double __value, c_int __ndigit, c_int* __decpt, c_int* __sign);$/;"	f
qecvt_r	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int qecvt_r(c_double __value, c_int __ndigit, c_int* __decpt, c_int* __sign, c_char* __buf,/;"	f
qfcvt	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_char* qfcvt(c_double __value, c_int __ndigit, c_int* __decpt, c_int* __sign);$/;"	f
qfcvt_r	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int qfcvt_r(c_double __value, c_int __ndigit, c_int* __decpt, c_int* __sign, c_char* __buf,/;"	f
qgcvt	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_char* qgcvt(c_double __value, c_int __ndigit, c_char* __buf);$/;"	f
qidx	$C2_ROOT/analyser/module_analyser_expr.c2	/^    if (qidx.isInvalid()) return qidx;$/;"	v
qidx	$C2_ROOT/bootstrap/bootstrap.c	/^   if (ast_QualType_isInvalid(&qidx)) return qidx;$/;"	v
qsort	$C2_ROOT/libs/libc/stdlib.c2i	/^fn void qsort(void* __base, c_size __nmemb, c_size __size, StdlibCompareFn __compar);$/;"	f
qt	$C2_ROOT/analyser/module_analyser_builtin.c2	/^    if (qt.isInvalid()) return qt;$/;"	v
qt	$C2_ROOT/analyser/module_analyser_expr.c2	/^    return qt;$/;"	v
qt	$C2_ROOT/analyser/module_analyser_stmt.c2	/^    return qt;$/;"	v
qt	$C2_ROOT/analyser/module_analyser_type.c2	/^            if (qt.isInvalid()) return qt;$/;"	v
qt	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^        return qt;$/;"	v
qt	$C2_ROOT/ast/decl.c2	/^    d.qt = qt;$/;"	v
qt	$C2_ROOT/ast/expr.c2	/^    QualType qt;$/;"	v
qt	$C2_ROOT/ast/instance_table.c2	/^    ti.qt = qt;$/;"	v
qt	$C2_ROOT/ast/member_expr.c2	/^    return qt;$/;"	v
qt	$C2_ROOT/ast/qualtype.c2	/^    return qt;$/;"	v
qt	$C2_ROOT/ast/string_type_pool.c2	/^    return qt;$/;"	v
qt	$C2_ROOT/bootstrap/bootstrap.c	/^   ti->qt = qt;$/;"	v
qualifier	$C2_ROOT/analyser/module_analyser_function.c2	/^        ma.warn(rtype.getLoc(), "'const' type qualifier on return type has no effect");$/;"	t
qualifier	$C2_ROOT/bootstrap/bootstrap.c	/^      module_analyser_Analyser_warn(ma, ast_TypeRef_getLoc(rtype), "'const' type qualifier on re/;"	t
qualifiers	$C2_ROOT/bootstrap/bootstrap.c	/^   return qualifiers;$/;"	v
qualifiers	$C2_ROOT/parser/c2_parser.c2	/^    return qualifiers;$/;"	v
query	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Texture.query(Texture* texture, u32 format, c_int* access, c_int* w, c_int* h) @(cname /;"	f
queryBackend	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn Backend queryBackend() @(cname="sg_query_backend");$/;"	f
queryBufferDefaults	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn BufferDesc queryBufferDefaults(BufferDesc* desc) @(cname="sg_query_buffer_defaults");$/;"	f
queryBufferDesc	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn BufferDesc queryBufferDesc(Buffer buf) @(cname="sg_query_buffer_desc");$/;"	f
queryBufferInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn BufferInfo queryBufferInfo(Buffer buf) @(cname="sg_query_buffer_info");$/;"	f
queryBufferOverflow	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn bool queryBufferOverflow(Buffer buf) @(cname="sg_query_buffer_overflow");$/;"	f
queryBufferSize	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn usize queryBufferSize(Buffer buf) @(cname="sg_query_buffer_size");$/;"	f
queryBufferState	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn ResourceState queryBufferState(Buffer buf) @(cname="sg_query_buffer_state");$/;"	f
queryBufferUsage	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn BufferUsage queryBufferUsage(Buffer buf) @(cname="sg_query_buffer_usage");$/;"	f
queryBufferWillOverflow	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn bool queryBufferWillOverflow(Buffer buf, usize size) @(cname="sg_query_buffer_will_overflow")/;"	f
queryDesc	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn Desc queryDesc() @(cname="sapp_query_desc");$/;"	f
queryDesc	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^fn Desc queryDesc() @(cname="saudio_query_desc");$/;"	f
queryDesc	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn Desc queryDesc() @(cname="sg_query_desc");$/;"	f
queryFeatures	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn Features queryFeatures() @(cname="sg_query_features");$/;"	f
queryFrameStats	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn FrameStats queryFrameStats() @(cname="sg_query_frame_stats");$/;"	f
queryImageDefaults	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn ImageDesc queryImageDefaults(ImageDesc* desc) @(cname="sg_query_image_defaults");$/;"	f
queryImageDesc	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn ImageDesc queryImageDesc(Image img) @(cname="sg_query_image_desc");$/;"	f
queryImageHeight	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn i32 queryImageHeight(Image img) @(cname="sg_query_image_height");$/;"	f
queryImageInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn ImageInfo queryImageInfo(Image img) @(cname="sg_query_image_info");$/;"	f
queryImageNumMipmaps	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn i32 queryImageNumMipmaps(Image img) @(cname="sg_query_image_num_mipmaps");$/;"	f
queryImageNumSlices	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn i32 queryImageNumSlices(Image img) @(cname="sg_query_image_num_slices");$/;"	f
queryImagePixelformat	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn PixelFormat queryImagePixelformat(Image img) @(cname="sg_query_image_pixelformat");$/;"	f
queryImageSampleCount	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn i32 queryImageSampleCount(Image img) @(cname="sg_query_image_sample_count");$/;"	f
queryImageState	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn ResourceState queryImageState(Image img) @(cname="sg_query_image_state");$/;"	f
queryImageType	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn ImageType queryImageType(Image img) @(cname="sg_query_image_type");$/;"	f
queryImageUsage	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn ImageUsage queryImageUsage(Image img) @(cname="sg_query_image_usage");$/;"	f
queryImageWidth	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn i32 queryImageWidth(Image img) @(cname="sg_query_image_width");$/;"	f
queryLimits	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn Limits queryLimits() @(cname="sg_query_limits");$/;"	f
queryPipelineDefaults	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn PipelineDesc queryPipelineDefaults(PipelineDesc* desc) @(cname="sg_query_pipeline_defaults");$/;"	f
queryPipelineDesc	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn PipelineDesc queryPipelineDesc(Pipeline pip) @(cname="sg_query_pipeline_desc");$/;"	f
queryPipelineInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn PipelineInfo queryPipelineInfo(Pipeline pip) @(cname="sg_query_pipeline_info");$/;"	f
queryPipelineState	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn ResourceState queryPipelineState(Pipeline pip) @(cname="sg_query_pipeline_state");$/;"	f
queryPixelformat	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn PixelformatInfo queryPixelformat(PixelFormat fmt) @(cname="sg_query_pixelformat");$/;"	f
queryRowPitch	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn i32 queryRowPitch(PixelFormat fmt, i32 width, i32 row_align_bytes) @(cname="sg_query_row_pitc/;"	f
querySamplerDefaults	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn SamplerDesc querySamplerDefaults(SamplerDesc* desc) @(cname="sg_query_sampler_defaults");$/;"	f
querySamplerDesc	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn SamplerDesc querySamplerDesc(Sampler smp) @(cname="sg_query_sampler_desc");$/;"	f
querySamplerInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn SamplerInfo querySamplerInfo(Sampler smp) @(cname="sg_query_sampler_info");$/;"	f
querySamplerState	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn ResourceState querySamplerState(Sampler smp) @(cname="sg_query_sampler_state");$/;"	f
queryShaderDefaults	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn ShaderDesc queryShaderDefaults(ShaderDesc* desc) @(cname="sg_query_shader_defaults");$/;"	f
queryShaderDesc	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn ShaderDesc queryShaderDesc(Shader shd) @(cname="sg_query_shader_desc");$/;"	f
queryShaderInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn ShaderInfo queryShaderInfo(Shader shd) @(cname="sg_query_shader_info");$/;"	f
queryShaderState	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn ResourceState queryShaderState(Shader shd) @(cname="sg_query_shader_state");$/;"	f
querySurfacePitch	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn i32 querySurfacePitch(PixelFormat fmt, i32 width, i32 height, i32 row_align_bytes) @(cname="s/;"	f
queryViewBuffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn Buffer queryViewBuffer(View view) @(cname="sg_query_view_buffer");$/;"	f
queryViewDefaults	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn ViewDesc queryViewDefaults(ViewDesc* desc) @(cname="sg_query_view_defaults");$/;"	f
queryViewDesc	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn ViewDesc queryViewDesc(View view) @(cname="sg_query_view_desc");$/;"	f
queryViewImage	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn Image queryViewImage(View view) @(cname="sg_query_view_image");$/;"	f
queryViewInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn ViewInfo queryViewInfo(View view) @(cname="sg_query_view_info");$/;"	f
queryViewState	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn ResourceState queryViewState(View view) @(cname="sg_query_view_state");$/;"	f
queryViewType	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn ViewType queryViewType(View view) @(cname="sg_query_view_type");$/;"	f
questionLoc	$C2_ROOT/parser/ast_builder.c2	/^                                                  questionLoc,$/;"	v
queue	$C2_ROOT/bootstrap/bootstrap.c	/^   uint16_t* queue;$/;"	v
queue	$C2_ROOT/ir/context.c2	/^    WorkQueue* queue;$/;"	v
queue	$C2_ROOT/ir/work_queue.c2	/^    WorkQueue* queue;$/;"	v
queue_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t queue_count;$/;"	v
queue_count	$C2_ROOT/ir/interference_graph.c2	/^    u32 tail = g.queue_head + g.queue_count;$/;"	v
queue_count	$C2_ROOT/ir/usage_counter.c2	/^    u32 queue_count;$/;"	v
queue_head	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t queue_head;$/;"	v
queue_head	$C2_ROOT/ir/interference_graph.c2	/^    u32 queue_head;$/;"	v
queue_head	$C2_ROOT/ir/usage_counter.c2	/^    u32 queue_head;$/;"	v
queue_init	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn c_int queue_init(u32 entries, Ring* ring, u32 flags) @(cname="io_uring_queue_init");$/;"	f
queue_init_params	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn c_int queue_init_params(u32 entries, Ring* ring, Params* p) @(cname="io_uring_queue_init_para/;"	f
queue_mmap	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn c_int queue_mmap(c_int fd, Params *p, Ring* ring) @(cname="io_uring_queue_mmap");$/;"	f
quick_exit	$C2_ROOT/libs/libc/stdlib.c2i	/^fn void quick_exit(c_int __status);$/;"	f
quicksort	$C2_ROOT/common/quicksort.c2	/^module quicksort;$/;"	v
quit	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void quit() @(cname="SDL_Quit");$/;"	f
quit	$C2_ROOT/libs/sdl2_image/sdl_image.c2i	/^fn void quit() @(cname="IMG_Quit");$/;"	f
quit	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn void quit() @(cname="TTF_Quit");$/;"	f
quit	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void quit() @(cname="sapp_quit");$/;"	f
quot	$C2_ROOT/bootstrap/bootstrap.c	/^   c_long quot;$/;"	v
quot	$C2_ROOT/libs/libc/stdlib.c2i	/^    c_long quot;$/;"	v
ra	$C2_ROOT/bootstrap/bootstrap.c	/^      if ((ra->slot == slot)) return ra;$/;"	v
ra	$C2_ROOT/ir/slot_collector.c2	/^        if (ra.slot == slot) return ra;$/;"	v
rad	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn f32 rad(f32 deg) @(cname="sgl_rad");$/;"	f
radians	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn f32 radians(f32 _degrees) {$/;"	f
radius	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    f32 radius;$/;"	v
radix	$C2_ROOT/ast/char_literal.c2	/^    e.base.base.charLiteralBits.radix = radix;$/;"	v
radix	$C2_ROOT/ast/float_literal.c2	/^    i.base.base.floatLiteralBits.radix = radix;$/;"	v
radix	$C2_ROOT/ast/integer_literal.c2	/^    i.base.base.integerLiteralBits.radix = radix;$/;"	v
radix	$C2_ROOT/bootstrap/bootstrap.c	/^   i->base.base.integerLiteralBits.radix = radix;$/;"	v
radix	$C2_ROOT/parser/token.c2	/^    return (Radix)tok.radix;$/;"	v
radix_tree	$C2_ROOT/generator/c2refs.c2	/^import radix_tree;$/;"	v
radix_tree	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^module radix_tree;$/;"	v
radix_tree	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^module radix_tree;$/;"	v
radix_tree	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^module radix_tree;$/;"	v
rand	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int rand();$/;"	f
rand_r	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int rand_r(c_uint* __seed);$/;"	f
random	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_long random();$/;"	f
random_colors	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    bool random_colors;$/;"	v
random_data	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct random_data_ random_data;$/;"	v
random_r	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int random_r(Random_data* __buf, c_int* __result);$/;"	f
range	$C2_ROOT/ast/expr.c2	/^    return range;$/;"	v
range	$C2_ROOT/ast/member_expr.c2	/^    return range;$/;"	v
range	$C2_ROOT/bootstrap/bootstrap.c	/^   return range;$/;"	v
range_end_col	$C2_ROOT/bootstrap/bootstrap.c	/^            if ((end_col < range_end_col)) end_col = range_end_col;$/;"	v
range_end_col	$C2_ROOT/common/diagnostics.c2	/^                range_end_col = 1;$/;"	v
range_start_col	$C2_ROOT/common/diagnostics.c2	/^                range_start_col = 1;$/;"	v
raw	$C2_ROOT/bootstrap/bootstrap.c	/^      raw = expand;$/;"	v
raw	$C2_ROOT/common/build_file.c2	/^        raw = expand;$/;"	v
raw	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    X509_buf raw;$/;"	v
raw_mode	$C2_ROOT/bootstrap/bootstrap.c	/^   t->raw_mode = raw_mode;$/;"	v
raw_mode	$C2_ROOT/parser/c2_tokenizer.c2	/^    t.raw_mode = raw_mode;$/;"	v
rawequeal	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int rawequeal(State *L, c_int idx1, c_int idx2) @(cname="lua_rawequeal");$/;"	f
rawget	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int rawget(State *L, c_int idx) @(cname="lua_rawget");$/;"	f
rawgeti	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int rawgeti(State *L, c_int idx, Integer n) @(cname="lua_rawgeti");$/;"	f
rawgetp	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int rawgetp(State *L, c_int idx, const void *p) @(cname="lua_rawgetp");$/;"	f
rawlen	$C2_ROOT/libs/lua/lua.c2i	/^fn c_size rawlen(State* L, c_int idx) @(cname="lua_rawlen");$/;"	f
rawset	$C2_ROOT/libs/lua/lua.c2i	/^fn void  rawset(State *L, c_int idx) @(cname="lua_rawset");$/;"	f
rawseti	$C2_ROOT/libs/lua/lua.c2i	/^fn void  rawseti(State *L, c_int idx, Integer n) @(cname="lua_rawseti");$/;"	f
rawsetp	$C2_ROOT/libs/lua/lua.c2i	/^fn void  rawsetp(State *L, c_int idx, const void *p) @(cname="lua_rawsetp");$/;"	f
rcanon	$C2_ROOT/analyser/conversion_checker.c2	/^    const PointerType* rtype = (PointerType*)rcanon;$/;"	v
rd_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint16_t rd_count;$/;"	v
rd_count	$C2_ROOT/ir/slot_collector.c2	/^    u32 slot_end = bi.rd_start + bi.rd_count;$/;"	v
rd_start	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t slot_start = bi->rd_start;$/;"	v
rd_start	$C2_ROOT/ir/slot_collector.c2	/^    u32 slot_start = bi.rd_start;$/;"	v
re_erroffset	$C2_ROOT/libs/libc/regex.c2i	/^    c_size re_erroffset;$/;"	v
re_nsub	$C2_ROOT/libs/libc/regex.c2i	/^    c_size re_nsub;$/;"	v
re_pcre	$C2_ROOT/libs/libc/regex.c2i	/^    void *re_pcre;$/;"	v
read	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_long read(c_int fd, void* buf, c_ulong count);$/;"	f
read	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool read;$/;"	v
read2	$C2_ROOT/common/file/reader.c2	/^fn isize read2(i32 hd, void* data, usize len) {$/;"	f
read_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t read_idx;$/;"	v
read_idx	$C2_ROOT/ir/slot_collector.c2	/^    u32 read_idx;$/;"	v
read_mask	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u8 read_mask;$/;"	v
readdir	$C2_ROOT/libs/libc/libc_dirent.c2i	/^fn Dirent* readdir(DIR* dirp);$/;"	f
reader	$C2_ROOT/bootstrap/bootstrap.c	/^      file_utils_Reader reader;$/;"	v
readonly	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool readonly;$/;"	v
reads	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_ReadSlotAccess* reads;$/;"	v
reads	$C2_ROOT/ir/slot_collector.c2	/^    ReadSlotAccess* reads;$/;"	v
readv	$C2_ROOT/libs/libc/uio.c2i	/^fn isize readv(c_int fd, const Iovec* iovec, c_int count);$/;"	f
realloc	$C2_ROOT/libs/libc/stdlib.c2i	/^fn void* realloc(void* ptr, c_size size);$/;"	f
realpath	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_char* realpath(const c_char* __name, c_char* __resolved);$/;"	f
recipe	$C2_ROOT/bootstrap/bootstrap.c	/^   p.recipe = recipe;$/;"	v
recipe	$C2_ROOT/compiler/c2recipe_parser.c2	/^    p.recipe = recipe;$/;"	v
recipe	$C2_ROOT/compiler/main.c2	/^    c2recipe.Recipe* recipe;$/;"	v
recipe_id	$C2_ROOT/bootstrap/bootstrap.c	/^   int32_t recipe_id;$/;"	v
recipe_id	$C2_ROOT/compiler/main.c2	/^    i32 recipe_id;$/;"	v
recv	$C2_ROOT/libs/libc/sys_socket.c2i	/^fn isize recv(c_int fd, void* buf, usize n, c_int flags);$/;"	f
recvfrom	$C2_ROOT/libs/libc/sys_socket.c2i	/^fn isize recvfrom(c_int fd, void* buf, usize n, c_int flags, Sockaddr* addr, u32* addrlen);$/;"	f
ref	$C2_ROOT/ast/identifier_expr.c2	/^    return ref;$/;"	v
ref	$C2_ROOT/ast/instantiator.c2	/^    const TypeRef* ref;$/;"	v
ref	$C2_ROOT/ast/member_expr.c2	/^    return ref;$/;"	v
ref	$C2_ROOT/ast/type_ref.c2	/^    const TypeRef* r2 = inst.ref;$/;"	v
ref	$C2_ROOT/bootstrap/bootstrap.c	/^   wa->ref = ref;$/;"	v
ref	$C2_ROOT/generator/ir/ir_generator.c2	/^                ir.Ref ref;$/;"	v
ref	$C2_ROOT/generator/ir/ir_generator_call.c2	/^        ir.Ref ref;$/;"	v
ref	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^    ir.Ref ref;$/;"	v
ref	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^            ir.Ref ref;$/;"	v
ref	$C2_ROOT/generator/ir/ir_generator_switch.c2	/^    ir.Ref ref;$/;"	v
ref	$C2_ROOT/generator/ir/ref_list.c2	/^    l.refs[l.count] = ref;$/;"	v
ref	$C2_ROOT/ir/context.c2	/^    return ref;$/;"	v
ref	$C2_ROOT/ir/copy_list.c2	/^    info.ref = ref;$/;"	v
ref	$C2_ROOT/ir/instr.c2	/^    i.args[0] = ref;$/;"	v
ref	$C2_ROOT/ir/phi_list.c2	/^    clause.ref = ref;$/;"	v
ref	$C2_ROOT/ir/slot_collector.c2	/^    Ref ref;$/;"	v
ref	$C2_ROOT/ir/slot_values.c2	/^    v.values[slot] = ref;$/;"	v
ref	$C2_ROOT/ir/slot_writes_map.c2	/^    wr.ref = ref;$/;"	v
ref	$C2_ROOT/ir/ssa.c2	/^    return ref;$/;"	v
ref	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u8 ref;$/;"	v
ref	$C2_ROOT/parser/ast_builder.c2	/^                          ref,$/;"	v
ref	$C2_ROOT/parser/c2_parser_expr.c2	/^    Ref[MemberExprMaxDepth] ref;$/;"	v
ref1	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Ref ref1;$/;"	v
ref1	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^    ir.Ref ref1;$/;"	v
ref1	$C2_ROOT/ir/instr.c2	/^    i.args[0] = ref1;$/;"	v
ref2	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Ref ref2;$/;"	v
ref2	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^    ir.Ref ref2;$/;"	v
ref2	$C2_ROOT/ir/instr.c2	/^    i.args[1] = ref2;$/;"	v
ref_list	$C2_ROOT/generator/ir/ref_list.c2	/^module ref_list;$/;"	v
ref_list_pool_Elem	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ref_list_pool_Elem_ ref_list_pool_Elem;$/;"	v
ref_list_pool_Pool	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct ref_list_pool_Pool_ ref_list_pool_Pool;$/;"	v
ref_pool	$C2_ROOT/bootstrap/bootstrap.c	/^   ref_list_pool_Pool ref_pool;$/;"	v
refcount	$C2_ROOT/ast/member_expr.c2	/^    e.base.base.memberExprBits.num_refs = refcount;$/;"	v
refcount	$C2_ROOT/bootstrap/bootstrap.c	/^   e->base.base.memberExprBits.num_refs = refcount;$/;"	v
refcount	$C2_ROOT/libs/sdl2/sdl.c2i	/^    c_int refcount;$/;"	v
reflect	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec3 Vec3.reflect(const Vec3* v, const Vec3* normal) {$/;"	f
refresh	$C2_ROOT/libs/curses/curses.c2i	/^fn void refresh();$/;"	f
refs	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_RefList refs;$/;"	v
refs	$C2_ROOT/generator/ir/ref_list.c2	/^    return l.refs;$/;"	v
refs	$C2_ROOT/parser/c2_parser_stmt.c2	/^                Ref[2] refs;$/;"	v
refs	$C2_ROOT/plugins/refs_generator.c2	/^import c2refs as refs;$/;"	v
refs2	$C2_ROOT/bootstrap/bootstrap.c	/^   l->refs = refs2;$/;"	v
refs2	$C2_ROOT/generator/ir/ref_list.c2	/^    l.refs = refs2;$/;"	v
refs_generator	$C2_ROOT/plugins/refs_generator.c2	/^module refs_generator;$/;"	v
refs_generator	$C2_ROOT/plugins/refs_generator_plugin.c2	/^import refs_generator;$/;"	v
reg	$C2_ROOT/bootstrap/bootstrap.c	/^   i->instrBits.register_nr = reg;$/;"	v
reg	$C2_ROOT/ir/instr.c2	/^    i.instrBits.register_nr = reg;$/;"	v
regcomp	$C2_ROOT/libs/libc/regex.c2i	/^fn c_int regcomp(Regex_t* preg, const c_char* pattern, c_int cflags);$/;"	f
regerror	$C2_ROOT/libs/libc/regex.c2i	/^fn c_size regerror(c_int errcode, const Regex_t* preg, c_char* errbuf, c_size errbuf_size);$/;"	f
regex	$C2_ROOT/libs/libc/regex.c2i	/^module regex;$/;"	v
regexec	$C2_ROOT/libs/libc/regex.c2i	/^fn c_int regexec(const Regex_t* preg, const c_char* string, c_size nmatch, Regmatch_t* pmatch, c/;"	f
regfree	$C2_ROOT/libs/libc/regex.c2i	/^fn void regfree(Regex_t* preg);$/;"	f
region	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t* region;$/;"	v
region	$C2_ROOT/common/file/reader.c2	/^    file.contents = region;$/;"	v
register	$C2_ROOT/ast_utils/attr.c2	/^public fn void register(string_pool.Pool* pool, u32* indexes) {$/;"	f
register	$C2_ROOT/common/attr_handler.c2	/^public fn bool Handler.register(Handler* h, u32 name, ast.AttrHandlerFn func, void* arg) {$/;"	f
registerAttr	$C2_ROOT/plugins/plugin_info.c2	/^public fn bool Info.registerAttr(Info* info,$/;"	f
registerEvents	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int registerEvents(c_int numevents) @(cname="SDL_RegisterEvents");$/;"	f
register_attr	$C2_ROOT/bootstrap/bootstrap.c	/^   plugin_info_RegisterAttrFn register_attr;$/;"	v
register_attr	$C2_ROOT/compiler/compiler.c2	/^fn bool Compiler.register_attr(void* arg, u32 name, ast.AttrHandlerFn handler, void* arg2) {$/;"	f
register_attr	$C2_ROOT/plugins/plugin_info.c2	/^    RegisterAttrFn register_attr;$/;"	v
register_buffers	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn c_int Ring.register_buffers(Ring* ring, const uio.Iovec* iovecs,$/;"	f
register_buffers_tags	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn c_int Ring.register_buffers_tags(Ring* ring, const uio.Iovec* iovecs,$/;"	f
register_buffers_update_tag	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn c_int Ring.register_buffers_update_tag(Ring* ring,$/;"	f
register_map	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t* register_map;$/;"	v
register_map	$C2_ROOT/ir/interference_graph.c2	/^    return g.register_map;$/;"	v
register_nr	$C2_ROOT/bootstrap/bootstrap.c	/^   return i->instrBits.register_nr;$/;"	v
register_nr	$C2_ROOT/ir/instr.c2	/^    return i.instrBits.register_nr;$/;"	v
rel_path	$C2_ROOT/common/utils.c2	/^    char[file_utils.Max_path] rel_path;$/;"	v
release	$C2_ROOT/libs/libc/sys_utsname.c2i	/^    char[NAME_LEN] release;$/;"	v
rem	$C2_ROOT/bootstrap/bootstrap.c	/^   c_long rem;$/;"	v
rem	$C2_ROOT/libs/libc/stdlib.c2i	/^    c_long rem;$/;"	v
remainder	$C2_ROOT/ast/value.c2	/^fn Value Value.remainder(const Value* v1, const Value* v2) {$/;"	f
remainder	$C2_ROOT/libs/math/math.c2i	/^fn c_double remainder(c_double, c_double);$/;"	f
remainderf	$C2_ROOT/libs/math/math.c2i	/^fn c_float remainderf(c_float, c_float);$/;"	f
remove	$C2_ROOT/common/linked_list.c2	/^public fn void Element.remove(Element* item) @(unused) {$/;"	f
remove	$C2_ROOT/ir/register_alloc.c2	/^fn void LiveVector.remove(LiveVector* v, u32 idx) {$/;"	f
remove	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int remove(const c_char* __filename);$/;"	f
removeBlockWritesFromArena	$C2_ROOT/ir/slot_writes_map.c2	/^fn u16 Map.removeBlockWritesFromArena(Map* m, Arena* a, u16 blk_id) {$/;"	f
removeCommitListener	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn bool removeCommitListener(CommitListener listener) @(cname="sg_remove_commit_listener");$/;"	f
removeLastBlock	$C2_ROOT/ir/block_list.c2	/^public fn void BlockList.removeLastBlock(BlockList* l) {$/;"	f
removeLastInstruction	$C2_ROOT/ir/instr_list.c2	/^public fn void InstrList.removeLastInstruction(InstrList* l) {$/;"	f
removeNone	$C2_ROOT/ir/ssa.c2	/^fn void Tools.removeNone(Tools* t) {$/;"	f
removeSplitEdges	$C2_ROOT/ir/register_alloc.c2	/^fn void Tools.removeSplitEdges(Tools* t) {$/;"	f
removeTimer	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn bool removeTimer(TimerID id) @(cname="SDL_RemoveTimer");$/;"	f
removeUnused	$C2_ROOT/ir/ssa.c2	/^fn void Tools.removeUnused(Tools* t) {$/;"	f
removeVariableFromArena	$C2_ROOT/ir/interference_graph.c2	/^fn u16 InterferenceGraph.removeVariableFromArena(InterferenceGraph* g, Arena* a, u16 var_idx) {$/;"	f
removeVariableFromArena	$C2_ROOT/ir/live_map.c2	/^fn u16 Map.removeVariableFromArena(Map* g, Arena* a, u16 var_idx) {$/;"	f
remquo	$C2_ROOT/libs/math/math.c2i	/^fn c_double remquo(c_double, c_double, c_int *);$/;"	f
remquof	$C2_ROOT/libs/math/math.c2i	/^fn c_float remquof(c_float, c_float, c_int *);$/;"	f
rename	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int rename(const c_char* __old, const c_char* __new);$/;"	f
rename_flags	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        u32       rename_flags;$/;"	v
renameat	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int renameat(c_int __oldfd, const c_char* __old, c_int __newfd, const c_char* __new);$/;"	f
render	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool render;$/;"	v
renderBlended	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn sdl.Surface* Font.renderBlended(Font* font, const char* text, sdl.Color fg)$/;"	f
renderBlendedWrapped	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn sdl.Surface* Font.renderBlendedWrapped(Font* font, const char* text, sdl.Color fg, u32 wrapLe/;"	f
renderLCD	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn sdl.Surface* Font.renderLCD(Font* font, const char* text, sdl.Color fg, sdl.Color bg)$/;"	f
renderLCDWrapped	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn sdl.Surface* Font.renderLCDWrapped(Font* font, const char* text, sdl.Color fg, sdl.Color bg, /;"	f
renderShaded	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn sdl.Surface* Font.renderShaded(Font* font, const char* text, sdl.Color fg, sdl.Color bg)$/;"	f
renderShadedWrapped	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn sdl.Surface* Font.renderShadedWrapped(Font* font, const char* text, sdl.Color fg, sdl.Color b/;"	f
renderSolid	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn sdl.Surface* Font.renderSolid(Font* font, const char* text, sdl.Color fg) @(cname="TTF_Render/;"	f
renderSolid_Wrapped	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn sdl.Surface* Font.renderSolid_Wrapped(Font* font, const char* text, sdl.Color fg, u32 wrapLen/;"	f
render_pipeline	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* render_pipeline;$/;"	v
render_view	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* render_view;$/;"	v
reorder_blocks	$C2_ROOT/ir/context.c2	/^fn void Tools.reorder_blocks(Tools* t, FunctionInfo* fi, const index_list.List* block_order) {$/;"	f
replacePhis	$C2_ROOT/ir/register_alloc.c2	/^fn void Tools.replacePhis(Tools* t) {$/;"	f
report	$C2_ROOT/ast_utils/context.c2	/^public fn void Context.report(const Context* c) {$/;"	f
report	$C2_ROOT/ast_utils/string_pool.c2	/^public fn void Pool.report(const Pool* p, const char* name) @(unused) {$/;"	f
report	$C2_ROOT/common/source_mgr.c2	/^public fn void SourceMgr.report(SourceMgr* sm, bool full) {$/;"	f
report	$C2_ROOT/ir/print.c2	/^public fn void Context.report(const Context* c) @(unused) {$/;"	f
requestQuit	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void requestQuit() @(cname="sapp_request_quit");$/;"	f
required	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    return z.size < required;$/;"	v
res	$C2_ROOT/analyser/module_analyser.c2	/^    QualType res;$/;"	v
res	$C2_ROOT/analyser/module_analyser_expr.c2	/^    return res;$/;"	v
res	$C2_ROOT/analyser/module_analyser_stmt.c2	/^    return res;$/;"	v
res	$C2_ROOT/analyser/module_analyser_switch.c2	/^    return res;$/;"	v
res	$C2_ROOT/ast/value.c2	/^    return res;$/;"	v
res	$C2_ROOT/bootstrap/bootstrap.c	/^   return res;$/;"	v
res	$C2_ROOT/common/process_utils.c2	/^        usize len = (usize)res;$/;"	v
res	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        ir.Ref res;$/;"	v
res	$C2_ROOT/ir_examples/calls.c2	/^    return res;$/;"	v
res	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* res;$/;"	v
res	$C2_ROOT/parser/c2_parser_expr.c2	/^    return res;$/;"	v
res2	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^        result = res2;$/;"	v
res2	$C2_ROOT/ast/ast_evaluator.c2	/^        return res2;$/;"	v
res2	$C2_ROOT/bootstrap/bootstrap.c	/^      return res2;$/;"	v
res2	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^        result = res2;$/;"	v
res_id	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 res_id;$/;"	v
reserve	$C2_ROOT/ast_utils/context.c2	/^public fn void Context.reserve(Context* c, u32 len) {$/;"	f
reserve	$C2_ROOT/ir/case_list.c2	/^public fn CaseId CaseList.reserve(CaseList* l, u32 count) {$/;"	f
reserve	$C2_ROOT/ir/instr_list.c2	/^public fn void InstrList.reserve(InstrList* l, u32 extra) {$/;"	f
reserve	$C2_ROOT/parser/ast_builder.c2	/^public fn void Builder.reserve(Builder* b, u32 size) {$/;"	f
reserved	$C2_ROOT/libs/libc/sys_stat.c2i	/^    c_long[3] reserved;$/;"	v
reset	$C2_ROOT/analyser/label_vector.c2	/^public fn void LabelVector.reset(LabelVector* v) {$/;"	f
reset	$C2_ROOT/analyser/scope.c2	/^public fn void Scope.reset(Scope* s) {$/;"	f
reset	$C2_ROOT/ast/statistics.c2	/^fn void Stats.reset(Stats* s) {$/;"	f
reset	$C2_ROOT/common/bit_array.c2	/^public fn void BitArray.reset(BitArray* a, u32 cap) {$/;"	f
resetKeyboard	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void resetKeyboard() @(cname="SDL_ResetKeyboard");$/;"	f
resetStateCache	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void resetStateCache() @(cname="sg_reset_state_cache");$/;"	f
resetTemps	$C2_ROOT/ir/print.c2	/^fn void PrintHelper.resetTemps(PrintHelper* ph, u32 num_args, u32 num_instr) {$/;"	f
resetToLastNewline	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void Buf.resetToLastNewline(Buf* buf) @(unused) {$/;"	f
resize	$C2_ROOT/analyser/incr_array_list.c2	/^fn void List.resize(List* v) {$/;"	f
resize	$C2_ROOT/analyser/label_vector.c2	/^fn void LabelVector.resize(LabelVector* v) {$/;"	f
resize	$C2_ROOT/analyser/name_vector.c2	/^fn void NameVector.resize(NameVector* v) {$/;"	f
resize	$C2_ROOT/analyser/struct_func_list.c2	/^fn void List.resize(List* v) {$/;"	f
resize	$C2_ROOT/ast/instance_table.c2	/^fn void TemplateFunction.resize(TemplateFunction* f, u16 capacity) {$/;"	f
resize	$C2_ROOT/ast/pointer_pool.c2	/^fn void PointerPool.resize(PointerPool* p, u32 cap) {$/;"	f
resize	$C2_ROOT/ast/string_type_pool.c2	/^fn void StringTypePool.resize(StringTypePool* p, u32 cap) {$/;"	f
resize	$C2_ROOT/ast/symbol_table.c2	/^fn void SymbolTable.resize(SymbolTable* t, u32 capacity) {$/;"	f
resize	$C2_ROOT/ast_utils/attr_table.c2	/^fn void Table.resize(Table* t, u32 capacity) {$/;"	f
resize	$C2_ROOT/common/component.c2	/^fn void List.resize(List* l, u32 capacity) {$/;"	f
resize	$C2_ROOT/common/index_list.c2	/^fn void List.resize(List* l, u32 cap) {$/;"	f
resize	$C2_ROOT/common/library_list.c2	/^fn void List.resize(List* l, u32 cap) {$/;"	f
resize	$C2_ROOT/common/module_list.c2	/^fn void List.resize(List* l, u32 cap) {$/;"	f
resize	$C2_ROOT/common/source_mgr.c2	/^fn void SourceMgr.resize(SourceMgr* sm) {$/;"	f
resize	$C2_ROOT/common/string_list.c2	/^fn void List.resize(List* l, u32 capacity) {$/;"	f
resize	$C2_ROOT/common/value_maplist.c2	/^fn void List.resize(List* l, u32 cap) {$/;"	f
resize	$C2_ROOT/generator/c2refs.c2	/^fn Links* Links.resize(Links* t, u32 capacity) {$/;"	f
resize	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^fn void FieldStructLayouter.resize(FieldStructLayouter* l, u32 max) {$/;"	f
resize	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^fn void Locals.resize(Locals* l, u32 capacity) {$/;"	f
resize	$C2_ROOT/generator/ir/ref_list.c2	/^fn void RefList.resize(RefList* l, u32 cap) {$/;"	f
resize	$C2_ROOT/ir/block_list.c2	/^fn void BlockList.resize(BlockList* l, u32 cap) {$/;"	f
resize	$C2_ROOT/ir/case_list.c2	/^fn void CaseList.resize(CaseList* l, u32 extra, bool copy) {$/;"	f
resize	$C2_ROOT/ir/copy_list.c2	/^fn void CopyList.resize(CopyList* l, u32 capacity) {$/;"	f
resize	$C2_ROOT/ir/init_value_list.c2	/^fn void InitValueList.resize(InitValueList* l, u32 cap) {$/;"	f
resize	$C2_ROOT/ir/inserter.c2	/^fn void Inserter.resize(Inserter* ins, u32 capacity) {$/;"	f
resize	$C2_ROOT/ir/instr_list.c2	/^fn void InstrList.resize(InstrList* l, u32 cap) {$/;"	f
resize	$C2_ROOT/ir/lookup_table.c2	/^fn void Table.resize(Table* t, u32 capacity2, bool copy) {$/;"	f
resize	$C2_ROOT/ir/phi_list.c2	/^fn void PhiList.resize(PhiList* l, u32 extra) {$/;"	f
resize	$C2_ROOT/ir/symbol_list.c2	/^fn void SymbolList.resize(SymbolList* l, u32 cap) {$/;"	f
resize	$C2_ROOT/ir/usage_counter.c2	/^fn void Counter.resize(Counter* c, u32 cap) {$/;"	f
resize	$C2_ROOT/ir/work_queue.c2	/^fn void WorkQueue.resize(WorkQueue* q, u32 capacity) {$/;"	f
resize	$C2_ROOT/ir_examples/for.c2	/^fn void resize() {$/;"	f
resize	$C2_ROOT/plugins/refs_generator.c2	/^fn void LineCounter.resize(LineCounter* l, u32 cap) {$/;"	f
resizeFiles	$C2_ROOT/ast/module.c2	/^fn void Module.resizeFiles(Module* m, u32 cap) {$/;"	f
resizeNames	$C2_ROOT/generator/c2refs.c2	/^fn Files* Files.resizeNames(Files* f, u32 max_data) {$/;"	f
resize_data	$C2_ROOT/ast_utils/string_pool.c2	/^fn void Pool.resize_data(Pool* p, u32 capacity) {$/;"	f
resize_entries	$C2_ROOT/ast_utils/string_pool.c2	/^fn void Pool.resize_entries(Pool* p, u32 capacity) {$/;"	f
resize_nodes	$C2_ROOT/common/yaml/yaml_data.c2	/^fn void Data.resize_nodes(Data* d) {$/;"	f
resize_text	$C2_ROOT/common/yaml/yaml_data.c2	/^fn void Data.resize_text(Data* d) {$/;"	f
resolve_attachment	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool resolve_attachment;$/;"	v
resolve_view	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* resolve_view;$/;"	v
resolved	$C2_ROOT/analyser/module_analyser_type.c2	/^    return resolved;$/;"	v
resolved	$C2_ROOT/bootstrap/bootstrap.c	/^   return resolved;$/;"	v
resolves	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    View[8] resolves;$/;"	v
rest	$C2_ROOT/bootstrap/bootstrap.c	/^            path = rest;$/;"	v
rest	$C2_ROOT/common/yaml/yaml_iterator.c2	/^                path = rest;$/;"	v
result	$C2_ROOT/analyser/conversion_checker_expr.c2	/^    return result;$/;"	v
result	$C2_ROOT/analyser/module_analyser_binop.c2	/^    return result;$/;"	v
result	$C2_ROOT/analyser/module_analyser_expr.c2	/^    return result;$/;"	v
result	$C2_ROOT/analyser/size_analyser.c2	/^    return result;$/;"	v
result	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^    return result;$/;"	v
result	$C2_ROOT/ast/ast_evaluator.c2	/^    Value result;$/;"	v
result	$C2_ROOT/ast/module.c2	/^    return result;$/;"	v
result	$C2_ROOT/ast/type_ref.c2	/^    return result;$/;"	v
result	$C2_ROOT/ast/value.c2	/^    return result;$/;"	v
result	$C2_ROOT/ast_utils/string_pool.c2	/^    return result;$/;"	v
result	$C2_ROOT/bootstrap/bootstrap.c	/^   return result;$/;"	v
result	$C2_ROOT/common/build_file.c2	/^    return result;$/;"	v
result	$C2_ROOT/common/yaml/yaml_data.c2	/^    return result;$/;"	v
result	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^    return result;$/;"	v
result	$C2_ROOT/generator/c2refs.c2	/^    return result;$/;"	v
result	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    return result;$/;"	v
result	$C2_ROOT/libs/sokol/sokol_math.c2i	/^    return result;$/;"	v
results	$C2_ROOT/plugins/unit_test2.c2	/^  char[80] results;$/;"	v
results_dir	$C2_ROOT/bootstrap/bootstrap.c	/^   gen->results_dir = results_dir;$/;"	v
results_dir	$C2_ROOT/generator/c/c_generator.c2	/^    gen.results_dir = results_dir;$/;"	v
resume	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int resume(State *L, State *from, c_int narg) @(cname="lua_resume");$/;"	f
resv	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32[3] resv;$/;"	v
resv1	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32 resv1;$/;"	v
resv2	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u64 resv2;$/;"	v
ret	$C2_ROOT/plugins/unit_test2.c2	/^    const usize size = (usize)ret;$/;"	v
return	$C2_ROOT/analyser/conversion_checker.c2	/^    return true;$/;"	v
return	$C2_ROOT/analyser/conversion_checker_expr.c2	/^    return w;$/;"	v
return	$C2_ROOT/analyser/incr_array_list.c2	/^    return nil;$/;"	v
return	$C2_ROOT/analyser/init_checker.c2	/^    return 0;$/;"	v
return	$C2_ROOT/analyser/label_vector.c2	/^    return nil;$/;"	v
return	$C2_ROOT/analyser/module_analyser.c2	/^    return true;$/;"	v
return	$C2_ROOT/analyser/module_analyser_binop.c2	/^    return true;$/;"	v
return	$C2_ROOT/analyser/module_analyser_builtin.c2	/^    return d;$/;"	v
return	$C2_ROOT/analyser/module_analyser_call.c2	/^    return;$/;"	v
return	$C2_ROOT/analyser/module_analyser_expr.c2	/^    return true;$/;"	v
return	$C2_ROOT/analyser/module_analyser_function.c2	/^    if (qt.isInvalid()) return;$/;"	v
return	$C2_ROOT/analyser/module_analyser_init.c2	/^    return true;$/;"	v
return	$C2_ROOT/analyser/module_analyser_member.c2	/^    return d;$/;"	v
return	$C2_ROOT/analyser/module_analyser_stmt.c2	/^    return res;$/;"	v
return	$C2_ROOT/analyser/module_analyser_struct.c2	/^    if (res.isInvalid()) return;$/;"	v
return	$C2_ROOT/analyser/module_analyser_switch.c2	/^    return true;$/;"	v
return	$C2_ROOT/analyser/module_analyser_type.c2	/^    return true;$/;"	v
return	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^    return true;$/;"	v
return	$C2_ROOT/analyser/module_sorter.c2	/^    if (count <= 1) return;$/;"	v
return	$C2_ROOT/analyser/name_vector.c2	/^    return index;$/;"	v
return	$C2_ROOT/analyser/scope.c2	/^    return true;$/;"	v
return	$C2_ROOT/analyser/size_analyser.c2	/^    return result;$/;"	v
return	$C2_ROOT/analyser/struct_field_init_checker.c2	/^    return 0;$/;"	v
return	$C2_ROOT/analyser/unused_checker.c2	/^        return;$/;"	v
return	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^    return true;$/;"	v
return	$C2_ROOT/analyser_utils/printf_utils.c2	/^    return true;$/;"	v
return	$C2_ROOT/ast/alias_type.c2	/^    return t;$/;"	v
return	$C2_ROOT/ast/alias_type_decl.c2	/^    return d;$/;"	v
return	$C2_ROOT/ast/array_designated_init_expr.c2	/^    return e;$/;"	v
return	$C2_ROOT/ast/array_subscript_expr.c2	/^    return e;$/;"	v
return	$C2_ROOT/ast/array_type.c2	/^    return t;$/;"	v
return	$C2_ROOT/ast/array_value.c2	/^    return d;$/;"	v
return	$C2_ROOT/ast/asm_stmt.c2	/^    return s;$/;"	v
return	$C2_ROOT/ast/assert_stmt.c2	/^    return s;$/;"	v
return	$C2_ROOT/ast/ast.c2	/^    return nil;$/;"	v
return	$C2_ROOT/ast/ast_evaluator.c2	/^    return nil;$/;"	v
return	$C2_ROOT/ast/binary_operator.c2	/^    return e;$/;"	v
return	$C2_ROOT/ast/bitoffset_expr.c2	/^    return e;$/;"	v
return	$C2_ROOT/ast/boolean_literal.c2	/^    return e;$/;"	v
return	$C2_ROOT/ast/break_stmt.c2	/^    return s;$/;"	v
return	$C2_ROOT/ast/builtin_expr.c2	/^    return e;$/;"	v
return	$C2_ROOT/ast/builtin_type.c2	/^    return b;$/;"	v
return	$C2_ROOT/ast/call_expr.c2	/^    return nil;$/;"	v
return	$C2_ROOT/ast/char_literal.c2	/^    return e;$/;"	v
return	$C2_ROOT/ast/compound_stmt.c2	/^    return s;$/;"	v
return	$C2_ROOT/ast/conditional_operator.c2	/^    return e;$/;"	v
return	$C2_ROOT/ast/continue_stmt.c2	/^    return s;$/;"	v
return	$C2_ROOT/ast/decl.c2	/^    return tmp;$/;"	v
return	$C2_ROOT/ast/decl_stmt.c2	/^    return s;$/;"	v
return	$C2_ROOT/ast/enum_constant_decl.c2	/^    return nil;$/;"	v
return	$C2_ROOT/ast/enum_type.c2	/^    return t;$/;"	v
return	$C2_ROOT/ast/enum_type_decl.c2	/^    return nil;$/;"	v
return	$C2_ROOT/ast/explicit_cast_expr.c2	/^    return e;$/;"	v
return	$C2_ROOT/ast/expr.c2	/^    return true;$/;"	v
return	$C2_ROOT/ast/fallthrough_stmt.c2	/^    return s;$/;"	v
return	$C2_ROOT/ast/field_designated_init_expr.c2	/^    return nil;$/;"	v
return	$C2_ROOT/ast/float_literal.c2	/^    return i;$/;"	v
return	$C2_ROOT/ast/for_stmt.c2	/^    return s;$/;"	v
return	$C2_ROOT/ast/function_decl.c2	/^    return true;$/;"	v
return	$C2_ROOT/ast/function_decl_list.c2	/^    return nil;$/;"	v
return	$C2_ROOT/ast/function_type.c2	/^    return t;$/;"	v
return	$C2_ROOT/ast/function_type_decl.c2	/^    return ftd;$/;"	v
return	$C2_ROOT/ast/goto_stmt.c2	/^    return s;$/;"	v
return	$C2_ROOT/ast/identifier_expr.c2	/^    return ref;$/;"	v
return	$C2_ROOT/ast/if_stmt.c2	/^    return s;$/;"	v
return	$C2_ROOT/ast/implicit_cast_expr.c2	/^    return e;$/;"	v
return	$C2_ROOT/ast/import_decl.c2	/^    return d;$/;"	v
return	$C2_ROOT/ast/import_decl_list.c2	/^    return nil;$/;"	v
return	$C2_ROOT/ast/init_list_expr.c2	/^    return e;$/;"	v
return	$C2_ROOT/ast/instance_table.c2	/^    return nil;$/;"	v
return	$C2_ROOT/ast/integer_literal.c2	/^    return i;$/;"	v
return	$C2_ROOT/ast/label_stmt.c2	/^    return s;$/;"	v
return	$C2_ROOT/ast/member_expr.c2	/^    return ref;$/;"	v
return	$C2_ROOT/ast/module.c2	/^    return result;$/;"	v
return	$C2_ROOT/ast/module_type.c2	/^    return t;$/;"	v
return	$C2_ROOT/ast/nil_expr.c2	/^    return e;$/;"	v
return	$C2_ROOT/ast/paren_expr.c2	/^    return e;$/;"	v
return	$C2_ROOT/ast/pointer_pool.c2	/^    return ptr;$/;"	v
return	$C2_ROOT/ast/pointer_type.c2	/^    return t;$/;"	v
return	$C2_ROOT/ast/qualtype.c2	/^    return qt;$/;"	v
return	$C2_ROOT/ast/range_expr.c2	/^    return e;$/;"	v
return	$C2_ROOT/ast/return_stmt.c2	/^    return s;$/;"	v
return	$C2_ROOT/ast/static_assert.c2	/^    return d;$/;"	v
return	$C2_ROOT/ast/stmt.c2	/^    return nil;$/;"	v
return	$C2_ROOT/ast/string_literal.c2	/^    return e;$/;"	v
return	$C2_ROOT/ast/string_type_pool.c2	/^    return qt;$/;"	v
return	$C2_ROOT/ast/struct_type.c2	/^    return t;$/;"	v
return	$C2_ROOT/ast/struct_type_decl.c2	/^    return nil;$/;"	v
return	$C2_ROOT/ast/switch_case.c2	/^    return s;$/;"	v
return	$C2_ROOT/ast/switch_stmt.c2	/^    return s;$/;"	v
return	$C2_ROOT/ast/symbol_table.c2	/^    return nil;$/;"	v
return	$C2_ROOT/ast/type.c2	/^        return 0;$/;"	v
return	$C2_ROOT/ast/type_expr.c2	/^    return e;$/;"	v
return	$C2_ROOT/ast/type_ref.c2	/^    return result;$/;"	v
return	$C2_ROOT/ast/unary_operator.c2	/^    return true;$/;"	v
return	$C2_ROOT/ast/utils.c2	/^    return nil;$/;"	v
return	$C2_ROOT/ast/value.c2	/^    return result;$/;"	v
return	$C2_ROOT/ast/var_decl.c2	/^    return vd2;$/;"	v
return	$C2_ROOT/ast/while_stmt.c2	/^    return s;$/;"	v
return	$C2_ROOT/ast_utils/attr_table.c2	/^    return t;$/;"	v
return	$C2_ROOT/ast_utils/context.c2	/^    return next;$/;"	v
return	$C2_ROOT/ast_utils/string_buffer.c2	/^    return true;$/;"	v
return	$C2_ROOT/ast_utils/string_pool.c2	/^    return result;$/;"	v
return	$C2_ROOT/bootstrap/bootstrap.c	/^   return;$/;"	v
return	$C2_ROOT/common/attr_handler.c2	/^    return true;$/;"	v
return	$C2_ROOT/common/build_file.c2	/^    return true;$/;"	v
return	$C2_ROOT/common/build_target.c2	/^    return true;$/;"	v
return	$C2_ROOT/common/component.c2	/^    return nil;$/;"	v
return	$C2_ROOT/common/component_sorter.c2	/^    return 0;$/;"	v
return	$C2_ROOT/common/console.c2	/^    if (!show_timing) return;$/;"	v
return	$C2_ROOT/common/diagnostics.c2	/^    return diags;$/;"	v
return	$C2_ROOT/common/dsm_sorter.c2	/^    return sorted;$/;"	v
return	$C2_ROOT/common/file/file_utils.c2	/^    return true;$/;"	v
return	$C2_ROOT/common/file/reader.c2	/^    return true;$/;"	v
return	$C2_ROOT/common/file/writer.c2	/^    return true;$/;"	v
return	$C2_ROOT/common/library_list.c2	/^    return false;$/;"	v
return	$C2_ROOT/common/linked_list.c2	/^    return node;$/;"	v
return	$C2_ROOT/common/manifest_writer.c2	/^    if (!m.isExported()) return;$/;"	v
return	$C2_ROOT/common/module_list.c2	/^    return nil;$/;"	v
return	$C2_ROOT/common/process_utils.c2	/^    return nil;$/;"	v
return	$C2_ROOT/common/quicksort.c2	/^    if (count <= 1) return;$/;"	v
return	$C2_ROOT/common/source_mgr.c2	/^    return tmp;$/;"	v
return	$C2_ROOT/common/string_list.c2	/^    return false;$/;"	v
return	$C2_ROOT/common/string_utils.c2	/^    return output;$/;"	v
return	$C2_ROOT/common/target_info.c2	/^    return true;$/;"	v
return	$C2_ROOT/common/utf8.c2	/^    return i;$/;"	v
return	$C2_ROOT/common/utils.c2	/^    return now64;$/;"	v
return	$C2_ROOT/common/value_maplist.c2	/^    return 0;$/;"	v
return	$C2_ROOT/common/yaml/yaml_data.c2	/^    return result;$/;"	v
return	$C2_ROOT/common/yaml/yaml_iterator.c2	/^    return nil;$/;"	v
return	$C2_ROOT/common/yaml/yaml_parser.c2	/^    return true;$/;"	v
return	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    return true;$/;"	v
return	$C2_ROOT/compiler/c2recipe.c2	/^    return t;$/;"	v
return	$C2_ROOT/compiler/c2recipe_parser.c2	/^    return true;$/;"	v
return	$C2_ROOT/compiler/c2recipe_yaml.c2	/^    return true;$/;"	v
return	$C2_ROOT/compiler/compiler.c2	/^    return true;$/;"	v
return	$C2_ROOT/compiler/compiler_libs.c2	/^    return nil;$/;"	v
return	$C2_ROOT/compiler/main.c2	/^    return i;$/;"	v
return	$C2_ROOT/compiler/manifest.c2	/^    return true;$/;"	v
return	$C2_ROOT/compiler/plugin_mgr.c2	/^    return true;$/;"	v
return	$C2_ROOT/generator/ast_visitor.c2	/^    return v;$/;"	v
return	$C2_ROOT/generator/ast_visitor_expr.c2	/^        return;$/;"	v
return	$C2_ROOT/generator/c/c_generator.c2	/^    return true;$/;"	v
return	$C2_ROOT/generator/c/c_generator_call.c2	/^                if (!ic.isArrayToPointerDecay()) return;$/;"	v
return	$C2_ROOT/generator/c/c_generator_expr.c2	/^    return true;$/;"	v
return	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^    return result;$/;"	v
return	$C2_ROOT/generator/c/c_generator_special.c2	/^    if (gen.target_kind != build_target.Kind.DynamicLibrary) return;$/;"	v
return	$C2_ROOT/generator/c/c_generator_trace.c2	/^    return index;$/;"	v
return	$C2_ROOT/generator/c/dep_finder.c2	/^    if (d.isGenerated()) return;$/;"	v
return	$C2_ROOT/generator/c2_trace.c2	/^    return false;$/;"	v
return	$C2_ROOT/generator/c2i/c2i_generator.c2	/^    if (gen.imports.contains_idx(name_idx)) return;$/;"	v
return	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^    if (!qt.isArray()) return;$/;"	v
return	$C2_ROOT/generator/c2i/c2i_generator_expr.c2	/^        return;$/;"	v
return	$C2_ROOT/generator/c2refs.c2	/^    return true;$/;"	v
return	$C2_ROOT/generator/generator_utils.c2	/^    return false;$/;"	v
return	$C2_ROOT/generator/ir/array_init_sorter.c2	/^    return s;$/;"	v
return	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^        return;$/;"	v
return	$C2_ROOT/generator/ir/ir_generator.c2	/^    return gen_idx;$/;"	v
return	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^        return;$/;"	v
return	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^    return true;$/;"	v
return	$C2_ROOT/generator/ir/ir_generator_member.c2	/^        return;$/;"	v
return	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^    return true;$/;"	v
return	$C2_ROOT/generator/ir/ir_generator_switch.c2	/^        return;$/;"	v
return	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    return w;$/;"	v
return	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^    return count;$/;"	v
return	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    return used;$/;"	v
return	$C2_ROOT/ir/block_list.c2	/^    return idx;$/;"	v
return	$C2_ROOT/ir/case_list.c2	/^    return idx;$/;"	v
return	$C2_ROOT/ir/common.c2	/^    return false;$/;"	v
return	$C2_ROOT/ir/context.c2	/^    return ref;$/;"	v
return	$C2_ROOT/ir/copy_list.c2	/^    return nil;$/;"	v
return	$C2_ROOT/ir/function_info.c2	/^    return fi;$/;"	v
return	$C2_ROOT/ir/init_value_list.c2	/^    return v;$/;"	v
return	$C2_ROOT/ir/inserter.c2	/^    return instr_idx;$/;"	v
return	$C2_ROOT/ir/interference_graph.c2	/^    return last_idx;$/;"	v
return	$C2_ROOT/ir/live_map.c2	/^    return last_idx;$/;"	v
return	$C2_ROOT/ir/phi_list.c2	/^    return start;$/;"	v
return	$C2_ROOT/ir/print.c2	/^    return temp_nr;$/;"	v
return	$C2_ROOT/ir/ref.c2	/^    return tmp;$/;"	v
return	$C2_ROOT/ir/register_alloc.c2	/^        if (v.temps[i] == idx) return;$/;"	v
return	$C2_ROOT/ir/slot_collector.c2	/^    return nil;$/;"	v
return	$C2_ROOT/ir/slot_writes_map.c2	/^    return m;$/;"	v
return	$C2_ROOT/ir/ssa.c2	/^    return ref;$/;"	v
return	$C2_ROOT/ir/switch.c2	/^    return false;$/;"	v
return	$C2_ROOT/ir/symbol_list.c2	/^    return idx;$/;"	v
return	$C2_ROOT/ir/types.c2	/^    return 0;$/;"	v
return	$C2_ROOT/ir/usage_counter.c2	/^    return idx;$/;"	v
return	$C2_ROOT/ir/work_queue.c2	/^    return w;$/;"	v
return	$C2_ROOT/ir_examples/arith.c2	/^    return 0;$/;"	v
return	$C2_ROOT/ir_examples/array.c2	/^    return 9;$/;"	v
return	$C2_ROOT/ir_examples/bitfield_init.c2	/^    return iter;$/;"	v
return	$C2_ROOT/ir_examples/builtins.c2	/^    return 0;$/;"	v
return	$C2_ROOT/ir_examples/calls.c2	/^    return res;$/;"	v
return	$C2_ROOT/ir_examples/cond_decl.c2	/^    return 0;$/;"	v
return	$C2_ROOT/ir_examples/for.c2	/^    return 0;$/;"	v
return	$C2_ROOT/ir_examples/functions.c2	/^    return nil;$/;"	v
return	$C2_ROOT/ir_examples/global_arrays.c2	/^    return 0;$/;"	v
return	$C2_ROOT/ir_examples/global_vars.c2	/^    return 0;$/;"	v
return	$C2_ROOT/ir_examples/goto.c2	/^    return;$/;"	v
return	$C2_ROOT/ir_examples/hello.c2	/^    return 0;$/;"	v
return	$C2_ROOT/ir_examples/if_stmt.c2	/^    return a;$/;"	v
return	$C2_ROOT/ir_examples/label.c2	/^    return a;$/;"	v
return	$C2_ROOT/ir_examples/logic.c2	/^    return 0;$/;"	v
return	$C2_ROOT/ir_examples/struct_func.c2	/^    return a;$/;"	v
return	$C2_ROOT/ir_examples/struct_init.c2	/^    return 0;$/;"	v
return	$C2_ROOT/ir_examples/struct_init_anonymous.c2	/^    return 0;$/;"	v
return	$C2_ROOT/ir_examples/types.c2	/^    return 0;$/;"	v
return	$C2_ROOT/ir_examples/while.c2	/^    return 0;$/;"	v
return	$C2_ROOT/libs/io_uring/io_uring.c2i	/^	return poll_mask;$/;"	v
return	$C2_ROOT/libs/libc/sys_socket.c2i	/^    return new_sockfd;$/;"	v
return	$C2_ROOT/libs/libc/unistd.c2i	/^    return 0;$/;"	v
return	$C2_ROOT/libs/sokol/sokol_math.c2i	/^    return value;$/;"	v
return	$C2_ROOT/parser/ast_builder.c2	/^    return true;$/;"	v
return	$C2_ROOT/parser/c2_parser.c2	/^    return qualifiers;$/;"	v
return	$C2_ROOT/parser/c2_parser_expr.c2	/^    return res;$/;"	v
return	$C2_ROOT/parser/c2_parser_stmt.c2	/^    return s;$/;"	v
return	$C2_ROOT/parser/c2_parser_switch.c2	/^    return s;$/;"	v
return	$C2_ROOT/parser/c2_tokenizer.c2	/^    return;$/;"	v
return	$C2_ROOT/plugins/deps_generator.c2	/^    return subdir;$/;"	v
return	$C2_ROOT/plugins/deps_generator_plugin.c2	/^    return p;$/;"	v
return	$C2_ROOT/plugins/deps_generator_utils.c2	/^    return true;$/;"	v
return	$C2_ROOT/plugins/git_version_plugin.c2	/^    return p;$/;"	v
return	$C2_ROOT/plugins/refs_generator.c2	/^    return loc;$/;"	v
return	$C2_ROOT/plugins/refs_generator_plugin.c2	/^    return p;$/;"	v
return	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^    return true;$/;"	v
return	$C2_ROOT/plugins/unit_test2.c2	/^  return now64;$/;"	v
return	$C2_ROOT/plugins/unit_test_plugin.c2	/^    return true;$/;"	v
returnStmtBits	$C2_ROOT/ast/stmt.c2	/^        ReturnStmtBits returnStmtBits;$/;"	v
returnStmtBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_ReturnStmtBits returnStmtBits;$/;"	v
revents	$C2_ROOT/libs/libc/libc_poll.c2i	/^    i16 revents;$/;"	v
revlist	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_RevList revlist;$/;"	v
revlist	$C2_ROOT/ir/context.c2	/^    RevList revlist;$/;"	v
revocation_date	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    X509_time revocation_date;$/;"	v
rewind	$C2_ROOT/libs/libc/stdio.c2i	/^fn void rewind(FILE* __stream);$/;"	f
rhs	$C2_ROOT/analyser/conversion_checker.c2	/^    c.rhs = rhs;$/;"	v
rhs	$C2_ROOT/analyser/module_analyser_binop.c2	/^        return rhs;$/;"	v
rhs	$C2_ROOT/analyser/module_analyser_expr.c2	/^        return rhs;$/;"	v
rhs	$C2_ROOT/ast/binary_operator.c2	/^    e.rhs = rhs;$/;"	v
rhs	$C2_ROOT/ast/bitoffset_expr.c2	/^    e.rhs = rhs;$/;"	v
rhs	$C2_ROOT/ast/conditional_operator.c2	/^    return e.rhs;$/;"	v
rhs	$C2_ROOT/ast/range_expr.c2	/^    e.rhs = rhs;$/;"	v
rhs	$C2_ROOT/ast/static_assert.c2	/^    return d.rhs;$/;"	v
rhs	$C2_ROOT/bootstrap/bootstrap.c	/^   return e->rhs;$/;"	v
rhs	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^    ir.Ref rhs;$/;"	v
rhs	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^        ir.Ref rhs;$/;"	v
rhsLoc	$C2_ROOT/bootstrap/bootstrap.c	/^   if ((lhsLoc == 0)) c->loc = rhsLoc;$/;"	v
rhs_index	$C2_ROOT/bootstrap/bootstrap.c	/^         uint32_t rhs_index;$/;"	v
right	$C2_ROOT/ast/ast_evaluator.c2	/^    Value right;$/;"	v
right	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Ref right;$/;"	v
right	$C2_ROOT/common/quicksort.c2	/^                pivot = right;$/;"	v
right	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^    ir.Ref right;$/;"	v
right	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        ir.Ref right;$/;"	v
right	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec3 Vec3.right() {$/;"	f
right_shift	$C2_ROOT/ast/value.c2	/^fn Value Value.right_shift(const Value* v1, const Value* v2) {$/;"	f
rindex	$C2_ROOT/libs/libc/strings.c2i	/^fn c_char* rindex(const c_char* s, c_int c);$/;"	f
ring_entries	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32 ring_entries;$/;"	v
ring_fd	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    c_int ring_fd;$/;"	v
ring_mask	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32 ring_mask;$/;"	v
ring_ptr	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    void* ring_ptr;$/;"	v
ring_radius	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    f32 ring_radius;$/;"	v
ring_sz	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    usize ring_sz;$/;"	v
rings	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    u16 rings;$/;"	v
rint	$C2_ROOT/libs/math/math.c2i	/^fn c_double rint(c_double);$/;"	f
rintf	$C2_ROOT/libs/math/math.c2i	/^fn c_float rintf(c_float);$/;"	f
rm_eo	$C2_ROOT/libs/libc/regex.c2i	/^    RegOff rm_eo;$/;"	v
rm_so	$C2_ROOT/libs/libc/regex.c2i	/^    RegOff rm_so;$/;"	v
rmdir	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int rmdir(const char* path);$/;"	f
root	$C2_ROOT/bootstrap/bootstrap.c	/^   top->node = root;$/;"	v
root	$C2_ROOT/common/yaml/yaml_parser.c2	/^    top.node = root;$/;"	v
root	$C2_ROOT/plugins/deps_generator.c2	/^    Dir root;$/;"	v
root_idx	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    u32 root_idx;$/;"	v
rotate	$C2_ROOT/libs/lua/lua.c2i	/^fn void rotate(State* L, c_int idx, c_int n) @(cname="lua_rotate");$/;"	f
rotate	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void rotate(f32 angle_rad, f32 x, f32 y, f32 z) @(cname="sgl_rotate");$/;"	f
rotate	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec2 Vec2.rotate(const Vec2* v, f32 angle) {$/;"	f
rotateAxis	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Mat4 Mat4.rotateAxis(const Vec3* axis, f32 angle) {$/;"	f
rotateX	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Mat4 Mat4.rotateX(f32 angle) {$/;"	f
rotateY	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Mat4 Mat4.rotateY(f32 angle) {$/;"	f
rotateZ	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Mat4 Mat4.rotateZ(f32 angle) {$/;"	f
round	$C2_ROOT/libs/math/math.c2i	/^fn c_double round(c_double);$/;"	f
round4	$C2_ROOT/generator/c2refs.c2	/^fn u32 round4(u32 x) {$/;"	f
roundToCommonRefreshRate	$C2_ROOT/libs/sokol/sokol_time.c2i	/^fn u64 roundToCommonRefreshRate(u64 frame_ticks) @(cname="stm_round_to_common_refresh_rate");$/;"	f
roundf	$C2_ROOT/libs/math/math.c2i	/^fn c_float roundf(c_float);$/;"	f
rparen	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void Buf.rparen(Buf* buf) { buf.add1(')'); }$/;"	f
rpmatch	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int rpmatch(const c_char* __response);$/;"	f
rps	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* rps;$/;"	v
rs	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* rs;$/;"	v
rt	$C2_ROOT/ast/function_decl.c2	/^    return d.rt;$/;"	v
rt	$C2_ROOT/bootstrap/bootstrap.c	/^   return d->rt;$/;"	v
rtv	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* rtv;$/;"	v
rtype	$C2_ROOT/analyser/module_analyser_binop.c2	/^    QualType rtype;$/;"	v
rtype	$C2_ROOT/ast/function_decl.c2	/^    return &d.rtype;$/;"	v
rtype	$C2_ROOT/bootstrap/bootstrap.c	/^   return &d->rtype;$/;"	v
rtype	$C2_ROOT/parser/ast_builder.c2	/^                                          rtype,$/;"	v
run	$C2_ROOT/ir/work_queue.c2	/^fn void WorkQueue.run(WorkQueue* q, Context* c, u32 num_threads) {$/;"	f
run	$C2_ROOT/ir_examples/goto.c2	/^fn void run(i32 a) {$/;"	f
run	$C2_ROOT/ir_examples/struct_func.c2	/^fn void B.run(B* b, i32 v) {$/;"	f
run	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void run(Desc* desc) @(cname="sapp_run");$/;"	f
run2	$C2_ROOT/common/process_utils.c2	/^public fn i32 run2(const char* path, const char* cmd, const char* args, char* output, usize outp/;"	f
run_args	$C2_ROOT/common/process_utils.c2	/^public fn i32 run_args(const char* path, const char* cmd, const char* args, const char* logfile)$/;"	f
run_group	$C2_ROOT/plugins/unit_test2.c2	/^fn void run_group(const Group* g, Stats* stats) {$/;"	f
run_tests	$C2_ROOT/plugins/unit_test2.c2	/^public fn i32 run_tests() {$/;"	f
rval	$C2_ROOT/analyser/module_analyser_expr.c2	/^    Value rval;$/;"	v
rval	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_Value rval;$/;"	v
rwFromFile	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn RWops* rwFromFile(const char* file, const char* mode) @(cname="SDL_RWFromFile");$/;"	f
rwFromFile	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^fn sdl.RWops* rwFromFile(const char* file, const char* mode) @(cname="SDL_RWFromFile");$/;"	f
s2	$C2_ROOT/ast/assert_stmt.c2	/^    return (Stmt*)s2;$/;"	v
s2	$C2_ROOT/ast/compound_stmt.c2	/^    return s2;$/;"	v
s2	$C2_ROOT/ast/decl_stmt.c2	/^    return (Stmt*)s2;$/;"	v
s2	$C2_ROOT/ast/switch_stmt.c2	/^    return (Stmt*)s2;$/;"	v
s2	$C2_ROOT/bootstrap/bootstrap.c	/^   return s2;$/;"	v
s_addr	$C2_ROOT/libs/libc/sys_socket.c2i	/^    InAddr s_addr;$/;"	v
s_ptr	$C2_ROOT/analyser/module_analyser_stmt.c2	/^    Stmt* s = *s_ptr;$/;"	v
s_ptr	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_Stmt* s = *s_ptr;$/;"	v
sa_data	$C2_ROOT/libs/libc/sys_socket.c2i	/^    char[14] sa_data;$/;"	v
sa_family	$C2_ROOT/libs/libc/sys_socket.c2i	/^    SaFamily sa_family;$/;"	v
sa_flags	$C2_ROOT/libs/libc/csignal.c2i	/^    c_int sa_flags;$/;"	v
sa_mask	$C2_ROOT/libs/libc/csignal.c2i	/^    Sigset sa_mask;$/;"	v
sa_restorer	$C2_ROOT/libs/libc/csignal.c2i	/^    SigActionRestorer sa_restorer;$/;"	v
sa_sigaction	$C2_ROOT/libs/libc/csignal.c2i	/^        SigActionAction sa_sigaction;$/;"	v
same_line	$C2_ROOT/bootstrap/bootstrap.c	/^   result->same_line = t->same_line;$/;"	v
same_line	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    result.same_line = t.same_line;$/;"	v
same_string	$C2_ROOT/ast_utils/string_pool.c2	/^fn bool same_string(const char* left, const char* right, usize rlen) {$/;"	f
sample	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool sample;$/;"	v
sampleCount	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn i32 sampleCount() @(cname="sapp_sample_count");$/;"	f
sampleRate	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^fn i32 sampleRate() @(cname="saudio_sample_rate");$/;"	f
sample_count	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    i32 sample_count;$/;"	v
sample_count	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    i32 sample_count;$/;"	v
sample_count	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 sample_count;$/;"	v
sample_count	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    i32 sample_count;$/;"	v
sample_rate	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    i32 sample_rate;$/;"	v
sample_type	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ImageSampleType sample_type;$/;"	v
sampler_pool_size	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 sampler_pool_size;$/;"	v
sampler_slot	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u8 sampler_slot;$/;"	v
sampler_type	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SamplerType sampler_type;$/;"	v
samplers	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ShaderSampler[12] samplers;$/;"	v
sarray	$C2_ROOT/ir_examples/global_arrays.c2	/^i16[20] sarray;$/;"	v
saved	$C2_ROOT/analyser/module_analyser.c2	/^    ma.has_error |= saved;$/;"	v
saved	$C2_ROOT/bootstrap/bootstrap.c	/^   ma->has_error |= saved;$/;"	v
saved	$C2_ROOT/generator/c/c_generator.c2	/^    gen.out = saved;$/;"	v
savedPublic	$C2_ROOT/analyser/module_analyser_builtin.c2	/^    ma.usedPublic = savedPublic;$/;"	v
savedPublic	$C2_ROOT/bootstrap/bootstrap.c	/^   ma->usedPublic = savedPublic;$/;"	v
saved_indent	$C2_ROOT/plugins/deps_generator.c2	/^        gen.indent = saved_indent;$/;"	v
sbuf	$C2_ROOT/bootstrap/bootstrap.c	/^   FILE* sbuf;$/;"	v
sbuf	$C2_ROOT/libs/libc/stdio.c2i	/^    FILE* sbuf;$/;"	v
scalbln	$C2_ROOT/libs/math/math.c2i	/^fn c_double scalbln(c_double, c_long);$/;"	f
scalblnf	$C2_ROOT/libs/math/math.c2i	/^fn c_float scalblnf(c_float, c_long);$/;"	f
scalbn	$C2_ROOT/libs/math/math.c2i	/^fn c_double scalbn(c_double, c_int);$/;"	f
scalbnf	$C2_ROOT/libs/math/math.c2i	/^fn c_float scalbnf(c_float, c_int);$/;"	f
scale	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void scale(f32 x, f32 y, f32 z) @(cname="sgl_scale");$/;"	f
scale	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Mat4 Mat4.scale(f32 x, f32 y, f32 z) {$/;"	f
scaleUniform	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Mat4 Mat4.scaleUniform(f32 s) {$/;"	f
scaleVec3	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Mat4 Mat4.scaleVec3(const Vec3* v) {$/;"	f
scandir	$C2_ROOT/libs/libc/libc_dirent.c2i	/^fn c_int scandir(const c_char* dirp, Dirent*** namelist,$/;"	f
scanf	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int scanf(const c_char* __format, ...);$/;"	f
scissorRect	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void scissorRect(i32 x, i32 y, i32 w, i32 h, bool origin_top_left) @(cname="sgl_scissor_rect"/;"	f
scissorRectf	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void scissorRectf(f32 x, f32 y, f32 w, f32 h, bool origin_top_left) @(cname="sgl_scissor_rect/;"	f
scope	$C2_ROOT/analyser/module_analyser.c2	/^import scope;$/;"	v
scope	$C2_ROOT/analyser/module_analyser_call.c2	/^import scope;$/;"	v
scope	$C2_ROOT/analyser/module_analyser_function.c2	/^import scope;$/;"	v
scope	$C2_ROOT/analyser/module_analyser_stmt.c2	/^import scope;$/;"	v
scope	$C2_ROOT/analyser/module_analyser_switch.c2	/^import scope;$/;"	v
scope	$C2_ROOT/analyser/scope.c2	/^module scope;$/;"	v
scope_Level	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct scope_Level_ scope_Level;$/;"	v
scope_Scope	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct scope_Scope_ scope_Scope;$/;"	v
scope_Unreachable	$C2_ROOT/bootstrap/bootstrap.c	/^   top->flags |= scope_Unreachable;$/;"	v
scopes	$C2_ROOT/generator/ir/ir_generator.c2	/^    JumpScope[constants.MaxScopes] scopes;$/;"	v
scroll_x	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    f32 scroll_x;$/;"	v
scroll_y	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    f32 scroll_y;$/;"	v
sdl	$C2_ROOT/libs/sdl2/sdl.c2i	/^module sdl;$/;"	v
sdl	$C2_ROOT/libs/sdl2_image/sdl_image.c2i	/^import sdl;$/;"	v
sdl	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^import sdl;$/;"	v
sdl	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^import sdl;$/;"	v
sdl_image	$C2_ROOT/libs/sdl2_image/sdl_image.c2i	/^module sdl_image;$/;"	v
sdl_mixer	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^module sdl_mixer;$/;"	v
sdl_ttf	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^module sdl_ttf;$/;"	v
sec	$C2_ROOT/libs/sokol/sokol_time.c2i	/^fn f64 sec(u64 ticks) @(cname="stm_sec");$/;"	f
section	$C2_ROOT/generator/c2refs.c2	/^    return section;$/;"	v
section	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    return section;$/;"	v
section_free	$C2_ROOT/generator/c2refs.c2	/^fn void section_free(void* t) {$/;"	f
section_load	$C2_ROOT/generator/c2refs.c2	/^fn void* section_load(MapFile* f, u32 minSize) {$/;"	f
section_load	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^fn void* section_load(InputStream* input, u32 minSize) {$/;"	f
section_size	$C2_ROOT/generator/c2refs.c2	/^fn u32 section_size(const void* section) {$/;"	f
section_size	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^fn u32 section_size(const void* section) {$/;"	f
section_write	$C2_ROOT/generator/c2refs.c2	/^fn  bool section_write(i32 fd, void* section) {$/;"	f
section_write	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^fn  bool section_write(i32 fd, void* section) {$/;"	f
seed48	$C2_ROOT/libs/libc/stdlib.c2i	/^fn u16* seed48(u16* __seed16v);$/;"	f
seed48_r	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int seed48_r(u16* __seed16v, Drand48_data* __buffer);$/;"	f
seen_normal_arg	$C2_ROOT/analyser/module_analyser_function.c2	/^                seen_normal_arg = true;$/;"	v
seen_normal_arg	$C2_ROOT/bootstrap/bootstrap.c	/^            seen_normal_arg = true;$/;"	v
self	$C2_ROOT/bootstrap/bootstrap.c	/^      argv[argc++] = self;$/;"	v
self	$C2_ROOT/common/process_utils.c2	/^        char[file_utils.Max_path] self;$/;"	v
self	$C2_ROOT/libs/pthread/pthread.c2i	/^fn Pthread self() @(cname="pthread_self");$/;"	f
semi_colon	$C2_ROOT/parser/c2_parser_type.c2	/^            goto semi_colon;$/;"	v
send	$C2_ROOT/libs/libc/sys_socket.c2i	/^fn isize send(c_int fd, const void* buf, usize n, c_int flags);$/;"	f
sendfile	$C2_ROOT/libs/libc/sys_sendfile.c2i	/^fn c_ssize sendfile(i32 __out_fd, i32 __in_fd, Offset* __offset, c_size __count);$/;"	f
sendto	$C2_ROOT/libs/libc/sys_socket.c2i	/^fn isize sendto(c_int fd, const void* buf, usize n, c_int flags, const Sockaddr* addr, u32 addr_/;"	f
separate_buffer_types	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool separate_buffer_types;$/;"	v
serial	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    X509_buf serial;$/;"	v
set	$C2_ROOT/ast/qualtype.c2	/^fn void QualType.set(QualType* qt, Type* t) {$/;"	f
set	$C2_ROOT/common/bit_array.c2	/^public fn void BitArray.set(BitArray* a, u32 idx) {$/;"	f
set	$C2_ROOT/ir/case_list.c2	/^public fn void CaseList.set(CaseList* l, CaseId id, u32 value, BlockId block) {$/;"	f
set	$C2_ROOT/ir/lookup_table.c2	/^public fn void Table.set(Table* t, u32 idx, u32 value) {$/;"	f
set	$C2_ROOT/ir/slot_values.c2	/^public fn void SlotValues.set(SlotValues* v, u16 slot, Ref ref) {$/;"	f
set	$C2_ROOT/ir_examples/struct_func.c2	/^fn void A.set(A* a, i32 v) {$/;"	f
setAddrUsed	$C2_ROOT/ast/var_decl.c2	/^public fn void VarDecl.setAddrUsed(VarDecl* d) {$/;"	f
setAddress	$C2_ROOT/ast/function_decl.c2	/^fn void FunctionDecl.setAddress(FunctionDecl* d, void* address) {$/;"	f
setAlphaMod	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Texture.setAlphaMod(Texture* texture, u8 alpha) @(cname="SDL_SetTextureAlphaMod");$/;"	f
setAttrAlignment	$C2_ROOT/ast/struct_type_decl.c2	/^public fn void StructTypeDecl.setAttrAlignment(StructTypeDecl* d, u32 alignment) {$/;"	f
setAttrAutoFile	$C2_ROOT/ast/var_decl.c2	/^public fn void VarDecl.setAttrAutoFile(VarDecl* d) {$/;"	f
setAttrAutoFunc	$C2_ROOT/ast/var_decl.c2	/^public fn void VarDecl.setAttrAutoFunc(VarDecl* d) {$/;"	f
setAttrAutoLine	$C2_ROOT/ast/var_decl.c2	/^public fn void VarDecl.setAttrAutoLine(VarDecl* d) {$/;"	f
setAttrConstructor	$C2_ROOT/ast/function_decl.c2	/^public fn void FunctionDecl.setAttrConstructor(FunctionDecl* d) {$/;"	f
setAttrDestructor	$C2_ROOT/ast/function_decl.c2	/^public fn void FunctionDecl.setAttrDestructor(FunctionDecl* d) {$/;"	f
setAttrExport	$C2_ROOT/ast/decl.c2	/^public fn void Decl.setAttrExport(Decl* d) { d.declBits.attr_export = 1; }$/;"	f
setAttrInline	$C2_ROOT/ast/function_decl.c2	/^public fn void FunctionDecl.setAttrInline(FunctionDecl* d) {$/;"	f
setAttrNoReturn	$C2_ROOT/ast/function_decl.c2	/^public fn void FunctionDecl.setAttrNoReturn(FunctionDecl* d) {$/;"	f
setAttrNoTypeDef	$C2_ROOT/ast/struct_type_decl.c2	/^public fn void StructTypeDecl.setAttrNoTypeDef(StructTypeDecl* d) {$/;"	f
setAttrPrintf	$C2_ROOT/ast/function_decl.c2	/^public fn void FunctionDecl.setAttrPrintf(FunctionDecl* d, u8 arg) {$/;"	f
setAttrPure	$C2_ROOT/ast/function_decl.c2	/^public fn void FunctionDecl.setAttrPure(FunctionDecl* d) {$/;"	f
setAttrUnused	$C2_ROOT/ast/decl.c2	/^public fn void Decl.setAttrUnused(Decl* d) { d.declBits.attr_unused = 1; }$/;"	f
setAttrUnusedParams	$C2_ROOT/ast/function_decl.c2	/^public fn void FunctionDecl.setAttrUnusedParams(FunctionDecl* d) {$/;"	f
setAttrWeak	$C2_ROOT/ast/function_decl.c2	/^public fn void FunctionDecl.setAttrWeak(FunctionDecl* d) {$/;"	f
setAttrWeak	$C2_ROOT/ast/var_decl.c2	/^public fn void VarDecl.setAttrWeak(VarDecl* d) {$/;"	f
setBackEnd	$C2_ROOT/common/build_target.c2	/^public fn void Target.setBackEnd(Target* t, BackEndKind kind) {$/;"	f
setBitfield	$C2_ROOT/ast/member_expr.c2	/^public fn void MemberExpr.setBitfield(MemberExpr* e) {$/;"	f
setBitfieldWidth	$C2_ROOT/ast/var_decl.c2	/^public fn void VarDecl.setBitfieldWidth(VarDecl* d, u8 width) {$/;"	f
setBlendMode	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Texture.setBlendMode(Texture* texture, BlendMode mode) @(cname="SDL_SetTextureBlendMode/;"	f
setBody	$C2_ROOT/ast/function_decl.c2	/^public fn void FunctionDecl.setBody(FunctionDecl* d, CompoundStmt* body) {$/;"	f
setBuiltin	$C2_ROOT/ast/type_ref.c2	/^public fn void TypeRefHolder.setBuiltin(TypeRefHolder* h, BuiltinKind kind, SrcLoc loc) {$/;"	f
setCallKind	$C2_ROOT/ast/function_decl.c2	/^public fn void FunctionDecl.setCallKind(FunctionDecl* d, CallKind kind) {$/;"	f
setCallsStaticTypeFunc	$C2_ROOT/ast/call_expr.c2	/^public fn void CallExpr.setCallsStaticTypeFunc(CallExpr* e) {$/;"	f
setCallsTypeFunc	$C2_ROOT/ast/call_expr.c2	/^public fn void CallExpr.setCallsTypeFunc(CallExpr* e) {$/;"	f
setCanonicalType	$C2_ROOT/ast/qualtype.c2	/^public fn void QualType.setCanonicalType(QualType* qt, QualType canon) {$/;"	f
setCanonicalType	$C2_ROOT/ast/type.c2	/^public fn void Type.setCanonicalType(Type* t, QualType canon) { t.canonicalType = canon; }$/;"	f
setCase	$C2_ROOT/ir/context.c2	/^public fn void Context.setCase(Context* c, CaseId case_id, u32 value, BlockId blk_id) {$/;"	f
setCheckInProgress	$C2_ROOT/ast/decl.c2	/^public fn void Decl.setCheckInProgress(Decl* d) { d.declBits.check_state = DeclCheckState.InProg/;"	f
setChecked	$C2_ROOT/ast/decl.c2	/^public fn void Decl.setChecked(Decl* d) { d.declBits.check_state = DeclCheckState.Checked; }$/;"	f
setClipRect	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Renderer.setClipRect(Renderer* renderer, const Rect* rect) @(cname="SDL_RenderSetClipRe/;"	f
setClipboardString	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void setClipboardString(const char* str) @(cname="sapp_set_clipboard_string");$/;"	f
setClipboardText	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int setClipboardText(const char* text) @(cname="SDL_SetClipboardText");$/;"	f
setColorKey	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Surface.setColorKey(Surface* surface, c_int flag, u32 key) @(cname="SDL_SetColorKey");$/;"	f
setColorKey	$C2_ROOT/libs/sdl2_image/sdl_image.c2i	/^fn c_int setColorKey(sdl.Surface* surface, c_int flag, u32 key) @(cname="SDL_SetColorKey");$/;"	f
setColorMod	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Texture.setColorMod(Texture* texture, u8 r, u8 g,u8 b) @(cname="SDL_SetTextureColorMod"/;"	f
setColors	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void Buf.setColors(Buf* buf, bool colors) @(unused) {$/;"	f
setColors	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void Palette.setColors(Palette* palette, const Color* colors,$/;"	f
setComponent	$C2_ROOT/parser/ast_builder.c2	/^public fn void Builder.setComponent(Builder* b, component.Component* comp) {$/;"	f
setConst	$C2_ROOT/ast/qualtype.c2	/^public fn void QualType.setConst(QualType* qt) {$/;"	f
setConst	$C2_ROOT/ast/type_ref.c2	/^public fn void TypeRefHolder.setConst(TypeRefHolder* h) @(unused) {$/;"	f
setConstBase	$C2_ROOT/ast/member_expr.c2	/^public fn void MemberExpr.setConstBase(MemberExpr* e, bool b) {$/;"	f
setContext	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void setContext(Context ctx) @(cname="sdtx_set_context");$/;"	f
setContext	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void setContext(Context ctx) @(cname="sgl_set_context");$/;"	f
setConversion	$C2_ROOT/ast/member_expr.c2	/^public fn void MemberExpr.setConversion(MemberExpr* e, MemberConversion c) {$/;"	f
setCtc	$C2_ROOT/ast/expr.c2	/^public fn void Expr.setCtc(Expr* e) { e.base.exprBits.is_ctc = true; }$/;"	f
setCtv	$C2_ROOT/ast/expr.c2	/^public fn void Expr.setCtv(Expr* e) { e.base.exprBits.is_ctv = true; }$/;"	f
setDebug	$C2_ROOT/common/console.c2	/^public fn void setDebug(bool enable) {$/;"	f
setDecl	$C2_ROOT/ast/identifier_expr.c2	/^public fn void IdentifierExpr.setDecl(IdentifierExpr* e, Decl* decl) {$/;"	f
setDecl	$C2_ROOT/ast/member_expr.c2	/^public fn void MemberExpr.setDecl(MemberExpr* e, Decl* d, u32 ref_idx) {$/;"	f
setDest	$C2_ROOT/ast/import_decl.c2	/^public fn void ImportDecl.setDest(ImportDecl* d, Module* mod) { d.dest = mod; }$/;"	f
setDest	$C2_ROOT/ast/type_ref.c2	/^public fn void TypeRef.setDest(TypeRef* r, u32 dest) {$/;"	f
setDest	$C2_ROOT/ir/block.c2	/^public fn void Block.setDest(Block* b, BlockId dest1, BlockId dest2) {$/;"	f
setDestType	$C2_ROOT/ast/explicit_cast_expr.c2	/^public fn void ExplicitCastExpr.setDestType(ExplicitCastExpr* e, QualType qt) { e.dest_type = qt/;"	f
setDrawColor	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Renderer.setDrawColor(Renderer* renderer, u8 r, u8 g, u8 b, u8 a) @(cname="SDL_SetRende/;"	f
setEnumFunctions	$C2_ROOT/ast/enum_type_decl.c2	/^public fn void EnumTypeDecl.setEnumFunctions(EnumTypeDecl* d, ast_context.Context* c, FunctionDe/;"	f
setExported	$C2_ROOT/ast/ast.c2	/^fn void AST.setExported(AST* a) {$/;"	f
setExported	$C2_ROOT/ast/module.c2	/^public fn void Module.setExported(Module* m) {$/;"	f
setExportedIfPublic	$C2_ROOT/ast/decl.c2	/^fn void Decl.setExportedIfPublic(Decl* d) {$/;"	f
setExprFlags	$C2_ROOT/analyser/module_analyser_expr.c2	/^fn IdentifierKind Analyser.setExprFlags(Analyser* ma, Expr** e_ptr, Decl* d) {$/;"	f
setExternal	$C2_ROOT/ast/decl.c2	/^public fn void Decl.setExternal(Decl* d) { d.declBits.is_external = 1; }$/;"	f
setFastBuild	$C2_ROOT/common/build_target.c2	/^public fn void Target.setFastBuild(Target* t) {$/;"	f
setFloat	$C2_ROOT/ast/value.c2	/^fn void Value.setFloat(Value* v, f64 fvalue) {$/;"	f
setForeign	$C2_ROOT/ast/module.c2	/^public fn void Module.setForeign(Module* m, bool is_foreign) { m.is_foreign = is_foreign; }$/;"	f
setForeign	$C2_ROOT/common/component.c2	/^public fn void Component.setForeign(Component* c, bool is_foreign) {$/;"	f
setFunctionReturnType	$C2_ROOT/ir/context.c2	/^public fn void Context.setFunctionReturnType(Context* c, Type t) {$/;"	f
setGenIdx	$C2_ROOT/ast/decl.c2	/^public fn void Decl.setGenIdx(Decl* d, u32 idx) {$/;"	f
setGenerated	$C2_ROOT/ast/decl.c2	/^public fn void Decl.setGenerated(Decl* d) { d.declBits.is_generated = 1; }$/;"	f
setGlobals	$C2_ROOT/ast/utils.c2	/^public fn void setGlobals(Globals* g) @(unused){$/;"	f
setHasAttr	$C2_ROOT/ast/decl.c2	/^public fn void Decl.setHasAttr(Decl* d) { d.declBits.has_attr = 1; }$/;"	f
setHasAutoArgs	$C2_ROOT/ast/call_expr.c2	/^public fn void CallExpr.setHasAutoArgs(CallExpr* e) {$/;"	f
setHasDecls	$C2_ROOT/ast/switch_case.c2	/^public fn void SwitchCase.setHasDecls(SwitchCase* s) { s.bits.has_decls = 1; }$/;"	f
setHasDesignators	$C2_ROOT/ast/init_list_expr.c2	/^public fn void InitListExpr.setHasDesignators(InitListExpr* e) {$/;"	f
setHasFallthrough	$C2_ROOT/ast/switch_case.c2	/^public fn void SwitchCase.setHasFallthrough(SwitchCase* s) { s.bits.has_fallthrough = 1; }$/;"	f
setHinting	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn void Font.setHinting(Font* font, c_int hinting) @(cname="TTF_SetFontHinting");$/;"	f
setIcon	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void setIcon(IconDesc* icon_desc) @(cname="sapp_set_icon");$/;"	f
setIncrArray	$C2_ROOT/ast/type_ref.c2	/^public fn void TypeRefHolder.setIncrArray(TypeRefHolder* h) {$/;"	f
setIncrConstants	$C2_ROOT/ast/enum_type_decl.c2	/^public fn void EnumTypeDecl.setIncrConstants(EnumTypeDecl* d, ast_context.Context* c, Identifier/;"	f
setIncrMembers	$C2_ROOT/ast/enum_type_decl.c2	/^public fn void EnumTypeDecl.setIncrMembers(EnumTypeDecl* d, Decl** constants, u32 num_constants)/;"	f
setIndent	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void Buf.setIndent(Buf* buf, u32 indent_step) @(unused) {$/;"	f
setIndex	$C2_ROOT/ast/enum_constant_decl.c2	/^public fn void EnumConstantDecl.setIndex(EnumConstantDecl* d, u32 index) {$/;"	f
setInit	$C2_ROOT/ast/var_decl.c2	/^public fn  void VarDecl.setInit(VarDecl* d, Expr* initValue) {$/;"	f
setInitCall	$C2_ROOT/ast/var_decl.c2	/^public fn void VarDecl.setInitCall(VarDecl* d, bool has_init_call) {$/;"	f
setInstanceName	$C2_ROOT/ast/function_decl.c2	/^public fn void FunctionDecl.setInstanceName(FunctionDecl* d, u32 name_idx) {$/;"	f
setInstructions	$C2_ROOT/ir/block.c2	/^public fn void Block.setInstructions(Block* b, u32 start, u32 count) {$/;"	f
setInternal	$C2_ROOT/ast/module.c2	/^public fn void Module.setInternal(Module* m) @(unused) { m.is_internal = true; }$/;"	f
setIsArray	$C2_ROOT/ast/init_list_expr.c2	/^public fn void InitListExpr.setIsArray(InitListExpr* e) {$/;"	f
setIsStaticTypeFunc	$C2_ROOT/ast/member_expr.c2	/^public fn void MemberExpr.setIsStaticTypeFunc(MemberExpr* e) {$/;"	f
setIsTypeFunc	$C2_ROOT/ast/member_expr.c2	/^public fn void MemberExpr.setIsTypeFunc(MemberExpr* e) {$/;"	f
setKind	$C2_ROOT/ast/identifier_expr.c2	/^public fn void IdentifierExpr.setKind(IdentifierExpr* e, IdentifierKind kind) {$/;"	f
setKind	$C2_ROOT/ast/member_expr.c2	/^public fn void MemberExpr.setKind(MemberExpr* e, IdentifierKind kind) {$/;"	f
setKind	$C2_ROOT/common/component.c2	/^public fn void Component.setKind(Component* c, bool is_static, bool is_dynamic) {$/;"	f
setLValue	$C2_ROOT/ast/expr.c2	/^public fn void Expr.setLValue(Expr* e) {$/;"	f
setLinkName	$C2_ROOT/common/component.c2	/^public fn void Component.setLinkName(Component* c, const char* name) {$/;"	f
setLoaded	$C2_ROOT/ast/module.c2	/^public fn void Module.setLoaded(Module* m) { m.is_loaded = true; }$/;"	f
setLocal	$C2_ROOT/ast/var_decl.c2	/^public fn void VarDecl.setLocal(VarDecl* d, bool has_local) {$/;"	f
setMemberInfo	$C2_ROOT/ast/field_designated_init_expr.c2	/^public fn void FieldDesignatedInitExpr.setMemberInfo(FieldDesignatedInitExpr* e, const FieldInit/;"	f
setMemberType	$C2_ROOT/ast/function_decl.c2	/^public fn void FunctionDecl.setMemberType(FunctionDecl* d) {$/;"	f
setMod	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.setMod(Analyser* ma, Module* mod) {$/;"	f
setMouseCursor	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void setMouseCursor(MouseCursor cursor) @(cname="sapp_set_mouse_cursor");$/;"	f
setNameIdx	$C2_ROOT/common/build_target.c2	/^public fn void Target.setNameIdx(Target* t, u32 name_idx) {$/;"	f
setNoBuild	$C2_ROOT/common/build_target.c2	/^public fn void Target.setNoBuild(Target* t) {$/;"	f
setNoLibC	$C2_ROOT/common/build_target.c2	/^public fn void Target.setNoLibC(Target* t) {$/;"	f
setNoreturn	$C2_ROOT/ast/call_expr.c2	/^public fn void CallExpr.setNoreturn(CallExpr* e) {$/;"	f
setNumAutoArgs	$C2_ROOT/ast/function_decl.c2	/^public fn void FunctionDecl.setNumAutoArgs(FunctionDecl* d, u32 num) {$/;"	f
setOffset	$C2_ROOT/ast/var_decl.c2	/^public fn void VarDecl.setOffset(VarDecl* d, u32 offset) {$/;"	f
setOpaque	$C2_ROOT/ast/struct_type_decl.c2	/^public fn void StructTypeDecl.setOpaque(StructTypeDecl* d) {$/;"	f
setOutline	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn void Font.setOutline(Font* font, c_int outline) @(cname="TTF_SetFontOutline");$/;"	f
setPacked	$C2_ROOT/ast/struct_type_decl.c2	/^public fn void StructTypeDecl.setPacked(StructTypeDecl* d) {$/;"	f
setPath	$C2_ROOT/common/component.c2	/^public fn void Component.setPath(Component* c, u32 dirname) {$/;"	f
setPrefix	$C2_ROOT/ast/type_ref.c2	/^public fn void TypeRefHolder.setPrefix(TypeRefHolder* h, SrcLoc loc, u32 name_idx) {$/;"	f
setPrintfFormat	$C2_ROOT/ast/call_expr.c2	/^public fn void CallExpr.setPrintfFormat(CallExpr* e, u32 format_idx, bool change_format) {$/;"	f
setPrintfFormat	$C2_ROOT/ast/var_decl.c2	/^public fn void VarDecl.setPrintfFormat(VarDecl* d) {$/;"	f
setPtr	$C2_ROOT/ast/ast.c2	/^public fn void AST.setPtr(AST* a, void* ptr) { a.ptr = ptr; }$/;"	f
setQualifiers	$C2_ROOT/ast/type_ref.c2	/^public fn void TypeRefHolder.setQualifiers(TypeRefHolder* h, u32 qualifiers) {$/;"	f
setRType	$C2_ROOT/ast/function_decl.c2	/^public fn void FunctionDecl.setRType(FunctionDecl* d, QualType rt) {$/;"	f
setRValue	$C2_ROOT/ast/expr.c2	/^public fn void Expr.setRValue(Expr* e) {$/;"	f
setReachable	$C2_ROOT/analyser/scope.c2	/^public fn void Scope.setReachable(Scope* s) {$/;"	f
setReg	$C2_ROOT/ir/instr.c2	/^public fn void Instr.setReg(Instr* i, u8 reg) {$/;"	f
setRegister	$C2_ROOT/ir/ref.c2	/^public fn void Ref.setRegister(Ref* r, u32 value) {$/;"	f
setReturnType	$C2_ROOT/ir/function_info.c2	/^public fn void FunctionInfo.setReturnType(FunctionInfo* fi, ir.Type t) {$/;"	f
setScaleMode	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Texture.setScaleMode(Texture* texture, ScaleMode mode) @(cname="SDL_SetTextureScaleMode/;"	f
setSigned	$C2_ROOT/ast/value.c2	/^fn void Value.setSigned(Value* v, i64 svalue) {$/;"	f
setSize	$C2_ROOT/ast/array_type.c2	/^public fn void ArrayType.setSize(ArrayType* t, u32 size) {$/;"	f
setSize	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn c_int Font.setSize(Font* font, c_int ptsize) @(cname="TTF_SetFontSize");$/;"	f
setString	$C2_ROOT/ast/switch_stmt.c2	/^public fn void SwitchStmt.setString(SwitchStmt* s) {$/;"	f
setStructFunctions	$C2_ROOT/ast/struct_type_decl.c2	/^public fn void StructTypeDecl.setStructFunctions(StructTypeDecl* d, ast_context.Context* c, Func/;"	f
setStructMemberType	$C2_ROOT/ast/type_ref.c2	/^public fn void TypeRefHolder.setStructMemberType(TypeRefHolder* h, Decl* fd) {$/;"	f
setStyle	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn void Font.setStyle(Font* font, c_int style) @(cname="TTF_GetFontStyle");$/;"	f
setTarget	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Renderer.setTarget(Renderer* renderer, Texture* texture) @(cname="SDL_SetRenderTarget")/;"	f
setTemplateIdx	$C2_ROOT/ast/call_expr.c2	/^public fn void CallExpr.setTemplateIdx(CallExpr* e, u32 idx) {$/;"	f
setTemplateInstanceIdx	$C2_ROOT/ast/function_decl.c2	/^public fn void FunctionDecl.setTemplateInstanceIdx(FunctionDecl* d, u16 idx) {$/;"	f
setTextInputRect	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void setTextInputRect(const Rect* rect) @(cname="SDL_SetTextInputRect");$/;"	f
setTiming	$C2_ROOT/common/console.c2	/^public fn void setTiming(bool enable) {$/;"	f
setType	$C2_ROOT/ast/decl.c2	/^public fn void Decl.setType(Decl* d, QualType qt) { d.qt = qt; }$/;"	f
setType	$C2_ROOT/ast/expr.c2	/^public fn void Expr.setType(Expr* e, QualType qt) { e.qt = qt; }$/;"	f
setTypePublicUsed	$C2_ROOT/ast/utils.c2	/^public fn void setTypePublicUsed(QualType qt) {$/;"	f
setUValue	$C2_ROOT/ast/builtin_expr.c2	/^public fn void BuiltinExpr.setUValue(BuiltinExpr* e, u64 val) {$/;"	f
setUnreachable	$C2_ROOT/analyser/scope.c2	/^public fn void Scope.setUnreachable(Scope* s) {$/;"	f
setUnsigned	$C2_ROOT/ast/value.c2	/^fn void Value.setUnsigned(Value* v, u64 uvalue) {$/;"	f
setUsed	$C2_ROOT/ast/decl.c2	/^public fn void Decl.setUsed(Decl* d) { d.declBits.is_used = true; }$/;"	f
setUsed	$C2_ROOT/ast/label_stmt.c2	/^public fn void LabelStmt.setUsed(LabelStmt* s) {$/;"	f
setUsed	$C2_ROOT/ast/module.c2	/^public fn void Module.setUsed(Module* m) { m.is_used = true; }$/;"	f
setUsedPublic	$C2_ROOT/ast/decl.c2	/^public fn void Decl.setUsedPublic(Decl* d) { d.declBits.is_used_public = true; }$/;"	f
setUser	$C2_ROOT/ast/type_ref.c2	/^public fn void TypeRefHolder.setUser(TypeRefHolder* h, SrcLoc loc, u32 name_idx) {$/;"	f
setUserData	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Texture.setUserData(Texture* texture, void* userdata) @(cname="SDL_SetTextureUserData")/;"	f
setValType	$C2_ROOT/ast/expr.c2	/^public fn void Expr.setValType(Expr* e, ValType valtype) {$/;"	f
setValue	$C2_ROOT/ast/builtin_expr.c2	/^public fn void BuiltinExpr.setValue(BuiltinExpr* e, Value value) {$/;"	f
setValue	$C2_ROOT/ast/enum_constant_decl.c2	/^public fn void EnumConstantDecl.setValue(EnumConstantDecl* d, Value value) {$/;"	f
setViewPort	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int Renderer.setViewPort(Renderer* renderer, const Rect* rect) @(cname="SDL_RenderSetViewpo/;"	f
setVolatile	$C2_ROOT/ast/qualtype.c2	/^public fn void QualType.setVolatile(QualType* qt) {$/;"	f
setVolatile	$C2_ROOT/ast/type_ref.c2	/^public fn void TypeRefHolder.setVolatile(TypeRefHolder* h) {$/;"	f
setWarningAsError	$C2_ROOT/common/diagnostics.c2	/^public fn void Diags.setWarningAsError(Diags* diags, bool are_errors) {$/;"	f
setWidth	$C2_ROOT/ast/bitoffset_expr.c2	/^public fn void BitOffsetExpr.setWidth(BitOffsetExpr* e, u8 width) {$/;"	f
setWindowTitle	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void setWindowTitle(const char* str) @(cname="sapp_set_window_title");$/;"	f
setWrappedAlign	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn void Font.setWrappedAlign(Font* font, c_int align) @(cname="TTF_SetFontWrappedAlign");$/;"	f
set_data	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void Sqe.set_data(Sqe* sqe, void* data) @(cname="io_uring_sqe_set_data")$/;"	f
set_flags	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn void Sqe.set_flags(Sqe* sqe, u32 flags) @(cname="io_uring_sqe_set_flags")$/;"	f
setallocf	$C2_ROOT/libs/lua/lua.c2i	/^fn void setallocf(State *L, Alloc f, void *ud) @(cname="lua_setallocf");$/;"	f
setbuf	$C2_ROOT/libs/libc/stdio.c2i	/^fn void setbuf(FILE* __stream, c_char* __buf);$/;"	f
setbuffer	$C2_ROOT/libs/libc/stdio.c2i	/^fn void setbuffer(FILE* __stream, c_char* __buf, c_size __size);$/;"	f
setenv	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int setenv(const c_char* __name, const c_char* __value, c_int __replace);$/;"	f
setfield	$C2_ROOT/libs/lua/lua.c2i	/^fn void  setfield(State *L, c_int idx, const c_char *k) @(cname="lua_setfield");$/;"	f
setglobal	$C2_ROOT/libs/lua/lua.c2i	/^fn void  setglobal(State *L, const c_char *name) @(cname="lua_setglobal");$/;"	f
seti	$C2_ROOT/libs/lua/lua.c2i	/^fn void  seti(State *L, c_int idx, Integer n) @(cname="lua_seti");$/;"	f
setjmp	$C2_ROOT/libs/libc/csetjmp.c2i	/^fn i32 setjmp(JmpBuf __env);$/;"	f
setlinebuf	$C2_ROOT/libs/libc/stdio.c2i	/^fn void setlinebuf(FILE* __stream);$/;"	f
setmetatable	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int setmetatable(State *L, c_int objindex) @(cname="lua_setmetatable");$/;"	f
sets	$C2_ROOT/bootstrap/bootstrap.c	/^   c2recipe_Set* sets;$/;"	v
sets	$C2_ROOT/compiler/c2recipe_parser.c2	/^    Set* s = p.sets;$/;"	v
setsockopt	$C2_ROOT/libs/libc/sys_socket.c2i	/^fn c_int setsockopt(c_int sockfd, c_int level, c_int optname, const void* optval, u32 optlen);$/;"	f
setstate	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_char* setstate(c_char* __statebuf);$/;"	f
setstate_r	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int setstate_r(c_char* __statebuf, Random_data* __buf);$/;"	f
settable	$C2_ROOT/libs/lua/lua.c2i	/^fn void  settable(State *L, c_int idx) @(cname="lua_settable");$/;"	f
settimeofday	$C2_ROOT/libs/libc/sys_time.c2i	/^fn c_int settimeofday(const Timeval* tv, const Timezone* tz);$/;"	f
settop	$C2_ROOT/libs/lua/lua.c2i	/^fn void settop(State* L, c_int idx) @(cname="lua_settop");$/;"	f
setup	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^fn void setup(Desc* desc) @(cname="saudio_setup");$/;"	f
setup	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void setup(Desc* desc) @(cname="sdtx_setup");$/;"	f
setup	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void setup(Desc* desc) @(cname="sg_setup");$/;"	f
setup	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void setup(Desc* desc) @(cname="sgl_setup");$/;"	f
setup	$C2_ROOT/libs/sokol/sokol_time.c2i	/^fn void setup() @(cname="stm_setup");$/;"	f
setup	$C2_ROOT/plugins/unit_test1.c2	/^   TestFn setup;$/;"	v
setup	$C2_ROOT/plugins/unit_test_plugin.c2	/^    bool setup;$/;"	v
setup_name	$C2_ROOT/plugins/unit_test_plugin.c2	/^    u32 setup_name;$/;"	v
setuservalue	$C2_ROOT/libs/lua/lua.c2i	/^fn void  setuservalue(State *L, c_int idx) @(cname="lua_setuservalue");$/;"	f
setvbuf	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int setvbuf(FILE* __stream, c_char* __buf, c_int __modes, c_size __n);$/;"	f
sf	$C2_ROOT/ast/struct_type_decl.c2	/^            if (sf.getNameIdx() == name_idx) return sf;$/;"	v
sf	$C2_ROOT/bootstrap/bootstrap.c	/^         if ((ast_Decl_getNameIdx(sf) == name_idx)) return sf;$/;"	v
sf_list	$C2_ROOT/analyser/module_analyser.c2	/^import struct_func_list as sf_list;$/;"	v
shader	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    Shader shader;$/;"	v
shader_pool_size	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 shader_pool_size;$/;"	v
shaders	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ResourceStats shaders;$/;"	v
shape_offset	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    usize shape_offset;$/;"	v
shift	$C2_ROOT/ast/value.c2	/^        v.uvalue <<= shift;$/;"	v
shift	$C2_ROOT/bootstrap/bootstrap.c	/^      v->uvalue <<= shift;$/;"	v
shiftArenaRight	$C2_ROOT/ir/interference_graph.c2	/^fn u16 InterferenceGraph.shiftArenaRight(InterferenceGraph* g, u32 arena_idx) {$/;"	f
shiftArenaRight	$C2_ROOT/ir/live_map.c2	/^fn u16 Map.shiftArenaRight(Map* g, u32 arena_idx) {$/;"	f
shiftArenaRight	$C2_ROOT/ir/slot_writes_map.c2	/^fn u16 Map.shiftArenaRight(Map* m, u32 arena_idx) {$/;"	f
show	$C2_ROOT/compiler/plugin_mgr.c2	/^public fn void Mgr.show(const Mgr* m) {$/;"	f
showAllLibs	$C2_ROOT/compiler/compiler_libs.c2	/^fn void Compiler.showAllLibs(Compiler* c) {$/;"	f
showCursor	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int showCursor(c_int toggle) @(cname="SDL_ShowCursor");$/;"	f
showKeyboard	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void showKeyboard(bool show) @(cname="sapp_show_keyboard");$/;"	f
showLibs	$C2_ROOT/compiler/compiler_libs.c2	/^fn void Compiler.showLibs(Compiler* c, string_buffer.Buf* out, const char* dirname, bool show_mo/;"	f
showMouse	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void showMouse(bool show) @(cname="sapp_show_mouse");$/;"	f
show_debug	$C2_ROOT/common/console.c2	/^    show_debug = enable;$/;"	v
show_dirs	$C2_ROOT/plugins/deps_generator.c2	/^    bool show_dirs;$/;"	v
show_externals	$C2_ROOT/plugins/deps_generator.c2	/^    bool show_externals;$/;"	v
show_files	$C2_ROOT/plugins/deps_generator.c2	/^    bool show_files;$/;"	v
show_libs	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool show_libs;$/;"	v
show_libs	$C2_ROOT/compiler/compiler.c2	/^    bool show_libs;$/;"	v
show_plugins	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool show_plugins;$/;"	v
show_plugins	$C2_ROOT/compiler/main.c2	/^    bool show_plugins;$/;"	v
show_targets	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool show_targets;$/;"	v
show_targets	$C2_ROOT/compiler/main.c2	/^    bool show_targets;$/;"	v
show_tests	$C2_ROOT/plugins/unit_test2.c2	/^public fn void show_tests() {$/;"	f
show_timing	$C2_ROOT/common/console.c2	/^    show_timing = enable;$/;"	v
shutdown	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^fn void shutdown() @(cname="saudio_shutdown");$/;"	f
shutdown	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^fn void shutdown() @(cname="sdtx_shutdown");$/;"	f
shutdown	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void shutdown() @(cname="sg_shutdown");$/;"	f
shutdown	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void shutdown() @(cname="sgl_shutdown");$/;"	f
side	$C2_ROOT/analyser/module_analyser_stmt.c2	/^        u32 side;$/;"	v
side	$C2_ROOT/bootstrap/bootstrap.c	/^      uint32_t side;$/;"	v
sides	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    u16 sides;$/;"	v
sig	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    X509_buf sig;$/;"	v
sig_oid2	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    X509_buf sig_oid2;$/;"	v
sigaction	$C2_ROOT/libs/libc/csignal.c2i	/^fn c_int sigaction(c_int signum, const Sigaction* act, Sigaction* oldact);$/;"	f
sigaddset	$C2_ROOT/libs/libc/csignal.c2i	/^fn c_int sigaddset (Sigset* set, i32 signum);$/;"	f
sigemptyset	$C2_ROOT/libs/libc/csignal.c2i	/^fn c_int sigemptyset(Sigset* set);$/;"	f
signal	$C2_ROOT/libs/pthread/pthread.c2i	/^fn c_int Cond.signal(Cond* cond) @(cname="pthread_cond_signal");$/;"	f
signalfd	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^fn c_int signalfd(c_int __fd, const csignal.Sigset* mask, c_int flags) @(cname="signalfd");$/;"	f
signbit	$C2_ROOT/ast/value.c2	/^fn i32 signbit(f64 d) {$/;"	f
signbit	$C2_ROOT/libs/math/math.c2i	/^fn c_int signbit(c_double d) { FP64_ u; u.d = d; return (u.u >> 63) & 1; }$/;"	f
signbitf	$C2_ROOT/libs/math/math.c2i	/^fn c_int signbitf(c_float f) { FP32_ u; u.f = f; return (u.u >> 31) & 1; }$/;"	f
sigprocmask	$C2_ROOT/libs/libc/csignal.c2i	/^fn c_int sigprocmask(c_int how, const Sigset* set, Sigset* oldset);$/;"	f
sin	$C2_ROOT/libs/math/math.c2i	/^fn c_double sin(c_double);$/;"	f
sin_addr	$C2_ROOT/libs/libc/sys_socket.c2i	/^    In_addr sin_addr;$/;"	v
sin_family	$C2_ROOT/libs/libc/sys_socket.c2i	/^    SaFamily sin_family;$/;"	v
sin_port	$C2_ROOT/libs/libc/sys_socket.c2i	/^    InPort sin_port;$/;"	v
since	$C2_ROOT/libs/sokol/sokol_time.c2i	/^fn u64 since(u64 start_ticks) @(cname="stm_since");$/;"	f
sinf	$C2_ROOT/libs/math/math.c2i	/^fn c_float sinf(c_float);$/;"	f
single_thread	$C2_ROOT/ir/context.c2	/^    bool single_thread;$/;"	v
sinh	$C2_ROOT/libs/math/math.c2i	/^fn c_double sinh(c_double);$/;"	f
sinhf	$C2_ROOT/libs/math/math.c2i	/^fn c_float sinhf(c_float);$/;"	f
size	$C2_ROOT/analyser/module_analyser_init.c2	/^            f.bitfield_base_size  = (u8)ml.size;$/;"	v
size	$C2_ROOT/analyser/size_analyser.c2	/^    u32 size;$/;"	v
size	$C2_ROOT/ast/array_type.c2	/^    t.size = size;$/;"	v
size	$C2_ROOT/ast/decl_list.c2	/^public fn u32 DeclList.size(const DeclList* l) {$/;"	f
size	$C2_ROOT/ast/expr_list.c2	/^public fn u32 ExprList.size(const ExprList* l) {$/;"	f
size	$C2_ROOT/ast/function_decl_list.c2	/^public fn u32 FunctionDeclList.size(const FunctionDeclList* l) {$/;"	f
size	$C2_ROOT/ast/import_decl_list.c2	/^public fn u32 ImportDeclList.size(const ImportDeclList* l) {$/;"	f
size	$C2_ROOT/ast/statistics.c2	/^    u32 size;$/;"	v
size	$C2_ROOT/ast/string_literal.c2	/^    return e.size;$/;"	v
size	$C2_ROOT/ast/struct_type_decl.c2	/^    u32 size;$/;"	v
size	$C2_ROOT/ast/symbol_table.c2	/^public fn u32 SymbolTable.size(const SymbolTable* t) {$/;"	f
size	$C2_ROOT/ast_utils/context.c2	/^    u32 size;$/;"	v
size	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn u32 Buf.size(const Buf* buf) {$/;"	f
size	$C2_ROOT/bootstrap/bootstrap.c	/^   var->size = size;$/;"	v
size	$C2_ROOT/common/build_target.c2	/^public fn u32 PluginList.size(const PluginList* l) { return l.count; }$/;"	f
size	$C2_ROOT/common/component.c2	/^public fn u32 List.size(const List* l) {$/;"	f
size	$C2_ROOT/common/file/file_utils.c2	/^    return size;$/;"	v
size	$C2_ROOT/common/file/reader.c2	/^    file.contents_size = size;$/;"	v
size	$C2_ROOT/common/linked_list.c2	/^public fn u64 Element.size(const Element* src) @(unused) {$/;"	f
size	$C2_ROOT/common/quicksort.c2	/^    const u8* end = item + size;$/;"	v
size	$C2_ROOT/common/source_mgr.c2	/^    u32 size;$/;"	v
size	$C2_ROOT/compiler/compiler.c2	/^    u32 size;$/;"	v
size	$C2_ROOT/generator/c2refs.c2	/^    usize size;$/;"	v
size	$C2_ROOT/generator/ir/basic_struct_layouter.c2	/^        l.cur_offset = offset + ml.size;$/;"	v
size	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^    u32 size;$/;"	v
size	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^    var.size = size;$/;"	v
size	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    w.total_size = size;$/;"	v
size	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^    u32 total_size = t.used_nodes() + t.words.size;$/;"	v
size	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    words.size = tr.words.size;$/;"	v
size	$C2_ROOT/ir/types.c2	/^public fn u32 Type.size(Type t) {$/;"	f
size	$C2_ROOT/libs/pthread/pthread.c2i	/^    char[SIZEOF_MUTEX_T] size;$/;"	v
size	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    usize size;$/;"	v
size	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    usize size;$/;"	v
size	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    usize size;$/;"	v
size	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    usize size;$/;"	v
size	$C2_ROOT/parser/case_list.c2	/^public fn u32 List.size(const List* l) {$/;"	f
size	$C2_ROOT/parser/expr_list.c2	/^public fn u32 List.size(const List* l) {$/;"	f
size	$C2_ROOT/parser/stmt_list.c2	/^public fn u32 List.size(const List* l) {$/;"	f
size	$C2_ROOT/plugins/unit_test2.c2	/^    const usize s = (error_size <= size) ? size - error_size : size;$/;"	v
size2type	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^fn ir.Type size2type(u32 size) {$/;"	f
sizeOfStruct	$C2_ROOT/analyser/size_analyser.c2	/^public fn void sizeOfStruct(StructTypeDecl* s) {$/;"	f
sizeOfType	$C2_ROOT/analyser/size_analyser.c2	/^public fn TypeSize sizeOfType(QualType qt) {$/;"	f
sizeOfUnion	$C2_ROOT/analyser/size_analyser.c2	/^fn void sizeOfUnion(StructTypeDecl* s) {$/;"	f
sizeText	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^fn c_int Font.sizeText(Font* font, const char* text, c_int* w, c_int* h) @(cname="TTF_SizeText")/;"	f
size_	$C2_ROOT/ast_utils/string_buffer.c2	/^    u32 size_;$/;"	v
size_	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t size_;$/;"	v
size_analyser	$C2_ROOT/analyser/module_analyser_builtin.c2	/^import size_analyser;$/;"	v
size_analyser	$C2_ROOT/analyser/module_analyser_struct.c2	/^import size_analyser;$/;"	v
size_analyser	$C2_ROOT/analyser/size_analyser.c2	/^module size_analyser;$/;"	v
size_analyser_TypeSize	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct size_analyser_TypeSize_ size_analyser_TypeSize;$/;"	v
size_append_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 size_append_buffer;$/;"	v
size_apply_uniforms	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 size_apply_uniforms;$/;"	v
size_t	$C2_ROOT/bootstrap/bootstrap.c	/^typedef unsigned long size_t;$/;"	v
size_t	$C2_ROOT/generator/c/c_generator.c2	/^                typedef unsigned long size_t;$/;"	v
size_update_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 size_update_buffer;$/;"	v
size_update_image	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 size_update_image;$/;"	v
size_write_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 size_write_buffer;$/;"	v
skip	$C2_ROOT/bootstrap/bootstrap.c	/^         text += skip;$/;"	v
skip	$C2_ROOT/common/diagnostics.c2	/^            text += skip;$/;"	v
skip	$C2_ROOT/common/process_utils.c2	/^                numread -= skip;$/;"	v
skipArray	$C2_ROOT/parser/c2_parser_stmt.c2	/^fn u32 Parser.skipArray(Parser* p, u32 ahead, Kind endKind) {$/;"	f
skip_comments	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Parser.skip_comments(Parser* p) {$/;"	f
skip_feature	$C2_ROOT/parser/c2_tokenizer.c2	/^fn bool Tokenizer.skip_feature(Tokenizer* t, Token* result) {$/;"	f
skipped	$C2_ROOT/plugins/unit_test2.c2	/^  u32 skipped;$/;"	v
skipping	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t skipping;$/;"	v
skipping	$C2_ROOT/parser/c2_tokenizer.c2	/^    return !t.feature_stack[t.feature_count].skipping;$/;"	v
sleep	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_uint sleep(c_uint __seconds);$/;"	f
slen	$C2_ROOT/generator/c2refs.c2	/^    *symbol_len = (u16)slen;$/;"	v
slice	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 slice;$/;"	v
slices	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    TextureViewRange slices;$/;"	v
slices	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    u16 slices;$/;"	v
sll_addr	$C2_ROOT/libs/libc/sys_socket.c2i	/^    c_uchar[8] sll_addr;$/;"	v
sll_family	$C2_ROOT/libs/libc/sys_socket.c2i	/^    c_ushort sll_family;$/;"	v
sll_halen	$C2_ROOT/libs/libc/sys_socket.c2i	/^    c_uchar sll_halen;$/;"	v
sll_hatype	$C2_ROOT/libs/libc/sys_socket.c2i	/^    c_ushort sll_hatype;$/;"	v
sll_ifindex	$C2_ROOT/libs/libc/sys_socket.c2i	/^    c_int sll_ifindex;$/;"	v
sll_pkttype	$C2_ROOT/libs/libc/sys_socket.c2i	/^    c_uchar sll_pkttype;$/;"	v
sloc	$C2_ROOT/bootstrap/bootstrap.c	/^      sloc = 0;$/;"	v
sloc	$C2_ROOT/common/diagnostics.c2	/^        sloc = 0;$/;"	v
slot	$C2_ROOT/bootstrap/bootstrap.c	/^   wa->slot = slot;$/;"	v
slot	$C2_ROOT/generator/c/c_generator_trace.c2	/^    sl.hash_array[bucket] = slot;$/;"	v
slot	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^    var.ref = slot;$/;"	v
slot	$C2_ROOT/ir/slot_collector.c2	/^    u16 slot;$/;"	v
slot	$C2_ROOT/ir/slot_writes_map.c2	/^    wr.slot = slot;$/;"	v
slot	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    SlotInfo slot;$/;"	v
slot_idx	$C2_ROOT/ast/pointer_pool.c2	/^        t.ptr_pool_idx = slot_idx;$/;"	v
slot_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t slot_idx;$/;"	v
slot_idx	$C2_ROOT/ir/context.c2	/^    u32 slot_idx;$/;"	v
slot_name	$C2_ROOT/ir/context.c2	/^        char[8] slot_name;$/;"	v
slot_values	$C2_ROOT/ir/context.c2	/^    SlotValues slot_values;$/;"	v
slots	$C2_ROOT/ast/pointer_pool.c2	/^    PointerPoolSlot* slots;$/;"	v
slots	$C2_ROOT/ast/string_type_pool.c2	/^    StringTypeSlot* slots;$/;"	v
slots	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_StringTypeSlot* slots;$/;"	v
slots2	$C2_ROOT/ast/pointer_pool.c2	/^    p.slots = slots2;$/;"	v
slots2	$C2_ROOT/ast/string_type_pool.c2	/^    p.slots = slots2;$/;"	v
slots2	$C2_ROOT/bootstrap/bootstrap.c	/^   p->slots = slots2;$/;"	v
sm	$C2_ROOT/bootstrap/bootstrap.c	/^   source_mgr_SourceMgr* sm;$/;"	v
sm	$C2_ROOT/common/diagnostics.c2	/^    diags.sm = sm;$/;"	v
sm	$C2_ROOT/common/source_mgr.c2	/^    return sm;$/;"	v
sm	$C2_ROOT/compiler/c2recipe.c2	/^    source_mgr.SourceMgr* sm;$/;"	v
sm	$C2_ROOT/compiler/c2recipe_parser.c2	/^    source_mgr.SourceMgr* sm;$/;"	v
sm	$C2_ROOT/compiler/compiler.c2	/^    info.sm = sm;$/;"	v
sm	$C2_ROOT/compiler/main.c2	/^    source_mgr.SourceMgr* sm;$/;"	v
sm	$C2_ROOT/generator/c/c_generator.c2	/^    source_mgr.SourceMgr* sm;$/;"	v
sm	$C2_ROOT/generator/ir/ir_generator.c2	/^    source_mgr.SourceMgr* sm;$/;"	v
sm	$C2_ROOT/parser/c2_parser.c2	/^    p.sm = sm;$/;"	v
sm	$C2_ROOT/plugins/refs_generator.c2	/^    source_mgr.SourceMgr* sm;$/;"	v
smoothstep	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn f32 smoothstep(f32 edge0, f32 edge1, f32 x) {$/;"	f
smp	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* smp;$/;"	v
snprintf	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int snprintf(c_char* __s, c_size size, const c_char* __format @(printf_format), ...);$/;"	f
socket	$C2_ROOT/libs/libc/sys_socket.c2i	/^fn c_int socket(c_int domain, c_int type_, c_int protocol);$/;"	f
sokol_app	$C2_ROOT/libs/sokol/sokol_app.c2i	/^module sokol_app;$/;"	v
sokol_audio	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^module sokol_audio;$/;"	v
sokol_debugtext	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^module sokol_debugtext;$/;"	v
sokol_default	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool sokol_default;$/;"	v
sokol_gfx	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^module sokol_gfx;$/;"	v
sokol_gl	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^module sokol_gl;$/;"	v
sokol_glue	$C2_ROOT/libs/sokol/sokol_glue.c2i	/^module sokol_glue;$/;"	v
sokol_log	$C2_ROOT/libs/sokol/sokol_log.c2i	/^module sokol_log;$/;"	v
sokol_math	$C2_ROOT/libs/sokol/sokol_math.c2i	/^module sokol_math;$/;"	v
sokol_shape	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^module sokol_shape;$/;"	v
sokol_time	$C2_ROOT/libs/sokol/sokol_time.c2i	/^module sokol_time;$/;"	v
sort	$C2_ROOT/analyser/module_sorter.c2	/^public fn void sort(component.Component* c, diagnostics.Diags* diags) {$/;"	f
sort	$C2_ROOT/common/component_sorter.c2	/^public fn void sort(Component** orig, u32 count, diagnostics.Diags* diags) {$/;"	f
sort	$C2_ROOT/common/dsm_sorter.c2	/^public fn const u8* Sorter.sort(Sorter* s) {$/;"	f
sort	$C2_ROOT/common/quicksort.c2	/^public fn void sort(void* items, usize count, usize item_size, CompareFn is_less, void* arg)$/;"	f
sorted	$C2_ROOT/bootstrap/bootstrap.c	/^   return sorted;$/;"	v
sorted	$C2_ROOT/common/dsm_sorter.c2	/^    return sorted;$/;"	v
source	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    Entropy_source_state[ENTROPY_MAX_SOURCES] source;$/;"	v
source	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    const char* source;$/;"	v
source_count	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    c_int             source_count;$/;"	v
source_mgr	$C2_ROOT/common/build_file.c2	/^import source_mgr;$/;"	v
source_mgr	$C2_ROOT/common/diagnostics.c2	/^import source_mgr;$/;"	v
source_mgr	$C2_ROOT/common/source_mgr.c2	/^module source_mgr;$/;"	v
source_mgr	$C2_ROOT/compiler/c2recipe.c2	/^import source_mgr;$/;"	v
source_mgr	$C2_ROOT/compiler/c2recipe_parser.c2	/^import source_mgr;$/;"	v
source_mgr	$C2_ROOT/compiler/compiler.c2	/^import source_mgr;$/;"	v
source_mgr	$C2_ROOT/compiler/main.c2	/^import source_mgr;$/;"	v
source_mgr	$C2_ROOT/compiler/manifest.c2	/^import source_mgr;$/;"	v
source_mgr	$C2_ROOT/generator/c/c_generator.c2	/^import source_mgr;$/;"	v
source_mgr	$C2_ROOT/generator/c/c_generator_call.c2	/^import source_mgr;$/;"	v
source_mgr	$C2_ROOT/generator/c/c_generator_stmt.c2	/^import source_mgr;$/;"	v
source_mgr	$C2_ROOT/generator/c/c_generator_trace.c2	/^import source_mgr;$/;"	v
source_mgr	$C2_ROOT/generator/ir/ir_generator.c2	/^import source_mgr;$/;"	v
source_mgr	$C2_ROOT/plugins/plugin_info.c2	/^import source_mgr;$/;"	v
source_mgr	$C2_ROOT/plugins/refs_generator.c2	/^import source_mgr;$/;"	v
source_mgr_CheckPoint	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct source_mgr_CheckPoint_ source_mgr_CheckPoint;$/;"	v
source_mgr_CheckPointSize	$C2_ROOT/bootstrap/bootstrap.c	/^   f->next_checkpoint = source_mgr_CheckPointSize;$/;"	v
source_mgr_File	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct source_mgr_File_ source_mgr_File;$/;"	v
source_mgr_InitialMaxFiles	$C2_ROOT/bootstrap/bootstrap.c	/^   sm->max_files = source_mgr_InitialMaxFiles;$/;"	v
source_mgr_Location	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct source_mgr_Location_ source_mgr_Location;$/;"	v
source_mgr_SourceMgr	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct source_mgr_SourceMgr_ source_mgr_SourceMgr;$/;"	v
sources_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t sources_count;$/;"	v
sources_size	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t sources_size;$/;"	v
sp	$C2_ROOT/bootstrap/bootstrap.c	/^   c2_tokenizer_Operand* sp;$/;"	v
sp	$C2_ROOT/parser/c2_tokenizer.c2	/^    Operand *sp;$/;"	v
space	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void Buf.space(Buf* buf) { buf.add1(' '); }$/;"	f
spec	$C2_ROOT/analyser_utils/printf_utils.c2	/^    return spec;$/;"	v
spec	$C2_ROOT/bootstrap/bootstrap.c	/^   return spec;$/;"	v
sphereSizes	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn Sizes sphereSizes(u32 slices, u32 stacks) @(cname="sshape_sphere_sizes");$/;"	f
splice_fd_in	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        i32   splice_fd_in;$/;"	v
splice_flags	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        u32       splice_flags;$/;"	v
splice_off_in	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        u64   splice_off_in;$/;"	v
split_cap	$C2_ROOT/ir/inserter.c2	/^    u32 split_cap;$/;"	v
split_count	$C2_ROOT/ir/inserter.c2	/^    u32 split_count;$/;"	v
split_edges	$C2_ROOT/ir/inserter.c2	/^    SplitEdge* split_edges;$/;"	v
split_edges2	$C2_ROOT/ir/inserter.c2	/^        ins.split_edges = split_edges2;$/;"	v
sprintf	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int sprintf(c_char* __s, const c_char* __format @(printf_format), ...);$/;"	f
sq	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    Sq sq;$/;"	v
sq_entries	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32 sq_entries;$/;"	v
sq_off	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    SqringOffsets sq_off;$/;"	v
sq_space_left	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn u32 sq_space_left(const Ring* ring)$/;"	f
sq_thread_cpu	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32 sq_thread_cpu;$/;"	v
sq_thread_idle	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32 sq_thread_idle;$/;"	v
sqe_head	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32 sqe_head;$/;"	v
sqe_tail	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32 sqe_tail;$/;"	v
sqes	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    Sqe* sqes;$/;"	v
sqrt	$C2_ROOT/libs/math/math.c2i	/^fn c_double sqrt(c_double);$/;"	f
sqrtf	$C2_ROOT/libs/math/math.c2i	/^fn c_float sqrtf(c_float);$/;"	f
srand	$C2_ROOT/libs/libc/stdlib.c2i	/^fn void srand(c_uint __seed);$/;"	f
srand48	$C2_ROOT/libs/libc/stdlib.c2i	/^fn void srand48(c_long __seedval);$/;"	f
srand48_r	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int srand48_r(c_long __seedval, Drand48_data* __buffer);$/;"	f
srandom	$C2_ROOT/libs/libc/stdlib.c2i	/^fn void srandom(c_uint __seed);$/;"	f
srandom_r	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int srandom_r(c_uint __seed, Random_data* __buf);$/;"	f
src	$C2_ROOT/bootstrap/bootstrap.c	/^   src->prev = src;$/;"	v
src	$C2_ROOT/common/linked_list.c2	/^    src.prev = src;$/;"	v
src	$C2_ROOT/generator/c2refs.c2	/^    link.src = src;$/;"	v
src	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^    ir.Ref src;$/;"	v
src	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^            ir.Ref src;$/;"	v
src	$C2_ROOT/ir/inserter.c2	/^    e.src = src;$/;"	v
src	$C2_ROOT/ir/phi_list.c2	/^    c.src = src;$/;"	v
src	$C2_ROOT/ir/print.c2	/^            u32 blk_id = pc.src;$/;"	v
src	$C2_ROOT/ir/ssa.c2	/^        BlockId blk_id = clauses[i].src;$/;"	v
src_factor_alpha	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BlendFactor src_factor_alpha;$/;"	v
src_factor_rgb	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    BlendFactor src_factor_rgb;$/;"	v
src_idx	$C2_ROOT/bootstrap/bootstrap.c	/^         last->start = src_idx;$/;"	v
src_idx	$C2_ROOT/ir/interference_graph.c2	/^            last.start = src_idx;$/;"	v
src_idx	$C2_ROOT/ir/live_map.c2	/^            last.start = src_idx;$/;"	v
src_idx	$C2_ROOT/ir/slot_writes_map.c2	/^            last.start = src_idx;$/;"	v
src_len	$C2_ROOT/ast/array_subscript_expr.c2	/^    return e.base.base.loc + e.base.base.arraySubscriptExprBits.src_len;$/;"	v
src_len	$C2_ROOT/ast/builtin_expr.c2	/^    return e.base.base.loc + e.base.base.builtinExprBits.src_len;$/;"	v
src_len	$C2_ROOT/ast/char_literal.c2	/^    return e.base.base.loc + e.base.base.charLiteralBits.src_len;$/;"	v
src_len	$C2_ROOT/ast/explicit_cast_expr.c2	/^    return e.base.base.loc + e.base.base.explicitCastExprBits.src_len;$/;"	v
src_len	$C2_ROOT/ast/float_literal.c2	/^    return e.base.base.loc + e.base.base.floatLiteralBits.src_len;$/;"	v
src_len	$C2_ROOT/ast/integer_literal.c2	/^    return e.base.base.loc + e.base.base.integerLiteralBits.src_len;$/;"	v
src_len	$C2_ROOT/ast/paren_expr.c2	/^    return e.base.base.loc + e.base.base.parenExprBits.src_len;$/;"	v
src_len	$C2_ROOT/ast/string_literal.c2	/^    return e.base.base.loc + e.base.base.stringLiteralBits.src_len;$/;"	v
src_len	$C2_ROOT/ast/type_expr.c2	/^    return e.base.base.loc + e.base.base.typeExprBits.src_len;$/;"	v
src_len	$C2_ROOT/bootstrap/bootstrap.c	/^   i->base.base.integerLiteralBits.src_len = src_len;$/;"	v
src_loc	$C2_ROOT/ast/instantiator.c2	/^import src_loc;$/;"	v
src_loc	$C2_ROOT/ast_utils/src_loc.c2	/^module src_loc;$/;"	v
src_loc_SrcLoc	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint32_t src_loc_SrcLoc;$/;"	v
src_loc_SrcRange	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct src_loc_SrcRange_ src_loc_SrcRange;$/;"	v
srv	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* srv;$/;"	v
ss	$C2_ROOT/ir_examples/members.c2	/^    Struct[3] ss;$/;"	v
sscanf	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int sscanf(const c_char* __s, const c_char* __format, ...);$/;"	f
ssi_addr	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  u64 ssi_addr;$/;"	v
ssi_addr_lsb	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  u16 ssi_addr_lsb;$/;"	v
ssi_arch	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  u32 ssi_arch;$/;"	v
ssi_band	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  u32 ssi_band;$/;"	v
ssi_call_addr	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  u64 ssi_call_addr;$/;"	v
ssi_code	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  i32 ssi_code;$/;"	v
ssi_errno	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  i32 ssi_errno;$/;"	v
ssi_fd	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  i32 ssi_fd;$/;"	v
ssi_int	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  i32 ssi_int;$/;"	v
ssi_overrun	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  u32 ssi_overrun;$/;"	v
ssi_pid	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  u32 ssi_pid;$/;"	v
ssi_ptr	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  u64 ssi_ptr;$/;"	v
ssi_signo	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  u32 ssi_signo;$/;"	v
ssi_status	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  i32 ssi_status;$/;"	v
ssi_stime	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  u64 ssi_stime;$/;"	v
ssi_syscall	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  i32 ssi_syscall;$/;"	v
ssi_tid	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  u32 ssi_tid;$/;"	v
ssi_trapno	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  u32 ssi_trapno;$/;"	v
ssi_uid	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  u32 ssi_uid;$/;"	v
ssi_utime	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  u64 ssi_utime;$/;"	v
ssize_t	$C2_ROOT/bootstrap/bootstrap.c	/^typedef signed long ssize_t;$/;"	v
ssize_t	$C2_ROOT/generator/c/c_generator.c2	/^                typedef signed long ssize_t;$/;"	v
ssl_conf_ca_chain	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void ssl_conf_ca_chain( Ssl_config *conf, X509_crt *ca_chain, X509_crl *ca_crl) @(cname="mbed/;"	f
ssl_conf_dbg	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void ssl_conf_dbg( Ssl_config *conf, Dbg_fn f_dbg, void  *p_dbg ) @(cname="mbedtls_ssl_conf_d/;"	f
ssl_conf_max_frag_len	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int ssl_conf_max_frag_len( Ssl_config *conf, c_uchar mfl_code) @(cname="mbedtls_ssl_conf_ma/;"	f
ssl_conf_own_cert	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int ssl_conf_own_cert( Ssl_config *conf, X509_crt *own_cert, Pk_context *pk_key) @(cname="m/;"	f
ssl_conf_read_timeout	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void ssl_conf_read_timeout(Ssl_config *conf, c_uint timeout) @(cname="mbedtls_ssl_conf_read_t/;"	f
ssl_conf_renegotiation	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void ssl_conf_renegotiation(Ssl_config *conf, c_int renegotiation) @(cname="mbedtls_ssl_conf_/;"	f
ssl_conf_rng	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void ssl_conf_rng( Ssl_config *conf, Rng_fn f_rng, void *p_rng) @(cname="mbedtls_ssl_conf_rng/;"	f
ssl_conf_session_tickets	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void ssl_conf_session_tickets( Ssl_config *conf, c_int use_tickets) @(cname="mbedtls_ssl_conf/;"	f
ssl_conf_verify	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void ssl_conf_verify(Ssl_config *conf, Verify_fn f_vrfy, void *p_vrfy) @(cname="mbedtls_ssl_c/;"	f
ssl_config_defaults	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int ssl_config_defaults( Ssl_config *conf, c_int endpoint, c_int transport, c_int preset ) /;"	f
ssl_config_init	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void ssl_config_init( Ssl_config *conf ) @(cname="mbedtls_ssl_config_init");$/;"	f
ssl_get_ciphersuite	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn const char* ssl_get_ciphersuite(const Ssl_context *ssl) @(cname="mbedtls_ssl_get_ciphersuite"/;"	f
ssl_get_input_max_frag_len	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_size ssl_get_input_max_frag_len( const Ssl_context *ssl ) @(cname="mbedtls_ssl_get_input_ma/;"	f
ssl_get_output_max_frag_len	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_size ssl_get_output_max_frag_len( const Ssl_context *ssl) @(cname="mbedtls_ssl_get_output_m/;"	f
ssl_get_record_expansion	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int ssl_get_record_expansion( const Ssl_context *ssl ) @(cname="mbedtls_ssl_get_record_expa/;"	f
ssl_get_version	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn const char* ssl_get_version( const Ssl_context *ssl) @(cname="mbedtls_ssl_get_version");$/;"	f
ssl_handshake	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int ssl_handshake(Ssl_context *ssl) @(cname="mbedtls_ssl_handshake");$/;"	f
ssl_init	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void ssl_init( Ssl_context *ssl ) @(cname="mbedtls_ssl_init");$/;"	f
ssl_set_bio	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void ssl_set_bio( Ssl_context *ssl, void *p_bio, Ssl_send_t f_send, Ssl_recv_t f_recv, Ssl_re/;"	f
ssl_set_hostname	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int ssl_set_hostname( Ssl_context *ssl, const char *hostname) @(cname="mbedtls_ssl_set_host/;"	f
ssl_set_timer_cb	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void ssl_set_timer_cb(Ssl_context *ssl, void *p_timer, Ssl_set_timer_t f_set_timer, Ssl_get_t/;"	f
ssl_setup	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int ssl_setup( Ssl_context *ssl, const Ssl_config *conf) @(cname="mbedtls_ssl_setup");$/;"	f
st_atime	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^<    c_long st_atime;$/;"	v
st_atime	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^<    c_long st_atime;$/;"	v
st_atime	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^<    c_long st_atime;$/;"	v
st_atime	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^<    c_long st_atime;$/;"	v
st_atime	$C2_ROOT/bootstrap/bootstrap.c	/^   c_long st_atime;$/;"	v
st_atime	$C2_ROOT/libs/libc/sys_stat.c2i	/^    c_long  st_atime;$/;"	v
st_atime_nsec	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^<    c_long st_atime_nsec;$/;"	v
st_atime_nsec	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^<    c_long st_atime_nsec;$/;"	v
st_atime_nsec	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^<    c_long st_atime_nsec;$/;"	v
st_atime_nsec	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^<    c_long st_atime_nsec;$/;"	v
st_atime_nsec	$C2_ROOT/bootstrap/bootstrap.c	/^   c_long st_atime_nsec;$/;"	v
st_atime_nsec	$C2_ROOT/libs/libc/sys_stat.c2i	/^    c_long  st_atime_nsec;$/;"	v
st_atimespec	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^>    struct timespec st_atimespec;$/;"	v
st_atimespec	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^>    struct timespec st_atimespec;$/;"	v
st_atimespec	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    struct timespec st_atimespec;$/;"	v
st_atimespec	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    struct timespec st_atimespec;$/;"	v
st_atimespec	$C2_ROOT/libs/libc/sys_stat.c2i	/^    Timespec st_atimespec;$/;"	v
st_birthtimespec	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^>    struct timespec st_birthtimespec;$/;"	v
st_birthtimespec	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^>    struct timespec st_birthtimespec;$/;"	v
st_birthtimespec	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    struct timespec st_birthtimespec;$/;"	v
st_birthtimespec	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    struct timespec st_birthtimespec;$/;"	v
st_birthtimespec	$C2_ROOT/libs/libc/sys_stat.c2i	/^    Timespec st_birthtimespec;$/;"	v
st_blksize	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^>    c_uint st_blksize;$/;"	v
st_blksize	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^>    c_uint st_blksize;$/;"	v
st_blksize	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    c_uint st_blksize;$/;"	v
st_blksize	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    int32_t st_blksize;$/;"	v
st_blksize	$C2_ROOT/bootstrap/bootstrap.c	/^   c_long st_blksize;$/;"	v
st_blksize	$C2_ROOT/libs/libc/sys_stat.c2i	/^    c_uint st_blksize;$/;"	v
st_blocks	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^>    c_ulong st_blocks;$/;"	v
st_blocks	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^>    c_ulong st_blocks;$/;"	v
st_blocks	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    c_ulong st_blocks;$/;"	v
st_blocks	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    int64_t st_blocks;$/;"	v
st_blocks	$C2_ROOT/bootstrap/bootstrap.c	/^   c_long st_blocks;$/;"	v
st_blocks	$C2_ROOT/libs/libc/sys_stat.c2i	/^    i64 st_blocks;$/;"	v
st_ctime	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^<    c_long st_ctime;$/;"	v
st_ctime	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^<    c_long st_ctime;$/;"	v
st_ctime	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^<    c_long st_ctime;$/;"	v
st_ctime	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^<    c_long st_ctime;$/;"	v
st_ctime	$C2_ROOT/bootstrap/bootstrap.c	/^   c_long st_ctime;$/;"	v
st_ctime	$C2_ROOT/libs/libc/sys_stat.c2i	/^    c_long  st_ctime;$/;"	v
st_ctime_nsec	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^<    c_long st_ctime_nsec;$/;"	v
st_ctime_nsec	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^<    c_long st_ctime_nsec;$/;"	v
st_ctime_nsec	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^<    c_long st_ctime_nsec;$/;"	v
st_ctime_nsec	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^<    c_long st_ctime_nsec;$/;"	v
st_ctime_nsec	$C2_ROOT/bootstrap/bootstrap.c	/^   c_long st_ctime_nsec;$/;"	v
st_ctime_nsec	$C2_ROOT/libs/libc/sys_stat.c2i	/^    c_long  st_ctime_nsec;$/;"	v
st_ctimespec	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^>    struct timespec st_ctimespec;$/;"	v
st_ctimespec	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^>    struct timespec st_ctimespec;$/;"	v
st_ctimespec	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    struct timespec st_ctimespec;$/;"	v
st_ctimespec	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    struct timespec st_ctimespec;$/;"	v
st_ctimespec	$C2_ROOT/libs/libc/sys_stat.c2i	/^    Timespec st_ctimespec;$/;"	v
st_dev	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^>    c_int st_dev;$/;"	v
st_dev	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^>    c_int st_dev;$/;"	v
st_dev	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    uint64_t st_dev;$/;"	v
st_dev	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    int32_t st_dev;$/;"	v
st_dev	$C2_ROOT/bootstrap/bootstrap.c	/^   c_ulong st_dev;$/;"	v
st_dev	$C2_ROOT/libs/libc/sys_stat.c2i	/^    u64 st_dev;$/;"	v
st_flags	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^>    c_uint st_flags;$/;"	v
st_flags	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^>    c_uint st_flags;$/;"	v
st_flags	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    c_uint st_flags;$/;"	v
st_flags	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    uint32_t st_flags;$/;"	v
st_flags	$C2_ROOT/libs/libc/sys_stat.c2i	/^    u32 st_flags;$/;"	v
st_gen	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^>    c_uint st_gen;$/;"	v
st_gen	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^>    c_uint st_gen;$/;"	v
st_gen	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    uint64_t st_gen;$/;"	v
st_gen	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    uint32_t st_gen;$/;"	v
st_gen	$C2_ROOT/libs/libc/sys_stat.c2i	/^    u64 st_gen;$/;"	v
st_gid	$C2_ROOT/bootstrap/bootstrap.c	/^   c_uint st_gid;$/;"	v
st_gid	$C2_ROOT/libs/libc/sys_stat.c2i	/^    c_uint st_gid;$/;"	v
st_ino	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    uint64_t st_ino;$/;"	v
st_ino	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    uint64_t st_ino;$/;"	v
st_ino	$C2_ROOT/bootstrap/bootstrap.c	/^   c_ulong st_ino;$/;"	v
st_ino	$C2_ROOT/libs/libc/sys_stat.c2i	/^    u64 st_ino;$/;"	v
st_lspare	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^>    c_int st_lspare;$/;"	v
st_lspare	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^>    c_int st_lspare;$/;"	v
st_lspare	$C2_ROOT/libs/libc/sys_stat.c2i	/^    u64[10] st_lspare;$/;"	v
st_mode	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^>    c_ushort st_mode;$/;"	v
st_mode	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^>    c_ushort st_mode;$/;"	v
st_mode	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    c_ushort st_mode;$/;"	v
st_mode	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    uint32_t st_mode;$/;"	v
st_mode	$C2_ROOT/bootstrap/bootstrap.c	/^   c_uint st_mode;$/;"	v
st_mode	$C2_ROOT/libs/libc/sys_stat.c2i	/^    u32 st_mode;$/;"	v
st_mtime	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^<    c_long st_mtime;$/;"	v
st_mtime	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^<    c_long st_mtime;$/;"	v
st_mtime	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^<    c_long st_mtime;$/;"	v
st_mtime	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^<    c_long st_mtime;$/;"	v
st_mtime	$C2_ROOT/bootstrap/bootstrap.c	/^   c_long st_mtime;$/;"	v
st_mtime	$C2_ROOT/libs/libc/sys_stat.c2i	/^    c_long  st_mtime;$/;"	v
st_mtime_nsec	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^<    c_long st_mtime_nsec;$/;"	v
st_mtime_nsec	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^<    c_long st_mtime_nsec;$/;"	v
st_mtime_nsec	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^<    c_long st_mtime_nsec;$/;"	v
st_mtime_nsec	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^<    c_long st_mtime_nsec;$/;"	v
st_mtime_nsec	$C2_ROOT/bootstrap/bootstrap.c	/^   c_long st_mtime_nsec;$/;"	v
st_mtime_nsec	$C2_ROOT/libs/libc/sys_stat.c2i	/^    c_long  st_mtime_nsec;$/;"	v
st_mtimespec	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^>    struct timespec st_mtimespec;$/;"	v
st_mtimespec	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^>    struct timespec st_mtimespec;$/;"	v
st_mtimespec	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    struct timespec st_mtimespec;$/;"	v
st_mtimespec	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    struct timespec st_mtimespec;$/;"	v
st_mtimespec	$C2_ROOT/libs/libc/sys_stat.c2i	/^    Timespec st_mtimespec;$/;"	v
st_nlink	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^>    c_ushort st_nlink;$/;"	v
st_nlink	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^>    c_ushort st_nlink;$/;"	v
st_nlink	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    uint64_t st_nlink;$/;"	v
st_nlink	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    uint32_t st_nlink;$/;"	v
st_nlink	$C2_ROOT/bootstrap/bootstrap.c	/^   c_ulong st_nlink;$/;"	v
st_nlink	$C2_ROOT/libs/libc/sys_stat.c2i	/^    u64 st_nlink;$/;"	v
st_padding0	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    c_ushort st_padding0;$/;"	v
st_padding0	$C2_ROOT/libs/libc/sys_stat.c2i	/^    c_ushort st_padding0;$/;"	v
st_padding1	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    int32_t st_padding1;$/;"	v
st_padding1	$C2_ROOT/libs/libc/sys_stat.c2i	/^    i32 st_padding1;$/;"	v
st_qspare	$C2_ROOT/libs/libc/sys_stat.c2i	/^    c_long[2] st_qspare;$/;"	v
st_rdev	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^>    c_uint st_rdev;$/;"	v
st_rdev	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^>    c_uint st_rdev;$/;"	v
st_rdev	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    uint64_t st_rdev;$/;"	v
st_rdev	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    int32_t st_rdev;$/;"	v
st_rdev	$C2_ROOT/bootstrap/bootstrap.c	/^   c_ulong st_rdev;$/;"	v
st_rdev	$C2_ROOT/libs/libc/sys_stat.c2i	/^    u64 st_rdev;$/;"	v
st_size	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^>    c_ulong st_size;$/;"	v
st_size	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^>    c_ulong st_size;$/;"	v
st_size	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    c_ulong st_size;$/;"	v
st_size	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    c_ulong st_size;$/;"	v
st_size	$C2_ROOT/bootstrap/bootstrap.c	/^   c_long st_size;$/;"	v
st_size	$C2_ROOT/common/file/reader.c2	/^    u32 size = (u32)statbuf.st_size;$/;"	v
st_size	$C2_ROOT/generator/c2refs.c2	/^    i32 size = (i32)statbuf.st_size;$/;"	v
st_size	$C2_ROOT/libs/libc/sys_stat.c2i	/^    c_ulong st_size;$/;"	v
st_uid	$C2_ROOT/bootstrap/bootstrap.c	/^   c_uint st_uid;$/;"	v
st_uid	$C2_ROOT/libs/libc/sys_stat.c2i	/^    c_uint st_uid;$/;"	v
stack	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_StackLevel* stack;$/;"	v
stack	$C2_ROOT/common/yaml/yaml_data.c2	/^    d.stack = stack;$/;"	v
stack	$C2_ROOT/common/yaml/yaml_parser.c2	/^    StackLevel[MaxDepth] stack;$/;"	v
stack	$C2_ROOT/generator/ir/ref_list.c2	/^    l.refs = l.stack;$/;"	v
stack	$C2_ROOT/parser/c2_tokenizer.c2	/^    Operand[MAX_LEVEL] stack;$/;"	v
stack	$C2_ROOT/parser/case_list.c2	/^    l.heap = l.stack;$/;"	v
stack	$C2_ROOT/parser/expr_list.c2	/^    l.data = l.stack;$/;"	v
stack	$C2_ROOT/parser/stmt_list.c2	/^    l.data = l.stack;$/;"	v
stack_add	$C2_ROOT/analyser/scope.c2	/^fn void Scope.stack_add(Scope* s, u32 name_idx, ast.Decl* d) {$/;"	f
stack_capacity	$C2_ROOT/analyser/scope.c2	/^    u32 stack_capacity;$/;"	v
stack_capacity	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t stack_capacity;$/;"	v
stack_count	$C2_ROOT/analyser/scope.c2	/^    u32 stack_count;$/;"	v
stack_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t stack_count;$/;"	v
stack_decls	$C2_ROOT/analyser/scope.c2	/^    ast.Decl** stack_decls;$/;"	v
stack_decls	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_Decl** stack_decls;$/;"	v
stack_find	$C2_ROOT/analyser/scope.c2	/^fn ast.Decl* Scope.stack_find(const Scope* s, u32 name_idx) {$/;"	f
stack_overflow	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    bool stack_overflow;$/;"	v
stack_resize	$C2_ROOT/analyser/scope.c2	/^fn void Scope.stack_resize(Scope* s, u32 capacity) {$/;"	f
stack_size	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t stack_size;$/;"	v
stack_symbols	$C2_ROOT/analyser/scope.c2	/^    u32* stack_symbols;$/;"	v
stack_symbols	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t* stack_symbols;$/;"	v
stack_underflow	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    bool stack_underflow;$/;"	v
stacks	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    u16 stacks;$/;"	v
stage	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ShaderStage stage;$/;"	v
stars	$C2_ROOT/analyser_utils/printf_utils.c2	/^    *pstars = stars;$/;"	v
stars	$C2_ROOT/bootstrap/bootstrap.c	/^   fc->idx += stars;$/;"	v
stars	$C2_ROOT/generator/c/c_generator_expr.c2	/^    fc.idx += stars;$/;"	v
stars	$C2_ROOT/parser/c2_parser_expr.c2	/^            stars = 0;$/;"	v
start	$C2_ROOT/analyser/module_analyser_function.c2	/^            start = 1;$/;"	v
start	$C2_ROOT/ast_utils/src_loc.c2	/^    SrcLoc start;$/;"	v
start	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t start;$/;"	v
start	$C2_ROOT/generator/c2refs.c2	/^fn u32 Files.start(Files* f, const char* filename, u32 link_start) {$/;"	f
start	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    u32 start;$/;"	v
start	$C2_ROOT/ir/block.c2	/^    b.instr.start = start;$/;"	v
start	$C2_ROOT/ir/inserter.c2	/^public fn void Inserter.start(Inserter* ins) {$/;"	f
start	$C2_ROOT/ir/interference_graph.c2	/^    u16 src_idx = r.start;$/;"	v
start	$C2_ROOT/ir/live_map.c2	/^    u16 src_idx = r.start;$/;"	v
start	$C2_ROOT/ir/phi_list.c2	/^    return start;$/;"	v
start	$C2_ROOT/ir/print.c2	/^        ph.blk_instr_start = i_idx.start;$/;"	v
start	$C2_ROOT/ir/register_alloc.c2	/^    u32 first = b.instr.start;$/;"	v
start	$C2_ROOT/ir/rev_list.c2	/^    u16 start;$/;"	v
start	$C2_ROOT/ir/slot_writes_map.c2	/^    u16 src_idx = r.start;$/;"	v
start	$C2_ROOT/ir/ssa.c2	/^        u32 i_start = b.instr.start;$/;"	v
start	$C2_ROOT/ir/types.c2	/^    u32 start;$/;"	v
start	$C2_ROOT/parser/c2_tokenizer.c2	/^    const char* p = start;$/;"	v
startBlock	$C2_ROOT/ir/context.c2	/^public fn void Context.startBlock(Context* c, BlockId id) {$/;"	f
startFunc	$C2_ROOT/ir/context.c2	/^public fn void Context.startFunc(Context* c, SymbolId id) {$/;"	f
startGlobal	$C2_ROOT/ir/context.c2	/^public fn void Context.startGlobal(Context* c, SymbolId id) {$/;"	f
startTextInput	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void startTextInput() @(cname="SDL_StartTextInput");$/;"	f
start_file	$C2_ROOT/generator/c2refs.c2	/^public fn void Refs.start_file(Refs* r, const char* filename) {$/;"	f
start_handle	$C2_ROOT/bootstrap/bootstrap.c	/^   sm->num_files = start_handle;$/;"	v
start_handle	$C2_ROOT/common/source_mgr.c2	/^    sm.num_files = start_handle;$/;"	v
start_target	$C2_ROOT/bootstrap/bootstrap.c	/^   compiler_BeginTargetFn start_target;$/;"	v
starts_with	$C2_ROOT/common/yaml/yaml_iterator.c2	/^fn const char* starts_with(const char* full, const char* start) {$/;"	f
stash	$C2_ROOT/ast/decl_list.c2	/^    l.decls = l.stash;$/;"	v
stash	$C2_ROOT/ast/expr_list.c2	/^    l.exprs = l.stash;$/;"	v
stash	$C2_ROOT/bootstrap/bootstrap.c	/^   l->exprs = l->stash;$/;"	v
stash	$C2_ROOT/ir/phi_list.c2	/^    if (c.count <= elemsof(c.stash)) return c.stash;$/;"	v
stat	$C2_ROOT/libs/libc/sys_stat.c2i	/^fn c_int stat(const c_char* pathname, Stat* buf);$/;"	f
statbuf	$C2_ROOT/bootstrap/bootstrap.c	/^   struct stat statbuf;$/;"	v
statbuf	$C2_ROOT/common/file/file_utils.c2	/^    Stat statbuf;$/;"	v
statbuf	$C2_ROOT/common/file/reader.c2	/^    Stat statbuf;$/;"	v
statbuf	$C2_ROOT/common/process_utils.c2	/^    Stat statbuf;$/;"	v
statbuf	$C2_ROOT/generator/c2refs.c2	/^    Stat statbuf;$/;"	v
state	$C2_ROOT/bootstrap/bootstrap.c	/^         state = 4;$/;"	v
state	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ResourceState state;$/;"	v
state	$C2_ROOT/parser/c2_parser_stmt.c2	/^            state = 4;$/;"	v
static	$C2_ROOT/bootstrap/bootstrap.c	/^static inline$/;"	v
static_asserts	$C2_ROOT/ast/ast.c2	/^    StaticAssertList static_asserts;$/;"	v
static_asserts	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_StaticAssertList static_asserts;$/;"	v
static_slots	$C2_ROOT/ir/slot_collector.c2	/^    StaticSlot[32] static_slots;$/;"	v
stats	$C2_ROOT/ast/utils.c2	/^    Stats stats;$/;"	v
stats	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_Stats stats;$/;"	v
stats_iter	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^fn void Tree.stats_iter(const Tree* t, u32 node_idx, Stats* stats) {$/;"	f
status	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int status(State *L) @(cname="lua_status");$/;"	f
statx	$C2_ROOT/libs/io_uring/io_uring.c2i	/^struct statx;$/;"	v
statx_flags	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        u32       statx_flags;$/;"	v
std	$C2_ROOT/analyser/module_analyser_builtin.c2	/^                const Decl* d = (Decl*)std;$/;"	v
std	$C2_ROOT/analyser/module_analyser_call.c2	/^            Decl* d = (Decl*)std;$/;"	v
std	$C2_ROOT/analyser/module_analyser_type.c2	/^        Decl* d = (Decl*)std;$/;"	v
stdarg	$C2_ROOT/libs/libc/stdarg.c2i	/^module stdarg;$/;"	v
stdarg_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t stdarg_idx;$/;"	v
stdarg_idx	$C2_ROOT/parser/c2_parser.c2	/^    u32 stdarg_idx;$/;"	v
stderr	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^< extern FILE* stderr;$/;"	v
stderr	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^< extern FILE* stderr;$/;"	v
stderr	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^< extern FILE* stderr;$/;"	v
stderr	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^< extern FILE* stderr;$/;"	v
stderr	$C2_ROOT/bootstrap/bootstrap.c	/^extern FILE* stderr;$/;"	v
stderr	$C2_ROOT/libs/libc/stdio.c2i	/^FILE* stderr;$/;"	v
stdin	$C2_ROOT/libs/libc/stdio.c2i	/^FILE* stdin;$/;"	v
stdio	$C2_ROOT/analyser/module_analyser_call.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/analyser/scope.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/ast/decl.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/ast/expr.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/ast/member_expr.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/ast/stmt.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/ast/type.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/ast/type_ref.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/ast/value.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/ast_utils/context.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/ast_utils/string_pool.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/common/source_mgr.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/compiler/compiler.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/compiler/compiler_libs.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/compiler/main.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/compiler/plugin_mgr.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/generator/c/c_generator.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/generator/c/c_generator_special.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/ir/context.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/ir/graphviz.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/ir/print.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/ir/ref.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/ir_examples/cond_decl.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/ir_examples/global_arrays.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/ir_examples/struct_init.c2	/^import stdio;$/;"	v
stdio	$C2_ROOT/libs/libc/stdio.c2i	/^module stdio;$/;"	v
stdio	$C2_ROOT/plugins/deps_generator_utils.c2	/^import stdio;$/;"	v
stdlib	$C2_ROOT/analyser/incr_array_list.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/analyser/init_checker.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/analyser/label_vector.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/analyser/module_analyser.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/analyser/module_sorter.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/analyser/name_vector.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/analyser/scope.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/analyser/struct_field_init_checker.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/analyser/struct_func_list.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ast/ast.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ast/function_decl_list.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ast/instance_table.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ast/module.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ast/symbol_table.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ast/utils.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ast/value.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ast_utils/attr_table.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ast_utils/string_pool.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/common/attr_handler.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/common/build_file.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/common/build_target.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/common/component_sorter.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/common/diagnostics.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/common/dsm_sorter.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/common/file/reader.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/common/index_list.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/common/library_list.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/common/module_list.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/common/source_mgr.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/common/string_list.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/common/value_maplist.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/compiler/c2recipe.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/compiler/c2recipe_parser.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/compiler/compiler.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/compiler/compiler_libs.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/compiler/manifest.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/compiler/plugin_mgr.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/generator/ast_visitor.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/generator/c/c_generator.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/generator/c/c_generator_trace.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/generator/ir/array_init_sorter.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/generator/ir/ref_list.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ir/block_list.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ir/case_list.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ir/constant_list.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ir/context.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ir/function_info.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ir/init_value_list.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ir/inserter.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ir/instr_list.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ir/interference_graph.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ir/live_map.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ir/lookup_table.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ir/print.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ir/register_alloc.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ir/rev_list.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ir/rpo.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ir/slot_collector.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ir/slot_values.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ir/slot_writes_map.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/ir/symbol_list.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/libs/libc/stdlib.c2i	/^module stdlib;$/;"	v
stdlib	$C2_ROOT/parser/c2_tokenizer.c2	/^import stdlib;$/;"	v
stdlib	$C2_ROOT/plugins/refs_generator.c2	/^import stdlib;$/;"	v
stdout	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^< extern FILE* stdout;$/;"	v
stdout	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^< extern FILE* stdout;$/;"	v
stdout	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^< extern FILE* stdout;$/;"	v
stdout	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^< extern FILE* stdout;$/;"	v
stdout	$C2_ROOT/bootstrap/bootstrap.c	/^extern FILE* stdout;$/;"	v
stdout	$C2_ROOT/libs/libc/stdio.c2i	/^FILE* stdout;$/;"	v
stencil	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    StencilState stencil;$/;"	v
step_func	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    VertexStep step_func;$/;"	v
step_rate	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 step_rate;$/;"	v
stmt	$C2_ROOT/analyser/label_vector.c2	/^    ast.LabelStmt* stmt;$/;"	v
stmt	$C2_ROOT/ast/label_stmt.c2	/^    s.stmt = stmt;$/;"	v
stmt	$C2_ROOT/bootstrap/bootstrap.c	/^   s->stmt = stmt;$/;"	v
stmtBits	$C2_ROOT/ast/stmt.c2	/^        StmtBits stmtBits;$/;"	v
stmtBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_StmtBits stmtBits;$/;"	v
stmt_list	$C2_ROOT/parser/c2_parser.c2	/^import stmt_list;$/;"	v
stmt_list	$C2_ROOT/parser/c2_parser_stmt.c2	/^import stmt_list;$/;"	v
stmt_list	$C2_ROOT/parser/c2_parser_switch.c2	/^import stmt_list;$/;"	v
stmt_list	$C2_ROOT/parser/stmt_list.c2	/^module stmt_list;$/;"	v
stmt_list_List	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct stmt_list_List_ stmt_list_List;$/;"	v
stmt_list_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t stmt_list_count;$/;"	v
stmt_list_count	$C2_ROOT/parser/c2_parser.c2	/^    u32 stmt_list_count;$/;"	v
stmt_lists	$C2_ROOT/bootstrap/bootstrap.c	/^   stmt_list_List* stmt_lists;$/;"	v
stmt_lists	$C2_ROOT/parser/c2_parser.c2	/^    stmt_list.List* stmt_lists;$/;"	v
stmts	$C2_ROOT/ast/compound_stmt.c2	/^    if (s.getCount()) return s.stmts;$/;"	v
stmts	$C2_ROOT/ast/statistics.c2	/^    Stat[elemsof(StmtKind)] stmts;$/;"	v
stmts	$C2_ROOT/bootstrap/bootstrap.c	/^   if (ast_CompoundStmt_getCount(s)) return s->stmts;$/;"	v
stopTextInput	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void stopTextInput() @(cname="SDL_StopTextInput");$/;"	f
stop_at_eol	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool stop_at_eol;$/;"	v
storage_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool storage_buffer;$/;"	v
storage_image	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool storage_image;$/;"	v
store	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^public fn bool Tree.store(Tree* t, i32 fd) {$/;"	f
storeAttr	$C2_ROOT/ast/ast.c2	/^public fn void AST.storeAttr(AST* a,$/;"	f
storeAttr	$C2_ROOT/parser/ast_builder.c2	/^fn void Builder.storeAttr(Builder* b, Decl* d, const Attr* a) {$/;"	f
storeIn	$C2_ROOT/ir/register_alloc.c2	/^fn void LiveVector.storeIn(LiveVector* v, u16 blk_id) {$/;"	f
storeOut	$C2_ROOT/ir/register_alloc.c2	/^fn void LiveVector.storeOut(LiveVector* v, u16 blk_id) {$/;"	f
store_action	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    StoreAction store_action;$/;"	v
stpcpy	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* stpcpy(c_char* dest, const c_char* src);$/;"	f
stpncpy	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* stpncpy(c_char* dest, const c_char* src, c_size n);$/;"	f
str	$C2_ROOT/ast/asm_stmt.c2	/^    s.asm_string = (StringLiteral*)str;$/;"	v
str	$C2_ROOT/ast/binary_operator.c2	/^public fn const char* BinaryOpcode.str(BinaryOpcode opcode) {$/;"	f
str	$C2_ROOT/ast/builtin_type.c2	/^public fn const char* BuiltinKind.str(BuiltinKind kind) {$/;"	f
str	$C2_ROOT/ast/identifier_expr.c2	/^fn const char* IdentifierKind.str(IdentifierKind k) {$/;"	f
str	$C2_ROOT/ast/type_ref.c2	/^fn const char* TypeRefKind.str(TypeRefKind k) {$/;"	f
str	$C2_ROOT/ast/value.c2	/^public fn const char* Value.str(const Value* v) {$/;"	f
str	$C2_ROOT/common/target_info.c2	/^public fn const char* Info.str(const Info* info) {$/;"	f
str	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^fn const char* Token.str(const Token* tok) {$/;"	f
str	$C2_ROOT/ir/block.c2	/^public fn const char* BlockKind.str(BlockKind k) @(unused) {$/;"	f
str	$C2_ROOT/ir/init_value.c2	/^fn const char* InitValueKind.str(InitValueKind k) {$/;"	f
str	$C2_ROOT/ir/instr_kind.c2	/^public fn const char* InstrKind.str(InstrKind k) @(unused) {$/;"	f
str	$C2_ROOT/ir/ref.c2	/^public fn const char* Ref.str(const Ref* r) @(unused) {$/;"	f
str	$C2_ROOT/ir/types.c2	/^public fn const char* Type.str(Type t) {$/;"	f
str	$C2_ROOT/parser/token.c2	/^public fn const char* Kind.str(Kind k) {$/;"	f
str	$C2_ROOT/plugins/git_version_plugin.c2	/^    ast.Expr* initExpr = (ast.Expr*)str;$/;"	v
str2abi	$C2_ROOT/common/target_info.c2	/^fn Abi str2abi(const char* name) {$/;"	f
str2arch	$C2_ROOT/common/target_info.c2	/^fn Arch str2arch(const char* name) {$/;"	f
str2sys	$C2_ROOT/common/target_info.c2	/^fn System str2sys(const char* name) {$/;"	f
str2vendor	$C2_ROOT/common/target_info.c2	/^fn Vendor str2vendor(const char* name) {$/;"	f
strcasecmp	$C2_ROOT/libs/libc/string.c2i	/^fn c_int strcasecmp(const c_char* s1, const c_char* s2);$/;"	f
strcasestr	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* strcasestr(const c_char* s1, const c_char* s2);$/;"	f
strcat	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* strcat(c_char* dest, const c_char* src);$/;"	f
strchr	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* strchr(const c_char* s, c_int c);$/;"	f
strchrnul	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* strchrnul(const c_char* s, c_int c);$/;"	f
strcmp	$C2_ROOT/libs/libc/string.c2i	/^fn c_int strcmp(const c_char* s1, const c_char* s2);$/;"	f
strcoll	$C2_ROOT/libs/libc/string.c2i	/^fn c_int strcoll(const c_char* s1, const c_char* s2);$/;"	f
strcpy	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* strcpy(c_char* dest, const c_char* src);$/;"	f
strcspn	$C2_ROOT/libs/libc/string.c2i	/^fn c_size strcspn(const c_char* s1, const c_char* s2);$/;"	f
strdup	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* strdup(const c_char* s);$/;"	f
stream_cb	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    StreamCb stream_cb;$/;"	v
stream_update	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool stream_update;$/;"	v
stream_userdata_cb	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    StreamDataCb stream_userdata_cb;$/;"	v
strerror	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* strerror(c_int errnum);$/;"	f
strerror	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void strerror(c_int ret, char *buf, c_size buflen) @(cname="mbedtls_strerror");$/;"	f
strerror_r	$C2_ROOT/libs/libc/string.c2i	/^fn c_int strerror_r(c_int errnum, c_char* dest, c_size n);$/;"	f
strftime	$C2_ROOT/libs/libc/libc_time.c2i	/^fn c_size strftime(c_char *s, c_size max, const c_char *format, const Tm *tm);$/;"	f
stride	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 stride;$/;"	v
string	$C2_ROOT/analyser/incr_array_list.c2	/^import string;$/;"	v
string	$C2_ROOT/analyser/init_checker.c2	/^import string;$/;"	v
string	$C2_ROOT/analyser/label_vector.c2	/^import string;$/;"	v
string	$C2_ROOT/analyser/module_analyser_switch.c2	/^import string;$/;"	v
string	$C2_ROOT/analyser/module_sorter.c2	/^import string;$/;"	v
string	$C2_ROOT/analyser/name_vector.c2	/^import string;$/;"	v
string	$C2_ROOT/analyser/scope.c2	/^import string;$/;"	v
string	$C2_ROOT/analyser/struct_func_list.c2	/^import string;$/;"	v
string	$C2_ROOT/ast/asm_stmt.c2	/^import string;$/;"	v
string	$C2_ROOT/ast/call_expr.c2	/^import string;$/;"	v
string	$C2_ROOT/ast/compound_stmt.c2	/^import string;$/;"	v
string	$C2_ROOT/ast/enum_type_decl.c2	/^import string;$/;"	v
string	$C2_ROOT/ast/function_decl.c2	/^import string;$/;"	v
string	$C2_ROOT/ast/function_decl_list.c2	/^import string;$/;"	v
string	$C2_ROOT/ast/init_list_expr.c2	/^import string;$/;"	v
string	$C2_ROOT/ast/instance_table.c2	/^import string;$/;"	v
string	$C2_ROOT/ast/member_expr.c2	/^import string;$/;"	v
string	$C2_ROOT/ast/module.c2	/^import string;$/;"	v
string	$C2_ROOT/ast/statistics.c2	/^import string;$/;"	v
string	$C2_ROOT/ast/struct_type_decl.c2	/^import string;$/;"	v
string	$C2_ROOT/ast/switch_case.c2	/^import string;$/;"	v
string	$C2_ROOT/ast/switch_stmt.c2	/^import string;$/;"	v
string	$C2_ROOT/ast/symbol_table.c2	/^import string;$/;"	v
string	$C2_ROOT/ast/type_ref.c2	/^import string;$/;"	v
string	$C2_ROOT/ast/utils.c2	/^import string;$/;"	v
string	$C2_ROOT/ast_utils/attr_table.c2	/^import string;$/;"	v
string	$C2_ROOT/ast_utils/string_pool.c2	/^import string;$/;"	v
string	$C2_ROOT/common/attr_handler.c2	/^import string;$/;"	v
string	$C2_ROOT/common/bit_array.c2	/^import string;$/;"	v
string	$C2_ROOT/common/build_file.c2	/^import string;$/;"	v
string	$C2_ROOT/common/build_target.c2	/^import string;$/;"	v
string	$C2_ROOT/common/component.c2	/^import string;$/;"	v
string	$C2_ROOT/common/component_sorter.c2	/^import string;$/;"	v
string	$C2_ROOT/common/index_list.c2	/^import string;$/;"	v
string	$C2_ROOT/common/library_list.c2	/^import string;$/;"	v
string	$C2_ROOT/common/module_list.c2	/^import string;$/;"	v
string	$C2_ROOT/common/source_mgr.c2	/^import string;$/;"	v
string	$C2_ROOT/common/value_maplist.c2	/^import string;$/;"	v
string	$C2_ROOT/common/yaml/yaml_iterator.c2	/^import string;$/;"	v
string	$C2_ROOT/compiler/c2recipe.c2	/^import string;$/;"	v
string	$C2_ROOT/compiler/c2recipe_parser.c2	/^import string;$/;"	v
string	$C2_ROOT/compiler/compiler.c2	/^import string;$/;"	v
string	$C2_ROOT/compiler/compiler_libs.c2	/^import string;$/;"	v
string	$C2_ROOT/generator/c/c_generator.c2	/^import string;$/;"	v
string	$C2_ROOT/generator/c/c_generator_call.c2	/^import string;$/;"	v
string	$C2_ROOT/generator/c/c_generator_special.c2	/^import string;$/;"	v
string	$C2_ROOT/generator/c/c_generator_trace.c2	/^import string;$/;"	v
string	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^import string;$/;"	v
string	$C2_ROOT/generator/ir/ir_generator.c2	/^import string;$/;"	v
string	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^import string;$/;"	v
string	$C2_ROOT/ir/block.c2	/^import string;$/;"	v
string	$C2_ROOT/ir/inserter.c2	/^import string;$/;"	v
string	$C2_ROOT/ir/interference_graph.c2	/^import string;$/;"	v
string	$C2_ROOT/ir/live_map.c2	/^import string;$/;"	v
string	$C2_ROOT/ir/lookup_table.c2	/^import string;$/;"	v
string	$C2_ROOT/ir/print.c2	/^import string;$/;"	v
string	$C2_ROOT/ir/rev_list.c2	/^import string;$/;"	v
string	$C2_ROOT/ir/slot_values.c2	/^import string;$/;"	v
string	$C2_ROOT/ir/slot_writes_map.c2	/^import string;$/;"	v
string	$C2_ROOT/libs/libc/stdlib.c2i	/^import string;$/;"	v
string	$C2_ROOT/libs/libc/string.c2i	/^module string;$/;"	v
string	$C2_ROOT/parser/ast_builder.c2	/^import string;$/;"	v
string	$C2_ROOT/parser/c2_parser_expr.c2	/^import string;$/;"	v
string	$C2_ROOT/parser/c2_tokenizer.c2	/^import string;$/;"	v
string	$C2_ROOT/parser/keywords.c2	/^import string;$/;"	v
string	$C2_ROOT/parser/token.c2	/^import string;$/;"	v
string	$C2_ROOT/plugins/refs_generator.c2	/^import string;$/;"	v
string	$C2_ROOT/plugins/unit_test1.c2	/^import string;$/;"	v
string	$C2_ROOT/plugins/unit_test_plugin.c2	/^import string;$/;"	v
stringLiteralBits	$C2_ROOT/ast/stmt.c2	/^        StringLiteralBits stringLiteralBits;$/;"	v
stringLiteralBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_StringLiteralBits stringLiteralBits;$/;"	v
string_buffer	$C2_ROOT/analyser/module_analyser_switch.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/alias_type.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/alias_type_decl.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/array_designated_init_expr.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/array_subscript_expr.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/array_type.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/array_value.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/asm_stmt.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/assert_stmt.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/ast.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/binary_operator.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/bitoffset_expr.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/boolean_literal.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/break_stmt.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/builtin_expr.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/builtin_type.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/call_expr.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/char_literal.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/compound_stmt.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/conditional_operator.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/continue_stmt.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/decl.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/decl_stmt.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/enum_constant_decl.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/enum_type.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/enum_type_decl.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/explicit_cast_expr.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/expr.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/fallthrough_stmt.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/field_designated_init_expr.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/float_literal.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/for_stmt.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/function_decl.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/function_type.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/function_type_decl.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/goto_stmt.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/identifier_expr.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/if_stmt.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/implicit_cast_expr.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/import_decl.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/init_list_expr.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/integer_literal.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/label_stmt.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/member_expr.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/module.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/module_type.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/nil_expr.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/paren_expr.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/pointer_type.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/qualtype.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/range_expr.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/return_stmt.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/static_assert.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/stmt.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/string_literal.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/struct_type.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/struct_type_decl.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/switch_case.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/switch_stmt.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/symbol_table.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/type.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/type_expr.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/type_ref.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/unary_operator.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/var_decl.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast/while_stmt.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ast_utils/string_buffer.c2	/^module string_buffer;$/;"	v
string_buffer	$C2_ROOT/common/component.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/common/diagnostics.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/common/manifest_writer.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/compiler/compiler.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/compiler/compiler_libs.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/compiler/main.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/generator/c/c_generator.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/generator/c/c_generator_call.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/generator/c/c_generator_expr.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/generator/c/c_generator_special.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/generator/c/c_generator_stmt.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/generator/c/c_generator_trace.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/generator/c2i/c2i_generator.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/generator/c2i/c2i_generator_expr.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/generator/c2i/c2i_generator_stmt.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/generator/ir/ir_generator.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ir/graphviz.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/ir/print.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/parser/c2_parser.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/parser/c2_tokenizer.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/plugins/deps_generator.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/plugins/plugin_info.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^import string_buffer;$/;"	v
string_buffer	$C2_ROOT/plugins/unit_test_plugin.c2	/^import string_buffer;$/;"	v
string_buffer_Buf	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct string_buffer_Buf_ string_buffer_Buf;$/;"	v
string_capacity	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t string_capacity;$/;"	v
string_capacity	$C2_ROOT/generator/c/c_generator_trace.c2	/^    u32 string_capacity;$/;"	v
string_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t string_count;$/;"	v
string_count	$C2_ROOT/generator/c/c_generator_trace.c2	/^    u32 string_count;$/;"	v
string_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t string_idx;$/;"	v
string_list	$C2_ROOT/common/build_file.c2	/^import string_list;$/;"	v
string_list	$C2_ROOT/common/build_target.c2	/^import string_list;$/;"	v
string_list	$C2_ROOT/common/component.c2	/^import string_list;$/;"	v
string_list	$C2_ROOT/common/component_sorter.c2	/^import string_list;$/;"	v
string_list	$C2_ROOT/common/manifest_writer.c2	/^import string_list;$/;"	v
string_list	$C2_ROOT/common/string_list.c2	/^module string_list;$/;"	v
string_list	$C2_ROOT/compiler/c2recipe_parser.c2	/^import string_list;$/;"	v
string_list	$C2_ROOT/compiler/compiler.c2	/^import string_list;$/;"	v
string_list	$C2_ROOT/compiler/compiler_libs.c2	/^import string_list;$/;"	v
string_list	$C2_ROOT/compiler/main.c2	/^import string_list;$/;"	v
string_list	$C2_ROOT/compiler/manifest.c2	/^import string_list;$/;"	v
string_list	$C2_ROOT/compiler/plugin_mgr.c2	/^import string_list;$/;"	v
string_list	$C2_ROOT/generator/c/c_generator.c2	/^import string_list;$/;"	v
string_list	$C2_ROOT/generator/c/c_generator_special.c2	/^import string_list;$/;"	v
string_list	$C2_ROOT/generator/c2i/c2i_generator.c2	/^import string_list;$/;"	v
string_list	$C2_ROOT/parser/c2_parser.c2	/^import string_list;$/;"	v
string_list	$C2_ROOT/parser/c2_parser_stmt.c2	/^import string_list;$/;"	v
string_list	$C2_ROOT/parser/c2_tokenizer.c2	/^import string_list;$/;"	v
string_list	$C2_ROOT/plugins/deps_generator.c2	/^import string_list;$/;"	v
string_list_List	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct string_list_List_ string_list_List;$/;"	v
string_pool	$C2_ROOT/analyser/module_analyser.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/ast/ast.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/ast/module.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/ast/utils.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/ast_utils/attr.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/ast_utils/string_pool.c2	/^module string_pool;$/;"	v
string_pool	$C2_ROOT/common/build_file.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/common/build_target.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/common/component.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/common/source_mgr.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/common/string_list.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/compiler/c2recipe.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/compiler/c2recipe_parser.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/compiler/compiler.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/compiler/main.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/compiler/manifest.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/compiler/plugin_mgr.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/generator/c/c_generator.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/generator/c2i/c2i_generator.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/generator/ir/ir_generator.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/ir/context.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/parser/ast_builder.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/parser/c2_parser.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/parser/c2_tokenizer.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/parser/keywords.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/plugins/deps_generator.c2	/^import string_pool;$/;"	v
string_pool	$C2_ROOT/plugins/plugin_info.c2	/^import string_pool;$/;"	v
string_pool_DATA_ALIGN	$C2_ROOT/bootstrap/bootstrap.c	/^   p->data_size = string_pool_DATA_ALIGN;$/;"	v
string_pool_HASH_INITIAL	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t result = string_pool_HASH_INITIAL;$/;"	v
string_pool_HASH_PRIME	$C2_ROOT/bootstrap/bootstrap.c	/^      result *= string_pool_HASH_PRIME;$/;"	v
string_pool_HashEntry	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint32_t string_pool_HashEntry;$/;"	v
string_pool_Pool	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct string_pool_Pool_ string_pool_Pool;$/;"	v
string_types	$C2_ROOT/ast/utils.c2	/^    StringTypePool string_types;$/;"	v
string_types	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_StringTypePool string_types;$/;"	v
string_utils	$C2_ROOT/common/string_utils.c2	/^module string_utils;$/;"	v
string_utils	$C2_ROOT/compiler/main.c2	/^import string_utils;$/;"	v
string_utils	$C2_ROOT/compiler/plugin_mgr.c2	/^import string_utils;$/;"	v
string_utils	$C2_ROOT/generator/c/c_generator.c2	/^import string_utils;$/;"	v
string_utils	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^import string_utils;$/;"	v
strings	$C2_ROOT/bootstrap/bootstrap.c	/^   char** strings;$/;"	v
strings	$C2_ROOT/generator/c/c_generator_trace.c2	/^    char **strings;$/;"	v
strings	$C2_ROOT/libs/libc/strings.c2i	/^module strings;$/;"	v
strings2	$C2_ROOT/bootstrap/bootstrap.c	/^      sl->strings = strings2;$/;"	v
strings2	$C2_ROOT/generator/c/c_generator_trace.c2	/^        sl.strings = strings2;$/;"	v
stringtonumber	$C2_ROOT/libs/lua/lua.c2i	/^fn c_size stringtonumber(State *L, const c_char *s) @(cname="lua_stringtonumber");$/;"	f
stripNewLine	$C2_ROOT/common/string_utils.c2	/^public fn char* stripNewLine(char* buf) @(unused) {$/;"	f
strlcat	$C2_ROOT/libs/libc/string.c2i	/^fn c_size strlcat(c_char* dest, const c_char* src, c_size n);$/;"	f
strlcpy	$C2_ROOT/libs/libc/string.c2i	/^fn c_size strlcpy(c_char* dest, const c_char* src, c_size n);$/;"	f
strlen	$C2_ROOT/ast/string_literal.c2	/^public fn u32 StringLiteral.strlen(const StringLiteral* e) {$/;"	f
strlen	$C2_ROOT/libs/libc/string.c2i	/^fn c_size strlen(const c_char* s);$/;"	f
strncasecmp	$C2_ROOT/libs/libc/string.c2i	/^fn c_int strncasecmp(const c_char* s1, const c_char* s2, c_size n);$/;"	f
strncat	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* strncat(c_char* dest, const c_char* src, c_size n);$/;"	f
strncmp	$C2_ROOT/libs/libc/string.c2i	/^fn c_int strncmp(const c_char* s1, const c_char* s2, c_size n);$/;"	f
strncpy	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* strncpy(c_char* dest, const c_char* src, c_size n);$/;"	f
strndup	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* strndup(const c_char* s, c_size n);$/;"	f
strnlen	$C2_ROOT/libs/libc/string.c2i	/^fn c_size strnlen(const c_char* s, c_size n);$/;"	f
strnstr	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* strnstr(const c_char* s1, const c_char* s2, c_size n);$/;"	f
strpbrk	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* strpbrk(const c_char* s1, const c_char* s2);$/;"	f
strrchr	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* strrchr(const c_char* s, c_int c);$/;"	f
strsep	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* strsep(c_char** stringp, const c_char* delim);$/;"	f
strsignal	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* strsignal(c_int sig);$/;"	f
strspn	$C2_ROOT/libs/libc/string.c2i	/^fn c_size strspn(const c_char* s1, const c_char* s2);$/;"	f
strstr	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* strstr(const c_char* s1, const c_char* s2);$/;"	f
strtod	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_double strtod(const c_char* nptr, c_char** endptr);$/;"	f
strtof	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_float strtof(const c_char* nptr, c_char** endptr);$/;"	f
strtok	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* strtok(c_char* s1, const c_char* s2);$/;"	f
strtok_r	$C2_ROOT/libs/libc/string.c2i	/^fn c_char* strtok_r(c_char* s, const c_char* delim, c_char** save_ptr);$/;"	f
strtol	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_long strtol(const c_char* nptr, c_char** endptr, c_int base);$/;"	f
strtoll	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_longlong strtoll(const c_char* nptr, c_char** endptr, c_int base);$/;"	f
strtoq	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_longlong strtoq(const c_char* nptr, c_char** endptr, c_int base);$/;"	f
strtoul	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_ulong strtoul(const c_char* nptr, c_char** endptr, c_int base);$/;"	f
strtoull	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_ulonglong strtoull(const c_char* nptr, c_char** endptr, c_int base);$/;"	f
strtouq	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_ulonglong strtouq(const c_char* nptr, c_char** endptr, c_int base);$/;"	f
struct	$C2_ROOT/libs/io_uring/io_uring.c2i	/^struct statx;$/;"	v
structExpr	$C2_ROOT/parser/ast_builder.c2	/^                                                     structExpr,$/;"	v
structTypeDeclBits	$C2_ROOT/ast/decl.c2	/^        StructTypeDeclBits structTypeDeclBits;$/;"	v
structTypeDeclBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_StructTypeDeclBits structTypeDeclBits;$/;"	v
struct_func_list	$C2_ROOT/analyser/struct_func_list.c2	/^module struct_func_list;$/;"	v
struct_func_list_Info	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct struct_func_list_Info_ struct_func_list_Info;$/;"	v
struct_func_list_List	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct struct_func_list_List_ struct_func_list_List;$/;"	v
struct_functions	$C2_ROOT/ast/struct_type_decl.c2	/^    return (const FunctionDecl**)d.struct_functions;$/;"	v
struct_functions	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_FunctionDecl** struct_functions;$/;"	v
struct_size	$C2_ROOT/bootstrap/bootstrap.c	/^   l->size = struct_size;$/;"	v
struct_size	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^    l.size = struct_size;$/;"	v
strxfrm	$C2_ROOT/libs/libc/string.c2i	/^fn c_size strxfrm(c_char* s1, const c_char* s2, c_size n);$/;"	f
sub	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec4 Vec4.sub(const Vec4* a, const Vec4* b) {$/;"	f
subdir	$C2_ROOT/plugins/deps_generator.c2	/^    return subdir;$/;"	v
subdir2	$C2_ROOT/plugins/deps_generator.c2	/^              subdir2$/;"	v
subdirs	$C2_ROOT/plugins/deps_generator.c2	/^    Dir* subdirs;$/;"	v
submit	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn c_int Ring.submit(Ring *ring) @(cname="io_uring_submit");$/;"	f
submit_and_wait	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn c_int Ring.submit_and_wait(Ring *ring, u32 wait_nr) @(cname="io_uring_submit_and_wait");$/;"	f
subroot_idx	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    *parent_idx = subroot_idx;$/;"	v
substruct_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t substruct_idx;$/;"	v
succeeded	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool succeeded;$/;"	v
sun_family	$C2_ROOT/libs/libc/sys_socket.c2i	/^    SaFamily sun_family;$/;"	v
sun_path	$C2_ROOT/libs/libc/sys_socket.c2i	/^    char[UNIX_PATH_MAX] sun_path;$/;"	v
suseconds_t	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^> typedef int32_t suseconds_t;$/;"	v
suseconds_t	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^> typedef int32_t suseconds_t;$/;"	v
suseconds_t	$C2_ROOT/bootstrap/bootstrap.c	/^typedef int64_t suseconds_t;$/;"	v
suspended	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^fn bool suspended() @(cname="saudio_suspended");$/;"	f
svalue	$C2_ROOT/ast/value.c2	/^        v.uvalue = (u64)svalue;$/;"	v
svalue	$C2_ROOT/bootstrap/bootstrap.c	/^      float svalue;$/;"	v
svalue	$C2_ROOT/ir/constant.c2	/^        f32 svalue;$/;"	v
swap	$C2_ROOT/common/quicksort.c2	/^fn void swap(u8* item, u8* other, usize size) {$/;"	f
swap	$C2_ROOT/ir/block_list.c2	/^public fn void BlockList.swap(BlockList* l1, BlockList* l2) {$/;"	f
swap	$C2_ROOT/ir/instr_list.c2	/^public fn void InstrList.swap(InstrList* l, InstrList* other) {$/;"	f
swap	$C2_ROOT/ir_examples/swap.c2	/^fn i32 swap(i32 a, i32 b) {$/;"	f
swap_interval	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    i32 swap_interval;$/;"	v
swapchain	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    Swapchain swapchain;$/;"	v
swapchain	$C2_ROOT/libs/sokol/sokol_glue.c2i	/^fn Swapchain swapchain() @(cname="sglue_swapchain");$/;"	f
switchStmtBits	$C2_ROOT/ast/stmt.c2	/^        SwitchStmtBits switchStmtBits;$/;"	v
switchStmtBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_SwitchStmtBits switchStmtBits;$/;"	v
symbol	$C2_ROOT/ir/context.c2	/^    t.arg2 = symbol;$/;"	v
symbols	$C2_ROOT/analyser/scope.c2	/^    s.symbols = symbols;$/;"	v
symbols	$C2_ROOT/ast/module.c2	/^    SymbolTable symbols;$/;"	v
symbols	$C2_ROOT/ast/symbol_table.c2	/^    u32* symbols;$/;"	v
symbols	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t* symbols;$/;"	v
symbols	$C2_ROOT/generator/c2refs.c2	/^    radix_tree.Tree* symbols;$/;"	v
symbols	$C2_ROOT/ir/context.c2	/^    SymbolList symbols;$/;"	v
symbols	$C2_ROOT/ir/symbol_list.c2	/^    Symbol* symbols;$/;"	v
symbols2	$C2_ROOT/bootstrap/bootstrap.c	/^   l->symbols = symbols2;$/;"	v
symbols2	$C2_ROOT/ir/symbol_list.c2	/^    l.symbols = symbols2;$/;"	v
sync	$C2_ROOT/common/utf8.c2	/^public fn u32 sync(const char* p) {$/;"	f
sync	$C2_ROOT/libs/libc/unistd.c2i	/^fn void sync();$/;"	f
sync_range_flags	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        u32       sync_range_flags;$/;"	v
syntax_error	$C2_ROOT/bootstrap/bootstrap.c	/^                  if ((c2_tokenizer_Tokenizer_lex_preproc(t, result) != token_Kind_RParen)) goto/;"	v
syntax_error	$C2_ROOT/parser/c2_tokenizer.c2	/^                            goto syntax_error;$/;"	v
sys	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_System sys;$/;"	v
sys	$C2_ROOT/common/target_info.c2	/^    System sys;$/;"	v
sys_ioctl	$C2_ROOT/libs/libc/sys_ioctl.c2i	/^module sys_ioctl;$/;"	v
sys_mman	$C2_ROOT/libs/libc/sys_mman.c2i	/^module sys_mman;$/;"	v
sys_sendfile	$C2_ROOT/libs/libc/sys_sendfile.c2i	/^module sys_sendfile;$/;"	v
sys_signalfd	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^module sys_signalfd;$/;"	v
sys_socket	$C2_ROOT/libs/io_uring/io_uring.c2i	/^import sys_socket;$/;"	v
sys_socket	$C2_ROOT/libs/libc/ifaddrs.c2i	/^import sys_socket;$/;"	v
sys_socket	$C2_ROOT/libs/libc/net_if.c2i	/^import sys_socket;$/;"	v
sys_socket	$C2_ROOT/libs/libc/sys_socket.c2i	/^module sys_socket;$/;"	v
sys_stat	$C2_ROOT/libs/libc/sys_stat.c2i	/^module sys_stat;$/;"	v
sys_str	$C2_ROOT/common/target_info.c2	/^    char[32] sys_str;$/;"	v
sys_time	$C2_ROOT/common/utils.c2	/^import sys_time;$/;"	v
sys_time	$C2_ROOT/libs/libc/sys_time.c2i	/^module sys_time;$/;"	v
sys_time	$C2_ROOT/plugins/unit_test2.c2	/^import sys_time;$/;"	v
sys_utsname	$C2_ROOT/common/target_info.c2	/^import sys_utsname;$/;"	v
sys_utsname	$C2_ROOT/libs/libc/sys_utsname.c2i	/^module sys_utsname;$/;"	v
sysconf	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_long sysconf(c_int name);$/;"	f
sysname	$C2_ROOT/libs/libc/sys_utsname.c2i	/^    char[NAME_LEN] sysname;$/;"	v
system	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int system(const c_char* __command);$/;"	f
sz	$C2_ROOT/ast/asm_stmt.c2	/^        tail += sz;$/;"	v
sz	$C2_ROOT/bootstrap/bootstrap.c	/^      tail += sz;$/;"	v
t2	$C2_ROOT/generator/c2refs.c2	/^    return t2;$/;"	v
t2f	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void t2f(f32 u, f32 v) @(cname="sgl_t2f");$/;"	f
t_ptr	$C2_ROOT/generator/c2refs.c2	/^    Links* t = *t_ptr;$/;"	v
tab	$C2_ROOT/parser/c2_tokenizer.c2	/^            char[4] tab;$/;"	v
tab_width	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    i32 tab_width;$/;"	v
tail	$C2_ROOT/ast/asm_stmt.c2	/^    return (u32*)tail;$/;"	v
tail	$C2_ROOT/bootstrap/bootstrap.c	/^   numrefs -= tail;$/;"	v
tail	$C2_ROOT/generator/ir/ir_generator_member.c2	/^    numrefs -= tail;$/;"	v
tail	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32 tail;$/;"	v
tan	$C2_ROOT/libs/math/math.c2i	/^fn c_double tan(c_double);$/;"	f
tanf	$C2_ROOT/libs/math/math.c2i	/^fn c_float tanf(c_float);$/;"	f
tanh	$C2_ROOT/libs/math/math.c2i	/^fn c_double tanh(c_double);$/;"	f
tanhf	$C2_ROOT/libs/math/math.c2i	/^fn c_float tanhf(c_float);$/;"	f
target	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t target;$/;"	v
target	$C2_ROOT/common/build_file.c2	/^    u32 target;$/;"	v
target	$C2_ROOT/compiler/c2recipe_parser.c2	/^    build_target.Target* target;$/;"	v
target	$C2_ROOT/compiler/compiler.c2	/^    info.target = target;$/;"	v
target	$C2_ROOT/generator/c/c_generator.c2	/^    gen.target = target;$/;"	v
target	$C2_ROOT/generator/ir/ir_generator.c2	/^    gen.target = target;$/;"	v
target	$C2_ROOT/plugins/plugin_info.c2	/^    build_target.Target* target;$/;"	v
target2compKind	$C2_ROOT/compiler/compiler.c2	/^fn component.Kind target2compKind(build_target.Kind k) {$/;"	f
targetInfo	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Info targetInfo;$/;"	v
targetInfo	$C2_ROOT/compiler/compiler.c2	/^    target_info.Info targetInfo;$/;"	v
targetInfo	$C2_ROOT/generator/c/c_generator.c2	/^    gen.targetInfo = targetInfo;$/;"	v
targetInfo	$C2_ROOT/generator/ir/ir_generator.c2	/^    const target_info.Info* targetInfo;$/;"	v
target_info	$C2_ROOT/common/target_info.c2	/^module target_info;$/;"	v
target_info	$C2_ROOT/compiler/compiler.c2	/^import target_info;$/;"	v
target_info	$C2_ROOT/generator/c/c_generator.c2	/^import target_info;$/;"	v
target_info	$C2_ROOT/generator/c/c_generator_special.c2	/^import target_info;$/;"	v
target_info	$C2_ROOT/generator/ir/ir_generator.c2	/^import target_info;$/;"	v
target_info_Abi	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t target_info_Abi;$/;"	v
target_info_Abi_BSD	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Abi_BSD,$/;"	v
target_info_Abi_GNU	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Abi_GNU,$/;"	v
target_info_Abi_GNU_EABI	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Abi_GNU_EABI,$/;"	v
target_info_Abi_MACHO	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Abi_MACHO,$/;"	v
target_info_Abi_Rv32G	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Abi_Rv32G,$/;"	v
target_info_Abi_Unknown	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Abi_Unknown,$/;"	v
target_info_Abi_WIN32	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Abi_WIN32,$/;"	v
target_info_Arch	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t target_info_Arch;$/;"	v
target_info_Arch_Amd64	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Arch_Amd64,$/;"	v
target_info_Arch_Arm	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Arch_Arm,$/;"	v
target_info_Arch_Arm64	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Arch_Arm64,$/;"	v
target_info_Arch_I686	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Arch_I686,$/;"	v
target_info_Arch_Riscv_32	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Arch_Riscv_32,$/;"	v
target_info_Arch_Unknown	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Arch_Unknown,$/;"	v
target_info_Arch_X86_64	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Arch_X86_64,$/;"	v
target_info_Info	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct target_info_Info_ target_info_Info;$/;"	v
target_info_System	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t target_info_System;$/;"	v
target_info_System_Cygwin	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_System_Cygwin,$/;"	v
target_info_System_Darwin	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_System_Darwin,$/;"	v
target_info_System_FreeBSD	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_System_FreeBSD,$/;"	v
target_info_System_Linux	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_System_Linux,$/;"	v
target_info_System_OpenBSD	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_System_OpenBSD,$/;"	v
target_info_System_Unknown	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_System_Unknown,$/;"	v
target_info_Vendor	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t target_info_Vendor;$/;"	v
target_info_Vendor_Apple	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Vendor_Apple,$/;"	v
target_info_Vendor_Unknown	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Vendor_Unknown,$/;"	v
target_kind	$C2_ROOT/bootstrap/bootstrap.c	/^   build_target_Kind target_kind;$/;"	v
target_kind	$C2_ROOT/generator/c/c_generator.c2	/^    build_target.Kind target_kind;$/;"	v
target_name	$C2_ROOT/generator/c/c_generator_special.c2	/^    char[file_utils.Max_path] target_name;$/;"	v
target_name	$C2_ROOT/plugins/plugin_info.c2	/^    char[32] target_name;$/;"	v
target_triple	$C2_ROOT/bootstrap/bootstrap.c	/^   const char* target_str = opts->target_triple;$/;"	v
target_triple	$C2_ROOT/compiler/compiler.c2	/^    const char* target_str = opts.target_triple;$/;"	v
targets	$C2_ROOT/bootstrap/bootstrap.c	/^   string_list_List targets;$/;"	v
targets	$C2_ROOT/compiler/c2recipe.c2	/^    build_target.Target** targets;$/;"	v
targets	$C2_ROOT/compiler/main.c2	/^    string_list.List targets;$/;"	v
targets2	$C2_ROOT/bootstrap/bootstrap.c	/^      r->targets = targets2;$/;"	v
targets2	$C2_ROOT/compiler/c2recipe.c2	/^        r.targets = targets2;$/;"	v
targets_started	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool targets_started;$/;"	v
targets_started	$C2_ROOT/compiler/c2recipe_parser.c2	/^    bool targets_started;$/;"	v
tcgetattr	$C2_ROOT/libs/libc/ctermios.c2i	/^fn c_int tcgetattr(c_int fd, Termios* termios_p);$/;"	f
tcsetattr	$C2_ROOT/libs/libc/ctermios.c2i	/^fn c_int tcsetattr(c_int fd, c_int optional_actions, const Termios* termios_p);$/;"	f
teardown	$C2_ROOT/plugins/unit_test1.c2	/^   TestFn teardown;$/;"	v
teardown	$C2_ROOT/plugins/unit_test_plugin.c2	/^    bool teardown;$/;"	v
teardown_name	$C2_ROOT/plugins/unit_test_plugin.c2	/^    u32 teardown_name;$/;"	v
temp	$C2_ROOT/ast/qualtype.c2	/^    return (Type*)temp;$/;"	v
temp_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t temp_nr = ph->temp_count;$/;"	v
temp_count	$C2_ROOT/ir/print.c2	/^    u32 temp_nr = ph.temp_count;$/;"	v
temp_ids	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t* temp_ids;$/;"	v
temp_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t temp_idx;$/;"	v
temp_idx	$C2_ROOT/ir/slot_collector.c2	/^    u32 temp_idx;$/;"	v
temp_nr	$C2_ROOT/bootstrap/bootstrap.c	/^   return temp_nr;$/;"	v
temp_nr	$C2_ROOT/ir/print.c2	/^    return temp_nr;$/;"	v
template_arg	$C2_ROOT/ast/type_ref.c2	/^    return r.refs[0].name_idx == template_arg;$/;"	v
template_idx	$C2_ROOT/ast/call_expr.c2	/^    return e.template_idx;$/;"	v
template_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint16_t template_idx;$/;"	v
template_loc	$C2_ROOT/ast/function_decl.c2	/^    return d.template_loc;$/;"	v
template_loc	$C2_ROOT/bootstrap/bootstrap.c	/^   src_loc_SrcLoc template_loc;$/;"	v
template_loc	$C2_ROOT/parser/ast_builder.c2	/^                                                  template_loc,$/;"	v
template_loc	$C2_ROOT/parser/c2_parser.c2	/^                                                template_loc,$/;"	v
template_mod	$C2_ROOT/analyser/module_analyser_call.c2	/^                                             template_mod,$/;"	v
template_name	$C2_ROOT/ast/function_decl.c2	/^    return d.template_name;$/;"	v
template_name	$C2_ROOT/ast/instantiator.c2	/^    u32 template_name;$/;"	v
template_name	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t template_name;$/;"	v
template_name	$C2_ROOT/parser/ast_builder.c2	/^                                                  template_name,$/;"	v
template_name	$C2_ROOT/parser/c2_parser.c2	/^                                                template_name,$/;"	v
tempnam	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_char* tempnam(const c_char* __dir, const c_char* __pfx);$/;"	f
temps	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t* temps;$/;"	v
temps	$C2_ROOT/ir/register_alloc.c2	/^    u32* temps;$/;"	v
term4	$C2_ROOT/libs/sokol/sokol_math.c2i	/^    return m.m[0] * term1 - m.m[1] * term2 + m.m[2] * term3 - m.m[3] * term4;$/;"	v
ternaryMiddle	$C2_ROOT/parser/c2_parser_expr.c2	/^                                                     ternaryMiddle,$/;"	v
test	$C2_ROOT/ir_examples/arith.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/array.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/bitfield_init.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/builtins.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/calls.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/cond_decl.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/for.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/functions.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/global_arrays.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/global_vars.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/goto.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/hello.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/if_stmt.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/label.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/logic.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/members.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/struct_func.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/struct_init.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/struct_init_anonymous.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/swap.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/types.c2	/^module test;$/;"	v
test	$C2_ROOT/ir_examples/while.c2	/^module test;$/;"	v
test1	$C2_ROOT/ir_examples/bitfield_init.c2	/^fn Iter test1(u32 a, u32 b) {$/;"	f
test1	$C2_ROOT/ir_examples/builtins.c2	/^fn void test1(i32 i) {$/;"	f
test1	$C2_ROOT/ir_examples/calls.c2	/^fn i32 test1(i32 a) {$/;"	f
test1	$C2_ROOT/ir_examples/functions.c2	/^fn void test1() {}$/;"	f
test1	$C2_ROOT/ir_examples/label.c2	/^fn i32 test1(i32 a) {$/;"	f
test2	$C2_ROOT/ir_examples/bitfield_init.c2	/^fn Iter test2() {$/;"	f
test2	$C2_ROOT/ir_examples/functions.c2	/^fn void test2(i32 a, char b, void* c) {$/;"	f
test2	$C2_ROOT/ir_examples/label.c2	/^public fn i32 test2() {$/;"	f
test3	$C2_ROOT/ir_examples/functions.c2	/^fn i32 test3(i16 b) {$/;"	f
test4	$C2_ROOT/ir_examples/functions.c2	/^fn void* test4(u64 a, bool b) {$/;"	f
test5	$C2_ROOT/ir_examples/functions.c2	/^fn Enum test5() {$/;"	f
test6	$C2_ROOT/ir_examples/functions.c2	/^fn Alias test6() {$/;"	f
test_and2	$C2_ROOT/ir_examples/logic.c2	/^fn void test_and2(i32 a, i32 b) {$/;"	f
test_and2b_0a	$C2_ROOT/ir_examples/logic.c2	/^fn void test_and2b_0a(i32 a) {$/;"	f
test_and2b_1a	$C2_ROOT/ir_examples/logic.c2	/^fn void test_and2b_1a(i32 a) {$/;"	f
test_and2b_a0	$C2_ROOT/ir_examples/logic.c2	/^fn void test_and2b_a0(i32 a) {$/;"	f
test_and2b_a1	$C2_ROOT/ir_examples/logic.c2	/^fn void test_and2b_a1(i32 a) {$/;"	f
test_and3	$C2_ROOT/ir_examples/logic.c2	/^fn void test_and3(bool a, bool b, bool c) {$/;"	f
test_and3_0	$C2_ROOT/ir_examples/logic.c2	/^fn void test_and3_0(bool a, bool b, bool c) {$/;"	f
test_and_or	$C2_ROOT/ir_examples/logic.c2	/^fn void test_and_or(bool a, bool b, bool c) {$/;"	f
test_array	$C2_ROOT/libs/c2/c2_test.c2i	/^char[] test_array;$/;"	v
test_if	$C2_ROOT/ir_examples/logic.c2	/^fn void test_if(i32 a) {$/;"	f
test_mode	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool test_mode;$/;"	v
test_mode	$C2_ROOT/compiler/compiler.c2	/^    bool test_mode;$/;"	v
test_or2	$C2_ROOT/ir_examples/logic.c2	/^fn void test_or2(bool a, bool b, i32 c) {$/;"	f
test_or2_0	$C2_ROOT/ir_examples/logic.c2	/^fn void test_or2_0(bool a) {$/;"	f
test_or2_1a	$C2_ROOT/ir_examples/logic.c2	/^fn void test_or2_1a(bool a) {$/;"	f
test_or2_1b	$C2_ROOT/ir_examples/logic.c2	/^fn void test_or2_1b(bool a) {$/;"	f
test_or3	$C2_ROOT/ir_examples/logic.c2	/^fn void test_or3(bool a, bool b, bool c) {$/;"	f
test_or_and	$C2_ROOT/ir_examples/logic.c2	/^fn void test_or_and(bool a, bool b, bool c) {$/;"	f
test_tocontainer	$C2_ROOT/ir_examples/builtins.c2	/^fn void test_tocontainer(void* ptr) {$/;"	f
tests	$C2_ROOT/plugins/unit_test1.c2	/^   const C2Test* tests;$/;"	v
tests	$C2_ROOT/plugins/unit_test_plugin.c2	/^    FunctionDeclList tests;$/;"	v
tex	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void*[2] tex;$/;"	v
tex2d	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* tex2d;$/;"	v
tex3d	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* tex3d;$/;"	v
tex_target	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 tex_target;$/;"	v
tex_view	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32[2] tex_view;$/;"	v
texcoordVertexAttrState	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn VertexAttrState texcoordVertexAttrState() @(cname="sshape_texcoord_vertex_attr_state");$/;"	f
text	$C2_ROOT/ast/value.c2	/^    local char[4][64] text;$/;"	v
text	$C2_ROOT/ast_utils/attr.c2	/^        u32 text;$/;"	v
text	$C2_ROOT/bootstrap/bootstrap.c	/^   char* text;$/;"	v
text	$C2_ROOT/common/yaml/yaml_data.c2	/^    char* text;$/;"	v
text2	$C2_ROOT/bootstrap/bootstrap.c	/^   d->text = text2;$/;"	v
text2	$C2_ROOT/common/yaml/yaml_data.c2	/^    d.text = text2;$/;"	v
text_cur	$C2_ROOT/bootstrap/bootstrap.c	/^   char* text_cur;$/;"	v
text_cur	$C2_ROOT/common/yaml/yaml_data.c2	/^    char* text_cur;$/;"	v
text_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t idx = p->tok.text_idx;$/;"	v
text_idx	$C2_ROOT/parser/c2_parser.c2	/^                a.value.text = p.tok.text_idx;$/;"	v
text_idx	$C2_ROOT/parser/c2_parser_expr.c2	/^    u32 idx = p.tok.text_idx;$/;"	v
text_len	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t len = p->tok.text_len;$/;"	v
text_len	$C2_ROOT/parser/c2_parser_expr.c2	/^    u32 len = p.tok.text_len;$/;"	v
text_size	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t text_size;$/;"	v
text_size	$C2_ROOT/common/yaml/yaml_data.c2	/^    u32 text_size;$/;"	v
texture	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    TextureViewDesc texture;$/;"	v
texture	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void texture(View tex_view, Sampler smp) @(cname="sgl_texture");$/;"	f
texture_sampler_pairs	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ShaderTextureSamplerPair[32] texture_sampler_pairs;$/;"	v
tgamma	$C2_ROOT/libs/math/math.c2i	/^fn c_double tgamma(c_double);$/;"	f
tgammaf	$C2_ROOT/libs/math/math.c2i	/^fn c_float tgammaf(c_float);$/;"	f
then	$C2_ROOT/ast/if_stmt.c2	/^    s.then = then;$/;"	v
then	$C2_ROOT/bootstrap/bootstrap.c	/^   s->then = then;$/;"	v
this_update	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    X509_time this_update;$/;"	v
thread	$C2_ROOT/ir/work_queue.c2	/^    pthread.Pthread thread;$/;"	v
tiles	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    u16 tiles;$/;"	v
time	$C2_ROOT/libs/libc/libc_time.c2i	/^fn Time time(Time* tloc);$/;"	f
time_t	$C2_ROOT/bootstrap/bootstrap.c	/^typedef int64_t time_t;$/;"	v
timeout_flags	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        u32       timeout_flags;$/;"	v
timeout_sec	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^    u32 timeout_sec;$/;"	v
timer	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    Timing_hr_time   timer;$/;"	v
timeval	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct timeval_ timeval;$/;"	v
timezone	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct timezone_ timezone;$/;"	v
timing_get_delay	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int timing_get_delay(void *data) @(cname="mbedtls_timing_get_delay");$/;"	f
timing_set_delay	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void timing_set_delay( void *data, u32 int_ms, u32 fin_ms ) @(cname="mbedtls_timing_set_delay/;"	f
tm_gmtoff	$C2_ROOT/libs/libc/libc_time.c2i	/^    c_long tm_gmtoff;$/;"	v
tm_zone	$C2_ROOT/libs/libc/libc_time.c2i	/^    const c_char* tm_zone;$/;"	v
tmp	$C2_ROOT/ast/decl.c2	/^    return tmp;$/;"	v
tmp	$C2_ROOT/ast/integer_literal.c2	/^    char[1+(64+3-1)\/3+1] tmp;$/;"	v
tmp	$C2_ROOT/ast_utils/string_buffer.c2	/^    char[4096] tmp;$/;"	v
tmp	$C2_ROOT/bootstrap/bootstrap.c	/^   return tmp;$/;"	v
tmp	$C2_ROOT/common/file/file_utils.c2	/^    char[file_utils.Max_path] tmp;$/;"	v
tmp	$C2_ROOT/common/quicksort.c2	/^        *item = tmp;$/;"	v
tmp	$C2_ROOT/common/source_mgr.c2	/^    return tmp;$/;"	v
tmp	$C2_ROOT/compiler/compiler.c2	/^    char[32] tmp;$/;"	v
tmp	$C2_ROOT/ir/block_list.c2	/^    *l2 = tmp;$/;"	v
tmp	$C2_ROOT/ir/instr_list.c2	/^    *l = tmp;$/;"	v
tmp	$C2_ROOT/ir/ref.c2	/^    return tmp;$/;"	v
tmp	$C2_ROOT/ir_examples/swap.c2	/^    b = tmp;$/;"	v
tmp_info	$C2_ROOT/bootstrap/bootstrap.c	/^   symbol->f.info = c->b.tmp_info;$/;"	v
tmp_info	$C2_ROOT/ir/context.c2	/^    FunctionInfo* tmp_info;$/;"	v
tmp_ref	$C2_ROOT/ir/slot_collector.c2	/^                    wr.ref = tmp_ref;$/;"	v
tmpfile	$C2_ROOT/libs/libc/stdio.c2i	/^fn FILE* tmpfile();$/;"	f
tmpfile64	$C2_ROOT/libs/libc/stdio.c2i	/^fn FILE* tmpfile64(void);$/;"	f
tmpnam_r	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_char* tmpnam_r(c_char* __s);$/;"	f
toBool	$C2_ROOT/ast/value.c2	/^fn Value Value.toBool(const Value* v) {$/;"	f
toFloat	$C2_ROOT/ast/value.c2	/^fn f64 Value.toFloat(const Value* v) {$/;"	f
toLower	$C2_ROOT/common/string_utils.c2	/^public fn char* toLower(const char* input, char* output) @(unused) {$/;"	f
toUpper	$C2_ROOT/common/string_utils.c2	/^public fn char* toUpper(const char* input, char* output) @(unused) {$/;"	f
toboolean	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int toboolean(State *L, c_int idx) @(cname="lua_toboolean");$/;"	f
tocfunction	$C2_ROOT/libs/lua/lua.c2i	/^fn CFunction tocfunction(State *L, c_int idx) @(cname="lua_tocfunction");$/;"	f
toggleFullscreen	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void toggleFullscreen() @(cname="sapp_toggle_fullscreen");$/;"	f
tointegerx	$C2_ROOT/libs/lua/lua.c2i	/^fn Integer tointegerx(State *L, c_int idx, c_int *isnum) @(cname="lua_tointegerx");$/;"	f
tok	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Token tok;$/;"	v
tok	$C2_ROOT/parser/c2_parser.c2	/^    Token tok;$/;"	v
tok	$C2_ROOT/parser/c2_parser_expr.c2	/^    Token t2 = p.tok;$/;"	v
tokKindToBuiltinKind	$C2_ROOT/parser/c2_parser.c2	/^fn BuiltinKind tokKindToBuiltinKind(token.Kind kind) {$/;"	f
token	$C2_ROOT/common/process_utils.c2	/^        argv[argc++] = token;$/;"	v
token	$C2_ROOT/common/yaml/yaml_parser.c2	/^    Token token;$/;"	v
token	$C2_ROOT/compiler/c2recipe_parser.c2	/^    Token token;$/;"	v
token	$C2_ROOT/parser/token.c2	/^module token;$/;"	v
token_Kind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t token_Kind;$/;"	v
token_Kind_Amp	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Amp,$/;"	v
token_Kind_AmpAmp	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_AmpAmp,$/;"	v
token_Kind_AmpEqual	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_AmpEqual,$/;"	v
token_Kind_At	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_At,$/;"	v
token_Kind_BlockComment	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_BlockComment,$/;"	v
token_Kind_Caret	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Caret,$/;"	v
token_Kind_CaretEqual	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_CaretEqual,$/;"	v
token_Kind_CharLiteral	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_CharLiteral,$/;"	v
token_Kind_Colon	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Colon,$/;"	v
token_Kind_Comma	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Comma,$/;"	v
token_Kind_Dot	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Dot,$/;"	v
token_Kind_Ellipsis	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Ellipsis,$/;"	v
token_Kind_Eof	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Eof,$/;"	v
token_Kind_Equal	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Equal,$/;"	v
token_Kind_EqualEqual	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_EqualEqual,$/;"	v
token_Kind_Error	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Error,$/;"	v
token_Kind_Exclaim	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Exclaim,$/;"	v
token_Kind_ExclaimEqual	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_ExclaimEqual,$/;"	v
token_Kind_Feat_elif	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Feat_elif,$/;"	v
token_Kind_Feat_else	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Feat_else,$/;"	v
token_Kind_Feat_endif	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Feat_endif,$/;"	v
token_Kind_Feat_error	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Feat_error,$/;"	v
token_Kind_Feat_if	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Feat_if,$/;"	v
token_Kind_Feat_ifdef	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Feat_ifdef,$/;"	v
token_Kind_Feat_ifndef	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Feat_ifndef,$/;"	v
token_Kind_Feat_warning	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Feat_warning,$/;"	v
token_Kind_FloatLiteral	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_FloatLiteral,$/;"	v
token_Kind_Greater	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Greater,$/;"	v
token_Kind_GreaterEqual	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_GreaterEqual,$/;"	v
token_Kind_GreaterGreater	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_GreaterGreater,$/;"	v
token_Kind_GreaterGreaterEqual	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_GreaterGreaterEqual,$/;"	v
token_Kind_Identifier	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Identifier,$/;"	v
token_Kind_IntegerLiteral	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_IntegerLiteral,$/;"	v
token_Kind_Invalid	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Invalid,$/;"	v
token_Kind_KW_as	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_as,$/;"	v
token_Kind_KW_asm	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_asm,$/;"	v
token_Kind_KW_assert	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_assert,$/;"	v
token_Kind_KW_bool	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_bool,$/;"	v
token_Kind_KW_break	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_break,$/;"	v
token_Kind_KW_case	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_case,$/;"	v
token_Kind_KW_cast	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_cast,$/;"	v
token_Kind_KW_char	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_char,$/;"	v
token_Kind_KW_const	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_const,$/;"	v
token_Kind_KW_continue	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_continue,$/;"	v
token_Kind_KW_default	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_default,$/;"	v
token_Kind_KW_elemsof	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_elemsof,$/;"	v
token_Kind_KW_else	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_else,$/;"	v
token_Kind_KW_enum	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_enum,$/;"	v
token_Kind_KW_enum_max	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_enum_max,$/;"	v
token_Kind_KW_enum_min	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_enum_min,$/;"	v
token_Kind_KW_f32	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_f32,$/;"	v
token_Kind_KW_f64	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_f64,$/;"	v
token_Kind_KW_fallthrough	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_fallthrough,$/;"	v
token_Kind_KW_false	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_false,$/;"	v
token_Kind_KW_fn	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_fn,$/;"	v
token_Kind_KW_for	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_for,$/;"	v
token_Kind_KW_goto	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_goto,$/;"	v
token_Kind_KW_i16	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_i16,$/;"	v
token_Kind_KW_i32	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_i32,$/;"	v
token_Kind_KW_i64	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_i64,$/;"	v
token_Kind_KW_i8	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_i8,$/;"	v
token_Kind_KW_if	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_if,$/;"	v
token_Kind_KW_import	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_import,$/;"	v
token_Kind_KW_isize	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_isize,$/;"	v
token_Kind_KW_local	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_local,$/;"	v
token_Kind_KW_module	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_module,$/;"	v
token_Kind_KW_nil	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_nil,$/;"	v
token_Kind_KW_offsetof	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_offsetof,$/;"	v
token_Kind_KW_public	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_public,$/;"	v
token_Kind_KW_reg16	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_reg16,$/;"	v
token_Kind_KW_reg32	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_reg32,$/;"	v
token_Kind_KW_reg64	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_reg64,$/;"	v
token_Kind_KW_reg8	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_reg8,$/;"	v
token_Kind_KW_return	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_return,$/;"	v
token_Kind_KW_sizeof	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_sizeof,$/;"	v
token_Kind_KW_static_assert	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_static_assert,$/;"	v
token_Kind_KW_struct	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_struct,$/;"	v
token_Kind_KW_switch	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_switch,$/;"	v
token_Kind_KW_template	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_template,$/;"	v
token_Kind_KW_to_container	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_to_container,$/;"	v
token_Kind_KW_true	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_true,$/;"	v
token_Kind_KW_type	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_type,$/;"	v
token_Kind_KW_u16	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_u16,$/;"	v
token_Kind_KW_u32	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_u32,$/;"	v
token_Kind_KW_u64	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_u64,$/;"	v
token_Kind_KW_u8	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_u8,$/;"	v
token_Kind_KW_union	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_union,$/;"	v
token_Kind_KW_usize	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_usize,$/;"	v
token_Kind_KW_void	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_void,$/;"	v
token_Kind_KW_volatile	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_volatile,$/;"	v
token_Kind_KW_while	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_KW_while,$/;"	v
token_Kind_LBrace	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_LBrace,$/;"	v
token_Kind_LParen	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_LParen,$/;"	v
token_Kind_LSquare	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_LSquare,$/;"	v
token_Kind_Less	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Less,$/;"	v
token_Kind_LessEqual	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_LessEqual,$/;"	v
token_Kind_LessLess	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_LessLess,$/;"	v
token_Kind_LessLessEqual	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_LessLessEqual,$/;"	v
token_Kind_LineComment	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_LineComment,$/;"	v
token_Kind_Minus	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Minus,$/;"	v
token_Kind_MinusEqual	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_MinusEqual,$/;"	v
token_Kind_MinusMinus	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_MinusMinus,$/;"	v
token_Kind_None	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_None,$/;"	v
token_Kind_Percent	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Percent,$/;"	v
token_Kind_PercentEqual	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_PercentEqual,$/;"	v
token_Kind_Pipe	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Pipe,$/;"	v
token_Kind_PipeEqual	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_PipeEqual,$/;"	v
token_Kind_PipePipe	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_PipePipe,$/;"	v
token_Kind_Plus	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Plus,$/;"	v
token_Kind_PlusEqual	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_PlusEqual,$/;"	v
token_Kind_PlusPlus	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_PlusPlus,$/;"	v
token_Kind_Question	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Question,$/;"	v
token_Kind_RBrace	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_RBrace,$/;"	v
token_Kind_RParen	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_RParen,$/;"	v
token_Kind_RSquare	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_RSquare,$/;"	v
token_Kind_Semicolon	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Semicolon,$/;"	v
token_Kind_Slash	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Slash,$/;"	v
token_Kind_SlashEqual	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_SlashEqual,$/;"	v
token_Kind_Star	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Star,$/;"	v
token_Kind_StarEqual	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_StarEqual,$/;"	v
token_Kind_StringLiteral	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_StringLiteral,$/;"	v
token_Kind_Tilde	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Tilde,$/;"	v
token_Kind_Warning	$C2_ROOT/bootstrap/bootstrap.c	/^   token_Kind_Warning,$/;"	v
token_Token	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct token_Token_ token_Token;$/;"	v
tokenizer	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_Tokenizer tokenizer;$/;"	v
tokenizer	$C2_ROOT/common/yaml/yaml_parser.c2	/^    Tokenizer tokenizer;$/;"	v
tokenizer	$C2_ROOT/parser/c2_parser.c2	/^    c2_tokenizer.Tokenizer tokenizer;$/;"	v
tolower	$C2_ROOT/libs/libc/ctype.c2i	/^fn c_int tolower(c_int c) @(pure);$/;"	f
tolstring	$C2_ROOT/libs/lua/lua.c2i	/^fn const c_char* tolstring(State *L, c_int idx, c_size *len) @(cname="lua_tolstring");$/;"	f
tonumberx	$C2_ROOT/libs/lua/lua.c2i	/^fn Number tonumberx(State *L, c_int idx, c_int *isnum) @(cname="lua_tonumberx");$/;"	f
too_deep	$C2_ROOT/bootstrap/bootstrap.c	/^            if ((sp >= (stack + c2_tokenizer_MAX_LEVEL))) goto too_deep;$/;"	v
too_deep	$C2_ROOT/parser/c2_tokenizer.c2	/^                if (sp >= stack + MAX_LEVEL) goto too_deep;$/;"	v
too_large	$C2_ROOT/bootstrap/bootstrap.c	/^      if ((pos >= (4096 - 2))) goto too_large;$/;"	v
too_large	$C2_ROOT/parser/c2_tokenizer.c2	/^            goto too_large;$/;"	v
tools	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Tools* t = &c->tools;$/;"	v
tools	$C2_ROOT/ir/context.c2	/^    Tools* t = &c.tools;$/;"	v
tools	$C2_ROOT/ir/work_queue.c2	/^    Tools tools;$/;"	v
topointer	$C2_ROOT/libs/lua/lua.c2i	/^fn const void* topointer(State *L, c_int idx) @(cname="lua_topointer");$/;"	f
torusSizes	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn Sizes torusSizes(u32 sides, u32 rings) @(cname="sshape_torus_sizes");$/;"	f
total	$C2_ROOT/ir/block_list.c2	/^    l1.count = total;$/;"	v
total	$C2_ROOT/ir_examples/global_vars.c2	/^    local i32 total;$/;"	v
total	$C2_ROOT/plugins/unit_test2.c2	/^  u32 total;$/;"	v
total_alive	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 total_alive;$/;"	v
total_free	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 total_free;$/;"	v
total_read	$C2_ROOT/bootstrap/bootstrap.c	/^   return total_read;$/;"	v
total_read	$C2_ROOT/common/file/reader.c2	/^    return total_read;$/;"	v
total_size	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t total_size;$/;"	v
total_size	$C2_ROOT/generator/c2refs.c2	/^    u32 total_size;$/;"	v
total_written	$C2_ROOT/bootstrap/bootstrap.c	/^   return total_written;$/;"	v
total_written	$C2_ROOT/common/file/writer.c2	/^    return total_written;$/;"	v
touches	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    Touchpoint[8] touches;$/;"	v
toupper	$C2_ROOT/libs/libc/ctype.c2i	/^fn c_int toupper(c_int c) @(pure);$/;"	f
touserdata	$C2_ROOT/libs/lua/lua.c2i	/^fn void* touserdata(State *L, c_int idx) @(cname="lua_touserdata");$/;"	f
trace_calls	$C2_ROOT/bootstrap/bootstrap.c	/^   gen.trace_calls = trace_calls;$/;"	v
trace_calls	$C2_ROOT/compiler/compiler.c2	/^    bool trace_calls;$/;"	v
trace_calls	$C2_ROOT/compiler/main.c2	/^    c.comp_opts.trace_calls = c.opts.trace_calls;$/;"	v
trace_calls	$C2_ROOT/generator/c/c_generator.c2	/^    gen.trace_calls = trace_calls;$/;"	v
transform	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    Mat4 transform;$/;"	v
transformVec3	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec3 Mat4.transformVec3(const Mat4* m, const Vec3* v) {$/;"	f
transformVec4	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec4 Mat4.transformVec4(const Mat4* m, const Vec4* v) {$/;"	f
translate	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void translate(f32 x, f32 y, f32 z) @(cname="sgl_translate");$/;"	f
translate	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Mat4 Mat4.translate(f32 x, f32 y, f32 z) {$/;"	f
translateVec3	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Mat4 Mat4.translateVec3(const Vec3* v) {$/;"	f
transpose	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Mat4 Mat4.transpose(const Mat4* m) {$/;"	f
trim	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void Buf.trim(Buf* buf, u32 len) @(unused) {$/;"	f
trim	$C2_ROOT/generator/c2refs.c2	/^fn void Refs.trim(Refs* r) {$/;"	f
trim	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^public fn void Tree.trim(Tree* t) {$/;"	f
trim_node	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^fn u32 Tree.trim_node(const Tree* t, u32 node_idx, Trimmer* tr) {$/;"	f
triple	$C2_ROOT/bootstrap/bootstrap.c	/^   return info->triple;$/;"	v
triple	$C2_ROOT/common/target_info.c2	/^    return info.triple;$/;"	v
true	$C2_ROOT/analyser/conversion_checker.c2	/^    return true;$/;"	v
true	$C2_ROOT/analyser/conversion_checker_expr.c2	/^        w.is_signed = true;$/;"	v
true	$C2_ROOT/analyser/module_analyser.c2	/^    return true;$/;"	v
true	$C2_ROOT/analyser/module_analyser_binop.c2	/^    return true;$/;"	v
true	$C2_ROOT/analyser/module_analyser_call.c2	/^    return true;$/;"	v
true	$C2_ROOT/analyser/module_analyser_expr.c2	/^    return true;$/;"	v
true	$C2_ROOT/analyser/module_analyser_function.c2	/^        bool is_non_static = true;$/;"	v
true	$C2_ROOT/analyser/module_analyser_init.c2	/^    return true;$/;"	v
true	$C2_ROOT/analyser/module_analyser_member.c2	/^                ma.has_error = true;$/;"	v
true	$C2_ROOT/analyser/module_analyser_stmt.c2	/^        label.used = true;$/;"	v
true	$C2_ROOT/analyser/module_analyser_switch.c2	/^    return true;$/;"	v
true	$C2_ROOT/analyser/module_analyser_type.c2	/^    return true;$/;"	v
true	$C2_ROOT/analyser/module_analyser_unaryop.c2	/^    return true;$/;"	v
true	$C2_ROOT/analyser/name_vector.c2	/^            return true;$/;"	v
true	$C2_ROOT/analyser/scope.c2	/^    return true;$/;"	v
true	$C2_ROOT/analyser/size_analyser.c2	/^            ml.is_bitfield = true;$/;"	v
true	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^    return true;$/;"	v
true	$C2_ROOT/analyser_utils/printf_utils.c2	/^    return true;$/;"	v
true	$C2_ROOT/ast/array_type.c2	/^    t.base.arrayTypeBits.is_incremental = true;$/;"	v
true	$C2_ROOT/ast/decl.c2	/^    if (!d.isVarDecl()) return true;$/;"	v
true	$C2_ROOT/ast/expr.c2	/^    return true;$/;"	v
true	$C2_ROOT/ast/function_decl.c2	/^    return true;$/;"	v
true	$C2_ROOT/ast/identifier_expr.c2	/^    e.base.base.identifierExprBits.has_decl = true;$/;"	v
true	$C2_ROOT/ast/label_stmt.c2	/^    s.base.labelStmtBits.is_used = true;$/;"	v
true	$C2_ROOT/ast/module.c2	/^    m.is_exported = true;$/;"	v
true	$C2_ROOT/ast/qualtype.c2	/^    if (canon.isPointer()) return true;$/;"	v
true	$C2_ROOT/ast/switch_stmt.c2	/^    s.base.switchStmtBits.is_string = true;$/;"	v
true	$C2_ROOT/ast/unary_operator.c2	/^    return true;$/;"	v
true	$C2_ROOT/ast/value.c2	/^        v.negative = true;$/;"	v
true	$C2_ROOT/ast_utils/string_buffer.c2	/^    return true;$/;"	v
true	$C2_ROOT/bootstrap/bootstrap.c	/^   top->is_else = true;$/;"	v
true	$C2_ROOT/common/attr_handler.c2	/^    return true;$/;"	v
true	$C2_ROOT/common/build_file.c2	/^    return true;$/;"	v
true	$C2_ROOT/common/build_target.c2	/^    t.warnings.no_unused_variable = true;$/;"	v
true	$C2_ROOT/common/dsm_sorter.c2	/^                has_deps = true;$/;"	v
true	$C2_ROOT/common/file/file_utils.c2	/^    return true;$/;"	v
true	$C2_ROOT/common/file/reader.c2	/^    return true;$/;"	v
true	$C2_ROOT/common/file/writer.c2	/^    return true;$/;"	v
true	$C2_ROOT/common/library_list.c2	/^        if (l.libs[i].name == name) return true;$/;"	v
true	$C2_ROOT/common/module_list.c2	/^        if (l.mods[i] == mod) return true;$/;"	v
true	$C2_ROOT/common/string_list.c2	/^        if (strcmp(l.pool.idx2str(l.indexes[i]), name) == 0) return true;$/;"	v
true	$C2_ROOT/common/target_info.c2	/^    return true;$/;"	v
true	$C2_ROOT/common/utils.c2	/^                return true;$/;"	v
true	$C2_ROOT/common/yaml/yaml_parser.c2	/^    return true;$/;"	v
true	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    t.same_line = true;$/;"	v
true	$C2_ROOT/compiler/c2recipe_parser.c2	/^    return true;$/;"	v
true	$C2_ROOT/compiler/c2recipe_yaml.c2	/^    return true;$/;"	v
true	$C2_ROOT/compiler/compiler.c2	/^    return true;$/;"	v
true	$C2_ROOT/compiler/compiler_libs.c2	/^        if (comp.getNameIdx() == name) return true;$/;"	v
true	$C2_ROOT/compiler/main.c2	/^        opts.use_ir_backend = true;$/;"	v
true	$C2_ROOT/compiler/manifest.c2	/^    return true;$/;"	v
true	$C2_ROOT/compiler/plugin_mgr.c2	/^    return true;$/;"	v
true	$C2_ROOT/generator/c/c_generator.c2	/^    return true;$/;"	v
true	$C2_ROOT/generator/c/c_generator_call.c2	/^            needs_comma = true;$/;"	v
true	$C2_ROOT/generator/c/c_generator_expr.c2	/^    return true;$/;"	v
true	$C2_ROOT/generator/c/c_generator_stmt.c2	/^    if ((num_outputs + num_inputs + num_clobbers) > 4 || num_clobbers != 0) multi_line = true;$/;"	v
true	$C2_ROOT/generator/c2_trace.c2	/^    if (!pattern || !*pattern) return true;$/;"	v
true	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^    bool semi = true;$/;"	v
true	$C2_ROOT/generator/c2i/c2i_generator_expr.c2	/^        if (num_values > 6) newlines = true;$/;"	v
true	$C2_ROOT/generator/c2i/c2i_generator_stmt.c2	/^    if ((num_outputs + num_inputs + num_clobbers) > 4 || num_clobbers != 0) multi_line = true;$/;"	v
true	$C2_ROOT/generator/c2refs.c2	/^    return true;$/;"	v
true	$C2_ROOT/generator/generator_utils.c2	/^    if (d.isExported() && d.isPublic()) return true;$/;"	v
true	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^            if (!have_bitfield) have_bitfield = true;$/;"	v
true	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^    return true;$/;"	v
true	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^    return true;$/;"	v
true	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    t.is_created = true;$/;"	v
true	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    return true;$/;"	v
true	$C2_ROOT/ir/common.c2	/^        if (b.dests[1] == dest) return true;$/;"	v
true	$C2_ROOT/ir/context.c2	/^    if (b.instr.count == 1) return true;$/;"	v
true	$C2_ROOT/ir/instr.c2	/^    i.instrBits.has_result = true;$/;"	v
true	$C2_ROOT/ir/live_map.c2	/^        if (iter.ids[i] == value) return true;$/;"	v
true	$C2_ROOT/ir/phi_list.c2	/^        if (clauses[i].ref.equals(ref)) return true;$/;"	v
true	$C2_ROOT/ir/register_alloc.c2	/^    bool changed = true;$/;"	v
true	$C2_ROOT/ir/rpo.c2	/^                dest.checked = true;$/;"	v
true	$C2_ROOT/ir/slot_collector.c2	/^                    found = true;$/;"	v
true	$C2_ROOT/ir/ssa.c2	/^        changed = true;$/;"	v
true	$C2_ROOT/ir/switch.c2	/^        return true;$/;"	v
true	$C2_ROOT/libs/io_uring/io_uring.c2i	/^		return true;$/;"	v
true	$C2_ROOT/parser/ast_builder.c2	/^    return true;$/;"	v
true	$C2_ROOT/parser/c2_parser.c2	/^    if (is_interface) return true;$/;"	v
true	$C2_ROOT/parser/c2_parser_expr.c2	/^    bool ambiguous = true;$/;"	v
true	$C2_ROOT/parser/c2_parser_stmt.c2	/^    if (kind.isQualifier()) return true;$/;"	v
true	$C2_ROOT/parser/c2_parser_switch.c2	/^    bool more = true;$/;"	v
true	$C2_ROOT/parser/c2_parser_type.c2	/^        is_incr = true;$/;"	v
true	$C2_ROOT/parser/c2_tokenizer.c2	/^    top.is_else = true;$/;"	v
true	$C2_ROOT/plugins/deps_generator.c2	/^    gen.show_dirs = true;$/;"	v
true	$C2_ROOT/plugins/deps_generator_utils.c2	/^    return true;$/;"	v
true	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^    return true;$/;"	v
true	$C2_ROOT/plugins/unit_test_plugin.c2	/^    return true;$/;"	v
trunc	$C2_ROOT/libs/math/math.c2i	/^fn c_double trunc(c_double);$/;"	f
truncate	$C2_ROOT/ast/value.c2	/^fn void Value.truncate(Value *orig, u32 width, bool is_signed) {$/;"	f
truncated	$C2_ROOT/ast_utils/string_buffer.c2	/^    bool truncated;$/;"	v
truncf	$C2_ROOT/libs/math/math.c2i	/^fn c_float truncf(c_float);$/;"	f
try_to_fix_type	$C2_ROOT/analyser/conversion_checker.c2	/^fn bool Checker.try_to_fix_type(Checker* c) {$/;"	f
trylock	$C2_ROOT/libs/pthread/pthread.c2i	/^fn c_int Mutex.trylock(Mutex* mutex) @(cname="pthread_mutex_trylock");$/;"	f
tv	$C2_ROOT/bootstrap/bootstrap.c	/^   timeval tv;$/;"	v
tv	$C2_ROOT/common/utils.c2	/^    sys_time.Timeval tv;$/;"	v
tv	$C2_ROOT/plugins/unit_test2.c2	/^  sys_time.Timeval tv;$/;"	v
tv_nsec	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^>    c_long tv_nsec;$/;"	v
tv_nsec	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^>    c_long tv_nsec;$/;"	v
tv_nsec	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    c_long tv_nsec;$/;"	v
tv_nsec	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    c_long tv_nsec;$/;"	v
tv_nsec	$C2_ROOT/libs/libc/sys_stat.c2i	/^    c_long tv_nsec;$/;"	v
tv_sec	$C2_ROOT/bootstrap/bootstrap-darwin-arm64.patch	/^>    c_long tv_sec;$/;"	v
tv_sec	$C2_ROOT/bootstrap/bootstrap-darwin-x86_64.patch	/^>    c_long tv_sec;$/;"	v
tv_sec	$C2_ROOT/bootstrap/bootstrap-freebsd-amd64.patch	/^>    c_long tv_sec;$/;"	v
tv_sec	$C2_ROOT/bootstrap/bootstrap-openbsd-amd64.patch	/^>    c_long tv_sec;$/;"	v
tv_sec	$C2_ROOT/bootstrap/bootstrap.c	/^   time_t tv_sec;$/;"	v
tv_sec	$C2_ROOT/common/utils.c2	/^    u64 now64 = (u64)tv.tv_sec;$/;"	v
tv_sec	$C2_ROOT/libs/libc/sys_stat.c2i	/^    c_long tv_sec;$/;"	v
tv_sec	$C2_ROOT/libs/libc/sys_time.c2i	/^    Time tv_sec;$/;"	v
tv_sec	$C2_ROOT/plugins/unit_test2.c2	/^  u64 now64 = (u64)tv.tv_sec;$/;"	v
tv_usec	$C2_ROOT/bootstrap/bootstrap.c	/^   suseconds_t tv_usec;$/;"	v
tv_usec	$C2_ROOT/common/utils.c2	/^    now64 += tv.tv_usec;$/;"	v
tv_usec	$C2_ROOT/libs/libc/sys_time.c2i	/^    SuSeconds tv_usec;$/;"	v
tv_usec	$C2_ROOT/plugins/unit_test2.c2	/^  now64 += tv.tv_usec;$/;"	v
type2irtype	$C2_ROOT/generator/ir/ir_generator.c2	/^fn ir.Type Generator.type2irtype(Generator* gen, QualType qt) {$/;"	f
type2str	$C2_ROOT/analyser/module_analyser_expr.c2	/^fn const char* type2str(QualType q) {$/;"	f
typeBits	$C2_ROOT/ast/type.c2	/^        TypeBits typeBits;$/;"	v
typeBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_TypeBits typeBits;$/;"	v
typeExpr	$C2_ROOT/ast/builtin_expr.c2	/^    e.inner = typeExpr;$/;"	v
typeExpr	$C2_ROOT/bootstrap/bootstrap.c	/^   e->inner = typeExpr;$/;"	v
typeExprBits	$C2_ROOT/ast/stmt.c2	/^        TypeExprBits typeExprBits;$/;"	v
typeExprBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_TypeExprBits typeExprBits;$/;"	v
typeRef	$C2_ROOT/ast/alias_type_decl.c2	/^    return &d.typeRef;$/;"	v
typeRef	$C2_ROOT/ast/type_expr.c2	/^    return &e.typeRef;$/;"	v
typeRef	$C2_ROOT/bootstrap/bootstrap.c	/^   return &e->typeRef;$/;"	v
type_	$C2_ROOT/ast/string_type_pool.c2	/^    Type* type_;$/;"	v
type_	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_Type* type_;$/;"	v
type_	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    EventType type_;$/;"	v
type_	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    UniformType type_;$/;"	v
type_fn_decls	$C2_ROOT/analyser/module_analyser.c2	/^    ma.type_fn_decls = &type_fn_decls;$/;"	v
type_fn_decls	$C2_ROOT/bootstrap/bootstrap.c	/^   struct_func_list_List* type_fn_decls;$/;"	v
type_loc	$C2_ROOT/parser/c2_parser_expr.c2	/^        u32 src_len = p.prev_loc - type_loc;$/;"	v
typename	$C2_ROOT/libs/lua/lua.c2i	/^fn const c_char* typename(State *L, c_int tp) @(cname="lua_typename");$/;"	f
types	$C2_ROOT/ast/ast.c2	/^    DeclList types;$/;"	v
types	$C2_ROOT/ast/statistics.c2	/^    Stat[elemsof(TypeKind)] types;$/;"	v
types	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_DeclList types;$/;"	v
tz_dsttime	$C2_ROOT/bootstrap/bootstrap.c	/^   c_int tz_dsttime;$/;"	v
tz_dsttime	$C2_ROOT/libs/libc/sys_time.c2i	/^    c_int tz_dsttime;$/;"	v
tz_minuteswest	$C2_ROOT/bootstrap/bootstrap.c	/^   c_int tz_minuteswest;$/;"	v
tz_minuteswest	$C2_ROOT/libs/libc/sys_time.c2i	/^    c_int tz_minuteswest;$/;"	v
u16	$C2_ROOT/ast/instance_table.c2	/^    u16 count;$/;"	v
u16	$C2_ROOT/ast/instantiator.c2	/^    u16 instance_ast_idx;$/;"	v
u16	$C2_ROOT/generator/c/c_generator_trace.c2	/^    u16 line;$/;"	v
u16	$C2_ROOT/generator/c2refs.c2	/^    u16 len;$/;"	v
u16	$C2_ROOT/ir/function_info.c2	/^    u16 num_slots;$/;"	v
u16	$C2_ROOT/ir/interference_graph.c2	/^    u16 prev;$/;"	v
u16	$C2_ROOT/ir/live_map.c2	/^    u16 prev;$/;"	v
u16	$C2_ROOT/ir/rev_list.c2	/^    u16 start;$/;"	v
u16	$C2_ROOT/ir/slot_collector.c2	/^    u16 slot;$/;"	v
u16	$C2_ROOT/ir/slot_writes_map.c2	/^    u16 slot;$/;"	v
u16	$C2_ROOT/ir_examples/members.c2	/^    u16 s;$/;"	v
u16	$C2_ROOT/ir_examples/types.c2	/^    u16 u;$/;"	v
u16	$C2_ROOT/libs/c2/c2.c2i	/^type c_ushort u16;$/;"	v
u16	$C2_ROOT/libs/c2/c2_trace_tables.c2i	/^    u16 line;$/;"	v
u16	$C2_ROOT/libs/c2/u16.c2i	/^module u16;$/;"	v
u16	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u16   personality;$/;"	v
u16	$C2_ROOT/libs/libc/libc_dirent.c2i	/^    u16 d_reclen;$/;"	v
u16	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  u16 ssi_addr_lsb;$/;"	v
u16	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u16 array_count;$/;"	v
u16	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    u16 v;$/;"	v
u32	$C2_ROOT/analyser/incr_array_list.c2	/^    u32 name;$/;"	v
u32	$C2_ROOT/analyser/init_checker.c2	/^    u32 max;$/;"	v
u32	$C2_ROOT/analyser/label_vector.c2	/^    u32 name_idx;$/;"	v
u32	$C2_ROOT/analyser/module_analyser.c2	/^    u32 prefix_cache_name;$/;"	v
u32	$C2_ROOT/analyser/module_analyser_call.c2	/^    u32 num_args;$/;"	v
u32	$C2_ROOT/analyser/module_analyser_expr.c2	/^                                   u32 name_idx,$/;"	v
u32	$C2_ROOT/analyser/module_analyser_stmt.c2	/^type FlowBits u32;$/;"	v
u32	$C2_ROOT/analyser/module_analyser_struct.c2	/^            u32 old_index;$/;"	v
u32	$C2_ROOT/analyser/module_sorter.c2	/^    u32 num_mods;$/;"	v
u32	$C2_ROOT/analyser/name_vector.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/analyser/scope.c2	/^    u32 stack_count;$/;"	v
u32	$C2_ROOT/analyser/size_analyser.c2	/^    u32 size;$/;"	v
u32	$C2_ROOT/analyser/struct_func_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/ast/alias_type_decl.c2	/^                                                u32 name,$/;"	v
u32	$C2_ROOT/ast/array_value.c2	/^                                          u32 name,$/;"	v
u32	$C2_ROOT/ast/array_value_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/ast/asm_stmt.c2	/^                                    u32 num_outputs,$/;"	v
u32	$C2_ROOT/ast/ast_evaluator.c2	/^    u32 num_args;$/;"	v
u32	$C2_ROOT/ast/call_expr.c2	/^                                              u32 num_args,$/;"	v
u32	$C2_ROOT/ast/decl.c2	/^    u32 name_idx;$/;"	v
u32	$C2_ROOT/ast/decl_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/ast/enum_constant_decl.c2	/^                                                      u32 name,$/;"	v
u32	$C2_ROOT/ast/enum_type_decl.c2	/^    u32 num_enum_functions;$/;"	v
u32	$C2_ROOT/ast/expr_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/ast/field_designated_init_expr.c2	/^    u32 field_name;$/;"	v
u32	$C2_ROOT/ast/function_decl.c2	/^        u32 flagBits;$/;"	v
u32	$C2_ROOT/ast/function_decl_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/ast/goto_stmt.c2	/^    u32 name;$/;"	v
u32	$C2_ROOT/ast/identifier_expr.c2	/^        u32 name_idx;$/;"	v
u32	$C2_ROOT/ast/import_decl.c2	/^    u32 alias_idx;$/;"	v
u32	$C2_ROOT/ast/import_decl_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/ast/init_list_expr.c2	/^    u32 num_values;$/;"	v
u32	$C2_ROOT/ast/instance_table.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/ast/instantiator.c2	/^    u32 template_name;$/;"	v
u32	$C2_ROOT/ast/label_stmt.c2	/^    u32 name;$/;"	v
u32	$C2_ROOT/ast/member_expr.c2	/^    u32 name_idx;$/;"	v
u32	$C2_ROOT/ast/module.c2	/^    u32 num_files;$/;"	v
u32	$C2_ROOT/ast/pointer_pool.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/ast/static_assert.c2	/^    u32 loc;$/;"	v
u32	$C2_ROOT/ast/static_assert_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/ast/statistics.c2	/^    u32 size;$/;"	v
u32	$C2_ROOT/ast/stmt.c2	/^        u32 bits;$/;"	v
u32	$C2_ROOT/ast/string_literal.c2	/^    u32 value;$/;"	v
u32	$C2_ROOT/ast/string_type_pool.c2	/^    u32 len;$/;"	v
u32	$C2_ROOT/ast/struct_type_decl.c2	/^    u32 size;$/;"	v
u32	$C2_ROOT/ast/switch_case.c2	/^        u32 allbits;$/;"	v
u32	$C2_ROOT/ast/switch_stmt.c2	/^                                          u32 numCases,$/;"	v
u32	$C2_ROOT/ast/symbol_table.c2	/^    u32 num_public;$/;"	v
u32	$C2_ROOT/ast/type.c2	/^        u32 bits;$/;"	v
u32	$C2_ROOT/ast/type_expr.c2	/^                                    u32 src_len,$/;"	v
u32	$C2_ROOT/ast/type_ref.c2	/^    u32 name_idx;$/;"	v
u32	$C2_ROOT/ast/utils.c2	/^    u32 ast_capacity;$/;"	v
u32	$C2_ROOT/ast/var_decl.c2	/^                                    u32 name,$/;"	v
u32	$C2_ROOT/ast_utils/attr.c2	/^        u32 text;$/;"	v
u32	$C2_ROOT/ast_utils/attr_table.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/ast_utils/context.c2	/^    u32 size;$/;"	v
u32	$C2_ROOT/ast_utils/src_loc.c2	/^public type SrcLoc u32;$/;"	v
u32	$C2_ROOT/ast_utils/string_buffer.c2	/^    u32 size_;$/;"	v
u32	$C2_ROOT/ast_utils/string_pool.c2	/^type HashEntry u32;$/;"	v
u32	$C2_ROOT/common/attr_handler.c2	/^    u32 name;$/;"	v
u32	$C2_ROOT/common/build_file.c2	/^    u32 target;$/;"	v
u32	$C2_ROOT/common/build_target.c2	/^    u32 num_files;$/;"	v
u32	$C2_ROOT/common/component.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/common/diagnostics.c2	/^    u32 num_warnings;$/;"	v
u32	$C2_ROOT/common/dsm_sorter.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/common/file/file_utils.c2	/^    u32 contents_size;$/;"	v
u32	$C2_ROOT/common/index_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/common/library_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/common/module_list.c2	/^    u32 num_mods;$/;"	v
u32	$C2_ROOT/common/source_mgr.c2	/^    u32 size;$/;"	v
u32	$C2_ROOT/common/string_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/common/value_maplist.c2	/^    u32 value;$/;"	v
u32	$C2_ROOT/common/yaml/yaml_data.c2	/^    u32 text_size;$/;"	v
u32	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^    u32 line;$/;"	v
u32	$C2_ROOT/compiler/c2recipe.c2	/^    u32 num_targets;$/;"	v
u32	$C2_ROOT/compiler/c2recipe_parser.c2	/^    u32 num_files;$/;"	v
u32	$C2_ROOT/compiler/compiler.c2	/^    u32 size;$/;"	v
u32	$C2_ROOT/compiler/main.c2	/^    u32 plugins_feature;$/;"	v
u32	$C2_ROOT/compiler/plugin_mgr.c2	/^    u32 plugin_max;$/;"	v
u32	$C2_ROOT/generator/c/c_generator.c2	/^    u32 varargsName;$/;"	v
u32	$C2_ROOT/generator/c/c_generator_expr.c2	/^    u32 last_offset;$/;"	v
u32	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^    u32 num_values;$/;"	v
u32	$C2_ROOT/generator/c/c_generator_trace.c2	/^    u32 string_count;$/;"	v
u32	$C2_ROOT/generator/c2refs.c2	/^    u32 total_size;$/;"	v
u32	$C2_ROOT/generator/ir/array_init_sorter.c2	/^    u32 index;$/;"	v
u32	$C2_ROOT/generator/ir/basic_struct_layouter.c2	/^    u32 cur_offset;$/;"	v
u32	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^    u32 size;$/;"	v
u32	$C2_ROOT/generator/ir/ir_generator.c2	/^    u32 width;$/;"	v
u32	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^    u32 i;$/;"	v
u32	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^    u32 size;$/;"	v
u32	$C2_ROOT/generator/ir/ref_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    u32 wasted;$/;"	v
u32	$C2_ROOT/generator/radix_tree/radix_tree_dump.c2	/^    u32 leaf_nodes;$/;"	v
u32	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    u32 size;$/;"	v
u32	$C2_ROOT/ir/block_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/ir/case_list.c2	/^public type CaseId u32;$/;"	v
u32	$C2_ROOT/ir/constant_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/ir/context.c2	/^    u32 slot_idx;$/;"	v
u32	$C2_ROOT/ir/copy_list.c2	/^    u32 instr_idx;$/;"	v
u32	$C2_ROOT/ir/init_value_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/ir/inserter.c2	/^    u32 split_count;$/;"	v
u32	$C2_ROOT/ir/instr.c2	/^        u32 bits;$/;"	v
u32	$C2_ROOT/ir/instr_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/ir/interference_graph.c2	/^    u32 queue_head;$/;"	v
u32	$C2_ROOT/ir/live_map.c2	/^    u32 num_variables;$/;"	v
u32	$C2_ROOT/ir/lookup_table.c2	/^    u32 capacity;$/;"	v
u32	$C2_ROOT/ir/phi_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/ir/print.c2	/^    u32 temp_count;$/;"	v
u32	$C2_ROOT/ir/register_alloc.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/ir/rev_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/ir/slot_collector.c2	/^    u32 temp_idx;$/;"	v
u32	$C2_ROOT/ir/slot_writes_map.c2	/^    u32 num_blocks;$/;"	v
u32	$C2_ROOT/ir/symbol_list.c2	/^public type SymbolId u32;$/;"	v
u32	$C2_ROOT/ir/types.c2	/^    u32 start;$/;"	v
u32	$C2_ROOT/ir/usage_counter.c2	/^    u32 queue_head;$/;"	v
u32	$C2_ROOT/ir/work_queue.c2	/^    u32 index;$/;"	v
u32	$C2_ROOT/ir_examples/struct_init.c2	/^        u32 u;$/;"	v
u32	$C2_ROOT/libs/c2/c2.c2i	/^type c_ulong u32;$/;"	v
u32	$C2_ROOT/libs/c2/c2_trace_tables.c2i	/^u32 c2_trace_length;$/;"	v
u32	$C2_ROOT/libs/c2/u32.c2i	/^module u32;$/;"	v
u32	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32 wq_fd;$/;"	v
u32	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  u32 ssi_uid;$/;"	v
u32	$C2_ROOT/libs/libc/sys_stat.c2i	/^    u32 st_nlink;$/;"	v
u32	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    u32              int_ms;$/;"	v
u32	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u32 version;$/;"	v
u32	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^    u32 alen;$/;"	v
u32	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    u32 modifiers;$/;"	v
u32	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    u32 id;$/;"	v
u32	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 update_frame_index;$/;"	v
u32	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    u32 id;$/;"	v
u32	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    u32 size;$/;"	v
u32	$C2_ROOT/parser/ast_builder.c2	/^    u32 num_attrs;$/;"	v
u32	$C2_ROOT/parser/c2_parser.c2	/^    u32 varargs_idx;$/;"	v
u32	$C2_ROOT/parser/c2_tokenizer.c2	/^    u32 i;$/;"	v
u32	$C2_ROOT/parser/case_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/parser/expr_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/parser/keywords.c2	/^    u32 max_index;$/;"	v
u32	$C2_ROOT/parser/stmt_list.c2	/^    u32 count;$/;"	v
u32	$C2_ROOT/plugins/deps_generator.c2	/^    u32 name_idx;$/;"	v
u32	$C2_ROOT/plugins/plugin_info.c2	/^                                 u32 name,$/;"	v
u32	$C2_ROOT/plugins/refs_generator.c2	/^    u32 line;$/;"	v
u32	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^    u32 timeout_sec;$/;"	v
u32	$C2_ROOT/plugins/unit_test1.c2	/^   u32 num_tests;$/;"	v
u32	$C2_ROOT/plugins/unit_test2.c2	/^u32 error_size;$/;"	v
u32	$C2_ROOT/plugins/unit_test_plugin.c2	/^    u32 teardown_name;$/;"	v
u64	$C2_ROOT/analyser_utils/ctv_analyser.c2	/^    u64 max_val;$/;"	v
u64	$C2_ROOT/ast/integer_literal.c2	/^    u64 val;$/;"	v
u64	$C2_ROOT/ast_utils/string_pool.c2	/^type HashEntry u64;$/;"	v
u64	$C2_ROOT/generator/ir/basic_struct_layouter.c2	/^    u64 bitfield_value;$/;"	v
u64	$C2_ROOT/ir/constant.c2	/^        u64 uvalue;$/;"	v
u64	$C2_ROOT/libs/c2/c2.c2i	/^type c_ulonglong u64;$/;"	v
u64	$C2_ROOT/libs/c2/u64.c2i	/^module u64;$/;"	v
u64	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u64 resv2;$/;"	v
u64	$C2_ROOT/libs/libc/sys_signalfd.c2i	/^  u64 ssi_utime;$/;"	v
u64	$C2_ROOT/libs/libc/sys_stat.c2i	/^    u64 st_rdev;$/;"	v
u64	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    u64 frame_count;$/;"	v
u8	$C2_ROOT/ast/asm_stmt.c2	/^    u8 num_outputs;$/;"	v
u8	$C2_ROOT/ast/function_decl.c2	/^    u8 num_params;$/;"	v
u8	$C2_ROOT/ast/struct_type_decl.c2	/^    u8 bitfield_width;$/;"	v
u8	$C2_ROOT/ast/var_decl.c2	/^    u8 bit_width;$/;"	v
u8	$C2_ROOT/compiler/compiler.c2	/^    u8 print_reports;$/;"	v
u8	$C2_ROOT/generator/c/c_generator_trace.c2	/^    u8 filename_idx;$/;"	v
u8	$C2_ROOT/ir/function_info.c2	/^    u8 num_args;$/;"	v
u8	$C2_ROOT/libs/c2/c2.c2i	/^type c_uchar u8;$/;"	v
u8	$C2_ROOT/libs/c2/c2_trace_tables.c2i	/^    u8 filename_idx;$/;"	v
u8	$C2_ROOT/libs/c2/u8.c2i	/^module u8;$/;"	v
u8	$C2_ROOT/libs/libc/libc_dirent.c2i	/^   u8           d_type;$/;"	v
u8	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u8 r;$/;"	v
u8	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^    u8 volume;$/;"	v
u8	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    u8 last_char;$/;"	v
u8	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u8 write_mask;$/;"	v
u8	$C2_ROOT/parser/c2_tokenizer.c2	/^    u8 prec;$/;"	v
uav	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* uav;$/;"	v
ubsan	$C2_ROOT/bootstrap/bootstrap.c	/^   gen.ubsan = ubsan;$/;"	v
ubsan	$C2_ROOT/compiler/compiler.c2	/^    bool ubsan;$/;"	v
ubsan	$C2_ROOT/generator/c/c_generator.c2	/^    gen.ubsan = ubsan;$/;"	v
udata	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn const u8* Buf.udata(const Buf* buf) {$/;"	f
uint16_t	$C2_ROOT/bootstrap/bootstrap.c	/^typedef unsigned short uint16_t;$/;"	v
uint16_t	$C2_ROOT/generator/c/c_generator.c2	/^    typedef unsigned short uint16_t;$/;"	v
uint16_t	$C2_ROOT/generator/c/c_generator_special.c2	/^    typedef unsigned short int uint16_t;$/;"	v
uint32_t	$C2_ROOT/bootstrap/bootstrap.c	/^typedef unsigned int uint32_t;$/;"	v
uint32_t	$C2_ROOT/generator/c/c_generator.c2	/^    typedef unsigned int uint32_t;$/;"	v
uint32_t	$C2_ROOT/generator/c/c_generator_special.c2	/^    typedef unsigned int uint32_t;$/;"	v
uint32_t	$C2_ROOT/libs/io_uring/io_uring.c2i	/^	uint32_t flags;$/;"	v
uint64_t	$C2_ROOT/bootstrap/bootstrap.c	/^typedef unsigned long uint64_t;$/;"	v
uint64_t	$C2_ROOT/generator/c/c_generator.c2	/^                typedef unsigned long uint64_t;$/;"	v
uint64_t	$C2_ROOT/generator/c/c_generator_special.c2	/^    typedef unsigned long uint64_t;$/;"	v
uint8_t	$C2_ROOT/bootstrap/bootstrap.c	/^typedef unsigned char uint8_t;$/;"	v
uint8_t	$C2_ROOT/generator/c/c_generator.c2	/^    typedef unsigned char uint8_t;$/;"	v
uint8_t	$C2_ROOT/generator/c/c_generator_special.c2	/^    typedef unsigned char uint8_t;$/;"	v
uio	$C2_ROOT/libs/io_uring/io_uring.c2i	/^import uio;$/;"	v
uio	$C2_ROOT/libs/libc/uio.c2i	/^module uio;$/;"	v
umask	$C2_ROOT/libs/libc/sys_stat.c2i	/^fn Mode umask(Mode mask);$/;"	f
un	$C2_ROOT/bootstrap/bootstrap.c	/^   utsname un;$/;"	v
un	$C2_ROOT/common/target_info.c2	/^    sys_utsname.Name un;$/;"	v
uname	$C2_ROOT/libs/libc/sys_utsname.c2i	/^fn c_int uname(Name* buf);$/;"	f
unary	$C2_ROOT/bootstrap/bootstrap.c	/^            goto unary;$/;"	v
unary	$C2_ROOT/parser/c2_tokenizer.c2	/^                goto unary;$/;"	v
unaryOperatorBits	$C2_ROOT/ast/stmt.c2	/^        UnaryOperatorBits unaryOperatorBits;$/;"	v
unaryOperatorBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_UnaryOperatorBits unaryOperatorBits;$/;"	v
unbindMouseCursorImage	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void unbindMouseCursorImage(MouseCursor cursor) @(cname="sapp_unbind_mouse_cursor_image");$/;"	f
ungetc	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int ungetc(c_int __c, FILE* __stream);$/;"	f
uniform_blocks	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ShaderUniformBlock[8] uniform_blocks;$/;"	v
uniform_buffer_size	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 uniform_buffer_size;$/;"	v
uniforms	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    FrameStatsWgpuUniforms uniforms;$/;"	v
uniforms_full	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    bool uniforms_full;$/;"	v
unindent	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void Buf.unindent(Buf* buf) {$/;"	f
uninitBuffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void uninitBuffer(Buffer buf) @(cname="sg_uninit_buffer");$/;"	f
uninitImage	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void uninitImage(Image img) @(cname="sg_uninit_image");$/;"	f
uninitPipeline	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void uninitPipeline(Pipeline pip) @(cname="sg_uninit_pipeline");$/;"	f
uninitSampler	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void uninitSampler(Sampler smp) @(cname="sg_uninit_sampler");$/;"	f
uninitShader	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void uninitShader(Shader shd) @(cname="sg_uninit_shader");$/;"	f
uninitView	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void uninitView(View view) @(cname="sg_uninit_view");$/;"	f
uninit_count	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 uninit_count;$/;"	v
uninited	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 uninited;$/;"	v
unistd	$C2_ROOT/ast_utils/color.c2	/^import unistd;$/;"	v
unistd	$C2_ROOT/common/utils.c2	/^import unistd;$/;"	v
unistd	$C2_ROOT/compiler/main.c2	/^import unistd;$/;"	v
unistd	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^import unistd;$/;"	v
unistd	$C2_ROOT/ir/work_queue.c2	/^import unistd;$/;"	v
unistd	$C2_ROOT/libs/libc/unistd.c2i	/^module unistd;$/;"	v
unistd	$C2_ROOT/plugins/unit_test2.c2	/^import unistd;$/;"	v
unlink	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_int unlink(const char* name);$/;"	f
unlink_flags	$C2_ROOT/libs/io_uring/io_uring.c2i	/^        u32       unlink_flags;$/;"	v
unload	$C2_ROOT/bootstrap/bootstrap.c	/^   plugin_info_UnloadFn unload;$/;"	v
unload	$C2_ROOT/plugins/deps_generator_plugin.c2	/^fn void unload(void* arg) {$/;"	f
unload	$C2_ROOT/plugins/git_version_plugin.c2	/^fn void unload(void* arg) {$/;"	f
unload	$C2_ROOT/plugins/plugin_info.c2	/^    UnloadFn unload;$/;"	v
unload	$C2_ROOT/plugins/refs_generator_plugin.c2	/^fn void unload(void* arg) {$/;"	f
unload	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^fn void unload(void* arg) {$/;"	f
unload	$C2_ROOT/plugins/unit_test_plugin.c2	/^fn void unload(void* arg) {$/;"	f
unlock	$C2_ROOT/libs/pthread/pthread.c2i	/^fn c_int Mutex.unlock(Mutex* mutex) @(cname="pthread_mutex_unlock");$/;"	f
unlock	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void Texture.unlock(Texture* texture) @(cname="SDL_UnlockTexture");$/;"	f
unregister_buffers	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn c_int Ring.unregister_buffers(Ring* ring) @(cname="io_uring_unregister_buffers");$/;"	f
unsetConst	$C2_ROOT/ast/qualtype.c2	/^public fn void QualType.unsetConst(QualType* qt) {$/;"	f
unsetenv	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int unsetenv(const c_char* __name);$/;"	f
unused	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u32 unused;$/;"	v
unused_checker	$C2_ROOT/analyser/unused_checker.c2	/^module unused_checker;$/;"	v
unused_checker	$C2_ROOT/compiler/compiler.c2	/^import unused_checker;$/;"	v
unused_checker_Checker	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct unused_checker_Checker_ unused_checker_Checker;$/;"	v
unused_module	$C2_ROOT/analyser/unused_checker.c2	/^fn void Checker.unused_module(void* arg, AST* a) {$/;"	f
up	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec3 Vec3.up() {$/;"	f
upd_frame_index	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 upd_frame_index;$/;"	v
update	$C2_ROOT/ir/ssa.c2	/^                update read_ref$/;"	v
updateBuffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void updateBuffer(Buffer buf, Range* data) @(cname="sg_update_buffer");$/;"	f
updateImage	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void updateImage(Image img, ImageData* data) @(cname="sg_update_image");$/;"	f
updateSurface	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void Window.updateSurface(Window* window) @(cname="SDL_UpdateWindowSurface");$/;"	f
update_checkpoint	$C2_ROOT/common/source_mgr.c2	/^fn CheckPoint update_checkpoint(CheckPoint cp, const char* src, u32 len) {$/;"	f
update_frame_index	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u32 update_frame_index;$/;"	v
upper_name	$C2_ROOT/generator/c/c_generator.c2	/^    char[32] upper_name;$/;"	v
us	$C2_ROOT/libs/sokol/sokol_time.c2i	/^fn f64 us(u64 ticks) @(cname="stm_us");$/;"	f
usage	$C2_ROOT/bootstrap/bootstrap.c	/^   usage_counter_Counter usage;$/;"	v
usage	$C2_ROOT/compiler/main.c2	/^fn void usage() {$/;"	f
usage	$C2_ROOT/ir/context.c2	/^    usage_counter.Counter usage;$/;"	v
usage	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    ImageUsage usage;$/;"	v
usage_counter	$C2_ROOT/ir/context.c2	/^import usage_counter;$/;"	v
usage_counter	$C2_ROOT/ir/usage_counter.c2	/^module usage_counter;$/;"	v
usage_counter_Counter	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct usage_counter_Counter_ usage_counter_Counter;$/;"	v
useColor	$C2_ROOT/ast/utils.c2	/^fn bool useColor() {$/;"	f
useColor	$C2_ROOT/ast_utils/color.c2	/^public fn bool useColor() {$/;"	f
use_color	$C2_ROOT/ast/utils.c2	/^    return globals.use_color;$/;"	v
use_color	$C2_ROOT/bootstrap/bootstrap.c	/^   return ast_globals->use_color;$/;"	v
use_colors	$C2_ROOT/ast_utils/string_buffer.c2	/^    buf.colors = use_colors;$/;"	v
use_ir_backend	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool use_ir_backend;$/;"	v
use_ir_backend	$C2_ROOT/compiler/main.c2	/^    bool use_ir_backend;$/;"	v
used	$C2_ROOT/analyser/label_vector.c2	/^    bool used;$/;"	v
used	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool used;$/;"	v
used	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    return used;$/;"	v
usedPublic	$C2_ROOT/analyser/module_analyser.c2	/^    ma.usedPublic = top.usedPublic;$/;"	v
usedPublic	$C2_ROOT/analyser/module_analyser_builtin.c2	/^    bool savedPublic = ma.usedPublic;$/;"	v
usedPublic	$C2_ROOT/bootstrap/bootstrap.c	/^   ma->usedPublic = top->usedPublic;$/;"	v
used_import	$C2_ROOT/analyser/scope.c2	/^        s.cache_imports[s.cache_count] = used_import;$/;"	v
used_import	$C2_ROOT/bootstrap/bootstrap.c	/^      s->cache_imports[s->cache_count] = used_import;$/;"	v
used_list	$C2_ROOT/bootstrap/bootstrap.c	/^   linked_list_Element used_list;$/;"	v
used_nodes	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^fn u32 Tree.used_nodes(const Tree* t) {$/;"	f
used_opaque	$C2_ROOT/ast/instantiator.c2	/^    bool used_opaque;$/;"	v
used_opaque	$C2_ROOT/bootstrap/bootstrap.c	/^   _Bool used_opaque;$/;"	v
used_zones	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    linked_list.Element used_zones;$/;"	v
user	$C2_ROOT/ast/type_ref.c2	/^    h.prefix = h.user;$/;"	v
user	$C2_ROOT/bootstrap/bootstrap.c	/^   h->prefix = h->user;$/;"	v
user_data	$C2_ROOT/libs/io_uring/io_uring.c2i	/^	return cqe.user_data;$/;"	v
user_data	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    void* user_data;$/;"	v
user_data	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^    void* user_data;$/;"	v
user_data	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    void* user_data;$/;"	v
user_data	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* user_data;$/;"	v
user_data	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    void* user_data;$/;"	v
userdata	$C2_ROOT/libs/sdl2/sdl.c2i	/^    void* userdata;$/;"	v
userdata	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* userdata() @(cname="sapp_userdata");$/;"	f
userdata	$C2_ROOT/libs/sokol/sokol_audio.c2i	/^fn void* userdata() @(cname="saudio_userdata");$/;"	f
usize	$C2_ROOT/ast/qualtype.c2	/^    usize ptr;$/;"	v
usize	$C2_ROOT/common/file/file_utils.c2	/^    usize i;$/;"	v
usize	$C2_ROOT/common/string_utils.c2	/^    usize i;$/;"	v
usize	$C2_ROOT/generator/c/c_generator.c2	/^        usize len;$/;"	v
usize	$C2_ROOT/generator/c2refs.c2	/^    usize size;$/;"	v
usize	$C2_ROOT/libs/c2/usize.c2i	/^module usize;$/;"	v
usize	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    usize ring_sz;$/;"	v
usize	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    usize size;$/;"	v
usize	$C2_ROOT/libs/sokol/sokol_debugtext.c2i	/^    usize size;$/;"	v
usize	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    usize size;$/;"	v
usize	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    usize size;$/;"	v
usleep	$C2_ROOT/libs/libc/unistd.c2i	/^fn i32 usleep(c_ulonglong __useconds);$/;"	f
usualUnaryConversions	$C2_ROOT/analyser/module_analyser_expr.c2	/^fn QualType usualUnaryConversions(Expr* e) {$/;"	f
usual_arithmetic_conversion	$C2_ROOT/analyser/conversion_checker.c2	/^public fn QualType usual_arithmetic_conversion(const BuiltinType* b1, const BuiltinType* b2) {$/;"	f
utf8	$C2_ROOT/common/diagnostics.c2	/^import utf8;$/;"	v
utf8	$C2_ROOT/common/utf8.c2	/^module utf8;$/;"	v
utf8	$C2_ROOT/parser/c2_tokenizer.c2	/^import utf8;$/;"	v
utils	$C2_ROOT/common/diagnostics.c2	/^import utils;$/;"	v
utils	$C2_ROOT/common/utils.c2	/^module utils;$/;"	v
utils	$C2_ROOT/compiler/compiler.c2	/^import utils;$/;"	v
utils	$C2_ROOT/compiler/main.c2	/^import utils;$/;"	v
utils	$C2_ROOT/parser/c2_parser.c2	/^import utils;$/;"	v
utils	$C2_ROOT/plugins/deps_generator_plugin.c2	/^import utils;$/;"	v
utils	$C2_ROOT/plugins/refs_generator_plugin.c2	/^import utils;$/;"	v
utils	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^import utils;$/;"	v
utils	$C2_ROOT/plugins/unit_test_plugin.c2	/^import utils;$/;"	v
utils_PathInfo	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct utils_PathInfo_ utils_PathInfo;$/;"	v
utsname	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct utsname_ utsname;$/;"	v
uvalue	$C2_ROOT/ast/value.c2	/^    v.uvalue = uvalue;$/;"	v
uvalue	$C2_ROOT/bootstrap/bootstrap.c	/^   v->uvalue = uvalue;$/;"	v
uvalue	$C2_ROOT/ir/constant.c2	/^        u64 uvalue;$/;"	v
v1	$C2_ROOT/ast/value.c2	/^    Value result = *v1;$/;"	v
v1	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_Value result = *v1;$/;"	v
v2	$C2_ROOT/ast/value.c2	/^    Value r2 = *v2;$/;"	v
v2	$C2_ROOT/bootstrap/bootstrap.c	/^   ast_Value r2 = *v2;$/;"	v
v2f	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v2f(f32 x, f32 y) @(cname="sgl_v2f");$/;"	f
v2fC1i	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v2fC1i(f32 x, f32 y, u32 rgba) @(cname="sgl_v2f_c1i");$/;"	f
v2fC3b	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v2fC3b(f32 x, f32 y, u8 r, u8 g, u8 b) @(cname="sgl_v2f_c3b");$/;"	f
v2fC3f	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v2fC3f(f32 x, f32 y, f32 r, f32 g, f32 b) @(cname="sgl_v2f_c3f");$/;"	f
v2fC4b	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v2fC4b(f32 x, f32 y, u8 r, u8 g, u8 b, u8 a) @(cname="sgl_v2f_c4b");$/;"	f
v2fC4f	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v2fC4f(f32 x, f32 y, f32 r, f32 g, f32 b, f32 a) @(cname="sgl_v2f_c4f");$/;"	f
v2fT2f	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v2fT2f(f32 x, f32 y, f32 u, f32 v) @(cname="sgl_v2f_t2f");$/;"	f
v2fT2fC1i	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v2fT2fC1i(f32 x, f32 y, f32 u, f32 v, u32 rgba) @(cname="sgl_v2f_t2f_c1i");$/;"	f
v2fT2fC3b	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v2fT2fC3b(f32 x, f32 y, f32 u, f32 v, u8 r, u8 g, u8 b) @(cname="sgl_v2f_t2f_c3b");$/;"	f
v2fT2fC3f	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v2fT2fC3f(f32 x, f32 y, f32 u, f32 v, f32 r, f32 g, f32 b) @(cname="sgl_v2f_t2f_c3f");$/;"	f
v2fT2fC4b	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v2fT2fC4b(f32 x, f32 y, f32 u, f32 v, u8 r, u8 g, u8 b, u8 a) @(cname="sgl_v2f_t2f_c4b")/;"	f
v2fT2fC4f	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v2fT2fC4f(f32 x, f32 y, f32 u, f32 v, f32 r, f32 g, f32 b, f32 a) @(cname="sgl_v2f_t2f_c/;"	f
v3f	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v3f(f32 x, f32 y, f32 z) @(cname="sgl_v3f");$/;"	f
v3fC1i	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v3fC1i(f32 x, f32 y, f32 z, u32 rgba) @(cname="sgl_v3f_c1i");$/;"	f
v3fC3b	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v3fC3b(f32 x, f32 y, f32 z, u8 r, u8 g, u8 b) @(cname="sgl_v3f_c3b");$/;"	f
v3fC3f	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v3fC3f(f32 x, f32 y, f32 z, f32 r, f32 g, f32 b) @(cname="sgl_v3f_c3f");$/;"	f
v3fC4b	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v3fC4b(f32 x, f32 y, f32 z, u8 r, u8 g, u8 b, u8 a) @(cname="sgl_v3f_c4b");$/;"	f
v3fC4f	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v3fC4f(f32 x, f32 y, f32 z, f32 r, f32 g, f32 b, f32 a) @(cname="sgl_v3f_c4f");$/;"	f
v3fT2f	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v3fT2f(f32 x, f32 y, f32 z, f32 u, f32 v) @(cname="sgl_v3f_t2f");$/;"	f
v3fT2fC1i	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v3fT2fC1i(f32 x, f32 y, f32 z, f32 u, f32 v, u32 rgba) @(cname="sgl_v3f_t2f_c1i");$/;"	f
v3fT2fC3b	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v3fT2fC3b(f32 x, f32 y, f32 z, f32 u, f32 v, u8 r, u8 g, u8 b) @(cname="sgl_v3f_t2f_c3b"/;"	f
v3fT2fC3f	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v3fT2fC3f(f32 x, f32 y, f32 z, f32 u, f32 v, f32 r, f32 g, f32 b) @(cname="sgl_v3f_t2f_c/;"	f
v3fT2fC4b	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v3fT2fC4b(f32 x, f32 y, f32 z, f32 u, f32 v, u8 r, u8 g, u8 b, u8 a) @(cname="sgl_v3f_t2/;"	f
v3fT2fC4f	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void v3fT2fC4f(f32 x, f32 y, f32 z, f32 u, f32 v, f32 r, f32 g, f32 b, f32 a) @(cname="sgl_v3/;"	f
va_end	$C2_ROOT/libs/c2/varargs.c2i	/^fn void va_end(va_list ap);$/;"	f
va_end	$C2_ROOT/libs/libc/stdarg.c2i	/^fn void va_end(va_list ap);$/;"	f
va_list	$C2_ROOT/analyser/module_analyser.c2	/^    va_list args;$/;"	v
va_list	$C2_ROOT/ast_utils/string_buffer.c2	/^    va_list args;$/;"	v
va_list	$C2_ROOT/bootstrap/bootstrap.c	/^   va_list args;$/;"	v
va_list	$C2_ROOT/common/console.c2	/^    va_list args;$/;"	v
va_list	$C2_ROOT/common/diagnostics.c2	/^    va_list args;$/;"	v
va_list	$C2_ROOT/common/process_utils.c2	/^    va_list args;$/;"	v
va_list	$C2_ROOT/common/yaml/yaml_parser.c2	/^    va_list args;$/;"	v
va_list	$C2_ROOT/compiler/c2recipe_parser.c2	/^    va_list args;$/;"	v
va_list	$C2_ROOT/libs/c2/varargs.c2i	/^type va_list struct @(cname="va_list") {$/;"	t
va_list	$C2_ROOT/libs/libc/stdarg.c2i	/^type va_list struct @(cname="va_list") {$/;"	t
va_list	$C2_ROOT/parser/c2_parser.c2	/^    va_list args;$/;"	v
va_list	$C2_ROOT/parser/c2_tokenizer.c2	/^    va_list args;$/;"	v
va_list	$C2_ROOT/plugins/unit_test1.c2	/^  va_list args;$/;"	v
va_list	$C2_ROOT/plugins/unit_test2.c2	/^  va_list args;$/;"	v
va_list_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t va_list_idx;$/;"	v
va_list_idx	$C2_ROOT/parser/c2_parser.c2	/^    u32 va_list_idx;$/;"	v
va_start	$C2_ROOT/libs/c2/varargs.c2i	/^fn void va_start(va_list ap, ...);$/;"	f
va_start	$C2_ROOT/libs/libc/stdarg.c2i	/^fn void va_start(va_list ap, const c_char* last);$/;"	f
val	$C2_ROOT/analyser/module_analyser_expr.c2	/^    *result = val;$/;"	v
val	$C2_ROOT/ast/boolean_literal.c2	/^    e.base.base.booleanLiteralBits.value = val;$/;"	v
val	$C2_ROOT/ast/char_literal.c2	/^    e.base.base.charLiteralBits.value = val;$/;"	v
val	$C2_ROOT/ast/float_literal.c2	/^    i.val = val;$/;"	v
val	$C2_ROOT/ast/integer_literal.c2	/^    u64 val;$/;"	v
val	$C2_ROOT/bootstrap/bootstrap.c	/^   uint64_t val;$/;"	v
val	$C2_ROOT/ir_examples/members.c2	/^    i32 val;$/;"	v
val	$C2_ROOT/parser/c2_tokenizer.c2	/^    return val;$/;"	v
valid	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    bool valid;$/;"	v
validBinOpKind	$C2_ROOT/analyser/module_analyser_binop.c2	/^fn bool validBinOpKind(QualType t) {$/;"	f
valloc	$C2_ROOT/libs/libc/stdlib.c2i	/^fn void* valloc(c_size size);$/;"	f
valtype	$C2_ROOT/ast/expr.c2	/^    return (ValType)e.base.exprBits.valtype;$/;"	v
valtype	$C2_ROOT/bootstrap/bootstrap.c	/^   e->base.exprBits.valtype = valtype;$/;"	v
value	$C2_ROOT/analyser/module_analyser_init.c2	/^        FieldDesignatedInitExpr* fdi = (FieldDesignatedInitExpr*)value;$/;"	v
value	$C2_ROOT/analyser/module_analyser_type.c2	/^            value = ctv;$/;"	v
value	$C2_ROOT/ast/array_value.c2	/^    return d.value;$/;"	v
value	$C2_ROOT/ast/builtin_expr.c2	/^    e.value = value;$/;"	v
value	$C2_ROOT/ast/char_literal.c2	/^    u8 c = (u8)e.base.base.charLiteralBits.value;$/;"	v
value	$C2_ROOT/ast/enum_constant_decl.c2	/^    return d.value;$/;"	v
value	$C2_ROOT/ast/return_stmt.c2	/^        s.value[0] = value;$/;"	v
value	$C2_ROOT/ast/string_literal.c2	/^    u32 value;$/;"	v
value	$C2_ROOT/ast_utils/attr.c2	/^    Value value;$/;"	v
value	$C2_ROOT/ast_utils/attr_table.c2	/^    attr.Value value;$/;"	v
value	$C2_ROOT/bootstrap/bootstrap.c	/^   v->value = value;$/;"	v
value	$C2_ROOT/common/value_maplist.c2	/^    v.value = value;$/;"	v
value	$C2_ROOT/compiler/c2recipe_parser.c2	/^    u32 name = p.token.value;$/;"	v
value	$C2_ROOT/generator/c/c_generator_pure_call.c2	/^    Value value;$/;"	v
value	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^    init.expr = value;$/;"	v
value	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        ir.Ref value;$/;"	v
value	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    u32 value;$/;"	v
value	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    n2.value = n.value;$/;"	v
value	$C2_ROOT/ir/case_list.c2	/^    c.value = value;$/;"	v
value	$C2_ROOT/ir/function_info.c2	/^    return (Type)value;$/;"	v
value	$C2_ROOT/ir/init_value.c2	/^    r.value = value;$/;"	v
value	$C2_ROOT/ir/lookup_table.c2	/^    t.data[idx] = value;$/;"	v
value	$C2_ROOT/ir/print.c2	/^        u32 join_blk = i.args[1].value;$/;"	v
value	$C2_ROOT/ir/ref.c2	/^    r.value = value;$/;"	v
value	$C2_ROOT/ir/slot_collector.c2	/^    u16 slot = (u16)r.value;$/;"	v
value	$C2_ROOT/ir/ssa.c2	/^            u16 slot = (u16)ii.args[0].value;$/;"	v
value	$C2_ROOT/ir/switch.c2	/^    BlockId join_blk = ii.args[1].value;$/;"	v
value	$C2_ROOT/libs/sokol/sokol_math.c2i	/^    return value;$/;"	v
value	$C2_ROOT/parser/c2_tokenizer.c2	/^    result.int_value = value;$/;"	v
value_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   n->text_idx = value_idx;$/;"	v
value_idx	$C2_ROOT/common/yaml/yaml_parser.c2	/^    n.text_idx = value_idx;$/;"	v
value_kind	$C2_ROOT/ast_utils/attr.c2	/^    ValueKind value_kind;$/;"	v
value_kind	$C2_ROOT/bootstrap/bootstrap.c	/^   attr_ValueKind value_kind;$/;"	v
value_maplist	$C2_ROOT/common/value_maplist.c2	/^module value_maplist;$/;"	v
value_maplist	$C2_ROOT/generator/ir/ir_generator.c2	/^import value_maplist;$/;"	v
value_maplist_List	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct value_maplist_List_ value_maplist_List;$/;"	v
value_maplist_Value	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct value_maplist_Value_ value_maplist_Value;$/;"	v
value_ref	$C2_ROOT/generator/ir/field_struct_layouter.c2	/^        Ref value_ref;$/;"	v
value_ref	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^        ir.Ref value_ref;$/;"	v
values	$C2_ROOT/analyser/incr_array_list.c2	/^    ast.ExprList values;$/;"	v
values	$C2_ROOT/ast/array_value_list.c2	/^    return l.values;$/;"	v
values	$C2_ROOT/ast/init_list_expr.c2	/^    return e.values;$/;"	v
values	$C2_ROOT/bootstrap/bootstrap.c	/^   value_maplist_Value* values;$/;"	v
values	$C2_ROOT/common/value_maplist.c2	/^    Value* values;$/;"	v
values	$C2_ROOT/ir/init_value_list.c2	/^    InitValue* values;$/;"	v
values2	$C2_ROOT/ast/array_value_list.c2	/^        l.values = values2;$/;"	v
values2	$C2_ROOT/bootstrap/bootstrap.c	/^   l->values = values2;$/;"	v
values2	$C2_ROOT/common/value_maplist.c2	/^    l.values = values2;$/;"	v
values2	$C2_ROOT/ir/init_value_list.c2	/^    l.values = values2;$/;"	v
var2	$C2_ROOT/bootstrap/bootstrap.c	/^   g->map[(r->start + r->count)] = var2;$/;"	v
var2	$C2_ROOT/ir/interference_graph.c2	/^    g.map[r.start+r.count] = var2;$/;"	v
var2	$C2_ROOT/ir/live_map.c2	/^    g.map[r.start+r.count] = var2;$/;"	v
varDeclBits	$C2_ROOT/ast/decl.c2	/^        VarDeclBits varDeclBits;$/;"	v
varDeclBits	$C2_ROOT/bootstrap/bootstrap.c	/^      ast_VarDeclBits varDeclBits;$/;"	v
var_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   g->queue[tail] = var_idx;$/;"	v
var_idx	$C2_ROOT/ir/interference_graph.c2	/^    g.queue[tail] = var_idx;$/;"	v
var_idx	$C2_ROOT/ir/live_map.c2	/^    a.last_var = var_idx;$/;"	v
varargs	$C2_ROOT/libs/c2/varargs.c2i	/^module varargs;$/;"	v
varargsName	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t varargsName;$/;"	v
varargsName	$C2_ROOT/generator/c/c_generator.c2	/^    u32 varargsName;$/;"	v
varargs_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t varargs_idx;$/;"	v
varargs_idx	$C2_ROOT/parser/c2_parser.c2	/^    u32 varargs_idx;$/;"	v
variable	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^    const char* variable;$/;"	v
variables	$C2_ROOT/ast/ast.c2	/^    DeclList variables;$/;"	v
variables	$C2_ROOT/bootstrap/bootstrap.c	/^   interference_graph_Variable* variables;$/;"	v
variables	$C2_ROOT/ir/interference_graph.c2	/^    Variable* variables;$/;"	v
variables	$C2_ROOT/ir/live_map.c2	/^    Variable* variables;$/;"	v
vars	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_gen_locals_StackVar* vars;$/;"	v
vars	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^    StackVar* vars;$/;"	v
vars2	$C2_ROOT/bootstrap/bootstrap.c	/^   l->vars = vars2;$/;"	v
vars2	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^    l.vars = vars2;$/;"	v
vd	$C2_ROOT/analyser/module_analyser_function.c2	/^        Decl* d = (Decl*)vd;$/;"	v
vd	$C2_ROOT/analyser/module_analyser_stmt.c2	/^    Decl* d = (Decl*)vd;$/;"	v
vd	$C2_ROOT/generator/c/c_generator.c2	/^    const Decl* d = (Decl*)vd;$/;"	v
vd	$C2_ROOT/generator/c/c_generator_stmt.c2	/^    Decl* d = (Decl*)vd;$/;"	v
vd	$C2_ROOT/generator/c2i/c2i_generator_decl.c2	/^    Decl* d = (Decl*)vd;$/;"	v
vd	$C2_ROOT/generator/ir/ir_generator.c2	/^    Decl* d = (Decl*)vd;$/;"	v
vd	$C2_ROOT/generator/ir/ir_generator_locals.c2	/^    const ast.Decl* d = (ast.Decl*)vd;$/;"	v
vd	$C2_ROOT/generator/ir/ir_generator_stmt.c2	/^        Decl* d = (Decl*)vd;$/;"	v
vd2	$C2_ROOT/ast/var_decl.c2	/^    return vd2;$/;"	v
vd2	$C2_ROOT/bootstrap/bootstrap.c	/^   return vd2;$/;"	v
vdprintf	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int vdprintf(c_int __fd, const c_char *format, va_list ap);$/;"	f
vendor	$C2_ROOT/bootstrap/bootstrap.c	/^   target_info_Vendor vendor;$/;"	v
vendor	$C2_ROOT/common/target_info.c2	/^    Vendor vendor;$/;"	v
vendor_str	$C2_ROOT/common/target_info.c2	/^    char[32] vendor_str;$/;"	v
version	$C2_ROOT/libs/libc/sys_utsname.c2i	/^    char[NAME_LEN] version;$/;"	v
version	$C2_ROOT/libs/lua/lua.c2i	/^fn const Number* version(State *L) @(cname="lua_version");$/;"	f
version	$C2_ROOT/libs/sdl2/sdl.c2i	/^    u32 version;$/;"	v
version	$C2_ROOT/plugins/git_version_plugin.c2	/^    char[128] version;$/;"	v
versionsort	$C2_ROOT/libs/libc/libc_dirent.c2i	/^fn c_int versionsort(const Dirent**, const Dirent**);$/;"	f
vertexBufferDesc	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn BufferDesc vertexBufferDesc(Buffer* buf) @(cname="sshape_vertex_buffer_desc");$/;"	f
vertexBufferLayoutState	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^fn VertexBufferLayoutState vertexBufferLayoutState() @(cname="sshape_vertex_buffer_layout_state"/;"	f
vertex_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool vertex_buffer;$/;"	v
vertex_buffer_offsets	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32[8] vertex_buffer_offsets;$/;"	v
vertex_buffers	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    Buffer[8] vertex_buffers;$/;"	v
vertex_func	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* vertex_func;$/;"	v
vertex_lib	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* vertex_lib;$/;"	v
vertices	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    SizesItem vertices;$/;"	v
vertices_full	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^    bool vertices_full;$/;"	v
vfprintf	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int vfprintf(FILE* stream, const c_char *format, va_list ap);$/;"	f
view	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* view;$/;"	v
view_pool_size	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 view_pool_size;$/;"	v
view_slot	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u8 view_slot;$/;"	v
viewport	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void viewport(i32 x, i32 y, i32 w, i32 h, bool origin_top_left) @(cname="sgl_viewport");$/;"	f
viewportf	$C2_ROOT/libs/sokol/sokol_gl.c2i	/^fn void viewportf(f32 x, f32 y, f32 w, f32 h, bool origin_top_left) @(cname="sgl_viewportf");$/;"	f
views	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    View[32] views;$/;"	v
visit	$C2_ROOT/ast/instance_table.c2	/^fn void InstanceTable.visit(const InstanceTable* t, const ast.FunctionDecl* fd, TemplateVisitor /;"	f
visit	$C2_ROOT/common/library_list.c2	/^public fn void List.visit(const List* l, Visitor visitor, void* arg) {$/;"	f
visit	$C2_ROOT/common/module_list.c2	/^public fn void List.visit(const List* l, Visitor visitor, void* arg) {$/;"	f
visitASTs	$C2_ROOT/ast/module.c2	/^public fn void Module.visitASTs(const Module* m, ASTVisitor visitor, void* arg) {$/;"	f
visitArrayValues	$C2_ROOT/ast/ast.c2	/^fn void AST.visitArrayValues(AST* a, ArrayValueVisitor visitor, void* arg) {$/;"	f
visitArrayValues	$C2_ROOT/ast/module.c2	/^public fn void Module.visitArrayValues(const Module* m, ArrayValueVisitor visitor, void* arg) {$/;"	f
visitDecls	$C2_ROOT/ast/ast.c2	/^public fn void AST.visitDecls(const AST* a, DeclVisitor visitor, void* arg) {$/;"	f
visitDecls	$C2_ROOT/ast/module.c2	/^public fn void Module.visitDecls(const Module* m, DeclVisitor visitor, void* arg) {$/;"	f
visitDeclsWithoutImports	$C2_ROOT/ast/ast.c2	/^fn void AST.visitDeclsWithoutImports(const AST* a, DeclVisitor visitor, void* arg) {$/;"	f
visitDeclsWithoutImports	$C2_ROOT/ast/module.c2	/^public fn void Module.visitDeclsWithoutImports(const Module* m, DeclVisitor visitor, void* arg) /;"	f
visitFiles	$C2_ROOT/common/source_mgr.c2	/^public fn void SourceMgr.visitFiles(const SourceMgr* sm, void* arg, Visitor visitor) @(unused) {$/;"	f
visitFunctions	$C2_ROOT/ast/ast.c2	/^public fn void AST.visitFunctions(const AST* a, FunctionVisitor visitor, void* arg) {$/;"	f
visitFunctions	$C2_ROOT/ast/module.c2	/^public fn void Module.visitFunctions(const Module* m, FunctionVisitor visitor, void* arg) {$/;"	f
visitImports	$C2_ROOT/ast/ast.c2	/^public fn void AST.visitImports(const AST* a, ImportVisitor visitor, void* arg) {$/;"	f
visitImports	$C2_ROOT/ast/module.c2	/^public fn void Module.visitImports(const Module* m, ImportVisitor visitor, void* arg) {$/;"	f
visitInstances	$C2_ROOT/ast/module.c2	/^public fn void Module.visitInstances(const Module* m, ast.FunctionDecl* fd, TemplateVisitor visi/;"	f
visitLibs	$C2_ROOT/common/build_target.c2	/^public fn void Target.visitLibs(const Target* t, library_list.Visitor visitor, void* arg) {$/;"	f
visitModules	$C2_ROOT/common/component.c2	/^public fn void Component.visitModules(const Component* c, module_list.Visitor visitor, void* arg/;"	f
visitStaticAsserts	$C2_ROOT/ast/ast.c2	/^public fn void AST.visitStaticAsserts(AST* a, StaticAssertVisitor visitor, void* arg) @(unused) /;"	f
visitStaticAsserts	$C2_ROOT/ast/module.c2	/^public fn void Module.visitStaticAsserts(const Module* m, StaticAssertVisitor visitor, void* arg/;"	f
visitTypeDecls	$C2_ROOT/ast/ast.c2	/^public fn void AST.visitTypeDecls(const AST* a, TypeDeclVisitor visitor, void* arg) {$/;"	f
visitTypeDecls	$C2_ROOT/ast/module.c2	/^public fn void Module.visitTypeDecls(const Module* m, TypeDeclVisitor visitor, void* arg) {$/;"	f
visitTypeFunctions	$C2_ROOT/ast/ast.c2	/^fn void AST.visitTypeFunctions(const AST* a, FunctionVisitor visitor, void* arg) {$/;"	f
visitTypeFunctions	$C2_ROOT/ast/module.c2	/^public fn void Module.visitTypeFunctions(const Module* m, FunctionVisitor visitor, void* arg) {$/;"	f
visitVarDecls	$C2_ROOT/ast/ast.c2	/^public fn void AST.visitVarDecls(const AST* a, VarDeclVisitor visitor, void* arg) {$/;"	f
visitVarDecls	$C2_ROOT/ast/module.c2	/^public fn void Module.visitVarDecls(const Module* m, VarDeclVisitor visitor, void* arg) {$/;"	f
visitor	$C2_ROOT/bootstrap/bootstrap.c	/^   wrapper.visitor = visitor;$/;"	v
visitor	$C2_ROOT/generator/generator_utils.c2	/^    wrapper.visitor = visitor;$/;"	v
visitor	$C2_ROOT/plugins/refs_generator.c2	/^    ast_visitor.Visitor* visitor;$/;"	v
void	$C2_ROOT/ast/instantiator.c2	/^public type OpaqueErrorfn fn void (void* arg, src_loc.SrcLoc loc, Decl* decl);$/;"	f
void	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^type Dbg_fn fn void(void*, c_int, const char *, c_int, const char *);$/;"	f
volume	$C2_ROOT/libs/sdl2_mixer/sdl_mixer.c2i	/^    u8 volume;$/;"	v
vprint_errormsg	$C2_ROOT/plugins/unit_test2.c2	/^fn void vprint_errormsg(const char* fmt, va_list ap) {$/;"	f
vprintf	$C2_ROOT/ast_utils/string_buffer.c2	/^public fn void Buf.vprintf(Buf* buf, const char* format, va_list args) {$/;"	f
vprintf	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int vprintf(const c_char* format, va_list ap);$/;"	f
vs	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* vs;$/;"	v
vs_mod	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* vs_mod;$/;"	v
vsnprintf	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int vsnprintf(c_char* str, c_size size, const c_char *format, va_list ap);$/;"	f
vsprintf	$C2_ROOT/libs/libc/stdio.c2i	/^fn c_int vsprintf(c_char* str, const c_char *format, va_list ap);$/;"	f
wa	$C2_ROOT/bootstrap/bootstrap.c	/^         return wa;$/;"	v
wait	$C2_ROOT/libs/libc/unistd.c2i	/^fn Pid wait(c_int* wstatus);$/;"	f
wait	$C2_ROOT/libs/pthread/pthread.c2i	/^fn c_int Cond.wait(Cond* cond, Mutex* mutex) @(cname="pthread_cond_wait");$/;"	f
wait	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn void Thread.wait(Thread* thread, c_int* status) @(cname="SDL_WaitThread");$/;"	f
waitEventTimeout	$C2_ROOT/libs/sdl2/sdl.c2i	/^fn c_int waitEventTimeout(Event* event, c_int timeout_ms) @(cname="SDL_WaitEventTimeout");$/;"	f
wait_cqe	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn c_int Ring.wait_cqe(Ring* ring, Cqe **cqe_ptr) @(cname="io_uring_wait_cqe")$/;"	f
wait_cqe_nr	$C2_ROOT/libs/io_uring/io_uring.c2i	/^fn c_int Ring.wait_cqe_nr(Ring *ring, Cqe** cqe_ptr, u32 wait_nr) @(cname="io_uring_wait_cqe_nr"/;"	f
waitpid	$C2_ROOT/libs/libc/unistd.c2i	/^fn Pid waitpid(Pid pid, c_int* wstatus, c_int options);$/;"	f
warn	$C2_ROOT/analyser/module_analyser.c2	/^fn void Analyser.warn(Analyser* ma, SrcLoc loc, const char* format @(printf_format), ...) {$/;"	f
warn	$C2_ROOT/common/console.c2	/^public fn void warn(const char* format @(printf_format), ...) {$/;"	f
warn	$C2_ROOT/common/diagnostics.c2	/^public fn void Diags.warn(Diags* diags, SrcLoc loc, const char* format @(printf_format), ...) {$/;"	f
warn2	$C2_ROOT/common/diagnostics.c2	/^public fn void Diags.warn2(Diags* diags, SrcLoc loc, const char* format, va_list args) {$/;"	f
warn_on_unused	$C2_ROOT/analyser/scope.c2	/^    s.warn_on_unused = warn_on_unused;$/;"	v
warn_on_unused	$C2_ROOT/bootstrap/bootstrap.c	/^   s->warn_on_unused = warn_on_unused;$/;"	v
warning	$C2_ROOT/compiler/c2recipe_parser.c2	/^fn void Parser.warning(Parser* p, const char* format @(printf_format), ...) {$/;"	f
warning_flags	$C2_ROOT/analyser/module_analyser.c2	/^import warning_flags;$/;"	v
warning_flags	$C2_ROOT/analyser/unused_checker.c2	/^import warning_flags;$/;"	v
warning_flags	$C2_ROOT/common/build_target.c2	/^import warning_flags;$/;"	v
warning_flags	$C2_ROOT/common/warning_flags.c2	/^module warning_flags;$/;"	v
warning_flags	$C2_ROOT/compiler/c2recipe_parser.c2	/^import warning_flags;$/;"	v
warning_flags	$C2_ROOT/compiler/compiler.c2	/^import warning_flags;$/;"	v
warning_flags_Flags	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct warning_flags_Flags_ warning_flags_Flags;$/;"	v
warnings	$C2_ROOT/analyser/module_analyser.c2	/^    ma.warnings = warnings;$/;"	v
warnings	$C2_ROOT/analyser/unused_checker.c2	/^    const warning_flags.Flags* warnings;$/;"	v
warnings	$C2_ROOT/bootstrap/bootstrap.c	/^   warning_flags_Flags warnings;$/;"	v
warnings	$C2_ROOT/common/build_target.c2	/^    warning_flags.Flags warnings;$/;"	v
wasted	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    u32 wasted;$/;"	v
wasted	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    u32 used = t.nodes.capacity - t.wasted;$/;"	v
wcstombs	$C2_ROOT/libs/libc/stdlib.c2i	/^fn c_int wcstombs(c_char* __s, const c_int* __pwcs, c_size __n);$/;"	f
wgpu	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    WgpuSwapchain wgpu;$/;"	v
wgpuCommandEncoder	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void* wgpuCommandEncoder() @(cname="sg_wgpu_command_encoder");$/;"	f
wgpuComputePassEncoder	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void* wgpuComputePassEncoder() @(cname="sg_wgpu_compute_pass_encoder");$/;"	f
wgpuDevice	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void* wgpuDevice() @(cname="sg_wgpu_device");$/;"	f
wgpuGetDepthStencilView	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* wgpuGetDepthStencilView() @(cname="sapp_wgpu_get_depth_stencil_view");$/;"	f
wgpuGetDevice	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* wgpuGetDevice() @(cname="sapp_wgpu_get_device");$/;"	f
wgpuGetRenderView	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* wgpuGetRenderView() @(cname="sapp_wgpu_get_render_view");$/;"	f
wgpuGetResolveView	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* wgpuGetResolveView() @(cname="sapp_wgpu_get_resolve_view");$/;"	f
wgpuQueryBufferInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn WgpuBufferInfo wgpuQueryBufferInfo(Buffer buf) @(cname="sg_wgpu_query_buffer_info");$/;"	f
wgpuQueryImageInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn WgpuImageInfo wgpuQueryImageInfo(Image img) @(cname="sg_wgpu_query_image_info");$/;"	f
wgpuQueryPipelineInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn WgpuPipelineInfo wgpuQueryPipelineInfo(Pipeline pip) @(cname="sg_wgpu_query_pipeline_info");$/;"	f
wgpuQuerySamplerInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn WgpuSamplerInfo wgpuQuerySamplerInfo(Sampler smp) @(cname="sg_wgpu_query_sampler_info");$/;"	f
wgpuQueryShaderInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn WgpuShaderInfo wgpuQueryShaderInfo(Shader shd) @(cname="sg_wgpu_query_shader_info");$/;"	f
wgpuQueryViewInfo	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn WgpuViewInfo wgpuQueryViewInfo(View view) @(cname="sg_wgpu_query_view_info");$/;"	f
wgpuQueue	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void* wgpuQueue() @(cname="sg_wgpu_queue");$/;"	f
wgpuRenderPassEncoder	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^fn void* wgpuRenderPassEncoder() @(cname="sg_wgpu_render_pass_encoder");$/;"	f
wgpu_bindgroups_cache_size	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 wgpu_bindgroups_cache_size;$/;"	v
wgpu_buffer	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* wgpu_buffer;$/;"	v
wgpu_disable_bindgroups_cache	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool wgpu_disable_bindgroups_cache;$/;"	v
wgpu_sampler	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* wgpu_sampler;$/;"	v
wgpu_texture	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    void* wgpu_texture;$/;"	v
wgsl_group0_binding_n	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u8 wgsl_group0_binding_n;$/;"	v
wgsl_group1_binding_n	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u8 wgsl_group1_binding_n;$/;"	v
while_assign	$C2_ROOT/ir_examples/cond_decl.c2	/^fn void while_assign(i32 a, i32 loops) {$/;"	f
while_decl	$C2_ROOT/ir_examples/cond_decl.c2	/^fn void while_decl(i32 loops) {$/;"	f
width	$C2_ROOT/analyser/conversion_checker_expr.c2	/^    result.width = (w1.width > w2.width) ? w1.width : w2.width;$/;"	v
width	$C2_ROOT/ast/bitoffset_expr.c2	/^    return e.base.base.bitOffsetBits.width;$/;"	v
width	$C2_ROOT/ast/value.c2	/^    return (u8)width;$/;"	v
width	$C2_ROOT/ast/var_decl.c2	/^    info.layout.bit_width = width;$/;"	v
width	$C2_ROOT/bootstrap/bootstrap.c	/^   uint8_t width;$/;"	v
width	$C2_ROOT/generator/ir/ir_generator.c2	/^    u32 width;$/;"	v
width	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn i32 width() @(cname="sapp_width");$/;"	f
width	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    i32 width;$/;"	v
width	$C2_ROOT/libs/sokol/sokol_shape.c2i	/^    f32 width;$/;"	v
widthf	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn f32 widthf() @(cname="sapp_widthf");$/;"	f
win32GetHwnd	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* win32GetHwnd() @(cname="sapp_win32_get_hwnd");$/;"	f
win32_console_attach	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool win32_console_attach;$/;"	v
win32_console_create	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool win32_console_create;$/;"	v
win32_console_utf8	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    bool win32_console_utf8;$/;"	v
window_height	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    i32 window_height;$/;"	v
window_title	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    const char* window_title;$/;"	v
window_width	$C2_ROOT/libs/sokol/sokol_app.c2i	/^    i32 window_width;$/;"	v
within	$C2_ROOT/libs/sdl2/sdl.c2i	/^       largest datatype within the union, which is 8 bytes on 64-bit$/;"	t
wl	$C2_ROOT/analyser/conversion_checker.c2	/^    return w.width <= wl;$/;"	v
word_idx	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    return w.data + word_idx;$/;"	v
word_idx	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    n.word_idx = word_idx;$/;"	v
words	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    Words* words;$/;"	v
words	$C2_ROOT/generator/radix_tree/radix_tree_fs.c2	/^    tr.words = words;$/;"	v
words2	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    t.words = words2;$/;"	v
words_resize	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^fn void Tree.words_resize(Tree* t, u32 capacity) {$/;"	f
wordsize	$C2_ROOT/ast/utils.c2	/^    return globals.wordsize;$/;"	v
wordsize	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t wordsize;$/;"	v
worker_main	$C2_ROOT/ir/work_queue.c2	/^fn void* worker_main(void* arg) {$/;"	f
wq_fd	$C2_ROOT/libs/io_uring/io_uring.c2i	/^    u32 wq_fd;$/;"	v
wr	$C2_ROOT/ir/ssa.c2	/^        return *wr;$/;"	v
wr_count	$C2_ROOT/bootstrap/bootstrap.c	/^   uint16_t wr_count;$/;"	v
wr_start	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t slot_start = bi->wr_start;$/;"	v
wrap_u	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    Wrap wrap_u;$/;"	v
wrap_v	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    Wrap wrap_v;$/;"	v
wrap_w	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    Wrap wrap_w;$/;"	v
write	$C2_ROOT/common/file/writer.c2	/^public fn bool File.write(File* file, const void* data, usize len) {$/;"	f
write	$C2_ROOT/common/manifest_writer.c2	/^public fn void write(const char* dir, component.Component* c, const char* filename) {$/;"	f
write	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.write(Generator* gen, const char* output_dir, const char* filename, string_buf/;"	f
write	$C2_ROOT/generator/c2refs.c2	/^public fn bool Refs.write(Refs* r, const char* filename) {$/;"	f
write	$C2_ROOT/libs/libc/unistd.c2i	/^fn c_ssize write(c_int fd, const void* buf, c_size count);$/;"	f
write	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool write;$/;"	v
write2	$C2_ROOT/common/file/writer.c2	/^fn isize write2(i32 hd, const void* data, usize len) {$/;"	f
writeCallExterns	$C2_ROOT/generator/c/c_generator_trace.c2	/^fn void Generator.writeCallExterns(Generator* gen, string_buffer.Buf* out) {$/;"	f
writeCalls	$C2_ROOT/generator/c/c_generator_trace.c2	/^fn void Generator.writeCalls(Generator* gen, string_buffer.Buf* out) {$/;"	f
write_enabled	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool write_enabled;$/;"	v
write_file_or_die	$C2_ROOT/compiler/main.c2	/^fn void write_file_or_die(const char* filename, string_buffer.Buf* buf) {$/;"	f
write_files	$C2_ROOT/generator/c/c_generator.c2	/^fn void Generator.write_files(Generator* gen) {$/;"	f
write_idx	$C2_ROOT/bootstrap/bootstrap.c	/^   uint32_t write_idx;$/;"	v
write_mask	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    u8 write_mask;$/;"	v
writeonly	$C2_ROOT/libs/sokol/sokol_gfx.c2i	/^    bool writeonly;$/;"	v
writer	$C2_ROOT/bootstrap/bootstrap.c	/^   file_utils_Writer writer;$/;"	v
writes	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_WriteSlotAccess* writes;$/;"	v
writes	$C2_ROOT/ir/slot_collector.c2	/^    Map* writes;$/;"	v
writes2	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_WriteSlotAccess* writes2;$/;"	v
writev	$C2_ROOT/libs/libc/uio.c2i	/^fn isize writev(c_int fd, const Iovec* iovec, c_int count);$/;"	f
written	$C2_ROOT/bootstrap/bootstrap.c	/^         total_written += written;$/;"	v
written	$C2_ROOT/common/file/writer.c2	/^            total_written += written;$/;"	v
x0	$C2_ROOT/libs/libc/sys_mman.c2i	/^const u32 PROT_NONE  = 0x0;$/;"	v
x00	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^const u32 STYLE_NORMAL        = 0x00;$/;"	v
x00000000	$C2_ROOT/libs/libc/sys_socket.c2i	/^const u32 INADDR_ANY       = 0x00000000;$/;"	v
x00000001	$C2_ROOT/libs/sdl2/sdl.c2i	/^const c_int INIT_TIMER          = 0x00000001;$/;"	v
x00000001	$C2_ROOT/libs/sdl2_image/sdl_image.c2i	/^const c_uint INIT_JPG  = 0x00000001;$/;"	v
x00000002	$C2_ROOT/libs/sdl2_image/sdl_image.c2i	/^const c_uint INIT_PNG  = 0x00000002;$/;"	v
x00000004	$C2_ROOT/libs/sdl2_image/sdl_image.c2i	/^const c_uint INIT_TIF  = 0x00000004;$/;"	v
x00000008	$C2_ROOT/libs/sdl2_image/sdl_image.c2i	/^const c_uint INIT_WEBP = 0x00000008;$/;"	v
x00000010	$C2_ROOT/libs/sdl2/sdl.c2i	/^const c_int INIT_AUDIO          = 0x00000010;$/;"	v
x00001000	$C2_ROOT/libs/sdl2/sdl.c2i	/^const c_int INIT_HAPTIC         = 0x00001000;$/;"	v
x00004000	$C2_ROOT/libs/sdl2/sdl.c2i	/^const c_int INIT_EVENTS         = 0x00004000;$/;"	v
x00008000	$C2_ROOT/libs/sdl2/sdl.c2i	/^const c_int INIT_SENSOR         = 0x00008000;$/;"	v
x00100	$C2_ROOT/libs/dl/dlfcn.c2i	/^const u32 RTLD_GLOBAL       = 0x00100;$/;"	v
x01	$C2_ROOT/analyser/module_analyser.c2	/^const u32 LHS = 0x01;$/;"	v
x01	$C2_ROOT/libs/libc/libc_poll.c2i	/^const u32 POLLIN   = 0x01;$/;"	v
x01	$C2_ROOT/libs/libc/sys_mman.c2i	/^const u32 MAP_SHARED    = 0x01;$/;"	v
x01	$C2_ROOT/libs/math/math.c2i	/^const c_int FP_INFINITE   = 0x01;$/;"	v
x01	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^const u32 STYLE_BOLD          = 0x01;$/;"	v
x01000	$C2_ROOT/libs/dl/dlfcn.c2i	/^const u32 RTLD_NODELETE   = 0x01000;$/;"	v
x02	$C2_ROOT/analyser/module_analyser.c2	/^const u32 RHS = 0x02;$/;"	v
x02	$C2_ROOT/libs/libc/sys_mman.c2i	/^const u32 MAP_PRIVATE   = 0x02;$/;"	v
x02	$C2_ROOT/libs/math/math.c2i	/^const c_int FP_NAN        = 0x02;$/;"	v
x02	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^const u32 STYLE_ITALIC        = 0x02;$/;"	v
x04	$C2_ROOT/libs/libc/libc_poll.c2i	/^const u32 POLLOUT  = 0x04;$/;"	v
x04	$C2_ROOT/libs/math/math.c2i	/^const c_int FP_NORMAL     = 0x04;$/;"	v
x04	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^const u32 STYLE_UNDERLINE     = 0x04;$/;"	v
x08	$C2_ROOT/libs/libc/libc_poll.c2i	/^const u32 POLLERR  = 0x08;$/;"	v
x08	$C2_ROOT/libs/math/math.c2i	/^const c_int FP_SUBNORMAL  = 0x08;$/;"	v
x08	$C2_ROOT/libs/sdl2_ttf/sdl_ttf.c2i	/^const u32 STYLE_STRIKETHROUGH = 0x08;$/;"	v
x0F	$C2_ROOT/ir/function_info.c2	/^        value &= 0x0F;$/;"	v
x1	$C2_ROOT/analyser/scope.c2	/^public const u32 Function    = 0x1;$/;"	v
x1	$C2_ROOT/ast/qualtype.c2	/^public const usize QualType_Const    = 0x1;$/;"	v
x1	$C2_ROOT/common/bit_array.c2	/^    return (a.data[word] >> idx) & 0x1;$/;"	v
x1	$C2_ROOT/libs/libc/sys_mman.c2i	/^const u32 PROT_READ  = 0x1;$/;"	v
x10	$C2_ROOT/libs/libc/libc_poll.c2i	/^const u32 POLLHUP  = 0x10;$/;"	v
x10	$C2_ROOT/libs/libc/sys_mman.c2i	/^const u32 MAP_FIXED     = 0x10;$/;"	v
x1000	$C2_ROOT/libs/libc/sys_mman.c2i	/^const u32 MAP_ANONYMOUS = 0x1000;$/;"	v
x10000000	$C2_ROOT/libs/io_uring/io_uring.c2i	/^const u64 OFF_SQES    = 0x10000000;$/;"	v
x11GetDisplay	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* x11GetDisplay() @(cname="sapp_x11_get_display");$/;"	f
x11GetWindow	$C2_ROOT/libs/sokol/sokol_app.c2i	/^fn void* x11GetWindow() @(cname="sapp_x11_get_window");$/;"	f
x16462004	$C2_ROOT/libs/sdl2/sdl.c2i	/^const u32 PIXELFORMAT_RGBA8888 = 0x16462004;$/;"	v
x1FFF0000	$C2_ROOT/libs/sdl2/sdl.c2i	/^const c_int WINDOWPOS_UNDEFINED_MASK = 0x1FFF0000;$/;"	v
x2	$C2_ROOT/analyser/scope.c2	/^public const u32 Break       = 0x2;$/;"	v
x2	$C2_ROOT/ast/qualtype.c2	/^public const usize QualType_Volatile = 0x2;$/;"	v
x2	$C2_ROOT/libs/libc/sys_mman.c2i	/^const u32 PROT_WRITE = 0x2;$/;"	v
x20	$C2_ROOT/libs/libc/libc_poll.c2i	/^const u32 POLLNVAL = 0x20;$/;"	v
x20	$C2_ROOT/libs/libc/sys_mman.c2i	/^const u32 MAP_ANONYMOUS = 0x20;$/;"	v
x2080	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_FEATURE_UNAVAILABLE              = -0x2080;$/;"	v
x2100	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_UNKNOWN_OID                      = -0x2100;$/;"	v
x2180	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_INVALID_FORMAT                   = -0x2180;$/;"	v
x2200	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_INVALID_VERSION                  = -0x2200;$/;"	v
x2280	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_INVALID_SERIAL                   = -0x2280;$/;"	v
x2300	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_INVALID_ALG                      = -0x2300;$/;"	v
x2380	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_INVALID_NAME                     = -0x2380;$/;"	v
x2400	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_INVALID_DATE                     = -0x2400;$/;"	v
x2480	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_INVALID_SIGNATURE                = -0x2480;$/;"	v
x2500	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_INVALID_EXTENSIONS               = -0x2500;$/;"	v
x2580	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_UNKNOWN_VERSION                  = -0x2580;$/;"	v
x2600	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_UNKNOWN_SIG_ALG                  = -0x2600;$/;"	v
x2680	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_SIG_MISMATCH                     = -0x2680;$/;"	v
x2700	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_CERT_VERIFY_FAILED               = -0x2700;$/;"	v
x2780	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_CERT_UNKNOWN_FORMAT              = -0x2780;$/;"	v
x2800	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_BAD_INPUT_DATA                   = -0x2800;$/;"	v
x2880	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_ALLOC_FAILED                     = -0x2880;$/;"	v
x2900	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_FILE_IO_ERROR                    = -0x2900;$/;"	v
x2980	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_BUFFER_TOO_SMALL                 = -0x2980;$/;"	v
x2FFF0000	$C2_ROOT/libs/sdl2/sdl.c2i	/^const c_int WINDOWPOS_CENTERED_MASK  = 0x2FFF0000;$/;"	v
x3	$C2_ROOT/ast/qualtype.c2	/^const usize QualType_Mask     = 0x3;$/;"	v
x3	$C2_ROOT/generator/c2refs.c2	/^    return (x + 3) & ~0x3;$/;"	v
x3000	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^const c_int ERR_X509_FATAL_ERROR                      = -0x3000;$/;"	v
x3FFFFFF	$C2_ROOT/ir/context.c2	/^    const i32 max_27_bits = 0x3FFFFFF;$/;"	v
x3ffffff	$C2_ROOT/bootstrap/bootstrap.c	/^   const int32_t max_27_bits = 0x3ffffff;$/;"	v
x4	$C2_ROOT/analyser/scope.c2	/^public const u32 Continue    = 0x4;$/;"	v
x4	$C2_ROOT/libs/libc/sys_mman.c2i	/^const u32 PROT_EXEC  = 0x4;$/;"	v
x509_crt_free	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void x509_crt_free(X509_crt *crt) @(cname="mbedtls_x509_crt_free");$/;"	f
x509_crt_info	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int x509_crt_info(char *buf, c_size size, const char *prefix, const X509_crt *crt) @(cname=/;"	f
x509_crt_init	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn void x509_crt_init(X509_crt* crt) @(cname="mbedtls_x509_crt_init");$/;"	f
x509_crt_parse	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int x509_crt_parse( X509_crt *chain, const c_uchar *buf, c_size buflen ) @(cname="mbedtls_x/;"	f
x509_crt_parse_file	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int x509_crt_parse_file( X509_crt *chain, const char *path) @(cname="mbedtls_x509_crt_parse/;"	f
x509_crt_parse_path	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int x509_crt_parse_path( X509_crt *chain, const char *path ) @(cname="mbedtls_x509_crt_pars/;"	f
x509_crt_verify_info	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^fn c_int x509_crt_verify_info(char *buf, c_size size, const char *prefix, c_uint flags) @(cname=/;"	f
x5401	$C2_ROOT/libs/libc/sys_ioctl.c2i	/^const c_uint TCGETS      = 0x5401;$/;"	v
x5402	$C2_ROOT/libs/libc/sys_ioctl.c2i	/^const c_uint TCSETS      = 0x5402;$/;"	v
x5403	$C2_ROOT/libs/libc/sys_ioctl.c2i	/^const c_uint TCSETSW     = 0x5403;$/;"	v
x5404	$C2_ROOT/libs/libc/sys_ioctl.c2i	/^const c_uint TCSETSF     = 0x5404;$/;"	v
x5405	$C2_ROOT/libs/libc/sys_ioctl.c2i	/^const c_uint TCGETA      = 0x5405;$/;"	v
x5406	$C2_ROOT/libs/libc/sys_ioctl.c2i	/^const c_uint TCSETA      = 0x5406;$/;"	v
x7ff	$C2_ROOT/ast/value.c2	/^    return ((u.bits >> 52) & 0x7ff) != 0x7ff;$/;"	v
x8	$C2_ROOT/analyser/scope.c2	/^public const u32 Decl        = 0x8;$/;"	v
x8000	$C2_ROOT/libs/libc/sys_mman.c2i	/^const u32 MAP_POPULATE  = 0x8000;$/;"	v
x8000000	$C2_ROOT/libs/io_uring/io_uring.c2i	/^const u64 OFF_CQ_RING = 0x8000000;$/;"	v
x8926	$C2_ROOT/libs/libc/linux_sockios.c2i	/^const u32 SIOCSIFENCAP	= 0x8926;$/;"	v
x8930	$C2_ROOT/libs/libc/linux_sockios.c2i	/^const u32 SIOCSIFSLAVE	= 0x8930;$/;"	v
x8932	$C2_ROOT/libs/libc/linux_sockios.c2i	/^const u32 SIOCDELMULTI	= 0x8932;$/;"	v
x8935	$C2_ROOT/libs/libc/linux_sockios.c2i	/^const u32 SIOCGIFPFLAGS	= 0x8935;$/;"	v
xFF	$C2_ROOT/bootstrap/bootstrap.c	/^        unsigned len = *s2++ & 0xFF;$/;"	v
xFF	$C2_ROOT/generator/c/c_generator.c2	/^            unsigned len = *s2++ & 0xFF;$/;"	v
xFF	$C2_ROOT/generator/c/c_generator_stmt.c2	/^                u32 slen = (lit.getSize() - 1) & 0xFF;$/;"	v
xFF	$C2_ROOT/parser/c2_tokenizer.c2	/^        c = cc & 0xFF;$/;"	v
xFFFFFF	$C2_ROOT/ir_examples/global_arrays.c2	/^i64 l = 0xFFFFFF;$/;"	v
xf	$C2_ROOT/bootstrap/bootstrap.c	/^      value &= 0xf;$/;"	v
xffffffff	$C2_ROOT/ast_utils/string_pool.c2	/^const u64 INDEX_BITS = 0xffffffff;$/;"	v
xffffffff	$C2_ROOT/libs/libc/sys_socket.c2i	/^const u32 INADDR_NONE      = 0xffffffff;$/;"	v
xmove	$C2_ROOT/libs/lua/lua.c2i	/^fn void xmove(State *from, State *to, c_int n) @(cname="lua_xmove");$/;"	f
xor	$C2_ROOT/ast/value.c2	/^fn Value Value.xor(const Value* v1, const Value* v2) {$/;"	f
xval	$C2_ROOT/parser/c2_tokenizer.c2	/^        cc = cc * 16 + xval;$/;"	v
yaml	$C2_ROOT/common/build_file.c2	/^import yaml;$/;"	v
yaml	$C2_ROOT/common/yaml/yaml_data.c2	/^module yaml;$/;"	v
yaml	$C2_ROOT/common/yaml/yaml_dump.c2	/^module yaml;$/;"	v
yaml	$C2_ROOT/common/yaml/yaml_iterator.c2	/^module yaml;$/;"	v
yaml	$C2_ROOT/common/yaml/yaml_parser.c2	/^module yaml;$/;"	v
yaml	$C2_ROOT/common/yaml/yaml_tokenizer.c2	/^module yaml;$/;"	v
yaml	$C2_ROOT/compiler/c2recipe_yaml.c2	/^import yaml;$/;"	v
yaml	$C2_ROOT/compiler/manifest.c2	/^import yaml;$/;"	v
yaml	$C2_ROOT/plugins/shell_cmd_plugin.c2	/^import yaml;$/;"	v
yaml_Data	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct yaml_Data_ yaml_Data;$/;"	v
yaml_Iter	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct yaml_Iter_ yaml_Iter;$/;"	v
yaml_Location	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct yaml_Location_ yaml_Location;$/;"	v
yaml_Node	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct yaml_Node_ yaml_Node;$/;"	v
yaml_NodeKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t yaml_NodeKind;$/;"	v
yaml_NodeKind_Map	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_NodeKind_Map,$/;"	v
yaml_NodeKind_Scalar	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_NodeKind_Scalar,$/;"	v
yaml_NodeKind_Sequence	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_NodeKind_Sequence,$/;"	v
yaml_NodeKind_Unknown	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_NodeKind_Unknown,$/;"	v
yaml_Parser	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct yaml_Parser_ yaml_Parser;$/;"	v
yaml_StackLevel	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct yaml_StackLevel_ yaml_StackLevel;$/;"	v
yaml_Token	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct yaml_Token_ yaml_Token;$/;"	v
yaml_TokenKind	$C2_ROOT/bootstrap/bootstrap.c	/^typedef uint8_t yaml_TokenKind;$/;"	v
yaml_TokenKind_Colon	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_TokenKind_Colon,$/;"	v
yaml_TokenKind_Dash	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_TokenKind_Dash,$/;"	v
yaml_TokenKind_Dedent	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_TokenKind_Dedent,$/;"	v
yaml_TokenKind_Directive	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_TokenKind_Directive,$/;"	v
yaml_TokenKind_Doc_End	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_TokenKind_Doc_End,$/;"	v
yaml_TokenKind_Doc_Start	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_TokenKind_Doc_Start,$/;"	v
yaml_TokenKind_Double_Quoted_Scalar	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_TokenKind_Double_Quoted_Scalar,$/;"	v
yaml_TokenKind_Eof	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_TokenKind_Eof,$/;"	v
yaml_TokenKind_Error	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_TokenKind_Error,$/;"	v
yaml_TokenKind_Indent	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_TokenKind_Indent,$/;"	v
yaml_TokenKind_None	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_TokenKind_None,$/;"	v
yaml_TokenKind_Plain_Scalar	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_TokenKind_Plain_Scalar,$/;"	v
yaml_TokenKind_Single_Quoted_Scalar	$C2_ROOT/bootstrap/bootstrap.c	/^   yaml_TokenKind_Single_Quoted_Scalar,$/;"	v
yaml_Tokenizer	$C2_ROOT/bootstrap/bootstrap.c	/^typedef struct yaml_Tokenizer_ yaml_Tokenizer;$/;"	v
year	$C2_ROOT/libs/mbedtls/mbedtls.c2i	/^    c_int year;$/;"	v
yieldk	$C2_ROOT/libs/lua/lua.c2i	/^fn c_int yieldk(State *L, c_int nresults, KContext ctx,$/;"	f
zero	$C2_ROOT/bootstrap/bootstrap.c	/^   ir_Ref zero;$/;"	v
zero	$C2_ROOT/generator/ir/ir_generator_binop.c2	/^    ir.Ref zero;$/;"	v
zero	$C2_ROOT/generator/ir/ir_generator_expr.c2	/^    ir.Ref zero;$/;"	v
zero	$C2_ROOT/libs/sokol/sokol_math.c2i	/^fn Vec4 Vec4.zero() {$/;"	f
zone	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^            zone = z;$/;"	v
zones	$C2_ROOT/generator/radix_tree/radix_tree.c2	/^    Zone[32] zones;$/;"	v
