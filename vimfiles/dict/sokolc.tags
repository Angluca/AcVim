ANativeActivity_onCreate	$SOKOLC/sokol_app.h	/^void ANativeActivity_onCreate(ANativeActivity* activity, void* saved_state, size_t saved_state_s/;"	f
ARB_create_context	$SOKOLC/sokol_app.h	/^    bool ARB_create_context;$/;"	E
ARB_create_context_profile	$SOKOLC/sokol_app.h	/^    bool ARB_create_context_profile;$/;"	E
ARB_multisample	$SOKOLC/sokol_app.h	/^    bool ARB_multisample;$/;"	E
AUDCLNT_STREAMFLAGS_AUTOCONVERTPCM	$SOKOLC/sokol_audio.h	/^    #define AUDCLNT_STREAMFLAGS_AUTOCONVERTPCM 0x80000000$/;"	M	struct:saudio_desc
AUDCLNT_STREAMFLAGS_SRC_DEFAULT_QUALITY	$SOKOLC/sokol_audio.h	/^    #define AUDCLNT_STREAMFLAGS_SRC_DEFAULT_QUALITY 0x08000000$/;"	M	struct:saudio_desc
AudioQueueAllocateBuffer	$SOKOLC/sokol_audio.h	/^extern _saudio_OSStatus AudioQueueAllocateBuffer(_saudio_AudioQueueRef inAQ, uint32_t inBufferBy/;"	f
AudioQueueDispose	$SOKOLC/sokol_audio.h	/^extern _saudio_OSStatus AudioQueueDispose(_saudio_AudioQueueRef inAQ, bool inImmediate);$/;"	f
AudioQueueEnqueueBuffer	$SOKOLC/sokol_audio.h	/^extern _saudio_OSStatus AudioQueueEnqueueBuffer(_saudio_AudioQueueRef inAQ, _saudio_AudioQueueBu/;"	f
AudioQueueNewOutput	$SOKOLC/sokol_audio.h	/^extern _saudio_OSStatus AudioQueueNewOutput(const _saudio_AudioStreamBasicDescription* inFormat,/;"	f
AudioQueueStart	$SOKOLC/sokol_audio.h	/^extern _saudio_OSStatus AudioQueueStart(_saudio_AudioQueueRef inAQ, const _saudio_AudioTimeStamp/;"	f
AudioQueueStop	$SOKOLC/sokol_audio.h	/^extern _saudio_OSStatus AudioQueueStop(_saudio_AudioQueueRef inAQ, bool inImmediate);$/;"	f
CINTERFACE	$SOKOLC/sokol_audio.h	/^    #define CINTERFACE$/;"	M	struct:saudio_desc
CLOCK_MONOTONIC	$SOKOLC/sokol_time.h	/^#define CLOCK_MONOTONIC /;"	d
COBJMACROS	$SOKOLC/sokol_audio.h	/^    #define COBJMACROS$/;"	M	struct:saudio_desc
CONST_VTABLE	$SOKOLC/sokol_audio.h	/^    #define CONST_VTABLE$/;"	M	struct:saudio_desc
CreateContext	$SOKOLC/sokol_app.h	/^    PFN_wglCreateContext CreateContext;$/;"	E	enum:MONITOR_DPI_TYPE
CreateContextAttribsARB	$SOKOLC/sokol_app.h	/^    PFNWGLCREATECONTEXTATTRIBSARBPROC CreateContextAttribsARB;$/;"	E	enum:MONITOR_DPI_TYPE
CreateWindow	$SOKOLC/sokol_app.h	/^    PFNGLXCREATEWINDOWPROC CreateWindow;$/;"	E
D3D11_NO_HELPERS	$SOKOLC/sokol_app.h	/^            #define D3D11_NO_HELPERS$/;"	M
D3D11_NO_HELPERS	$SOKOLC/sokol_gfx.h	/^    #define D3D11_NO_HELPERS$/;"	d
D3DCompile_func	$SOKOLC/sokol_gfx.h	/^    pD3DCompile D3DCompile_func;$/;"	m	struct:__anon13e02ee74408	typeref:typename:pD3DCompile
DeleteContext	$SOKOLC/sokol_app.h	/^    PFN_wglDeleteContext DeleteContext;$/;"	E	enum:MONITOR_DPI_TYPE
DestroyContext	$SOKOLC/sokol_app.h	/^    PFNGLXDESTROYCONTEXTPROC DestroyContext;$/;"	E
DestroyWindow	$SOKOLC/sokol_app.h	/^    PFNGLXDESTROYWINDOWPROC DestroyWindow;$/;"	E
EM_JS	$SOKOLC/sokol_app.h	/^EM_JS(void, sapp_js_write_clipboard, (const char* c_str), {$/;"	f
EM_JS	$SOKOLC/sokol_audio.h	/^EM_JS(void, saudio_js_shutdown, (void), {$/;"	f
EM_JS_DEPS	$SOKOLC/sokol_app.h	/^EM_JS_DEPS(sokol_app, "$withStackSave,$allocateUTF8OnStack");$/;"	f
ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB	$SOKOLC/sokol_app.h	/^#define ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB 0x2054$/;"	M	enum:MONITOR_DPI_TYPE
ERROR_INVALID_PROFILE_ARB	$SOKOLC/sokol_app.h	/^#define ERROR_INVALID_PROFILE_ARB 0x2096$/;"	M	enum:MONITOR_DPI_TYPE
ERROR_INVALID_VERSION_ARB	$SOKOLC/sokol_app.h	/^#define ERROR_INVALID_VERSION_ARB 0x2095$/;"	M	enum:MONITOR_DPI_TYPE
EXT_swap_control	$SOKOLC/sokol_app.h	/^    bool EXT_swap_control;$/;"	E
GLXContext	$SOKOLC/sokol_app.h	/^typedef void (*PFNGLXDESTROYCONTEXTPROC)(Display*,GLXContext);$/;"	t
GLXDrawable	$SOKOLC/sokol_app.h	/^typedef void (*PFNGLXSWAPBUFFERSPROC)(Display*,GLXDrawable);$/;"	t
GLXFBConfig	$SOKOLC/sokol_app.h	/^typedef struct __GLXFBConfig* GLXFBConfig;$/;"	t
GLXWindow	$SOKOLC/sokol_app.h	/^typedef void (*PFNGLXDESTROYWINDOWPROC)(Display*,GLXWindow);$/;"	t
GLX_ALPHA_SIZE	$SOKOLC/sokol_app.h	/^#define GLX_ALPHA_SIZE 11$/;"	M
GLX_BLUE_SIZE	$SOKOLC/sokol_app.h	/^#define GLX_BLUE_SIZE 10$/;"	M
GLX_CONTEXT_CORE_PROFILE_BIT_ARB	$SOKOLC/sokol_app.h	/^#define GLX_CONTEXT_CORE_PROFILE_BIT_ARB 0x00000001$/;"	M
GLX_CONTEXT_FLAGS_ARB	$SOKOLC/sokol_app.h	/^#define GLX_CONTEXT_FLAGS_ARB 0x2094$/;"	M
GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	$SOKOLC/sokol_app.h	/^#define GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB 0x00000002$/;"	M
GLX_CONTEXT_MAJOR_VERSION_ARB	$SOKOLC/sokol_app.h	/^#define GLX_CONTEXT_MAJOR_VERSION_ARB 0x2091$/;"	M
GLX_CONTEXT_MINOR_VERSION_ARB	$SOKOLC/sokol_app.h	/^#define GLX_CONTEXT_MINOR_VERSION_ARB 0x2092$/;"	M
GLX_CONTEXT_PROFILE_MASK_ARB	$SOKOLC/sokol_app.h	/^#define GLX_CONTEXT_PROFILE_MASK_ARB 0x9126$/;"	M
GLX_DEPTH_SIZE	$SOKOLC/sokol_app.h	/^#define GLX_DEPTH_SIZE 12$/;"	M
GLX_DOUBLEBUFFER	$SOKOLC/sokol_app.h	/^#define GLX_DOUBLEBUFFER 5$/;"	M
GLX_DRAWABLE_TYPE	$SOKOLC/sokol_app.h	/^#define GLX_DRAWABLE_TYPE 0x8010$/;"	M
GLX_GREEN_SIZE	$SOKOLC/sokol_app.h	/^#define GLX_GREEN_SIZE 9$/;"	M
GLX_RED_SIZE	$SOKOLC/sokol_app.h	/^#define GLX_RED_SIZE 8$/;"	M
GLX_RENDER_TYPE	$SOKOLC/sokol_app.h	/^#define GLX_RENDER_TYPE	0x8011$/;"	M
GLX_RGBA_BIT	$SOKOLC/sokol_app.h	/^#define GLX_RGBA_BIT 0x00000001$/;"	M
GLX_SAMPLES	$SOKOLC/sokol_app.h	/^#define GLX_SAMPLES 0x186a1$/;"	M
GLX_STENCIL_SIZE	$SOKOLC/sokol_app.h	/^#define GLX_STENCIL_SIZE 13$/;"	M
GLX_VENDOR	$SOKOLC/sokol_app.h	/^#define GLX_VENDOR 1$/;"	M
GLX_WINDOW_BIT	$SOKOLC/sokol_app.h	/^#define GLX_WINDOW_BIT 0x00000001$/;"	M
GL_ALWAYS	$SOKOLC/sokol_gfx.h	/^        #define GL_ALWAYS /;"	d
GL_APIENTRY	$SOKOLC/sokol_gfx.h	/^        #define GL_APIENTRY /;"	d
GL_ARRAY_BUFFER	$SOKOLC/sokol_gfx.h	/^        #define GL_ARRAY_BUFFER /;"	d
GL_BACK	$SOKOLC/sokol_gfx.h	/^        #define GL_BACK /;"	d
GL_BLEND	$SOKOLC/sokol_gfx.h	/^        #define GL_BLEND /;"	d
GL_BYTE	$SOKOLC/sokol_gfx.h	/^        #define GL_BYTE /;"	d
GL_CCW	$SOKOLC/sokol_gfx.h	/^        #define GL_CCW /;"	d
GL_CLAMP_TO_BORDER	$SOKOLC/sokol_gfx.h	/^        #define GL_CLAMP_TO_BORDER /;"	d
GL_CLAMP_TO_EDGE	$SOKOLC/sokol_gfx.h	/^        #define GL_CLAMP_TO_EDGE /;"	d
GL_COLOR	$SOKOLC/sokol_gfx.h	/^        #define GL_COLOR /;"	d
GL_COLOR_ATTACHMENT0	$SOKOLC/sokol_gfx.h	/^        #define GL_COLOR_ATTACHMENT0 /;"	d
GL_COLOR_ATTACHMENT1	$SOKOLC/sokol_gfx.h	/^        #define GL_COLOR_ATTACHMENT1 /;"	d
GL_COLOR_ATTACHMENT2	$SOKOLC/sokol_gfx.h	/^        #define GL_COLOR_ATTACHMENT2 /;"	d
GL_COLOR_ATTACHMENT22	$SOKOLC/sokol_gfx.h	/^        #define GL_COLOR_ATTACHMENT22 /;"	d
GL_COLOR_ATTACHMENT3	$SOKOLC/sokol_gfx.h	/^        #define GL_COLOR_ATTACHMENT3 /;"	d
GL_COLOR_BUFFER_BIT	$SOKOLC/sokol_gfx.h	/^        #define GL_COLOR_BUFFER_BIT /;"	d
GL_COMPARE_REF_TO_TEXTURE	$SOKOLC/sokol_gfx.h	/^        #define GL_COMPARE_REF_TO_TEXTURE /;"	d
GL_COMPILE_STATUS	$SOKOLC/sokol_gfx.h	/^        #define GL_COMPILE_STATUS /;"	d
GL_COMPRESSED_RED_GREEN_RGTC2	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_RED_GREEN_RGTC2 /;"	d
GL_COMPRESSED_RED_RGTC1	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_RED_RGTC1 /;"	d
GL_COMPRESSED_RG11_EAC	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_RG11_EAC /;"	d
GL_COMPRESSED_RGB8_ETC2	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_RGB8_ETC2 /;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_RGBA8_ETC2_EAC /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG /;"	d
GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG /;"	d
GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG /;"	d
GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2 /;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_SIGNED_RED_RGTC1 /;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_SIGNED_RG11_EAC /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	$SOKOLC/sokol_gfx.h	/^    #define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB /;"	d
GL_CONSTANT_ALPHA	$SOKOLC/sokol_gfx.h	/^        #define GL_CONSTANT_ALPHA /;"	d
GL_CONSTANT_COLOR	$SOKOLC/sokol_gfx.h	/^        #define GL_CONSTANT_COLOR /;"	d
GL_CULL_FACE	$SOKOLC/sokol_gfx.h	/^        #define GL_CULL_FACE /;"	d
GL_CURRENT_PROGRAM	$SOKOLC/sokol_gfx.h	/^        #define GL_CURRENT_PROGRAM /;"	d
GL_CW	$SOKOLC/sokol_gfx.h	/^        #define GL_CW /;"	d
GL_DECR	$SOKOLC/sokol_gfx.h	/^        #define GL_DECR /;"	d
GL_DECR_WRAP	$SOKOLC/sokol_gfx.h	/^        #define GL_DECR_WRAP /;"	d
GL_DEPTH	$SOKOLC/sokol_gfx.h	/^        #define GL_DEPTH /;"	d
GL_DEPTH24_STENCIL8	$SOKOLC/sokol_gfx.h	/^    #define GL_DEPTH24_STENCIL8 /;"	d
GL_DEPTH_ATTACHMENT	$SOKOLC/sokol_gfx.h	/^        #define GL_DEPTH_ATTACHMENT /;"	d
GL_DEPTH_BUFFER_BIT	$SOKOLC/sokol_gfx.h	/^        #define GL_DEPTH_BUFFER_BIT /;"	d
GL_DEPTH_COMPONENT	$SOKOLC/sokol_gfx.h	/^        #define GL_DEPTH_COMPONENT /;"	d
GL_DEPTH_COMPONENT32F	$SOKOLC/sokol_gfx.h	/^        #define GL_DEPTH_COMPONENT32F /;"	d
GL_DEPTH_STENCIL	$SOKOLC/sokol_gfx.h	/^    #define GL_DEPTH_STENCIL /;"	d
GL_DEPTH_STENCIL_ATTACHMENT	$SOKOLC/sokol_gfx.h	/^        #define GL_DEPTH_STENCIL_ATTACHMENT /;"	d
GL_DEPTH_TEST	$SOKOLC/sokol_gfx.h	/^        #define GL_DEPTH_TEST /;"	d
GL_DITHER	$SOKOLC/sokol_gfx.h	/^        #define GL_DITHER /;"	d
GL_DRAW_FRAMEBUFFER	$SOKOLC/sokol_gfx.h	/^        #define GL_DRAW_FRAMEBUFFER /;"	d
GL_DST_ALPHA	$SOKOLC/sokol_gfx.h	/^        #define GL_DST_ALPHA /;"	d
GL_DST_COLOR	$SOKOLC/sokol_gfx.h	/^        #define GL_DST_COLOR /;"	d
GL_DYNAMIC_DRAW	$SOKOLC/sokol_gfx.h	/^        #define GL_DYNAMIC_DRAW /;"	d
GL_ELEMENT_ARRAY_BUFFER	$SOKOLC/sokol_gfx.h	/^        #define GL_ELEMENT_ARRAY_BUFFER /;"	d
GL_EQUAL	$SOKOLC/sokol_gfx.h	/^        #define GL_EQUAL /;"	d
GL_EXTENSIONS	$SOKOLC/sokol_gfx.h	/^        #define GL_EXTENSIONS /;"	d
GL_FALSE	$SOKOLC/sokol_gfx.h	/^        #define GL_FALSE /;"	d
GL_FLOAT	$SOKOLC/sokol_gfx.h	/^        #define GL_FLOAT /;"	d
GL_FRAGMENT_SHADER	$SOKOLC/sokol_gfx.h	/^        #define GL_FRAGMENT_SHADER /;"	d
GL_FRAMEBUFFER	$SOKOLC/sokol_gfx.h	/^        #define GL_FRAMEBUFFER /;"	d
GL_FRAMEBUFFER_BINDING	$SOKOLC/sokol_gfx.h	/^        #define GL_FRAMEBUFFER_BINDING /;"	d
GL_FRAMEBUFFER_COMPLETE	$SOKOLC/sokol_gfx.h	/^        #define GL_FRAMEBUFFER_COMPLETE /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	$SOKOLC/sokol_gfx.h	/^        #define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	$SOKOLC/sokol_gfx.h	/^        #define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	$SOKOLC/sokol_gfx.h	/^        #define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE /;"	d
GL_FRAMEBUFFER_SRGB	$SOKOLC/sokol_gfx.h	/^        #define GL_FRAMEBUFFER_SRGB /;"	d
GL_FRAMEBUFFER_UNDEFINED	$SOKOLC/sokol_gfx.h	/^        #define GL_FRAMEBUFFER_UNDEFINED /;"	d
GL_FRAMEBUFFER_UNSUPPORTED	$SOKOLC/sokol_gfx.h	/^        #define GL_FRAMEBUFFER_UNSUPPORTED /;"	d
GL_FRONT	$SOKOLC/sokol_gfx.h	/^        #define GL_FRONT /;"	d
GL_FUNC_ADD	$SOKOLC/sokol_gfx.h	/^        #define GL_FUNC_ADD /;"	d
GL_FUNC_REVERSE_SUBTRACT	$SOKOLC/sokol_gfx.h	/^        #define GL_FUNC_REVERSE_SUBTRACT /;"	d
GL_FUNC_SUBTRACT	$SOKOLC/sokol_gfx.h	/^        #define GL_FUNC_SUBTRACT /;"	d
GL_GEQUAL	$SOKOLC/sokol_gfx.h	/^        #define GL_GEQUAL /;"	d
GL_GLEXT_PROTOTYPES	$SOKOLC/sokol_app.h	/^    #define GL_GLEXT_PROTOTYPES$/;"	M
GL_GLEXT_PROTOTYPES	$SOKOLC/sokol_gfx.h	/^            #define GL_GLEXT_PROTOTYPES$/;"	d
GL_GREATER	$SOKOLC/sokol_gfx.h	/^        #define GL_GREATER /;"	d
GL_HALF_FLOAT	$SOKOLC/sokol_gfx.h	/^    #define GL_HALF_FLOAT /;"	d
GL_INCR	$SOKOLC/sokol_gfx.h	/^        #define GL_INCR /;"	d
GL_INCR_WRAP	$SOKOLC/sokol_gfx.h	/^        #define GL_INCR_WRAP /;"	d
GL_INFO_LOG_LENGTH	$SOKOLC/sokol_gfx.h	/^        #define GL_INFO_LOG_LENGTH /;"	d
GL_INT	$SOKOLC/sokol_gfx.h	/^        #define GL_INT /;"	d
GL_INT_2_10_10_10_REV	$SOKOLC/sokol_gfx.h	/^        #define GL_INT_2_10_10_10_REV /;"	d
GL_INVERT	$SOKOLC/sokol_gfx.h	/^        #define GL_INVERT /;"	d
GL_KEEP	$SOKOLC/sokol_gfx.h	/^        #define GL_KEEP /;"	d
GL_LEQUAL	$SOKOLC/sokol_gfx.h	/^        #define GL_LEQUAL /;"	d
GL_LESS	$SOKOLC/sokol_gfx.h	/^        #define GL_LESS /;"	d
GL_LINEAR	$SOKOLC/sokol_gfx.h	/^        #define GL_LINEAR /;"	d
GL_LINEAR_MIPMAP_LINEAR	$SOKOLC/sokol_gfx.h	/^        #define GL_LINEAR_MIPMAP_LINEAR /;"	d
GL_LINEAR_MIPMAP_NEAREST	$SOKOLC/sokol_gfx.h	/^        #define GL_LINEAR_MIPMAP_NEAREST /;"	d
GL_LINES	$SOKOLC/sokol_gfx.h	/^        #define GL_LINES /;"	d
GL_LINE_STRIP	$SOKOLC/sokol_gfx.h	/^        #define GL_LINE_STRIP /;"	d
GL_LINK_STATUS	$SOKOLC/sokol_gfx.h	/^        #define GL_LINK_STATUS /;"	d
GL_LUMINANCE	$SOKOLC/sokol_gfx.h	/^    #define GL_LUMINANCE /;"	d
GL_MAX_3D_TEXTURE_SIZE	$SOKOLC/sokol_gfx.h	/^        #define GL_MAX_3D_TEXTURE_SIZE /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	$SOKOLC/sokol_gfx.h	/^        #define GL_MAX_ARRAY_TEXTURE_LAYERS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	$SOKOLC/sokol_gfx.h	/^        #define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	$SOKOLC/sokol_gfx.h	/^        #define GL_MAX_CUBE_MAP_TEXTURE_SIZE /;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	$SOKOLC/sokol_gfx.h	/^    #define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_MAX_TEXTURE_SIZE	$SOKOLC/sokol_gfx.h	/^        #define GL_MAX_TEXTURE_SIZE /;"	d
GL_MAX_VERTEX_ATTRIBS	$SOKOLC/sokol_gfx.h	/^        #define GL_MAX_VERTEX_ATTRIBS /;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	$SOKOLC/sokol_gfx.h	/^        #define GL_MAX_VERTEX_UNIFORM_VECTORS /;"	d
GL_MIRRORED_REPEAT	$SOKOLC/sokol_gfx.h	/^        #define GL_MIRRORED_REPEAT /;"	d
GL_MULTISAMPLE	$SOKOLC/sokol_gfx.h	/^        #define GL_MULTISAMPLE /;"	d
GL_NEAREST	$SOKOLC/sokol_gfx.h	/^        #define GL_NEAREST /;"	d
GL_NEAREST_MIPMAP_LINEAR	$SOKOLC/sokol_gfx.h	/^        #define GL_NEAREST_MIPMAP_LINEAR /;"	d
GL_NEAREST_MIPMAP_NEAREST	$SOKOLC/sokol_gfx.h	/^        #define GL_NEAREST_MIPMAP_NEAREST /;"	d
GL_NEVER	$SOKOLC/sokol_gfx.h	/^        #define GL_NEVER /;"	d
GL_NONE	$SOKOLC/sokol_gfx.h	/^        #define GL_NONE /;"	d
GL_NOTEQUAL	$SOKOLC/sokol_gfx.h	/^        #define GL_NOTEQUAL /;"	d
GL_NO_ERROR	$SOKOLC/sokol_gfx.h	/^        #define GL_NO_ERROR /;"	d
GL_NUM_EXTENSIONS	$SOKOLC/sokol_gfx.h	/^        #define GL_NUM_EXTENSIONS /;"	d
GL_ONE	$SOKOLC/sokol_gfx.h	/^        #define GL_ONE /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	$SOKOLC/sokol_gfx.h	/^        #define GL_ONE_MINUS_CONSTANT_ALPHA /;"	d
GL_ONE_MINUS_CONSTANT_COLOR	$SOKOLC/sokol_gfx.h	/^        #define GL_ONE_MINUS_CONSTANT_COLOR /;"	d
GL_ONE_MINUS_DST_ALPHA	$SOKOLC/sokol_gfx.h	/^        #define GL_ONE_MINUS_DST_ALPHA /;"	d
GL_ONE_MINUS_DST_COLOR	$SOKOLC/sokol_gfx.h	/^        #define GL_ONE_MINUS_DST_COLOR /;"	d
GL_ONE_MINUS_SRC_ALPHA	$SOKOLC/sokol_gfx.h	/^        #define GL_ONE_MINUS_SRC_ALPHA /;"	d
GL_ONE_MINUS_SRC_COLOR	$SOKOLC/sokol_gfx.h	/^        #define GL_ONE_MINUS_SRC_COLOR /;"	d
GL_POINTS	$SOKOLC/sokol_gfx.h	/^        #define GL_POINTS /;"	d
GL_POLYGON_OFFSET_FILL	$SOKOLC/sokol_gfx.h	/^        #define GL_POLYGON_OFFSET_FILL /;"	d
GL_PROGRAM_POINT_SIZE	$SOKOLC/sokol_gfx.h	/^        #define GL_PROGRAM_POINT_SIZE /;"	d
GL_R11F_G11F_B10F	$SOKOLC/sokol_gfx.h	/^        #define GL_R11F_G11F_B10F /;"	d
GL_R16	$SOKOLC/sokol_gfx.h	/^        #define GL_R16 /;"	d
GL_R16F	$SOKOLC/sokol_gfx.h	/^        #define GL_R16F /;"	d
GL_R16I	$SOKOLC/sokol_gfx.h	/^        #define GL_R16I /;"	d
GL_R16UI	$SOKOLC/sokol_gfx.h	/^        #define GL_R16UI /;"	d
GL_R16_SNORM	$SOKOLC/sokol_gfx.h	/^        #define GL_R16_SNORM /;"	d
GL_R32F	$SOKOLC/sokol_gfx.h	/^        #define GL_R32F /;"	d
GL_R32I	$SOKOLC/sokol_gfx.h	/^        #define GL_R32I /;"	d
GL_R32UI	$SOKOLC/sokol_gfx.h	/^        #define GL_R32UI /;"	d
GL_R8	$SOKOLC/sokol_gfx.h	/^        #define GL_R8 /;"	d
GL_R8I	$SOKOLC/sokol_gfx.h	/^        #define GL_R8I /;"	d
GL_R8UI	$SOKOLC/sokol_gfx.h	/^        #define GL_R8UI /;"	d
GL_R8_SNORM	$SOKOLC/sokol_gfx.h	/^        #define GL_R8_SNORM /;"	d
GL_READ_FRAMEBUFFER	$SOKOLC/sokol_gfx.h	/^        #define GL_READ_FRAMEBUFFER /;"	d
GL_RED	$SOKOLC/sokol_gfx.h	/^        #define GL_RED /;"	d
GL_RED_INTEGER	$SOKOLC/sokol_gfx.h	/^        #define GL_RED_INTEGER /;"	d
GL_RENDERBUFFER	$SOKOLC/sokol_gfx.h	/^        #define GL_RENDERBUFFER /;"	d
GL_REPEAT	$SOKOLC/sokol_gfx.h	/^        #define GL_REPEAT /;"	d
GL_REPLACE	$SOKOLC/sokol_gfx.h	/^        #define GL_REPLACE /;"	d
GL_RG	$SOKOLC/sokol_gfx.h	/^        #define GL_RG /;"	d
GL_RG16	$SOKOLC/sokol_gfx.h	/^        #define GL_RG16 /;"	d
GL_RG16F	$SOKOLC/sokol_gfx.h	/^        #define GL_RG16F /;"	d
GL_RG16I	$SOKOLC/sokol_gfx.h	/^        #define GL_RG16I /;"	d
GL_RG16UI	$SOKOLC/sokol_gfx.h	/^        #define GL_RG16UI /;"	d
GL_RG16_SNORM	$SOKOLC/sokol_gfx.h	/^        #define GL_RG16_SNORM /;"	d
GL_RG32F	$SOKOLC/sokol_gfx.h	/^        #define GL_RG32F /;"	d
GL_RG32I	$SOKOLC/sokol_gfx.h	/^        #define GL_RG32I /;"	d
GL_RG32UI	$SOKOLC/sokol_gfx.h	/^        #define GL_RG32UI /;"	d
GL_RG8	$SOKOLC/sokol_gfx.h	/^        #define GL_RG8 /;"	d
GL_RG8I	$SOKOLC/sokol_gfx.h	/^        #define GL_RG8I /;"	d
GL_RG8UI	$SOKOLC/sokol_gfx.h	/^        #define GL_RG8UI /;"	d
GL_RG8_SNORM	$SOKOLC/sokol_gfx.h	/^        #define GL_RG8_SNORM /;"	d
GL_RGB	$SOKOLC/sokol_gfx.h	/^        #define GL_RGB /;"	d
GL_RGB10_A2	$SOKOLC/sokol_gfx.h	/^        #define GL_RGB10_A2 /;"	d
GL_RGB16I	$SOKOLC/sokol_gfx.h	/^        #define GL_RGB16I /;"	d
GL_RGB16UI	$SOKOLC/sokol_gfx.h	/^        #define GL_RGB16UI /;"	d
GL_RGB16_SNORM	$SOKOLC/sokol_gfx.h	/^        #define GL_RGB16_SNORM /;"	d
GL_RGB32I	$SOKOLC/sokol_gfx.h	/^        #define GL_RGB32I /;"	d
GL_RGB32UI	$SOKOLC/sokol_gfx.h	/^        #define GL_RGB32UI /;"	d
GL_RGB5	$SOKOLC/sokol_gfx.h	/^        #define GL_RGB5 /;"	d
GL_RGB5_A1	$SOKOLC/sokol_gfx.h	/^        #define GL_RGB5_A1 /;"	d
GL_RGB8	$SOKOLC/sokol_gfx.h	/^        #define GL_RGB8 /;"	d
GL_RGB8I	$SOKOLC/sokol_gfx.h	/^        #define GL_RGB8I /;"	d
GL_RGB8UI	$SOKOLC/sokol_gfx.h	/^        #define GL_RGB8UI /;"	d
GL_RGB8_SNORM	$SOKOLC/sokol_gfx.h	/^        #define GL_RGB8_SNORM /;"	d
GL_RGB9_E5	$SOKOLC/sokol_gfx.h	/^        #define GL_RGB9_E5 /;"	d
GL_RGBA	$SOKOLC/sokol_gfx.h	/^        #define GL_RGBA /;"	d
GL_RGBA16	$SOKOLC/sokol_gfx.h	/^        #define GL_RGBA16 /;"	d
GL_RGBA16F	$SOKOLC/sokol_gfx.h	/^        #define GL_RGBA16F /;"	d
GL_RGBA16I	$SOKOLC/sokol_gfx.h	/^        #define GL_RGBA16I /;"	d
GL_RGBA16UI	$SOKOLC/sokol_gfx.h	/^        #define GL_RGBA16UI /;"	d
GL_RGBA16_SNORM	$SOKOLC/sokol_gfx.h	/^        #define GL_RGBA16_SNORM /;"	d
GL_RGBA32F	$SOKOLC/sokol_gfx.h	/^        #define GL_RGBA32F /;"	d
GL_RGBA32I	$SOKOLC/sokol_gfx.h	/^        #define GL_RGBA32I /;"	d
GL_RGBA32UI	$SOKOLC/sokol_gfx.h	/^        #define GL_RGBA32UI /;"	d
GL_RGBA4	$SOKOLC/sokol_gfx.h	/^        #define GL_RGBA4 /;"	d
GL_RGBA8	$SOKOLC/sokol_gfx.h	/^        #define GL_RGBA8 /;"	d
GL_RGBA8I	$SOKOLC/sokol_gfx.h	/^        #define GL_RGBA8I /;"	d
GL_RGBA8UI	$SOKOLC/sokol_gfx.h	/^        #define GL_RGBA8UI /;"	d
GL_RGBA8_SNORM	$SOKOLC/sokol_gfx.h	/^        #define GL_RGBA8_SNORM /;"	d
GL_RGBA_INTEGER	$SOKOLC/sokol_gfx.h	/^        #define GL_RGBA_INTEGER /;"	d
GL_RG_INTEGER	$SOKOLC/sokol_gfx.h	/^        #define GL_RG_INTEGER /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	$SOKOLC/sokol_gfx.h	/^        #define GL_SAMPLE_ALPHA_TO_COVERAGE /;"	d
GL_SCISSOR_TEST	$SOKOLC/sokol_gfx.h	/^        #define GL_SCISSOR_TEST /;"	d
GL_SHORT	$SOKOLC/sokol_gfx.h	/^        #define GL_SHORT /;"	d
GL_SILENCE_DEPRECATION	$SOKOLC/sokol_app.h	/^            #define GL_SILENCE_DEPRECATION$/;"	M
GL_SILENCE_DEPRECATION	$SOKOLC/sokol_gfx.h	/^                #define GL_SILENCE_DEPRECATION$/;"	d
GL_SRC_ALPHA	$SOKOLC/sokol_gfx.h	/^        #define GL_SRC_ALPHA /;"	d
GL_SRC_ALPHA_SATURATE	$SOKOLC/sokol_gfx.h	/^        #define GL_SRC_ALPHA_SATURATE /;"	d
GL_SRC_COLOR	$SOKOLC/sokol_gfx.h	/^        #define GL_SRC_COLOR /;"	d
GL_SRGB8_ALPHA8	$SOKOLC/sokol_gfx.h	/^        #define GL_SRGB8_ALPHA8 /;"	d
GL_STATIC_DRAW	$SOKOLC/sokol_gfx.h	/^        #define GL_STATIC_DRAW /;"	d
GL_STENCIL	$SOKOLC/sokol_gfx.h	/^        #define GL_STENCIL /;"	d
GL_STENCIL_BUFFER_BIT	$SOKOLC/sokol_gfx.h	/^        #define GL_STENCIL_BUFFER_BIT /;"	d
GL_STENCIL_TEST	$SOKOLC/sokol_gfx.h	/^        #define GL_STENCIL_TEST /;"	d
GL_STREAM_DRAW	$SOKOLC/sokol_gfx.h	/^        #define GL_STREAM_DRAW /;"	d
GL_TEXTURE0	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE0 /;"	d
GL_TEXTURE_2D	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_2D /;"	d
GL_TEXTURE_2D_ARRAY	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_2D_ARRAY /;"	d
GL_TEXTURE_3D	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_3D /;"	d
GL_TEXTURE_BORDER_COLOR	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_BORDER_COLOR /;"	d
GL_TEXTURE_COMPARE_FUNC	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_COMPARE_FUNC /;"	d
GL_TEXTURE_COMPARE_MODE	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_COMPARE_MODE /;"	d
GL_TEXTURE_CUBE_MAP	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_CUBE_MAP /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_CUBE_MAP_SEAMLESS /;"	d
GL_TEXTURE_MAG_FILTER	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_MAG_FILTER /;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	$SOKOLC/sokol_gfx.h	/^    #define GL_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_TEXTURE_MAX_LEVEL	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_MAX_LEVEL /;"	d
GL_TEXTURE_MAX_LOD	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_MAX_LOD /;"	d
GL_TEXTURE_MIN_FILTER	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_MIN_FILTER /;"	d
GL_TEXTURE_MIN_LOD	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_MIN_LOD /;"	d
GL_TEXTURE_WRAP_R	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_WRAP_R /;"	d
GL_TEXTURE_WRAP_S	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_WRAP_S /;"	d
GL_TEXTURE_WRAP_T	$SOKOLC/sokol_gfx.h	/^        #define GL_TEXTURE_WRAP_T /;"	d
GL_TRIANGLES	$SOKOLC/sokol_gfx.h	/^        #define GL_TRIANGLES /;"	d
GL_TRIANGLE_STRIP	$SOKOLC/sokol_gfx.h	/^        #define GL_TRIANGLE_STRIP /;"	d
GL_TRUE	$SOKOLC/sokol_gfx.h	/^        #define GL_TRUE /;"	d
GL_UNPACK_ALIGNMENT	$SOKOLC/sokol_gfx.h	/^        #define GL_UNPACK_ALIGNMENT /;"	d
GL_UNSIGNED_BYTE	$SOKOLC/sokol_gfx.h	/^        #define GL_UNSIGNED_BYTE /;"	d
GL_UNSIGNED_INT	$SOKOLC/sokol_gfx.h	/^        #define GL_UNSIGNED_INT /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	$SOKOLC/sokol_gfx.h	/^        #define GL_UNSIGNED_INT_10F_11F_11F_REV /;"	d
GL_UNSIGNED_INT_24_8	$SOKOLC/sokol_gfx.h	/^    #define GL_UNSIGNED_INT_24_8 /;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	$SOKOLC/sokol_gfx.h	/^    #define GL_UNSIGNED_INT_2_10_10_10_REV /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	$SOKOLC/sokol_gfx.h	/^        #define GL_UNSIGNED_INT_5_9_9_9_REV /;"	d
GL_UNSIGNED_SHORT	$SOKOLC/sokol_gfx.h	/^        #define GL_UNSIGNED_SHORT /;"	d
GL_UNSIGNED_SHORT_4_4_4_4	$SOKOLC/sokol_gfx.h	/^        #define GL_UNSIGNED_SHORT_4_4_4_4 /;"	d
GL_UNSIGNED_SHORT_5_5_5_1	$SOKOLC/sokol_gfx.h	/^        #define GL_UNSIGNED_SHORT_5_5_5_1 /;"	d
GL_UNSIGNED_SHORT_5_6_5	$SOKOLC/sokol_gfx.h	/^        #define GL_UNSIGNED_SHORT_5_6_5 /;"	d
GL_VERTEX_SHADER	$SOKOLC/sokol_gfx.h	/^        #define GL_VERTEX_SHADER /;"	d
GL_ZERO	$SOKOLC/sokol_gfx.h	/^        #define GL_ZERO /;"	d
GLbitfield	$SOKOLC/sokol_gfx.h	/^        typedef unsigned int  GLbitfield;$/;"	t	typeref:typename:unsigned int
GLboolean	$SOKOLC/sokol_gfx.h	/^        typedef unsigned char  GLboolean;$/;"	t	typeref:typename:unsigned char
GLbyte	$SOKOLC/sokol_gfx.h	/^        typedef signed char  GLbyte;$/;"	t	typeref:typename:signed char
GLchar	$SOKOLC/sokol_gfx.h	/^        typedef char  GLchar;$/;"	t	typeref:typename:char
GLclampd	$SOKOLC/sokol_gfx.h	/^        typedef double  GLclampd;$/;"	t	typeref:typename:double
GLclampf	$SOKOLC/sokol_gfx.h	/^        typedef float  GLclampf;$/;"	t	typeref:typename:float
GLdouble	$SOKOLC/sokol_gfx.h	/^        typedef double  GLdouble;$/;"	t	typeref:typename:double
GLenum	$SOKOLC/sokol_gfx.h	/^        typedef unsigned int  GLenum;$/;"	t	typeref:typename:unsigned int
GLfloat	$SOKOLC/sokol_gfx.h	/^        typedef float  GLfloat;$/;"	t	typeref:typename:float
GLhalf	$SOKOLC/sokol_gfx.h	/^        typedef unsigned short  GLhalf;$/;"	t	typeref:typename:unsigned short
GLint	$SOKOLC/sokol_gfx.h	/^        typedef int  GLint;$/;"	t	typeref:typename:int
GLint64	$SOKOLC/sokol_gfx.h	/^        typedef int64_t  GLint64;$/;"	t	typeref:typename:int64_t
GLintptr	$SOKOLC/sokol_gfx.h	/^        typedef ptrdiff_t  GLintptr;$/;"	t	typeref:typename:ptrdiff_t
GLshort	$SOKOLC/sokol_gfx.h	/^        typedef short  GLshort;$/;"	t	typeref:typename:short
GLsizei	$SOKOLC/sokol_gfx.h	/^        typedef int  GLsizei;$/;"	t	typeref:typename:int
GLsizeiptr	$SOKOLC/sokol_gfx.h	/^        typedef ptrdiff_t  GLsizeiptr;$/;"	t	typeref:typename:ptrdiff_t
GLubyte	$SOKOLC/sokol_gfx.h	/^        typedef unsigned char  GLubyte;$/;"	t	typeref:typename:unsigned char
GLuint	$SOKOLC/sokol_gfx.h	/^        typedef unsigned int  GLuint;$/;"	t	typeref:typename:unsigned int
GLuint64	$SOKOLC/sokol_gfx.h	/^        typedef uint64_t  GLuint64;$/;"	t	typeref:typename:uint64_t
GLushort	$SOKOLC/sokol_gfx.h	/^        typedef unsigned short  GLushort;$/;"	t	typeref:typename:unsigned short
GLvoid	$SOKOLC/sokol_gfx.h	/^        typedef void  GLvoid;$/;"	t	typeref:typename:void
GetClientString	$SOKOLC/sokol_app.h	/^    PFNGLXGETCLIENTSTRINGPROC GetClientString;$/;"	E
GetCurrentDC	$SOKOLC/sokol_app.h	/^    PFN_wglGetCurrentDC GetCurrentDC;$/;"	E	enum:MONITOR_DPI_TYPE
GetExtensionsStringARB	$SOKOLC/sokol_app.h	/^    PFNWGLGETEXTENSIONSSTRINGARBPROC GetExtensionsStringARB;$/;"	E	enum:MONITOR_DPI_TYPE
GetExtensionsStringEXT	$SOKOLC/sokol_app.h	/^    PFNWGLGETEXTENSIONSSTRINGEXTPROC GetExtensionsStringEXT;$/;"	E	enum:MONITOR_DPI_TYPE
GetFBConfigAttrib	$SOKOLC/sokol_app.h	/^    PFNGLXGETFBCONFIGATTRIBPROC GetFBConfigAttrib;$/;"	E
GetFBConfigs	$SOKOLC/sokol_app.h	/^    PFNGLXGETFBCONFIGSPROC GetFBConfigs;$/;"	E
GetPixelFormatAttribivARB	$SOKOLC/sokol_app.h	/^    PFNWGLGETPIXELFORMATATTRIBIVARBPROC GetPixelFormatAttribivARB;$/;"	E	enum:MONITOR_DPI_TYPE
GetProcAddress	$SOKOLC/sokol_app.h	/^    PFN_wglGetProcAddress GetProcAddress;$/;"	E	enum:MONITOR_DPI_TYPE
GetProcAddressARB	$SOKOLC/sokol_app.h	/^    PFNGLXGETPROCADDRESSPROC GetProcAddressARB;$/;"	E
GetVisualFromFBConfig	$SOKOLC/sokol_app.h	/^    PFNGLXGETVISUALFROMFBCONFIGPROC GetVisualFromFBConfig;$/;"	E
HDC	$SOKOLC/sokol_app.h	/^typedef const char* (WINAPI * PFNWGLGETEXTENSIONSSTRINGARBPROC)(HDC);$/;"	t	enum:MONITOR_DPI_TYPE
HGLRC	$SOKOLC/sokol_app.h	/^typedef BOOL (WINAPI * PFN_wglMakeCurrent)(HDC,HGLRC);$/;"	t	enum:MONITOR_DPI_TYPE
IMVEC2	$SOKOLC/util/sokol_gfx_imgui.h	/^#define IMVEC2(/;"	d	signature:(x,y)
IMVEC4	$SOKOLC/util/sokol_gfx_imgui.h	/^#define IMVEC4(/;"	d	signature:(x,y,z,w)
LPCSTR	$SOKOLC/sokol_app.h	/^typedef PROC (WINAPI * PFN_wglGetProcAddress)(LPCSTR);$/;"	t	enum:MONITOR_DPI_TYPE
MDT_ANGULAR_DPI	$SOKOLC/sokol_app.h	/^    MDT_ANGULAR_DPI = 1,$/;"	e	enum:MONITOR_DPI_TYPE
MDT_DEFAULT	$SOKOLC/sokol_app.h	/^    MDT_DEFAULT = MDT_EFFECTIVE_DPI$/;"	e	enum:MONITOR_DPI_TYPE
MDT_EFFECTIVE_DPI	$SOKOLC/sokol_app.h	/^    MDT_EFFECTIVE_DPI = 0,$/;"	e	enum:MONITOR_DPI_TYPE
MDT_RAW_DPI	$SOKOLC/sokol_app.h	/^    MDT_RAW_DPI = 2,$/;"	e	enum:MONITOR_DPI_TYPE
MESA_swap_control	$SOKOLC/sokol_app.h	/^    bool MESA_swap_control;$/;"	E
MONITOR_DPI_TYPE	$SOKOLC/sokol_app.h	/^} MONITOR_DPI_TYPE;$/;"	t	enum:MONITOR_DPI_TYPE
M_PI	$SOKOLC/util/sokol_gl.h	/^#define M_PI /;"	d
MakeCurrent	$SOKOLC/sokol_app.h	/^    PFN_wglMakeCurrent MakeCurrent;$/;"	E	enum:MONITOR_DPI_TYPE
NET_WM_ICON	$SOKOLC/sokol_app.h	/^    Atom NET_WM_ICON;$/;"	E
NET_WM_ICON_NAME	$SOKOLC/sokol_app.h	/^    Atom NET_WM_ICON_NAME;$/;"	E
NET_WM_NAME	$SOKOLC/sokol_app.h	/^    Atom NET_WM_NAME;$/;"	E
NET_WM_STATE	$SOKOLC/sokol_app.h	/^    Atom NET_WM_STATE;$/;"	E
NET_WM_STATE_FULLSCREEN	$SOKOLC/sokol_app.h	/^    Atom NET_WM_STATE_FULLSCREEN;$/;"	E
NOMINMAX	$SOKOLC/sokol_app.h	/^        #define NOMINMAX$/;"	M
NOMINMAX	$SOKOLC/sokol_audio.h	/^    #define NOMINMAX$/;"	M	struct:saudio_desc
NOMINMAX	$SOKOLC/sokol_fetch.h	/^    #define NOMINMAX$/;"	d
NOMINMAX	$SOKOLC/sokol_gfx.h	/^    #define NOMINMAX$/;"	d
NOMINMAX	$SOKOLC/sokol_log.h	/^    #define NOMINMAX$/;"	d
NSCursor	$SOKOLC/sokol_app.h	/^@interface NSCursor()$/;"	i	category:id
NSRect	$SOKOLC/sokol_app.h	/^- (void)drawRect:(NSRect)rect {$/;"	C	implementation:_sapp_macos_view
PROCESS_DPI_AWARENESS	$SOKOLC/sokol_app.h	/^} PROCESS_DPI_AWARENESS;$/;"	t	enum:PROCESS_DPI_AWARENESS
PROCESS_DPI_UNAWARE	$SOKOLC/sokol_app.h	/^    PROCESS_DPI_UNAWARE = 0,$/;"	e	enum:PROCESS_DPI_AWARENESS
PROCESS_PER_MONITOR_DPI_AWARE	$SOKOLC/sokol_app.h	/^    PROCESS_PER_MONITOR_DPI_AWARE = 2$/;"	e	enum:PROCESS_DPI_AWARENESS
PROCESS_SYSTEM_DPI_AWARE	$SOKOLC/sokol_app.h	/^    PROCESS_SYSTEM_DPI_AWARE = 1,$/;"	e	enum:PROCESS_DPI_AWARENESS
QueryExtension	$SOKOLC/sokol_app.h	/^    PFNGLXQUERYEXTENSIONPROC QueryExtension;$/;"	E
QueryExtensionsString	$SOKOLC/sokol_app.h	/^    PFNGLXQUERYEXTENSIONSSTRINGPROC QueryExtensionsString;$/;"	E
QueryVersion	$SOKOLC/sokol_app.h	/^    PFNGLXQUERYVERSIONPROC QueryVersion;$/;"	E
SAPP_ANDROIDTOOLTYPE_FINGER	$SOKOLC/sokol_app.h	/^    SAPP_ANDROIDTOOLTYPE_FINGER = 1,    \/\/ TOOL_TYPE_FINGER$/;"	e	enum:sapp_android_tooltype
SAPP_ANDROIDTOOLTYPE_MOUSE	$SOKOLC/sokol_app.h	/^    SAPP_ANDROIDTOOLTYPE_MOUSE = 3,     \/\/ TOOL_TYPE_MOUSE$/;"	e	enum:sapp_android_tooltype
SAPP_ANDROIDTOOLTYPE_STYLUS	$SOKOLC/sokol_app.h	/^    SAPP_ANDROIDTOOLTYPE_STYLUS = 2,    \/\/ TOOL_TYPE_STYLUS$/;"	e	enum:sapp_android_tooltype
SAPP_ANDROIDTOOLTYPE_UNKNOWN	$SOKOLC/sokol_app.h	/^    SAPP_ANDROIDTOOLTYPE_UNKNOWN = 0,   \/\/ TOOL_TYPE_UNKNOWN$/;"	e	enum:sapp_android_tooltype
SAPP_EVENTTYPE_CHAR	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_CHAR,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_CLIPBOARD_PASTED	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_CLIPBOARD_PASTED,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_FILES_DROPPED	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_FILES_DROPPED,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_FOCUSED	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_FOCUSED,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_ICONIFIED	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_ICONIFIED,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_INVALID	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_INVALID,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_KEY_DOWN	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_KEY_DOWN,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_KEY_UP	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_KEY_UP,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_MOUSE_DOWN	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_MOUSE_DOWN,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_MOUSE_ENTER	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_MOUSE_ENTER,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_MOUSE_LEAVE	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_MOUSE_LEAVE,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_MOUSE_MOVE	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_MOUSE_MOVE,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_MOUSE_SCROLL	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_MOUSE_SCROLL,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_MOUSE_UP	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_MOUSE_UP,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_QUIT_REQUESTED	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_QUIT_REQUESTED,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_RESIZED	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_RESIZED,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_RESTORED	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_RESTORED,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_RESUMED	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_RESUMED,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_SUSPENDED	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_SUSPENDED,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_TOUCHES_BEGAN	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_TOUCHES_BEGAN,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_TOUCHES_CANCELLED	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_TOUCHES_CANCELLED,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_TOUCHES_ENDED	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_TOUCHES_ENDED,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_TOUCHES_MOVED	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_TOUCHES_MOVED,$/;"	e	enum:sapp_event_type
SAPP_EVENTTYPE_UNFOCUSED	$SOKOLC/sokol_app.h	/^    SAPP_EVENTTYPE_UNFOCUSED,$/;"	e	enum:sapp_event_type
SAPP_HTML5_FETCH_ERROR_BUFFER_TOO_SMALL	$SOKOLC/sokol_app.h	/^    SAPP_HTML5_FETCH_ERROR_BUFFER_TOO_SMALL,$/;"	e	enum:sapp_html5_fetch_error
SAPP_HTML5_FETCH_ERROR_NO_ERROR	$SOKOLC/sokol_app.h	/^    SAPP_HTML5_FETCH_ERROR_NO_ERROR,$/;"	e	enum:sapp_html5_fetch_error
SAPP_HTML5_FETCH_ERROR_OTHER	$SOKOLC/sokol_app.h	/^    SAPP_HTML5_FETCH_ERROR_OTHER,$/;"	e	enum:sapp_html5_fetch_error
SAPP_KEYCODE_0	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_0                = 48,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_1	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_1                = 49,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_2	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_2                = 50,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_3	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_3                = 51,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_4	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_4                = 52,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_5	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_5                = 53,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_6	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_6                = 54,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_7	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_7                = 55,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_8	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_8                = 56,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_9	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_9                = 57,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_A	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_A                = 65,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_APOSTROPHE	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_APOSTROPHE       = 39,  \/* ' *\/$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_B	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_B                = 66,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_BACKSLASH	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_BACKSLASH        = 92,  \/* \\ *\/$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_BACKSPACE	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_BACKSPACE        = 259,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_C	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_C                = 67,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_CAPS_LOCK	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_CAPS_LOCK        = 280,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_COMMA	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_COMMA            = 44,  \/* , *\/$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_D	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_D                = 68,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_DELETE	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_DELETE           = 261,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_DOWN	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_DOWN             = 264,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_E	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_E                = 69,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_END	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_END              = 269,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_ENTER	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_ENTER            = 257,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_EQUAL	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_EQUAL            = 61,  \/* = *\/$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_ESCAPE	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_ESCAPE           = 256,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F                = 70,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F1	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F1               = 290,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F10	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F10              = 299,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F11	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F11              = 300,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F12	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F12              = 301,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F13	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F13              = 302,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F14	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F14              = 303,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F15	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F15              = 304,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F16	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F16              = 305,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F17	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F17              = 306,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F18	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F18              = 307,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F19	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F19              = 308,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F2	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F2               = 291,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F20	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F20              = 309,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F21	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F21              = 310,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F22	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F22              = 311,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F23	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F23              = 312,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F24	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F24              = 313,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F25	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F25              = 314,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F3	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F3               = 292,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F4	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F4               = 293,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F5	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F5               = 294,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F6	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F6               = 295,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F7	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F7               = 296,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F8	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F8               = 297,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_F9	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_F9               = 298,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_G	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_G                = 71,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_GRAVE_ACCENT	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_GRAVE_ACCENT     = 96,  \/* ` *\/$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_H	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_H                = 72,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_HOME	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_HOME             = 268,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_I	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_I                = 73,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_INSERT	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_INSERT           = 260,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_INVALID	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_INVALID          = 0,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_J	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_J                = 74,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_K	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_K                = 75,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_KP_0	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_KP_0             = 320,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_KP_1	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_KP_1             = 321,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_KP_2	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_KP_2             = 322,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_KP_3	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_KP_3             = 323,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_KP_4	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_KP_4             = 324,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_KP_5	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_KP_5             = 325,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_KP_6	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_KP_6             = 326,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_KP_7	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_KP_7             = 327,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_KP_8	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_KP_8             = 328,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_KP_9	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_KP_9             = 329,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_KP_ADD	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_KP_ADD           = 334,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_KP_DECIMAL	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_KP_DECIMAL       = 330,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_KP_DIVIDE	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_KP_DIVIDE        = 331,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_KP_ENTER	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_KP_ENTER         = 335,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_KP_EQUAL	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_KP_EQUAL         = 336,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_KP_MULTIPLY	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_KP_MULTIPLY      = 332,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_KP_SUBTRACT	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_KP_SUBTRACT      = 333,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_L	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_L                = 76,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_LEFT	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_LEFT             = 263,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_LEFT_ALT	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_LEFT_ALT         = 342,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_LEFT_BRACKET	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_LEFT_BRACKET     = 91,  \/* [ *\/$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_LEFT_CONTROL	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_LEFT_CONTROL     = 341,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_LEFT_SHIFT	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_LEFT_SHIFT       = 340,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_LEFT_SUPER	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_LEFT_SUPER       = 343,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_M	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_M                = 77,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_MENU	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_MENU             = 348,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_MINUS	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_MINUS            = 45,  \/* - *\/$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_N	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_N                = 78,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_NUM_LOCK	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_NUM_LOCK         = 282,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_O	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_O                = 79,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_P	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_P                = 80,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_PAGE_DOWN	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_PAGE_DOWN        = 267,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_PAGE_UP	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_PAGE_UP          = 266,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_PAUSE	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_PAUSE            = 284,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_PERIOD	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_PERIOD           = 46,  \/* . *\/$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_PRINT_SCREEN	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_PRINT_SCREEN     = 283,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_Q	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_Q                = 81,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_R	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_R                = 82,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_RIGHT	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_RIGHT            = 262,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_RIGHT_ALT	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_RIGHT_ALT        = 346,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_RIGHT_BRACKET	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_RIGHT_BRACKET    = 93,  \/* ] *\/$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_RIGHT_CONTROL	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_RIGHT_CONTROL    = 345,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_RIGHT_SHIFT	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_RIGHT_SHIFT      = 344,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_RIGHT_SUPER	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_RIGHT_SUPER      = 347,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_S	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_S                = 83,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_SCROLL_LOCK	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_SCROLL_LOCK      = 281,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_SEMICOLON	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_SEMICOLON        = 59,  \/* ; *\/$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_SLASH	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_SLASH            = 47,  \/* \/ *\/$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_SPACE	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_SPACE            = 32,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_T	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_T                = 84,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_TAB	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_TAB              = 258,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_U	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_U                = 85,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_UP	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_UP               = 265,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_V	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_V                = 86,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_W	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_W                = 87,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_WORLD_1	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_WORLD_1          = 161, \/* non-US #1 *\/$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_WORLD_2	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_WORLD_2          = 162, \/* non-US #2 *\/$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_X	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_X                = 88,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_Y	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_Y                = 89,$/;"	e	enum:sapp_keycode
SAPP_KEYCODE_Z	$SOKOLC/sokol_app.h	/^    SAPP_KEYCODE_Z                = 90,$/;"	e	enum:sapp_keycode
SAPP_MOUSEBUTTON_INVALID	$SOKOLC/sokol_app.h	/^    SAPP_MOUSEBUTTON_INVALID = 0x100,$/;"	e	enum:sapp_mousebutton
SAPP_MOUSEBUTTON_LEFT	$SOKOLC/sokol_app.h	/^    SAPP_MOUSEBUTTON_LEFT = 0x0,$/;"	e	enum:sapp_mousebutton
SAPP_MOUSEBUTTON_MIDDLE	$SOKOLC/sokol_app.h	/^    SAPP_MOUSEBUTTON_MIDDLE = 0x2,$/;"	e	enum:sapp_mousebutton
SAPP_MOUSEBUTTON_RIGHT	$SOKOLC/sokol_app.h	/^    SAPP_MOUSEBUTTON_RIGHT = 0x1,$/;"	e	enum:sapp_mousebutton
SAPP_MOUSECURSOR_ARROW	$SOKOLC/sokol_app.h	/^    SAPP_MOUSECURSOR_ARROW,$/;"	e	enum:sapp_mouse_cursor
SAPP_MOUSECURSOR_CROSSHAIR	$SOKOLC/sokol_app.h	/^    SAPP_MOUSECURSOR_CROSSHAIR,$/;"	e	enum:sapp_mouse_cursor
SAPP_MOUSECURSOR_DEFAULT	$SOKOLC/sokol_app.h	/^    SAPP_MOUSECURSOR_DEFAULT = 0,   \/\/ equivalent with system default cursor$/;"	e	enum:sapp_mouse_cursor
SAPP_MOUSECURSOR_IBEAM	$SOKOLC/sokol_app.h	/^    SAPP_MOUSECURSOR_IBEAM,$/;"	e	enum:sapp_mouse_cursor
SAPP_MOUSECURSOR_NOT_ALLOWED	$SOKOLC/sokol_app.h	/^    SAPP_MOUSECURSOR_NOT_ALLOWED,$/;"	e	enum:sapp_mouse_cursor
SAPP_MOUSECURSOR_POINTING_HAND	$SOKOLC/sokol_app.h	/^    SAPP_MOUSECURSOR_POINTING_HAND,$/;"	e	enum:sapp_mouse_cursor
SAPP_MOUSECURSOR_RESIZE_ALL	$SOKOLC/sokol_app.h	/^    SAPP_MOUSECURSOR_RESIZE_ALL,$/;"	e	enum:sapp_mouse_cursor
SAPP_MOUSECURSOR_RESIZE_EW	$SOKOLC/sokol_app.h	/^    SAPP_MOUSECURSOR_RESIZE_EW,$/;"	e	enum:sapp_mouse_cursor
SAPP_MOUSECURSOR_RESIZE_NESW	$SOKOLC/sokol_app.h	/^    SAPP_MOUSECURSOR_RESIZE_NESW,$/;"	e	enum:sapp_mouse_cursor
SAPP_MOUSECURSOR_RESIZE_NS	$SOKOLC/sokol_app.h	/^    SAPP_MOUSECURSOR_RESIZE_NS,$/;"	e	enum:sapp_mouse_cursor
SAPP_MOUSECURSOR_RESIZE_NWSE	$SOKOLC/sokol_app.h	/^    SAPP_MOUSECURSOR_RESIZE_NWSE,$/;"	e	enum:sapp_mouse_cursor
SAPP_RANGE	$SOKOLC/sokol_app.h	/^#define SAPP_RANGE(x) sapp_range{ &x, sizeof(x) }$/;"	M	struct:sapp_range
SAUDIO_ANDROID_AAUDIO	$SOKOLC/sokol_audio.h	/^        #define SAUDIO_ANDROID_AAUDIO (1)$/;"	M	struct:saudio_desc
SAUDIO_OSX_USE_SYSTEM_HEADERS	$SOKOLC/sokol_audio.h	/^            #define SAUDIO_OSX_USE_SYSTEM_HEADERS (1)$/;"	M	struct:saudio_desc
SAUDIO_RING_MAX_SLOTS	$SOKOLC/sokol_audio.h	/^#define SAUDIO_RING_MAX_SLOTS (1024)$/;"	M	struct:saudio_desc
SAUDIO_SLES_NUM_BUFFERS	$SOKOLC/sokol_audio.h	/^#define SAUDIO_SLES_NUM_BUFFERS (2)$/;"	M
SDTX_DEFAULT_CONTEXT	$SOKOLC/util/sokol_debugtext.h	/^static const sdtx_context SDTX_DEFAULT_CONTEXT = { 0x00010001 };$/;"	v	typeref:typename:const sdtx_context
SDTX_MAX_FONTS	$SOKOLC/util/sokol_debugtext.h	/^#define SDTX_MAX_FONTS /;"	d
SDTX_RANGE	$SOKOLC/util/sokol_debugtext.h	/^#define SDTX_RANGE(/;"	d	signature:(x)
SFETCH_ERROR_BUFFER_TOO_SMALL	$SOKOLC/sokol_fetch.h	/^    SFETCH_ERROR_BUFFER_TOO_SMALL,$/;"	e	enum:sfetch_error_t
SFETCH_ERROR_CANCELLED	$SOKOLC/sokol_fetch.h	/^    SFETCH_ERROR_CANCELLED$/;"	e	enum:sfetch_error_t
SFETCH_ERROR_FILE_NOT_FOUND	$SOKOLC/sokol_fetch.h	/^    SFETCH_ERROR_FILE_NOT_FOUND,$/;"	e	enum:sfetch_error_t
SFETCH_ERROR_INVALID_HTTP_STATUS	$SOKOLC/sokol_fetch.h	/^    SFETCH_ERROR_INVALID_HTTP_STATUS,$/;"	e	enum:sfetch_error_t
SFETCH_ERROR_NO_BUFFER	$SOKOLC/sokol_fetch.h	/^    SFETCH_ERROR_NO_BUFFER,$/;"	e	enum:sfetch_error_t
SFETCH_ERROR_NO_ERROR	$SOKOLC/sokol_fetch.h	/^    SFETCH_ERROR_NO_ERROR,$/;"	e	enum:sfetch_error_t
SFETCH_ERROR_UNEXPECTED_EOF	$SOKOLC/sokol_fetch.h	/^    SFETCH_ERROR_UNEXPECTED_EOF,$/;"	e	enum:sfetch_error_t
SFETCH_MAX_CHANNELS	$SOKOLC/sokol_fetch.h	/^#define SFETCH_MAX_CHANNELS /;"	d
SFETCH_MAX_PATH	$SOKOLC/sokol_fetch.h	/^#define SFETCH_MAX_PATH /;"	d
SFETCH_MAX_USERDATA_UINT64	$SOKOLC/sokol_fetch.h	/^#define SFETCH_MAX_USERDATA_UINT64 /;"	d
SFETCH_RANGE	$SOKOLC/sokol_fetch.h	/^#define SFETCH_RANGE(/;"	d	signature:(x)
SGL_COMMAND_DRAW	$SOKOLC/util/sokol_gl.h	/^    SGL_COMMAND_DRAW,$/;"	e	enum:__anon382715e20a03
SGL_COMMAND_SCISSOR_RECT	$SOKOLC/util/sokol_gl.h	/^    SGL_COMMAND_SCISSOR_RECT,$/;"	e	enum:__anon382715e20a03
SGL_COMMAND_VIEWPORT	$SOKOLC/util/sokol_gl.h	/^    SGL_COMMAND_VIEWPORT,$/;"	e	enum:__anon382715e20a03
SGL_DEFAULT_CONTEXT	$SOKOLC/util/sokol_gl.h	/^static const sgl_context SGL_DEFAULT_CONTEXT = { 0x00010001 };$/;"	v	typeref:typename:const sgl_context
SGL_ERROR_COMMANDS_FULL	$SOKOLC/util/sokol_gl.h	/^    SGL_ERROR_COMMANDS_FULL,$/;"	e	enum:sgl_error_t
SGL_ERROR_NO_CONTEXT	$SOKOLC/util/sokol_gl.h	/^    SGL_ERROR_NO_CONTEXT,$/;"	e	enum:sgl_error_t
SGL_ERROR_STACK_OVERFLOW	$SOKOLC/util/sokol_gl.h	/^    SGL_ERROR_STACK_OVERFLOW,$/;"	e	enum:sgl_error_t
SGL_ERROR_STACK_UNDERFLOW	$SOKOLC/util/sokol_gl.h	/^    SGL_ERROR_STACK_UNDERFLOW,$/;"	e	enum:sgl_error_t
SGL_ERROR_UNIFORMS_FULL	$SOKOLC/util/sokol_gl.h	/^    SGL_ERROR_UNIFORMS_FULL,$/;"	e	enum:sgl_error_t
SGL_ERROR_VERTICES_FULL	$SOKOLC/util/sokol_gl.h	/^    SGL_ERROR_VERTICES_FULL,$/;"	e	enum:sgl_error_t
SGL_MATRIXMODE_MODELVIEW	$SOKOLC/util/sokol_gl.h	/^    SGL_MATRIXMODE_MODELVIEW,$/;"	e	enum:__anon382715e20603
SGL_MATRIXMODE_PROJECTION	$SOKOLC/util/sokol_gl.h	/^    SGL_MATRIXMODE_PROJECTION,$/;"	e	enum:__anon382715e20603
SGL_MATRIXMODE_TEXTURE	$SOKOLC/util/sokol_gl.h	/^    SGL_MATRIXMODE_TEXTURE,$/;"	e	enum:__anon382715e20603
SGL_NO_ERROR	$SOKOLC/util/sokol_gl.h	/^    SGL_NO_ERROR = 0,$/;"	e	enum:sgl_error_t
SGL_NUM_MATRIXMODES	$SOKOLC/util/sokol_gl.h	/^    SGL_NUM_MATRIXMODES$/;"	e	enum:__anon382715e20603
SGL_NUM_PRIMITIVE_TYPES	$SOKOLC/util/sokol_gl.h	/^    SGL_NUM_PRIMITIVE_TYPES,$/;"	e	enum:__anon382715e20103
SGL_PRIMITIVETYPE_LINES	$SOKOLC/util/sokol_gl.h	/^    SGL_PRIMITIVETYPE_LINES,$/;"	e	enum:__anon382715e20103
SGL_PRIMITIVETYPE_LINE_STRIP	$SOKOLC/util/sokol_gl.h	/^    SGL_PRIMITIVETYPE_LINE_STRIP,$/;"	e	enum:__anon382715e20103
SGL_PRIMITIVETYPE_POINTS	$SOKOLC/util/sokol_gl.h	/^    SGL_PRIMITIVETYPE_POINTS = 0,$/;"	e	enum:__anon382715e20103
SGL_PRIMITIVETYPE_QUADS	$SOKOLC/util/sokol_gl.h	/^    SGL_PRIMITIVETYPE_QUADS,$/;"	e	enum:__anon382715e20103
SGL_PRIMITIVETYPE_TRIANGLES	$SOKOLC/util/sokol_gl.h	/^    SGL_PRIMITIVETYPE_TRIANGLES,$/;"	e	enum:__anon382715e20103
SGL_PRIMITIVETYPE_TRIANGLE_STRIP	$SOKOLC/util/sokol_gl.h	/^    SGL_PRIMITIVETYPE_TRIANGLE_STRIP,$/;"	e	enum:__anon382715e20103
SG_ALICE_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_ALICE_BLUE /;"	d
SG_ALICE_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_ALICE_BLUE_RGBA32 /;"	d
SG_ANTIQUE_WHITE	$SOKOLC/util/sokol_color.h	/^#define SG_ANTIQUE_WHITE /;"	d
SG_ANTIQUE_WHITE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_ANTIQUE_WHITE_RGBA32 /;"	d
SG_AQUA	$SOKOLC/util/sokol_color.h	/^#define SG_AQUA /;"	d
SG_AQUAMARINE	$SOKOLC/util/sokol_color.h	/^#define SG_AQUAMARINE /;"	d
SG_AQUAMARINE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_AQUAMARINE_RGBA32 /;"	d
SG_AQUA_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_AQUA_RGBA32 /;"	d
SG_AZURE	$SOKOLC/util/sokol_color.h	/^#define SG_AZURE /;"	d
SG_AZURE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_AZURE_RGBA32 /;"	d
SG_BACKEND_D3D11	$SOKOLC/sokol_gfx.h	/^    SG_BACKEND_D3D11,$/;"	e	enum:sg_backend
SG_BACKEND_DUMMY	$SOKOLC/sokol_gfx.h	/^    SG_BACKEND_DUMMY,$/;"	e	enum:sg_backend
SG_BACKEND_GLCORE33	$SOKOLC/sokol_gfx.h	/^    SG_BACKEND_GLCORE33,$/;"	e	enum:sg_backend
SG_BACKEND_GLES3	$SOKOLC/sokol_gfx.h	/^    SG_BACKEND_GLES3,$/;"	e	enum:sg_backend
SG_BACKEND_METAL_IOS	$SOKOLC/sokol_gfx.h	/^    SG_BACKEND_METAL_IOS,$/;"	e	enum:sg_backend
SG_BACKEND_METAL_MACOS	$SOKOLC/sokol_gfx.h	/^    SG_BACKEND_METAL_MACOS,$/;"	e	enum:sg_backend
SG_BACKEND_METAL_SIMULATOR	$SOKOLC/sokol_gfx.h	/^    SG_BACKEND_METAL_SIMULATOR,$/;"	e	enum:sg_backend
SG_BACKEND_WGPU	$SOKOLC/sokol_gfx.h	/^    SG_BACKEND_WGPU,$/;"	e	enum:sg_backend
SG_BEIGE	$SOKOLC/util/sokol_color.h	/^#define SG_BEIGE /;"	d
SG_BEIGE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_BEIGE_RGBA32 /;"	d
SG_BISQUE	$SOKOLC/util/sokol_color.h	/^#define SG_BISQUE /;"	d
SG_BISQUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_BISQUE_RGBA32 /;"	d
SG_BLACK	$SOKOLC/util/sokol_color.h	/^#define SG_BLACK /;"	d
SG_BLACK_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_BLACK_RGBA32 /;"	d
SG_BLANCHED_ALMOND	$SOKOLC/util/sokol_color.h	/^#define SG_BLANCHED_ALMOND /;"	d
SG_BLANCHED_ALMOND_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_BLANCHED_ALMOND_RGBA32 /;"	d
SG_BLENDFACTOR_BLEND_ALPHA	$SOKOLC/sokol_gfx.h	/^    SG_BLENDFACTOR_BLEND_ALPHA,$/;"	e	enum:sg_blend_factor
SG_BLENDFACTOR_BLEND_COLOR	$SOKOLC/sokol_gfx.h	/^    SG_BLENDFACTOR_BLEND_COLOR,$/;"	e	enum:sg_blend_factor
SG_BLENDFACTOR_DST_ALPHA	$SOKOLC/sokol_gfx.h	/^    SG_BLENDFACTOR_DST_ALPHA,$/;"	e	enum:sg_blend_factor
SG_BLENDFACTOR_DST_COLOR	$SOKOLC/sokol_gfx.h	/^    SG_BLENDFACTOR_DST_COLOR,$/;"	e	enum:sg_blend_factor
SG_BLENDFACTOR_ONE	$SOKOLC/sokol_gfx.h	/^    SG_BLENDFACTOR_ONE,$/;"	e	enum:sg_blend_factor
SG_BLENDFACTOR_ONE_MINUS_BLEND_ALPHA	$SOKOLC/sokol_gfx.h	/^    SG_BLENDFACTOR_ONE_MINUS_BLEND_ALPHA,$/;"	e	enum:sg_blend_factor
SG_BLENDFACTOR_ONE_MINUS_BLEND_COLOR	$SOKOLC/sokol_gfx.h	/^    SG_BLENDFACTOR_ONE_MINUS_BLEND_COLOR,$/;"	e	enum:sg_blend_factor
SG_BLENDFACTOR_ONE_MINUS_DST_ALPHA	$SOKOLC/sokol_gfx.h	/^    SG_BLENDFACTOR_ONE_MINUS_DST_ALPHA,$/;"	e	enum:sg_blend_factor
SG_BLENDFACTOR_ONE_MINUS_DST_COLOR	$SOKOLC/sokol_gfx.h	/^    SG_BLENDFACTOR_ONE_MINUS_DST_COLOR,$/;"	e	enum:sg_blend_factor
SG_BLENDFACTOR_ONE_MINUS_SRC_ALPHA	$SOKOLC/sokol_gfx.h	/^    SG_BLENDFACTOR_ONE_MINUS_SRC_ALPHA,$/;"	e	enum:sg_blend_factor
SG_BLENDFACTOR_ONE_MINUS_SRC_COLOR	$SOKOLC/sokol_gfx.h	/^    SG_BLENDFACTOR_ONE_MINUS_SRC_COLOR,$/;"	e	enum:sg_blend_factor
SG_BLENDFACTOR_SRC_ALPHA	$SOKOLC/sokol_gfx.h	/^    SG_BLENDFACTOR_SRC_ALPHA,$/;"	e	enum:sg_blend_factor
SG_BLENDFACTOR_SRC_ALPHA_SATURATED	$SOKOLC/sokol_gfx.h	/^    SG_BLENDFACTOR_SRC_ALPHA_SATURATED,$/;"	e	enum:sg_blend_factor
SG_BLENDFACTOR_SRC_COLOR	$SOKOLC/sokol_gfx.h	/^    SG_BLENDFACTOR_SRC_COLOR,$/;"	e	enum:sg_blend_factor
SG_BLENDFACTOR_ZERO	$SOKOLC/sokol_gfx.h	/^    SG_BLENDFACTOR_ZERO,$/;"	e	enum:sg_blend_factor
SG_BLENDOP_ADD	$SOKOLC/sokol_gfx.h	/^    SG_BLENDOP_ADD,$/;"	e	enum:sg_blend_op
SG_BLENDOP_REVERSE_SUBTRACT	$SOKOLC/sokol_gfx.h	/^    SG_BLENDOP_REVERSE_SUBTRACT,$/;"	e	enum:sg_blend_op
SG_BLENDOP_SUBTRACT	$SOKOLC/sokol_gfx.h	/^    SG_BLENDOP_SUBTRACT,$/;"	e	enum:sg_blend_op
SG_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_BLUE /;"	d
SG_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_BLUE_RGBA32 /;"	d
SG_BLUE_VIOLET	$SOKOLC/util/sokol_color.h	/^#define SG_BLUE_VIOLET /;"	d
SG_BLUE_VIOLET_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_BLUE_VIOLET_RGBA32 /;"	d
SG_BORDERCOLOR_OPAQUE_BLACK	$SOKOLC/sokol_gfx.h	/^    SG_BORDERCOLOR_OPAQUE_BLACK,$/;"	e	enum:sg_border_color
SG_BORDERCOLOR_OPAQUE_WHITE	$SOKOLC/sokol_gfx.h	/^    SG_BORDERCOLOR_OPAQUE_WHITE,$/;"	e	enum:sg_border_color
SG_BORDERCOLOR_TRANSPARENT_BLACK	$SOKOLC/sokol_gfx.h	/^    SG_BORDERCOLOR_TRANSPARENT_BLACK,$/;"	e	enum:sg_border_color
SG_BROWN	$SOKOLC/util/sokol_color.h	/^#define SG_BROWN /;"	d
SG_BROWN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_BROWN_RGBA32 /;"	d
SG_BUFFERTYPE_INDEXBUFFER	$SOKOLC/sokol_gfx.h	/^    SG_BUFFERTYPE_INDEXBUFFER,$/;"	e	enum:sg_buffer_type
SG_BUFFERTYPE_VERTEXBUFFER	$SOKOLC/sokol_gfx.h	/^    SG_BUFFERTYPE_VERTEXBUFFER,$/;"	e	enum:sg_buffer_type
SG_BURLYWOOD	$SOKOLC/util/sokol_color.h	/^#define SG_BURLYWOOD /;"	d
SG_BURLYWOOD_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_BURLYWOOD_RGBA32 /;"	d
SG_CADET_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_CADET_BLUE /;"	d
SG_CADET_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_CADET_BLUE_RGBA32 /;"	d
SG_CHARTREUSE	$SOKOLC/util/sokol_color.h	/^#define SG_CHARTREUSE /;"	d
SG_CHARTREUSE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_CHARTREUSE_RGBA32 /;"	d
SG_CHOCOLATE	$SOKOLC/util/sokol_color.h	/^#define SG_CHOCOLATE /;"	d
SG_CHOCOLATE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_CHOCOLATE_RGBA32 /;"	d
SG_COLORMASK_A	$SOKOLC/sokol_gfx.h	/^    SG_COLORMASK_A      = 0x8,$/;"	e	enum:sg_color_mask
SG_COLORMASK_B	$SOKOLC/sokol_gfx.h	/^    SG_COLORMASK_B      = 0x4,$/;"	e	enum:sg_color_mask
SG_COLORMASK_BA	$SOKOLC/sokol_gfx.h	/^    SG_COLORMASK_BA     = 0xC,$/;"	e	enum:sg_color_mask
SG_COLORMASK_G	$SOKOLC/sokol_gfx.h	/^    SG_COLORMASK_G      = 0x2,$/;"	e	enum:sg_color_mask
SG_COLORMASK_GA	$SOKOLC/sokol_gfx.h	/^    SG_COLORMASK_GA     = 0xA,$/;"	e	enum:sg_color_mask
SG_COLORMASK_GB	$SOKOLC/sokol_gfx.h	/^    SG_COLORMASK_GB     = 0x6,$/;"	e	enum:sg_color_mask
SG_COLORMASK_GBA	$SOKOLC/sokol_gfx.h	/^    SG_COLORMASK_GBA    = 0xE,$/;"	e	enum:sg_color_mask
SG_COLORMASK_NONE	$SOKOLC/sokol_gfx.h	/^    SG_COLORMASK_NONE   = 0x10,   \/\/ special value for 'all channels disabled$/;"	e	enum:sg_color_mask
SG_COLORMASK_R	$SOKOLC/sokol_gfx.h	/^    SG_COLORMASK_R      = 0x1,$/;"	e	enum:sg_color_mask
SG_COLORMASK_RA	$SOKOLC/sokol_gfx.h	/^    SG_COLORMASK_RA     = 0x9,$/;"	e	enum:sg_color_mask
SG_COLORMASK_RB	$SOKOLC/sokol_gfx.h	/^    SG_COLORMASK_RB     = 0x5,$/;"	e	enum:sg_color_mask
SG_COLORMASK_RBA	$SOKOLC/sokol_gfx.h	/^    SG_COLORMASK_RBA    = 0xD,$/;"	e	enum:sg_color_mask
SG_COLORMASK_RG	$SOKOLC/sokol_gfx.h	/^    SG_COLORMASK_RG     = 0x3,$/;"	e	enum:sg_color_mask
SG_COLORMASK_RGA	$SOKOLC/sokol_gfx.h	/^    SG_COLORMASK_RGA    = 0xB,$/;"	e	enum:sg_color_mask
SG_COLORMASK_RGB	$SOKOLC/sokol_gfx.h	/^    SG_COLORMASK_RGB    = 0x7,$/;"	e	enum:sg_color_mask
SG_COLORMASK_RGBA	$SOKOLC/sokol_gfx.h	/^    SG_COLORMASK_RGBA   = 0xF,$/;"	e	enum:sg_color_mask
SG_COMPAREFUNC_ALWAYS	$SOKOLC/sokol_gfx.h	/^    SG_COMPAREFUNC_ALWAYS,$/;"	e	enum:sg_compare_func
SG_COMPAREFUNC_EQUAL	$SOKOLC/sokol_gfx.h	/^    SG_COMPAREFUNC_EQUAL,$/;"	e	enum:sg_compare_func
SG_COMPAREFUNC_GREATER	$SOKOLC/sokol_gfx.h	/^    SG_COMPAREFUNC_GREATER,$/;"	e	enum:sg_compare_func
SG_COMPAREFUNC_GREATER_EQUAL	$SOKOLC/sokol_gfx.h	/^    SG_COMPAREFUNC_GREATER_EQUAL,$/;"	e	enum:sg_compare_func
SG_COMPAREFUNC_LESS	$SOKOLC/sokol_gfx.h	/^    SG_COMPAREFUNC_LESS,$/;"	e	enum:sg_compare_func
SG_COMPAREFUNC_LESS_EQUAL	$SOKOLC/sokol_gfx.h	/^    SG_COMPAREFUNC_LESS_EQUAL,$/;"	e	enum:sg_compare_func
SG_COMPAREFUNC_NEVER	$SOKOLC/sokol_gfx.h	/^    SG_COMPAREFUNC_NEVER,$/;"	e	enum:sg_compare_func
SG_COMPAREFUNC_NOT_EQUAL	$SOKOLC/sokol_gfx.h	/^    SG_COMPAREFUNC_NOT_EQUAL,$/;"	e	enum:sg_compare_func
SG_CORAL	$SOKOLC/util/sokol_color.h	/^#define SG_CORAL /;"	d
SG_CORAL_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_CORAL_RGBA32 /;"	d
SG_CORNFLOWER_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_CORNFLOWER_BLUE /;"	d
SG_CORNFLOWER_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_CORNFLOWER_BLUE_RGBA32 /;"	d
SG_CORNSILK	$SOKOLC/util/sokol_color.h	/^#define SG_CORNSILK /;"	d
SG_CORNSILK_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_CORNSILK_RGBA32 /;"	d
SG_CRIMSON	$SOKOLC/util/sokol_color.h	/^#define SG_CRIMSON /;"	d
SG_CRIMSON_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_CRIMSON_RGBA32 /;"	d
SG_CUBEFACE_NEG_X	$SOKOLC/sokol_gfx.h	/^    SG_CUBEFACE_NEG_X,$/;"	e	enum:sg_cube_face
SG_CUBEFACE_NEG_Y	$SOKOLC/sokol_gfx.h	/^    SG_CUBEFACE_NEG_Y,$/;"	e	enum:sg_cube_face
SG_CUBEFACE_NEG_Z	$SOKOLC/sokol_gfx.h	/^    SG_CUBEFACE_NEG_Z,$/;"	e	enum:sg_cube_face
SG_CUBEFACE_NUM	$SOKOLC/sokol_gfx.h	/^    SG_CUBEFACE_NUM,$/;"	e	enum:sg_cube_face
SG_CUBEFACE_POS_X	$SOKOLC/sokol_gfx.h	/^    SG_CUBEFACE_POS_X,$/;"	e	enum:sg_cube_face
SG_CUBEFACE_POS_Y	$SOKOLC/sokol_gfx.h	/^    SG_CUBEFACE_POS_Y,$/;"	e	enum:sg_cube_face
SG_CUBEFACE_POS_Z	$SOKOLC/sokol_gfx.h	/^    SG_CUBEFACE_POS_Z,$/;"	e	enum:sg_cube_face
SG_CULLMODE_BACK	$SOKOLC/sokol_gfx.h	/^    SG_CULLMODE_BACK,$/;"	e	enum:sg_cull_mode
SG_CULLMODE_FRONT	$SOKOLC/sokol_gfx.h	/^    SG_CULLMODE_FRONT,$/;"	e	enum:sg_cull_mode
SG_CULLMODE_NONE	$SOKOLC/sokol_gfx.h	/^    SG_CULLMODE_NONE,$/;"	e	enum:sg_cull_mode
SG_CYAN	$SOKOLC/util/sokol_color.h	/^#define SG_CYAN /;"	d
SG_CYAN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_CYAN_RGBA32 /;"	d
SG_DARK_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_BLUE /;"	d
SG_DARK_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_BLUE_RGBA32 /;"	d
SG_DARK_CYAN	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_CYAN /;"	d
SG_DARK_CYAN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_CYAN_RGBA32 /;"	d
SG_DARK_GOLDENROD	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_GOLDENROD /;"	d
SG_DARK_GOLDENROD_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_GOLDENROD_RGBA32 /;"	d
SG_DARK_GRAY	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_GRAY /;"	d
SG_DARK_GRAY_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_GRAY_RGBA32 /;"	d
SG_DARK_GREEN	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_GREEN /;"	d
SG_DARK_GREEN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_GREEN_RGBA32 /;"	d
SG_DARK_KHAKI	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_KHAKI /;"	d
SG_DARK_KHAKI_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_KHAKI_RGBA32 /;"	d
SG_DARK_MAGENTA	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_MAGENTA /;"	d
SG_DARK_MAGENTA_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_MAGENTA_RGBA32 /;"	d
SG_DARK_OLIVE_GREEN	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_OLIVE_GREEN /;"	d
SG_DARK_OLIVE_GREEN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_OLIVE_GREEN_RGBA32 /;"	d
SG_DARK_ORANGE	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_ORANGE /;"	d
SG_DARK_ORANGE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_ORANGE_RGBA32 /;"	d
SG_DARK_ORCHID	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_ORCHID /;"	d
SG_DARK_ORCHID_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_ORCHID_RGBA32 /;"	d
SG_DARK_RED	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_RED /;"	d
SG_DARK_RED_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_RED_RGBA32 /;"	d
SG_DARK_SALMON	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_SALMON /;"	d
SG_DARK_SALMON_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_SALMON_RGBA32 /;"	d
SG_DARK_SEA_GREEN	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_SEA_GREEN /;"	d
SG_DARK_SEA_GREEN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_SEA_GREEN_RGBA32 /;"	d
SG_DARK_SLATE_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_SLATE_BLUE /;"	d
SG_DARK_SLATE_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_SLATE_BLUE_RGBA32 /;"	d
SG_DARK_SLATE_GRAY	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_SLATE_GRAY /;"	d
SG_DARK_SLATE_GRAY_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_SLATE_GRAY_RGBA32 /;"	d
SG_DARK_TURQUOISE	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_TURQUOISE /;"	d
SG_DARK_TURQUOISE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_TURQUOISE_RGBA32 /;"	d
SG_DARK_VIOLET	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_VIOLET /;"	d
SG_DARK_VIOLET_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DARK_VIOLET_RGBA32 /;"	d
SG_DEEP_PINK	$SOKOLC/util/sokol_color.h	/^#define SG_DEEP_PINK /;"	d
SG_DEEP_PINK_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DEEP_PINK_RGBA32 /;"	d
SG_DEEP_SKY_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_DEEP_SKY_BLUE /;"	d
SG_DEEP_SKY_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DEEP_SKY_BLUE_RGBA32 /;"	d
SG_DEFAULT_CLEAR_ALPHA	$SOKOLC/sokol_gfx.h	/^#define SG_DEFAULT_CLEAR_ALPHA /;"	d
SG_DEFAULT_CLEAR_BLUE	$SOKOLC/sokol_gfx.h	/^#define SG_DEFAULT_CLEAR_BLUE /;"	d
SG_DEFAULT_CLEAR_DEPTH	$SOKOLC/sokol_gfx.h	/^#define SG_DEFAULT_CLEAR_DEPTH /;"	d
SG_DEFAULT_CLEAR_GREEN	$SOKOLC/sokol_gfx.h	/^#define SG_DEFAULT_CLEAR_GREEN /;"	d
SG_DEFAULT_CLEAR_RED	$SOKOLC/sokol_gfx.h	/^#define SG_DEFAULT_CLEAR_RED /;"	d
SG_DEFAULT_CLEAR_STENCIL	$SOKOLC/sokol_gfx.h	/^#define SG_DEFAULT_CLEAR_STENCIL /;"	d
SG_DIM_GRAY	$SOKOLC/util/sokol_color.h	/^#define SG_DIM_GRAY /;"	d
SG_DIM_GRAY_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DIM_GRAY_RGBA32 /;"	d
SG_DODGER_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_DODGER_BLUE /;"	d
SG_DODGER_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_DODGER_BLUE_RGBA32 /;"	d
SG_FACEWINDING_CCW	$SOKOLC/sokol_gfx.h	/^    SG_FACEWINDING_CCW,$/;"	e	enum:sg_face_winding
SG_FACEWINDING_CW	$SOKOLC/sokol_gfx.h	/^    SG_FACEWINDING_CW,$/;"	e	enum:sg_face_winding
SG_FILTER_LINEAR	$SOKOLC/sokol_gfx.h	/^    SG_FILTER_LINEAR,$/;"	e	enum:sg_filter
SG_FILTER_NEAREST	$SOKOLC/sokol_gfx.h	/^    SG_FILTER_NEAREST,$/;"	e	enum:sg_filter
SG_FILTER_NONE	$SOKOLC/sokol_gfx.h	/^    SG_FILTER_NONE,$/;"	e	enum:sg_filter
SG_FIREBRICK	$SOKOLC/util/sokol_color.h	/^#define SG_FIREBRICK /;"	d
SG_FIREBRICK_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_FIREBRICK_RGBA32 /;"	d
SG_FLORAL_WHITE	$SOKOLC/util/sokol_color.h	/^#define SG_FLORAL_WHITE /;"	d
SG_FLORAL_WHITE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_FLORAL_WHITE_RGBA32 /;"	d
SG_FOREST_GREEN	$SOKOLC/util/sokol_color.h	/^#define SG_FOREST_GREEN /;"	d
SG_FOREST_GREEN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_FOREST_GREEN_RGBA32 /;"	d
SG_FUCHSIA	$SOKOLC/util/sokol_color.h	/^#define SG_FUCHSIA /;"	d
SG_FUCHSIA_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_FUCHSIA_RGBA32 /;"	d
SG_GAINSBORO	$SOKOLC/util/sokol_color.h	/^#define SG_GAINSBORO /;"	d
SG_GAINSBORO_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_GAINSBORO_RGBA32 /;"	d
SG_GHOST_WHITE	$SOKOLC/util/sokol_color.h	/^#define SG_GHOST_WHITE /;"	d
SG_GHOST_WHITE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_GHOST_WHITE_RGBA32 /;"	d
SG_GOLD	$SOKOLC/util/sokol_color.h	/^#define SG_GOLD /;"	d
SG_GOLDENROD	$SOKOLC/util/sokol_color.h	/^#define SG_GOLDENROD /;"	d
SG_GOLDENROD_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_GOLDENROD_RGBA32 /;"	d
SG_GOLD_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_GOLD_RGBA32 /;"	d
SG_GRAY	$SOKOLC/util/sokol_color.h	/^#define SG_GRAY /;"	d
SG_GRAY_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_GRAY_RGBA32 /;"	d
SG_GREEN	$SOKOLC/util/sokol_color.h	/^#define SG_GREEN /;"	d
SG_GREEN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_GREEN_RGBA32 /;"	d
SG_GREEN_YELLOW	$SOKOLC/util/sokol_color.h	/^#define SG_GREEN_YELLOW /;"	d
SG_GREEN_YELLOW_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_GREEN_YELLOW_RGBA32 /;"	d
SG_HONEYDEW	$SOKOLC/util/sokol_color.h	/^#define SG_HONEYDEW /;"	d
SG_HONEYDEW_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_HONEYDEW_RGBA32 /;"	d
SG_HOT_PINK	$SOKOLC/util/sokol_color.h	/^#define SG_HOT_PINK /;"	d
SG_HOT_PINK_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_HOT_PINK_RGBA32 /;"	d
SG_IMAGESAMPLETYPE_DEPTH	$SOKOLC/sokol_gfx.h	/^    SG_IMAGESAMPLETYPE_DEPTH,$/;"	e	enum:sg_image_sample_type
SG_IMAGESAMPLETYPE_FLOAT	$SOKOLC/sokol_gfx.h	/^    SG_IMAGESAMPLETYPE_FLOAT,$/;"	e	enum:sg_image_sample_type
SG_IMAGESAMPLETYPE_SINT	$SOKOLC/sokol_gfx.h	/^    SG_IMAGESAMPLETYPE_SINT,$/;"	e	enum:sg_image_sample_type
SG_IMAGESAMPLETYPE_UINT	$SOKOLC/sokol_gfx.h	/^    SG_IMAGESAMPLETYPE_UINT,$/;"	e	enum:sg_image_sample_type
SG_IMAGESAMPLETYPE_UNFILTERABLE_FLOAT	$SOKOLC/sokol_gfx.h	/^    SG_IMAGESAMPLETYPE_UNFILTERABLE_FLOAT,$/;"	e	enum:sg_image_sample_type
SG_IMAGETYPE_2D	$SOKOLC/sokol_gfx.h	/^    SG_IMAGETYPE_2D,$/;"	e	enum:sg_image_type
SG_IMAGETYPE_3D	$SOKOLC/sokol_gfx.h	/^    SG_IMAGETYPE_3D,$/;"	e	enum:sg_image_type
SG_IMAGETYPE_ARRAY	$SOKOLC/sokol_gfx.h	/^    SG_IMAGETYPE_ARRAY,$/;"	e	enum:sg_image_type
SG_IMAGETYPE_CUBE	$SOKOLC/sokol_gfx.h	/^    SG_IMAGETYPE_CUBE,$/;"	e	enum:sg_image_type
SG_IMGUI_CMD_ALLOC_BUFFER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_ALLOC_BUFFER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_ALLOC_IMAGE	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_ALLOC_IMAGE,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_ALLOC_PASS	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_ALLOC_PASS,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_ALLOC_PIPELINE	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_ALLOC_PIPELINE,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_ALLOC_SAMPLER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_ALLOC_SAMPLER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_ALLOC_SHADER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_ALLOC_SHADER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_APPEND_BUFFER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_APPEND_BUFFER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_APPLY_BINDINGS	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_APPLY_BINDINGS,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_APPLY_PIPELINE	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_APPLY_PIPELINE,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_APPLY_SCISSOR_RECT	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_APPLY_SCISSOR_RECT,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_APPLY_UNIFORMS	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_APPLY_UNIFORMS,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_APPLY_VIEWPORT	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_APPLY_VIEWPORT,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_BEGIN_DEFAULT_PASS	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_BEGIN_DEFAULT_PASS,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_BEGIN_PASS	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_BEGIN_PASS,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_COMMIT	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_COMMIT,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_DEALLOC_BUFFER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_DEALLOC_BUFFER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_DEALLOC_IMAGE	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_DEALLOC_IMAGE,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_DEALLOC_PASS	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_DEALLOC_PASS,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_DEALLOC_PIPELINE	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_DEALLOC_PIPELINE,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_DEALLOC_SAMPLER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_DEALLOC_SAMPLER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_DEALLOC_SHADER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_DEALLOC_SHADER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_DESTROY_BUFFER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_DESTROY_BUFFER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_DESTROY_IMAGE	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_DESTROY_IMAGE,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_DESTROY_PASS	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_DESTROY_PASS,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_DESTROY_PIPELINE	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_DESTROY_PIPELINE,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_DESTROY_SAMPLER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_DESTROY_SAMPLER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_DESTROY_SHADER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_DESTROY_SHADER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_DRAW	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_DRAW,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_END_PASS	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_END_PASS,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_FAIL_BUFFER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_FAIL_BUFFER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_FAIL_IMAGE	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_FAIL_IMAGE,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_FAIL_PASS	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_FAIL_PASS,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_FAIL_PIPELINE	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_FAIL_PIPELINE,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_FAIL_SAMPLER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_FAIL_SAMPLER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_FAIL_SHADER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_FAIL_SHADER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_INIT_BUFFER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_INIT_BUFFER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_INIT_IMAGE	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_INIT_IMAGE,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_INIT_PASS	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_INIT_PASS,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_INIT_PIPELINE	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_INIT_PIPELINE,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_INIT_SAMPLER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_INIT_SAMPLER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_INIT_SHADER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_INIT_SHADER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_INVALID	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_INVALID,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_MAKE_BUFFER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_MAKE_BUFFER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_MAKE_IMAGE	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_MAKE_IMAGE,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_MAKE_PASS	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_MAKE_PASS,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_MAKE_PIPELINE	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_MAKE_PIPELINE,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_MAKE_SAMPLER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_MAKE_SAMPLER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_MAKE_SHADER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_MAKE_SHADER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_POP_DEBUG_GROUP	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_POP_DEBUG_GROUP,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_PUSH_DEBUG_GROUP	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_PUSH_DEBUG_GROUP,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_RESET_STATE_CACHE	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_RESET_STATE_CACHE,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_UNINIT_BUFFER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_UNINIT_BUFFER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_UNINIT_IMAGE	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_UNINIT_IMAGE,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_UNINIT_PASS	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_UNINIT_PASS,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_UNINIT_PIPELINE	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_UNINIT_PIPELINE,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_UNINIT_SAMPLER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_UNINIT_SAMPLER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_UNINIT_SHADER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_UNINIT_SHADER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_UPDATE_BUFFER	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_UPDATE_BUFFER,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_CMD_UPDATE_IMAGE	$SOKOLC/util/sokol_gfx_imgui.h	/^    SG_IMGUI_CMD_UPDATE_IMAGE,$/;"	e	enum:sg_imgui_cmd_t
SG_IMGUI_MAX_FRAMECAPTURE_ITEMS	$SOKOLC/util/sokol_gfx_imgui.h	/^#define SG_IMGUI_MAX_FRAMECAPTURE_ITEMS /;"	d
SG_IMGUI_STRBUF_LEN	$SOKOLC/util/sokol_gfx_imgui.h	/^#define SG_IMGUI_STRBUF_LEN /;"	d
SG_INDEXTYPE_NONE	$SOKOLC/sokol_gfx.h	/^    SG_INDEXTYPE_NONE,$/;"	e	enum:sg_index_type
SG_INDEXTYPE_UINT16	$SOKOLC/sokol_gfx.h	/^    SG_INDEXTYPE_UINT16,$/;"	e	enum:sg_index_type
SG_INDEXTYPE_UINT32	$SOKOLC/sokol_gfx.h	/^    SG_INDEXTYPE_UINT32,$/;"	e	enum:sg_index_type
SG_INDIAN_RED	$SOKOLC/util/sokol_color.h	/^#define SG_INDIAN_RED /;"	d
SG_INDIAN_RED_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_INDIAN_RED_RGBA32 /;"	d
SG_INDIGO	$SOKOLC/util/sokol_color.h	/^#define SG_INDIGO /;"	d
SG_INDIGO_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_INDIGO_RGBA32 /;"	d
SG_INVALID_ID	$SOKOLC/sokol_gfx.h	/^    SG_INVALID_ID = 0,$/;"	e	enum:__anon13e02ee70103
SG_IVORY	$SOKOLC/util/sokol_color.h	/^#define SG_IVORY /;"	d
SG_IVORY_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_IVORY_RGBA32 /;"	d
SG_KHAKI	$SOKOLC/util/sokol_color.h	/^#define SG_KHAKI /;"	d
SG_KHAKI_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_KHAKI_RGBA32 /;"	d
SG_LAVENDER	$SOKOLC/util/sokol_color.h	/^#define SG_LAVENDER /;"	d
SG_LAVENDER_BLUSH	$SOKOLC/util/sokol_color.h	/^#define SG_LAVENDER_BLUSH /;"	d
SG_LAVENDER_BLUSH_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LAVENDER_BLUSH_RGBA32 /;"	d
SG_LAVENDER_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LAVENDER_RGBA32 /;"	d
SG_LAWN_GREEN	$SOKOLC/util/sokol_color.h	/^#define SG_LAWN_GREEN /;"	d
SG_LAWN_GREEN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LAWN_GREEN_RGBA32 /;"	d
SG_LEMON_CHIFFON	$SOKOLC/util/sokol_color.h	/^#define SG_LEMON_CHIFFON /;"	d
SG_LEMON_CHIFFON_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LEMON_CHIFFON_RGBA32 /;"	d
SG_LIGHT_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_BLUE /;"	d
SG_LIGHT_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_BLUE_RGBA32 /;"	d
SG_LIGHT_CORAL	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_CORAL /;"	d
SG_LIGHT_CORAL_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_CORAL_RGBA32 /;"	d
SG_LIGHT_CYAN	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_CYAN /;"	d
SG_LIGHT_CYAN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_CYAN_RGBA32 /;"	d
SG_LIGHT_GOLDENROD	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_GOLDENROD /;"	d
SG_LIGHT_GOLDENROD_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_GOLDENROD_RGBA32 /;"	d
SG_LIGHT_GRAY	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_GRAY /;"	d
SG_LIGHT_GRAY_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_GRAY_RGBA32 /;"	d
SG_LIGHT_GREEN	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_GREEN /;"	d
SG_LIGHT_GREEN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_GREEN_RGBA32 /;"	d
SG_LIGHT_PINK	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_PINK /;"	d
SG_LIGHT_PINK_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_PINK_RGBA32 /;"	d
SG_LIGHT_SALMON	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_SALMON /;"	d
SG_LIGHT_SALMON_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_SALMON_RGBA32 /;"	d
SG_LIGHT_SEA_GREEN	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_SEA_GREEN /;"	d
SG_LIGHT_SEA_GREEN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_SEA_GREEN_RGBA32 /;"	d
SG_LIGHT_SKY_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_SKY_BLUE /;"	d
SG_LIGHT_SKY_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_SKY_BLUE_RGBA32 /;"	d
SG_LIGHT_SLATE_GRAY	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_SLATE_GRAY /;"	d
SG_LIGHT_SLATE_GRAY_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_SLATE_GRAY_RGBA32 /;"	d
SG_LIGHT_STEEL_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_STEEL_BLUE /;"	d
SG_LIGHT_STEEL_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_STEEL_BLUE_RGBA32 /;"	d
SG_LIGHT_YELLOW	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_YELLOW /;"	d
SG_LIGHT_YELLOW_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LIGHT_YELLOW_RGBA32 /;"	d
SG_LIME	$SOKOLC/util/sokol_color.h	/^#define SG_LIME /;"	d
SG_LIME_GREEN	$SOKOLC/util/sokol_color.h	/^#define SG_LIME_GREEN /;"	d
SG_LIME_GREEN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LIME_GREEN_RGBA32 /;"	d
SG_LIME_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LIME_RGBA32 /;"	d
SG_LINEN	$SOKOLC/util/sokol_color.h	/^#define SG_LINEN /;"	d
SG_LINEN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_LINEN_RGBA32 /;"	d
SG_LOADACTION_CLEAR	$SOKOLC/sokol_gfx.h	/^    SG_LOADACTION_CLEAR,$/;"	e	enum:sg_load_action
SG_LOADACTION_DONTCARE	$SOKOLC/sokol_gfx.h	/^    SG_LOADACTION_DONTCARE,$/;"	e	enum:sg_load_action
SG_LOADACTION_LOAD	$SOKOLC/sokol_gfx.h	/^    SG_LOADACTION_LOAD,$/;"	e	enum:sg_load_action
SG_MAGENTA	$SOKOLC/util/sokol_color.h	/^#define SG_MAGENTA /;"	d
SG_MAGENTA_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_MAGENTA_RGBA32 /;"	d
SG_MAROON	$SOKOLC/util/sokol_color.h	/^#define SG_MAROON /;"	d
SG_MAROON_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_MAROON_RGBA32 /;"	d
SG_MAX_COLOR_ATTACHMENTS	$SOKOLC/sokol_gfx.h	/^    SG_MAX_COLOR_ATTACHMENTS = 4,$/;"	e	enum:__anon13e02ee70103
SG_MAX_MIPMAPS	$SOKOLC/sokol_gfx.h	/^    SG_MAX_MIPMAPS = 16,$/;"	e	enum:__anon13e02ee70103
SG_MAX_SHADERSTAGE_IMAGES	$SOKOLC/sokol_gfx.h	/^    SG_MAX_SHADERSTAGE_IMAGES = 12,$/;"	e	enum:__anon13e02ee70103
SG_MAX_SHADERSTAGE_IMAGESAMPLERPAIRS	$SOKOLC/sokol_gfx.h	/^    SG_MAX_SHADERSTAGE_IMAGESAMPLERPAIRS = 12,$/;"	e	enum:__anon13e02ee70103
SG_MAX_SHADERSTAGE_SAMPLERS	$SOKOLC/sokol_gfx.h	/^    SG_MAX_SHADERSTAGE_SAMPLERS = 8,$/;"	e	enum:__anon13e02ee70103
SG_MAX_SHADERSTAGE_UBS	$SOKOLC/sokol_gfx.h	/^    SG_MAX_SHADERSTAGE_UBS = 4,$/;"	e	enum:__anon13e02ee70103
SG_MAX_TEXTUREARRAY_LAYERS	$SOKOLC/sokol_gfx.h	/^    SG_MAX_TEXTUREARRAY_LAYERS = 128$/;"	e	enum:__anon13e02ee70103
SG_MAX_UB_MEMBERS	$SOKOLC/sokol_gfx.h	/^    SG_MAX_UB_MEMBERS = 16,$/;"	e	enum:__anon13e02ee70103
SG_MAX_VERTEX_ATTRIBUTES	$SOKOLC/sokol_gfx.h	/^    SG_MAX_VERTEX_ATTRIBUTES = 16,$/;"	e	enum:__anon13e02ee70103
SG_MAX_VERTEX_BUFFERS	$SOKOLC/sokol_gfx.h	/^    SG_MAX_VERTEX_BUFFERS = 8,$/;"	e	enum:__anon13e02ee70103
SG_MEDIUM_AQUAMARINE	$SOKOLC/util/sokol_color.h	/^#define SG_MEDIUM_AQUAMARINE /;"	d
SG_MEDIUM_AQUAMARINE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_MEDIUM_AQUAMARINE_RGBA32 /;"	d
SG_MEDIUM_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_MEDIUM_BLUE /;"	d
SG_MEDIUM_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_MEDIUM_BLUE_RGBA32 /;"	d
SG_MEDIUM_ORCHID	$SOKOLC/util/sokol_color.h	/^#define SG_MEDIUM_ORCHID /;"	d
SG_MEDIUM_ORCHID_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_MEDIUM_ORCHID_RGBA32 /;"	d
SG_MEDIUM_PURPLE	$SOKOLC/util/sokol_color.h	/^#define SG_MEDIUM_PURPLE /;"	d
SG_MEDIUM_PURPLE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_MEDIUM_PURPLE_RGBA32 /;"	d
SG_MEDIUM_SEA_GREEN	$SOKOLC/util/sokol_color.h	/^#define SG_MEDIUM_SEA_GREEN /;"	d
SG_MEDIUM_SEA_GREEN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_MEDIUM_SEA_GREEN_RGBA32 /;"	d
SG_MEDIUM_SLATE_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_MEDIUM_SLATE_BLUE /;"	d
SG_MEDIUM_SLATE_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_MEDIUM_SLATE_BLUE_RGBA32 /;"	d
SG_MEDIUM_SPRING_GREEN	$SOKOLC/util/sokol_color.h	/^#define SG_MEDIUM_SPRING_GREEN /;"	d
SG_MEDIUM_SPRING_GREEN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_MEDIUM_SPRING_GREEN_RGBA32 /;"	d
SG_MEDIUM_TURQUOISE	$SOKOLC/util/sokol_color.h	/^#define SG_MEDIUM_TURQUOISE /;"	d
SG_MEDIUM_TURQUOISE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_MEDIUM_TURQUOISE_RGBA32 /;"	d
SG_MEDIUM_VIOLET_RED	$SOKOLC/util/sokol_color.h	/^#define SG_MEDIUM_VIOLET_RED /;"	d
SG_MEDIUM_VIOLET_RED_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_MEDIUM_VIOLET_RED_RGBA32 /;"	d
SG_MIDNIGHT_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_MIDNIGHT_BLUE /;"	d
SG_MIDNIGHT_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_MIDNIGHT_BLUE_RGBA32 /;"	d
SG_MINT_CREAM	$SOKOLC/util/sokol_color.h	/^#define SG_MINT_CREAM /;"	d
SG_MINT_CREAM_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_MINT_CREAM_RGBA32 /;"	d
SG_MISTY_ROSE	$SOKOLC/util/sokol_color.h	/^#define SG_MISTY_ROSE /;"	d
SG_MISTY_ROSE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_MISTY_ROSE_RGBA32 /;"	d
SG_MOCCASIN	$SOKOLC/util/sokol_color.h	/^#define SG_MOCCASIN /;"	d
SG_MOCCASIN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_MOCCASIN_RGBA32 /;"	d
SG_NAVAJO_WHITE	$SOKOLC/util/sokol_color.h	/^#define SG_NAVAJO_WHITE /;"	d
SG_NAVAJO_WHITE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_NAVAJO_WHITE_RGBA32 /;"	d
SG_NAVY_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_NAVY_BLUE /;"	d
SG_NAVY_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_NAVY_BLUE_RGBA32 /;"	d
SG_NUM_INFLIGHT_FRAMES	$SOKOLC/sokol_gfx.h	/^    SG_NUM_INFLIGHT_FRAMES = 2,$/;"	e	enum:__anon13e02ee70103
SG_NUM_SHADER_STAGES	$SOKOLC/sokol_gfx.h	/^    SG_NUM_SHADER_STAGES = 2,$/;"	e	enum:__anon13e02ee70103
SG_OLD_LACE	$SOKOLC/util/sokol_color.h	/^#define SG_OLD_LACE /;"	d
SG_OLD_LACE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_OLD_LACE_RGBA32 /;"	d
SG_OLIVE	$SOKOLC/util/sokol_color.h	/^#define SG_OLIVE /;"	d
SG_OLIVE_DRAB	$SOKOLC/util/sokol_color.h	/^#define SG_OLIVE_DRAB /;"	d
SG_OLIVE_DRAB_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_OLIVE_DRAB_RGBA32 /;"	d
SG_OLIVE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_OLIVE_RGBA32 /;"	d
SG_ORANGE	$SOKOLC/util/sokol_color.h	/^#define SG_ORANGE /;"	d
SG_ORANGE_RED	$SOKOLC/util/sokol_color.h	/^#define SG_ORANGE_RED /;"	d
SG_ORANGE_RED_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_ORANGE_RED_RGBA32 /;"	d
SG_ORANGE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_ORANGE_RGBA32 /;"	d
SG_ORCHID	$SOKOLC/util/sokol_color.h	/^#define SG_ORCHID /;"	d
SG_ORCHID_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_ORCHID_RGBA32 /;"	d
SG_PALE_GOLDENROD	$SOKOLC/util/sokol_color.h	/^#define SG_PALE_GOLDENROD /;"	d
SG_PALE_GOLDENROD_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_PALE_GOLDENROD_RGBA32 /;"	d
SG_PALE_GREEN	$SOKOLC/util/sokol_color.h	/^#define SG_PALE_GREEN /;"	d
SG_PALE_GREEN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_PALE_GREEN_RGBA32 /;"	d
SG_PALE_TURQUOISE	$SOKOLC/util/sokol_color.h	/^#define SG_PALE_TURQUOISE /;"	d
SG_PALE_TURQUOISE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_PALE_TURQUOISE_RGBA32 /;"	d
SG_PALE_VIOLET_RED	$SOKOLC/util/sokol_color.h	/^#define SG_PALE_VIOLET_RED /;"	d
SG_PALE_VIOLET_RED_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_PALE_VIOLET_RED_RGBA32 /;"	d
SG_PAPAYA_WHIP	$SOKOLC/util/sokol_color.h	/^#define SG_PAPAYA_WHIP /;"	d
SG_PAPAYA_WHIP_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_PAPAYA_WHIP_RGBA32 /;"	d
SG_PEACH_PUFF	$SOKOLC/util/sokol_color.h	/^#define SG_PEACH_PUFF /;"	d
SG_PEACH_PUFF_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_PEACH_PUFF_RGBA32 /;"	d
SG_PERU	$SOKOLC/util/sokol_color.h	/^#define SG_PERU /;"	d
SG_PERU_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_PERU_RGBA32 /;"	d
SG_PINK	$SOKOLC/util/sokol_color.h	/^#define SG_PINK /;"	d
SG_PINK_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_PINK_RGBA32 /;"	d
SG_PIXELFORMAT_BC1_RGBA	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_BC1_RGBA,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_BC2_RGBA	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_BC2_RGBA,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_BC3_RGBA	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_BC3_RGBA,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_BC4_R	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_BC4_R,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_BC4_RSN	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_BC4_RSN,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_BC5_RG	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_BC5_RG,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_BC5_RGSN	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_BC5_RGSN,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_BC6H_RGBF	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_BC6H_RGBF,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_BC6H_RGBUF	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_BC6H_RGBUF,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_BC7_RGBA	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_BC7_RGBA,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_BGRA8	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_BGRA8,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_DEPTH	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_DEPTH,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_DEPTH_STENCIL	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_DEPTH_STENCIL,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_ETC2_RG11	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_ETC2_RG11,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_ETC2_RG11SN	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_ETC2_RG11SN,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_ETC2_RGB8	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_ETC2_RGB8,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_ETC2_RGB8A1	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_ETC2_RGB8A1,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_ETC2_RGBA8	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_ETC2_RGBA8,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_NONE	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_NONE,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_PVRTC_RGBA_2BPP	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_PVRTC_RGBA_2BPP,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_PVRTC_RGBA_4BPP	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_PVRTC_RGBA_4BPP,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_PVRTC_RGB_2BPP	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_PVRTC_RGB_2BPP,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_PVRTC_RGB_4BPP	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_PVRTC_RGB_4BPP,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_R16	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_R16,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_R16F	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_R16F,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_R16SI	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_R16SI,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_R16SN	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_R16SN,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_R16UI	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_R16UI,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_R32F	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_R32F,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_R32SI	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_R32SI,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_R32UI	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_R32UI,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_R8	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_R8,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_R8SI	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_R8SI,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_R8SN	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_R8SN,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_R8UI	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_R8UI,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RG11B10F	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RG11B10F,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RG16	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RG16,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RG16F	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RG16F,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RG16SI	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RG16SI,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RG16SN	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RG16SN,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RG16UI	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RG16UI,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RG32F	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RG32F,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RG32SI	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RG32SI,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RG32UI	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RG32UI,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RG8	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RG8,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RG8SI	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RG8SI,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RG8SN	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RG8SN,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RG8UI	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RG8UI,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RGB10A2	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RGB10A2,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RGB9E5	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RGB9E5,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RGBA16	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RGBA16,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RGBA16F	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RGBA16F,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RGBA16SI	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RGBA16SI,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RGBA16SN	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RGBA16SN,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RGBA16UI	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RGBA16UI,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RGBA32F	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RGBA32F,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RGBA32SI	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RGBA32SI,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RGBA32UI	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RGBA32UI,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RGBA8	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RGBA8,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RGBA8SI	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RGBA8SI,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RGBA8SN	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RGBA8SN,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_RGBA8UI	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_RGBA8UI,$/;"	e	enum:sg_pixel_format
SG_PIXELFORMAT_SRGB8A8	$SOKOLC/sokol_gfx.h	/^    SG_PIXELFORMAT_SRGB8A8,$/;"	e	enum:sg_pixel_format
SG_PLUM	$SOKOLC/util/sokol_color.h	/^#define SG_PLUM /;"	d
SG_PLUM_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_PLUM_RGBA32 /;"	d
SG_POWDER_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_POWDER_BLUE /;"	d
SG_POWDER_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_POWDER_BLUE_RGBA32 /;"	d
SG_PRIMITIVETYPE_LINES	$SOKOLC/sokol_gfx.h	/^    SG_PRIMITIVETYPE_LINES,$/;"	e	enum:sg_primitive_type
SG_PRIMITIVETYPE_LINE_STRIP	$SOKOLC/sokol_gfx.h	/^    SG_PRIMITIVETYPE_LINE_STRIP,$/;"	e	enum:sg_primitive_type
SG_PRIMITIVETYPE_POINTS	$SOKOLC/sokol_gfx.h	/^    SG_PRIMITIVETYPE_POINTS,$/;"	e	enum:sg_primitive_type
SG_PRIMITIVETYPE_TRIANGLES	$SOKOLC/sokol_gfx.h	/^    SG_PRIMITIVETYPE_TRIANGLES,$/;"	e	enum:sg_primitive_type
SG_PRIMITIVETYPE_TRIANGLE_STRIP	$SOKOLC/sokol_gfx.h	/^    SG_PRIMITIVETYPE_TRIANGLE_STRIP,$/;"	e	enum:sg_primitive_type
SG_PURPLE	$SOKOLC/util/sokol_color.h	/^#define SG_PURPLE /;"	d
SG_PURPLE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_PURPLE_RGBA32 /;"	d
SG_RANGE	$SOKOLC/sokol_gfx.h	/^#define SG_RANGE(/;"	d	signature:(x)
SG_RANGE_REF	$SOKOLC/sokol_gfx.h	/^#define SG_RANGE_REF(/;"	d	signature:(x)
SG_REBECCA_PURPLE	$SOKOLC/util/sokol_color.h	/^#define SG_REBECCA_PURPLE /;"	d
SG_REBECCA_PURPLE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_REBECCA_PURPLE_RGBA32 /;"	d
SG_RED	$SOKOLC/util/sokol_color.h	/^#define SG_RED /;"	d
SG_RED_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_RED_RGBA32 /;"	d
SG_RESOURCESTATE_ALLOC	$SOKOLC/sokol_gfx.h	/^    SG_RESOURCESTATE_ALLOC,$/;"	e	enum:sg_resource_state
SG_RESOURCESTATE_FAILED	$SOKOLC/sokol_gfx.h	/^    SG_RESOURCESTATE_FAILED,$/;"	e	enum:sg_resource_state
SG_RESOURCESTATE_INITIAL	$SOKOLC/sokol_gfx.h	/^    SG_RESOURCESTATE_INITIAL,$/;"	e	enum:sg_resource_state
SG_RESOURCESTATE_INVALID	$SOKOLC/sokol_gfx.h	/^    SG_RESOURCESTATE_INVALID,$/;"	e	enum:sg_resource_state
SG_RESOURCESTATE_VALID	$SOKOLC/sokol_gfx.h	/^    SG_RESOURCESTATE_VALID,$/;"	e	enum:sg_resource_state
SG_ROSY_BROWN	$SOKOLC/util/sokol_color.h	/^#define SG_ROSY_BROWN /;"	d
SG_ROSY_BROWN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_ROSY_BROWN_RGBA32 /;"	d
SG_ROYAL_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_ROYAL_BLUE /;"	d
SG_ROYAL_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_ROYAL_BLUE_RGBA32 /;"	d
SG_SADDLE_BROWN	$SOKOLC/util/sokol_color.h	/^#define SG_SADDLE_BROWN /;"	d
SG_SADDLE_BROWN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_SADDLE_BROWN_RGBA32 /;"	d
SG_SALMON	$SOKOLC/util/sokol_color.h	/^#define SG_SALMON /;"	d
SG_SALMON_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_SALMON_RGBA32 /;"	d
SG_SAMPLERTYPE_COMPARISON	$SOKOLC/sokol_gfx.h	/^    SG_SAMPLERTYPE_COMPARISON,$/;"	e	enum:sg_sampler_type
SG_SAMPLERTYPE_FILTERING	$SOKOLC/sokol_gfx.h	/^    SG_SAMPLERTYPE_FILTERING,$/;"	e	enum:sg_sampler_type
SG_SAMPLERTYPE_NONFILTERING	$SOKOLC/sokol_gfx.h	/^    SG_SAMPLERTYPE_NONFILTERING,$/;"	e	enum:sg_sampler_type
SG_SANDY_BROWN	$SOKOLC/util/sokol_color.h	/^#define SG_SANDY_BROWN /;"	d
SG_SANDY_BROWN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_SANDY_BROWN_RGBA32 /;"	d
SG_SEASHELL	$SOKOLC/util/sokol_color.h	/^#define SG_SEASHELL /;"	d
SG_SEASHELL_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_SEASHELL_RGBA32 /;"	d
SG_SEA_GREEN	$SOKOLC/util/sokol_color.h	/^#define SG_SEA_GREEN /;"	d
SG_SEA_GREEN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_SEA_GREEN_RGBA32 /;"	d
SG_SHADERSTAGE_FS	$SOKOLC/sokol_gfx.h	/^    SG_SHADERSTAGE_FS,$/;"	e	enum:sg_shader_stage
SG_SHADERSTAGE_VS	$SOKOLC/sokol_gfx.h	/^    SG_SHADERSTAGE_VS,$/;"	e	enum:sg_shader_stage
SG_SIENNA	$SOKOLC/util/sokol_color.h	/^#define SG_SIENNA /;"	d
SG_SIENNA_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_SIENNA_RGBA32 /;"	d
SG_SILVER	$SOKOLC/util/sokol_color.h	/^#define SG_SILVER /;"	d
SG_SILVER_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_SILVER_RGBA32 /;"	d
SG_SKY_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_SKY_BLUE /;"	d
SG_SKY_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_SKY_BLUE_RGBA32 /;"	d
SG_SLATE_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_SLATE_BLUE /;"	d
SG_SLATE_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_SLATE_BLUE_RGBA32 /;"	d
SG_SLATE_GRAY	$SOKOLC/util/sokol_color.h	/^#define SG_SLATE_GRAY /;"	d
SG_SLATE_GRAY_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_SLATE_GRAY_RGBA32 /;"	d
SG_SNOW	$SOKOLC/util/sokol_color.h	/^#define SG_SNOW /;"	d
SG_SNOW_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_SNOW_RGBA32 /;"	d
SG_SPRING_GREEN	$SOKOLC/util/sokol_color.h	/^#define SG_SPRING_GREEN /;"	d
SG_SPRING_GREEN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_SPRING_GREEN_RGBA32 /;"	d
SG_STEEL_BLUE	$SOKOLC/util/sokol_color.h	/^#define SG_STEEL_BLUE /;"	d
SG_STEEL_BLUE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_STEEL_BLUE_RGBA32 /;"	d
SG_STENCILOP_DECR_CLAMP	$SOKOLC/sokol_gfx.h	/^    SG_STENCILOP_DECR_CLAMP,$/;"	e	enum:sg_stencil_op
SG_STENCILOP_DECR_WRAP	$SOKOLC/sokol_gfx.h	/^    SG_STENCILOP_DECR_WRAP,$/;"	e	enum:sg_stencil_op
SG_STENCILOP_INCR_CLAMP	$SOKOLC/sokol_gfx.h	/^    SG_STENCILOP_INCR_CLAMP,$/;"	e	enum:sg_stencil_op
SG_STENCILOP_INCR_WRAP	$SOKOLC/sokol_gfx.h	/^    SG_STENCILOP_INCR_WRAP,$/;"	e	enum:sg_stencil_op
SG_STENCILOP_INVERT	$SOKOLC/sokol_gfx.h	/^    SG_STENCILOP_INVERT,$/;"	e	enum:sg_stencil_op
SG_STENCILOP_KEEP	$SOKOLC/sokol_gfx.h	/^    SG_STENCILOP_KEEP,$/;"	e	enum:sg_stencil_op
SG_STENCILOP_REPLACE	$SOKOLC/sokol_gfx.h	/^    SG_STENCILOP_REPLACE,$/;"	e	enum:sg_stencil_op
SG_STENCILOP_ZERO	$SOKOLC/sokol_gfx.h	/^    SG_STENCILOP_ZERO,$/;"	e	enum:sg_stencil_op
SG_STOREACTION_DONTCARE	$SOKOLC/sokol_gfx.h	/^    SG_STOREACTION_DONTCARE,$/;"	e	enum:sg_store_action
SG_STOREACTION_STORE	$SOKOLC/sokol_gfx.h	/^    SG_STOREACTION_STORE,$/;"	e	enum:sg_store_action
SG_TAN	$SOKOLC/util/sokol_color.h	/^#define SG_TAN /;"	d
SG_TAN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_TAN_RGBA32 /;"	d
SG_TEAL	$SOKOLC/util/sokol_color.h	/^#define SG_TEAL /;"	d
SG_TEAL_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_TEAL_RGBA32 /;"	d
SG_THISTLE	$SOKOLC/util/sokol_color.h	/^#define SG_THISTLE /;"	d
SG_THISTLE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_THISTLE_RGBA32 /;"	d
SG_TOMATO	$SOKOLC/util/sokol_color.h	/^#define SG_TOMATO /;"	d
SG_TOMATO_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_TOMATO_RGBA32 /;"	d
SG_TRANSPARENT	$SOKOLC/util/sokol_color.h	/^#define SG_TRANSPARENT /;"	d
SG_TRANSPARENT_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_TRANSPARENT_RGBA32 /;"	d
SG_TURQUOISE	$SOKOLC/util/sokol_color.h	/^#define SG_TURQUOISE /;"	d
SG_TURQUOISE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_TURQUOISE_RGBA32 /;"	d
SG_UNIFORMLAYOUT_NATIVE	$SOKOLC/sokol_gfx.h	/^    SG_UNIFORMLAYOUT_NATIVE,       \/\/ default: layout depends on currently active backend$/;"	e	enum:sg_uniform_layout
SG_UNIFORMLAYOUT_STD140	$SOKOLC/sokol_gfx.h	/^    SG_UNIFORMLAYOUT_STD140,       \/\/ std140: memory layout according to std140$/;"	e	enum:sg_uniform_layout
SG_UNIFORMTYPE_FLOAT	$SOKOLC/sokol_gfx.h	/^    SG_UNIFORMTYPE_FLOAT,$/;"	e	enum:sg_uniform_type
SG_UNIFORMTYPE_FLOAT2	$SOKOLC/sokol_gfx.h	/^    SG_UNIFORMTYPE_FLOAT2,$/;"	e	enum:sg_uniform_type
SG_UNIFORMTYPE_FLOAT3	$SOKOLC/sokol_gfx.h	/^    SG_UNIFORMTYPE_FLOAT3,$/;"	e	enum:sg_uniform_type
SG_UNIFORMTYPE_FLOAT4	$SOKOLC/sokol_gfx.h	/^    SG_UNIFORMTYPE_FLOAT4,$/;"	e	enum:sg_uniform_type
SG_UNIFORMTYPE_INT	$SOKOLC/sokol_gfx.h	/^    SG_UNIFORMTYPE_INT,$/;"	e	enum:sg_uniform_type
SG_UNIFORMTYPE_INT2	$SOKOLC/sokol_gfx.h	/^    SG_UNIFORMTYPE_INT2,$/;"	e	enum:sg_uniform_type
SG_UNIFORMTYPE_INT3	$SOKOLC/sokol_gfx.h	/^    SG_UNIFORMTYPE_INT3,$/;"	e	enum:sg_uniform_type
SG_UNIFORMTYPE_INT4	$SOKOLC/sokol_gfx.h	/^    SG_UNIFORMTYPE_INT4,$/;"	e	enum:sg_uniform_type
SG_UNIFORMTYPE_INVALID	$SOKOLC/sokol_gfx.h	/^    SG_UNIFORMTYPE_INVALID,$/;"	e	enum:sg_uniform_type
SG_UNIFORMTYPE_MAT4	$SOKOLC/sokol_gfx.h	/^    SG_UNIFORMTYPE_MAT4,$/;"	e	enum:sg_uniform_type
SG_USAGE_DYNAMIC	$SOKOLC/sokol_gfx.h	/^    SG_USAGE_DYNAMIC,$/;"	e	enum:sg_usage
SG_USAGE_IMMUTABLE	$SOKOLC/sokol_gfx.h	/^    SG_USAGE_IMMUTABLE,$/;"	e	enum:sg_usage
SG_USAGE_STREAM	$SOKOLC/sokol_gfx.h	/^    SG_USAGE_STREAM,$/;"	e	enum:sg_usage
SG_VERTEXFORMAT_BYTE4	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXFORMAT_BYTE4,$/;"	e	enum:sg_vertex_format
SG_VERTEXFORMAT_BYTE4N	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXFORMAT_BYTE4N,$/;"	e	enum:sg_vertex_format
SG_VERTEXFORMAT_FLOAT	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXFORMAT_FLOAT,$/;"	e	enum:sg_vertex_format
SG_VERTEXFORMAT_FLOAT2	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXFORMAT_FLOAT2,$/;"	e	enum:sg_vertex_format
SG_VERTEXFORMAT_FLOAT3	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXFORMAT_FLOAT3,$/;"	e	enum:sg_vertex_format
SG_VERTEXFORMAT_FLOAT4	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXFORMAT_FLOAT4,$/;"	e	enum:sg_vertex_format
SG_VERTEXFORMAT_HALF2	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXFORMAT_HALF2,$/;"	e	enum:sg_vertex_format
SG_VERTEXFORMAT_HALF4	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXFORMAT_HALF4,$/;"	e	enum:sg_vertex_format
SG_VERTEXFORMAT_INVALID	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXFORMAT_INVALID,$/;"	e	enum:sg_vertex_format
SG_VERTEXFORMAT_SHORT2	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXFORMAT_SHORT2,$/;"	e	enum:sg_vertex_format
SG_VERTEXFORMAT_SHORT2N	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXFORMAT_SHORT2N,$/;"	e	enum:sg_vertex_format
SG_VERTEXFORMAT_SHORT4	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXFORMAT_SHORT4,$/;"	e	enum:sg_vertex_format
SG_VERTEXFORMAT_SHORT4N	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXFORMAT_SHORT4N,$/;"	e	enum:sg_vertex_format
SG_VERTEXFORMAT_UBYTE4	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXFORMAT_UBYTE4,$/;"	e	enum:sg_vertex_format
SG_VERTEXFORMAT_UBYTE4N	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXFORMAT_UBYTE4N,$/;"	e	enum:sg_vertex_format
SG_VERTEXFORMAT_UINT10_N2	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXFORMAT_UINT10_N2,$/;"	e	enum:sg_vertex_format
SG_VERTEXFORMAT_USHORT2N	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXFORMAT_USHORT2N,$/;"	e	enum:sg_vertex_format
SG_VERTEXFORMAT_USHORT4N	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXFORMAT_USHORT4N,$/;"	e	enum:sg_vertex_format
SG_VERTEXSTEP_PER_INSTANCE	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXSTEP_PER_INSTANCE,$/;"	e	enum:sg_vertex_step
SG_VERTEXSTEP_PER_VERTEX	$SOKOLC/sokol_gfx.h	/^    SG_VERTEXSTEP_PER_VERTEX,$/;"	e	enum:sg_vertex_step
SG_VIOLET	$SOKOLC/util/sokol_color.h	/^#define SG_VIOLET /;"	d
SG_VIOLET_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_VIOLET_RGBA32 /;"	d
SG_WEB_GRAY	$SOKOLC/util/sokol_color.h	/^#define SG_WEB_GRAY /;"	d
SG_WEB_GRAY_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_WEB_GRAY_RGBA32 /;"	d
SG_WEB_GREEN	$SOKOLC/util/sokol_color.h	/^#define SG_WEB_GREEN /;"	d
SG_WEB_GREEN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_WEB_GREEN_RGBA32 /;"	d
SG_WEB_MAROON	$SOKOLC/util/sokol_color.h	/^#define SG_WEB_MAROON /;"	d
SG_WEB_MAROON_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_WEB_MAROON_RGBA32 /;"	d
SG_WEB_PURPLE	$SOKOLC/util/sokol_color.h	/^#define SG_WEB_PURPLE /;"	d
SG_WEB_PURPLE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_WEB_PURPLE_RGBA32 /;"	d
SG_WHEAT	$SOKOLC/util/sokol_color.h	/^#define SG_WHEAT /;"	d
SG_WHEAT_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_WHEAT_RGBA32 /;"	d
SG_WHITE	$SOKOLC/util/sokol_color.h	/^#define SG_WHITE /;"	d
SG_WHITE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_WHITE_RGBA32 /;"	d
SG_WHITE_SMOKE	$SOKOLC/util/sokol_color.h	/^#define SG_WHITE_SMOKE /;"	d
SG_WHITE_SMOKE_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_WHITE_SMOKE_RGBA32 /;"	d
SG_WRAP_CLAMP_TO_BORDER	$SOKOLC/sokol_gfx.h	/^    SG_WRAP_CLAMP_TO_BORDER,$/;"	e	enum:sg_wrap
SG_WRAP_CLAMP_TO_EDGE	$SOKOLC/sokol_gfx.h	/^    SG_WRAP_CLAMP_TO_EDGE,$/;"	e	enum:sg_wrap
SG_WRAP_MIRRORED_REPEAT	$SOKOLC/sokol_gfx.h	/^    SG_WRAP_MIRRORED_REPEAT,$/;"	e	enum:sg_wrap
SG_WRAP_REPEAT	$SOKOLC/sokol_gfx.h	/^    SG_WRAP_REPEAT,$/;"	e	enum:sg_wrap
SG_YELLOW	$SOKOLC/util/sokol_color.h	/^#define SG_YELLOW /;"	d
SG_YELLOW_GREEN	$SOKOLC/util/sokol_color.h	/^#define SG_YELLOW_GREEN /;"	d
SG_YELLOW_GREEN_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_YELLOW_GREEN_RGBA32 /;"	d
SG_YELLOW_RGBA32	$SOKOLC/util/sokol_color.h	/^#define SG_YELLOW_RGBA32 /;"	d
SIMGUI_INVALID_ID	$SOKOLC/util/sokol_imgui.h	/^    SIMGUI_INVALID_ID = 0,$/;"	e	enum:__anon4720df6a0103
SNK_INVALID_ID	$SOKOLC/util/sokol_nuklear.h	/^    SNK_INVALID_ID = 0,$/;"	e	enum:__anon5a1189810103
SOKOL_API_IMPL	$SOKOLC/sokol_app.h	/^    #define SOKOL_API_IMPL$/;"	M
SOKOL_API_IMPL	$SOKOLC/sokol_args.h	/^    #define SOKOL_API_IMPL$/;"	d
SOKOL_API_IMPL	$SOKOLC/sokol_audio.h	/^    #define SOKOL_API_IMPL$/;"	M	struct:saudio_desc
SOKOL_API_IMPL	$SOKOLC/sokol_fetch.h	/^    #define SOKOL_API_IMPL$/;"	d
SOKOL_API_IMPL	$SOKOLC/sokol_gfx.h	/^    #define SOKOL_API_IMPL$/;"	d
SOKOL_API_IMPL	$SOKOLC/sokol_glue.h	/^    #define SOKOL_API_IMPL$/;"	d
SOKOL_API_IMPL	$SOKOLC/sokol_log.h	/^    #define SOKOL_API_IMPL$/;"	d
SOKOL_API_IMPL	$SOKOLC/sokol_time.h	/^    #define SOKOL_API_IMPL$/;"	d
SOKOL_API_IMPL	$SOKOLC/util/sokol_color.h	/^    #define SOKOL_API_IMPL$/;"	d
SOKOL_API_IMPL	$SOKOLC/util/sokol_debugtext.h	/^    #define SOKOL_API_IMPL$/;"	d
SOKOL_API_IMPL	$SOKOLC/util/sokol_fontstash.h	/^    #define SOKOL_API_IMPL$/;"	d
SOKOL_API_IMPL	$SOKOLC/util/sokol_gfx_imgui.h	/^#define SOKOL_API_IMPL$/;"	d
SOKOL_API_IMPL	$SOKOLC/util/sokol_gl.h	/^    #define SOKOL_API_IMPL$/;"	d
SOKOL_API_IMPL	$SOKOLC/util/sokol_imgui.h	/^#define SOKOL_API_IMPL$/;"	d
SOKOL_API_IMPL	$SOKOLC/util/sokol_memtrack.h	/^    #define SOKOL_API_IMPL$/;"	d
SOKOL_API_IMPL	$SOKOLC/util/sokol_nuklear.h	/^#define SOKOL_API_IMPL$/;"	d
SOKOL_API_IMPL	$SOKOLC/util/sokol_shape.h	/^    #define SOKOL_API_IMPL$/;"	d
SOKOL_API_IMPL	$SOKOLC/util/sokol_spine.h	/^    #define SOKOL_API_IMPL$/;"	d
SOKOL_APP_API_DECL	$SOKOLC/sokol_app.h	/^#define SOKOL_APP_API_DECL extern$/;"	M
SOKOL_APP_IMPL	$SOKOLC/sokol_app.h	/^#define SOKOL_APP_IMPL$/;"	M
SOKOL_APP_IMPL_INCLUDED	$SOKOLC/sokol_app.h	/^#define SOKOL_APP_IMPL_INCLUDED (1)$/;"	M
SOKOL_APP_INCLUDED	$SOKOLC/sokol_app.h	/^#define SOKOL_APP_INCLUDED (1)$/;"	M
SOKOL_ARGS_API_DECL	$SOKOLC/sokol_args.h	/^#define SOKOL_ARGS_API_DECL /;"	d
SOKOL_ARGS_IMPL	$SOKOLC/sokol_args.h	/^#define SOKOL_ARGS_IMPL$/;"	d
SOKOL_ARGS_IMPL_INCLUDED	$SOKOLC/sokol_args.h	/^#define SOKOL_ARGS_IMPL_INCLUDED /;"	d
SOKOL_ARGS_INCLUDED	$SOKOLC/sokol_args.h	/^#define SOKOL_ARGS_INCLUDED /;"	d
SOKOL_ASSERT	$SOKOLC/sokol_app.h	/^    #define SOKOL_ASSERT(c) assert(c)$/;"	M
SOKOL_ASSERT	$SOKOLC/sokol_args.h	/^    #define SOKOL_ASSERT(/;"	d	signature:(c)
SOKOL_ASSERT	$SOKOLC/sokol_audio.h	/^    #define SOKOL_ASSERT(c) assert(c)$/;"	M	struct:saudio_desc
SOKOL_ASSERT	$SOKOLC/sokol_fetch.h	/^    #define SOKOL_ASSERT(/;"	d	signature:(c)
SOKOL_ASSERT	$SOKOLC/sokol_gfx.h	/^    #define SOKOL_ASSERT(/;"	d	signature:(c)
SOKOL_ASSERT	$SOKOLC/sokol_log.h	/^    #define SOKOL_ASSERT(/;"	d	signature:(c)
SOKOL_ASSERT	$SOKOLC/sokol_time.h	/^    #define SOKOL_ASSERT(/;"	d	signature:(c)
SOKOL_ASSERT	$SOKOLC/util/sokol_color.h	/^    #define SOKOL_ASSERT(/;"	d	signature:(c)
SOKOL_ASSERT	$SOKOLC/util/sokol_debugtext.h	/^    #define SOKOL_ASSERT(/;"	d	signature:(c)
SOKOL_ASSERT	$SOKOLC/util/sokol_fontstash.h	/^    #define SOKOL_ASSERT(/;"	d	signature:(c)
SOKOL_ASSERT	$SOKOLC/util/sokol_gfx_imgui.h	/^    #define SOKOL_ASSERT(/;"	d	signature:(c)
SOKOL_ASSERT	$SOKOLC/util/sokol_gl.h	/^    #define SOKOL_ASSERT(/;"	d	signature:(c)
SOKOL_ASSERT	$SOKOLC/util/sokol_imgui.h	/^    #define SOKOL_ASSERT(/;"	d	signature:(c)
SOKOL_ASSERT	$SOKOLC/util/sokol_nuklear.h	/^    #define SOKOL_ASSERT(/;"	d	signature:(c)
SOKOL_ASSERT	$SOKOLC/util/sokol_shape.h	/^    #define SOKOL_ASSERT(/;"	d	signature:(c)
SOKOL_ASSERT	$SOKOLC/util/sokol_spine.h	/^    #define SOKOL_ASSERT(/;"	d	signature:(c)
SOKOL_AUDIO_API_DECL	$SOKOLC/sokol_audio.h	/^#define SOKOL_AUDIO_API_DECL extern$/;"	M
SOKOL_AUDIO_IMPL	$SOKOLC/sokol_audio.h	/^#define SOKOL_AUDIO_IMPL$/;"	M
SOKOL_AUDIO_IMPL_INCLUDED	$SOKOLC/sokol_audio.h	/^#define SOKOL_AUDIO_IMPL_INCLUDED (1)$/;"	M	struct:saudio_desc
SOKOL_AUDIO_INCLUDED	$SOKOLC/sokol_audio.h	/^#define SOKOL_AUDIO_INCLUDED (1)$/;"	M
SOKOL_COLOR_API_DECL	$SOKOLC/util/sokol_color.h	/^#define SOKOL_COLOR_API_DECL /;"	d
SOKOL_COLOR_CONSTEXPR	$SOKOLC/util/sokol_color.h	/^#define SOKOL_COLOR_CONSTEXPR /;"	d
SOKOL_COLOR_IMPL	$SOKOLC/util/sokol_color.h	/^#define SOKOL_COLOR_IMPL$/;"	d
SOKOL_COLOR_IMPL_INCLUDED	$SOKOLC/util/sokol_color.h	/^#define SOKOL_COLOR_IMPL_INCLUDED /;"	d
SOKOL_COLOR_INCLUDED	$SOKOLC/util/sokol_color.h	/^#define SOKOL_COLOR_INCLUDED /;"	d
SOKOL_DEBUG	$SOKOLC/sokol_app.h	/^        #define SOKOL_DEBUG$/;"	M
SOKOL_DEBUG	$SOKOLC/sokol_args.h	/^        #define SOKOL_DEBUG$/;"	d
SOKOL_DEBUG	$SOKOLC/sokol_audio.h	/^        #define SOKOL_DEBUG$/;"	M	struct:saudio_desc
SOKOL_DEBUG	$SOKOLC/sokol_fetch.h	/^        #define SOKOL_DEBUG$/;"	d
SOKOL_DEBUG	$SOKOLC/sokol_gfx.h	/^        #define SOKOL_DEBUG$/;"	d
SOKOL_DEBUG	$SOKOLC/sokol_log.h	/^        #define SOKOL_DEBUG$/;"	d
SOKOL_DEBUG	$SOKOLC/util/sokol_debugtext.h	/^        #define SOKOL_DEBUG$/;"	d
SOKOL_DEBUG	$SOKOLC/util/sokol_fontstash.h	/^        #define SOKOL_DEBUG$/;"	d
SOKOL_DEBUG	$SOKOLC/util/sokol_gl.h	/^        #define SOKOL_DEBUG$/;"	d
SOKOL_DEBUG	$SOKOLC/util/sokol_imgui.h	/^        #define SOKOL_DEBUG$/;"	d
SOKOL_DEBUG	$SOKOLC/util/sokol_memtrack.h	/^        #define SOKOL_DEBUG$/;"	d
SOKOL_DEBUG	$SOKOLC/util/sokol_nuklear.h	/^        #define SOKOL_DEBUG$/;"	d
SOKOL_DEBUG	$SOKOLC/util/sokol_spine.h	/^        #define SOKOL_DEBUG /;"	d
SOKOL_DEBUGTEXT_API_DECL	$SOKOLC/util/sokol_debugtext.h	/^#define SOKOL_DEBUGTEXT_API_DECL /;"	d
SOKOL_DEBUGTEXT_IMPL	$SOKOLC/util/sokol_debugtext.h	/^#define SOKOL_DEBUGTEXT_IMPL$/;"	d
SOKOL_DEBUGTEXT_IMPL_INCLUDED	$SOKOLC/util/sokol_debugtext.h	/^#define SOKOL_DEBUGTEXT_IMPL_INCLUDED /;"	d
SOKOL_DEBUGTEXT_INCLUDED	$SOKOLC/util/sokol_debugtext.h	/^#define SOKOL_DEBUGTEXT_INCLUDED /;"	d
SOKOL_DEBUGTEXT_PRINTF_ATTR	$SOKOLC/util/sokol_debugtext.h	/^#define SOKOL_DEBUGTEXT_PRINTF_ATTR$/;"	d
SOKOL_FETCH_API_DECL	$SOKOLC/sokol_fetch.h	/^#define SOKOL_FETCH_API_DECL /;"	d
SOKOL_FETCH_IMPL	$SOKOLC/sokol_fetch.h	/^#define SOKOL_FETCH_IMPL$/;"	d
SOKOL_FETCH_IMPL_INCLUDED	$SOKOLC/sokol_fetch.h	/^#define SOKOL_FETCH_IMPL_INCLUDED /;"	d
SOKOL_FETCH_INCLUDED	$SOKOLC/sokol_fetch.h	/^#define SOKOL_FETCH_INCLUDED /;"	d
SOKOL_FONTSTASH_API_DECL	$SOKOLC/util/sokol_fontstash.h	/^#define SOKOL_FONTSTASH_API_DECL /;"	d
SOKOL_FONTSTASH_IMPL	$SOKOLC/util/sokol_fontstash.h	/^#define SOKOL_FONTSTASH_IMPL$/;"	d
SOKOL_FONTSTASH_IMPL_INCLUDED	$SOKOLC/util/sokol_fontstash.h	/^#define SOKOL_FONTSTASH_IMPL_INCLUDED /;"	d
SOKOL_FONTSTASH_INCLUDED	$SOKOLC/util/sokol_fontstash.h	/^#define SOKOL_FONTSTASH_INCLUDED /;"	d
SOKOL_GFX_API_DECL	$SOKOLC/sokol_gfx.h	/^#define SOKOL_GFX_API_DECL /;"	d
SOKOL_GFX_IMGUI_API_DECL	$SOKOLC/util/sokol_gfx_imgui.h	/^#define SOKOL_GFX_IMGUI_API_DECL /;"	d
SOKOL_GFX_IMGUI_IMPL	$SOKOLC/util/sokol_gfx_imgui.h	/^#define SOKOL_GFX_IMGUI_IMPL$/;"	d
SOKOL_GFX_IMGUI_IMPL_INCLUDED	$SOKOLC/util/sokol_gfx_imgui.h	/^#define SOKOL_GFX_IMGUI_IMPL_INCLUDED /;"	d
SOKOL_GFX_IMGUI_INCLUDED	$SOKOLC/util/sokol_gfx_imgui.h	/^#define SOKOL_GFX_IMGUI_INCLUDED /;"	d
SOKOL_GFX_IMPL	$SOKOLC/sokol_gfx.h	/^#define SOKOL_GFX_IMPL$/;"	d
SOKOL_GFX_IMPL_INCLUDED	$SOKOLC/sokol_gfx.h	/^#define SOKOL_GFX_IMPL_INCLUDED /;"	d
SOKOL_GFX_INCLUDED	$SOKOLC/sokol_gfx.h	/^#define SOKOL_GFX_INCLUDED /;"	d
SOKOL_GLCORE33	$SOKOLC/sokol_app.h	/^#if defined(SOKOL_GLCORE33)$/;"	C	implementation:_sapp_macos_view
SOKOL_GLUE_API_DECL	$SOKOLC/sokol_glue.h	/^#define SOKOL_GLUE_API_DECL /;"	d
SOKOL_GLUE_IMPL	$SOKOLC/sokol_glue.h	/^#define SOKOL_GLUE_IMPL$/;"	d
SOKOL_GLUE_IMPL_INCLUDED	$SOKOLC/sokol_glue.h	/^#define SOKOL_GLUE_IMPL_INCLUDED /;"	d
SOKOL_GLUE_INCLUDED	$SOKOLC/sokol_glue.h	/^#define SOKOL_GLUE_INCLUDED$/;"	d
SOKOL_GL_API_DECL	$SOKOLC/util/sokol_gl.h	/^#define SOKOL_GL_API_DECL /;"	d
SOKOL_GL_IMPL	$SOKOLC/util/sokol_gl.h	/^#define SOKOL_GL_IMPL$/;"	d
SOKOL_GL_IMPL_INCLUDED	$SOKOLC/util/sokol_gl.h	/^#define SOKOL_GL_IMPL_INCLUDED /;"	d
SOKOL_GL_INCLUDED	$SOKOLC/util/sokol_gl.h	/^#define SOKOL_GL_INCLUDED /;"	d
SOKOL_IMGUI_API_DECL	$SOKOLC/util/sokol_imgui.h	/^#define SOKOL_IMGUI_API_DECL /;"	d
SOKOL_IMGUI_IMPL	$SOKOLC/util/sokol_imgui.h	/^#define SOKOL_IMGUI_IMPL$/;"	d
SOKOL_IMGUI_IMPL_INCLUDED	$SOKOLC/util/sokol_imgui.h	/^#define SOKOL_IMGUI_IMPL_INCLUDED /;"	d
SOKOL_IMGUI_INCLUDED	$SOKOLC/util/sokol_imgui.h	/^#define SOKOL_IMGUI_INCLUDED /;"	d
SOKOL_LOG_API_DECL	$SOKOLC/sokol_log.h	/^#define SOKOL_LOG_API_DECL /;"	d
SOKOL_LOG_IMPL	$SOKOLC/sokol_log.h	/^#define SOKOL_LOG_IMPL$/;"	d
SOKOL_LOG_IMPL_INCLUDED	$SOKOLC/sokol_log.h	/^#define SOKOL_LOG_IMPL_INCLUDED /;"	d
SOKOL_LOG_INCLUDED	$SOKOLC/sokol_log.h	/^#define SOKOL_LOG_INCLUDED /;"	d
SOKOL_MEMTRACK_API_DECL	$SOKOLC/util/sokol_memtrack.h	/^#define SOKOL_MEMTRACK_API_DECL /;"	d
SOKOL_MEMTRACK_IMPL	$SOKOLC/util/sokol_memtrack.h	/^#define SOKOL_MEMTRACK_IMPL$/;"	d
SOKOL_MEMTRACK_IMPL_INCLUDED	$SOKOLC/util/sokol_memtrack.h	/^#define SOKOL_MEMTRACK_IMPL_INCLUDED /;"	d
SOKOL_MEMTRACK_INCLUDED	$SOKOLC/util/sokol_memtrack.h	/^#define SOKOL_MEMTRACK_INCLUDED /;"	d
SOKOL_METAL	$SOKOLC/sokol_app.h	/^#if defined(SOKOL_METAL)$/;"	C	implementation:_sapp_macos_window_delegate
SOKOL_NUKLEAR_API_DECL	$SOKOLC/util/sokol_nuklear.h	/^#define SOKOL_NUKLEAR_API_DECL /;"	d
SOKOL_NUKLEAR_IMPL	$SOKOLC/util/sokol_nuklear.h	/^#define SOKOL_NUKLEAR_IMPL$/;"	d
SOKOL_NUKLEAR_IMPL_INCLUDED	$SOKOLC/util/sokol_nuklear.h	/^#define SOKOL_NUKLEAR_IMPL_INCLUDED /;"	d
SOKOL_NUKLEAR_INCLUDED	$SOKOLC/util/sokol_nuklear.h	/^#define SOKOL_NUKLEAR_INCLUDED /;"	d
SOKOL_SHAPE_API_DECL	$SOKOLC/util/sokol_shape.h	/^#define SOKOL_SHAPE_API_DECL /;"	d
SOKOL_SHAPE_IMPL	$SOKOLC/util/sokol_shape.h	/^#define SOKOL_SHAPE_IMPL$/;"	d
SOKOL_SHAPE_IMPL_INCLUDED	$SOKOLC/util/sokol_shape.h	/^#define SOKOL_SHAPE_IMPL_INCLUDED /;"	d
SOKOL_SHAPE_INCLUDED	$SOKOLC/util/sokol_shape.h	/^#define SOKOL_SHAPE_INCLUDED$/;"	d
SOKOL_SPINE_API_DECL	$SOKOLC/util/sokol_spine.h	/^#define SOKOL_SPINE_API_DECL /;"	d
SOKOL_SPINE_IMPL	$SOKOLC/util/sokol_spine.h	/^#define SOKOL_SPINE_IMPL$/;"	d
SOKOL_SPINE_IMPL_INCLUDED	$SOKOLC/util/sokol_spine.h	/^#define SOKOL_SPINE_IMPL_INCLUDED /;"	d
SOKOL_SPINE_INCLUDED	$SOKOLC/util/sokol_spine.h	/^#define SOKOL_SPINE_INCLUDED /;"	d
SOKOL_TIME_API_DECL	$SOKOLC/sokol_time.h	/^#define SOKOL_TIME_API_DECL /;"	d
SOKOL_TIME_IMPL	$SOKOLC/sokol_time.h	/^#define SOKOL_TIME_IMPL$/;"	d
SOKOL_TIME_IMPL_INCLUDED	$SOKOLC/sokol_time.h	/^#define SOKOL_TIME_IMPL_INCLUDED /;"	d
SOKOL_TIME_INCLUDED	$SOKOLC/sokol_time.h	/^#define SOKOL_TIME_INCLUDED /;"	d
SOKOL_UNREACHABLE	$SOKOLC/sokol_app.h	/^    #define SOKOL_UNREACHABLE SOKOL_ASSERT(false)$/;"	M
SOKOL_UNREACHABLE	$SOKOLC/sokol_gfx.h	/^    #define SOKOL_UNREACHABLE /;"	d
SOKOL_UNREACHABLE	$SOKOLC/util/sokol_debugtext.h	/^    #define SOKOL_UNREACHABLE /;"	d
SOKOL_UNREACHABLE	$SOKOLC/util/sokol_fontstash.h	/^    #define SOKOL_UNREACHABLE /;"	d
SOKOL_UNREACHABLE	$SOKOLC/util/sokol_gfx_imgui.h	/^    #define SOKOL_UNREACHABLE /;"	d
SOKOL_UNREACHABLE	$SOKOLC/util/sokol_spine.h	/^    #define SOKOL_UNREACHABLE /;"	d
SOKOL_UNUSED	$SOKOLC/util/sokol_spine.h	/^    #define SOKOL_UNUSED(/;"	d	signature:(x)
SOKOL_VSNPRINTF	$SOKOLC/util/sokol_debugtext.h	/^#define SOKOL_VSNPRINTF /;"	d
SSHAPE_RANGE	$SOKOLC/util/sokol_shape.h	/^#define SSHAPE_RANGE(/;"	d	signature:(x)
SSPINE_INVALID_ID	$SOKOLC/util/sokol_spine.h	/^    SSPINE_INVALID_ID = 0,$/;"	e	enum:__anon5007022e0103
SSPINE_MAX_SKINSET_SKINS	$SOKOLC/util/sokol_spine.h	/^    SSPINE_MAX_SKINSET_SKINS = 32,$/;"	e	enum:__anon5007022e0103
SSPINE_MAX_STRING_SIZE	$SOKOLC/util/sokol_spine.h	/^    SSPINE_MAX_STRING_SIZE = 61,    \/\/ see sspine_string struct$/;"	e	enum:__anon5007022e0103
SSPINE_RESOURCESTATE_ALLOC	$SOKOLC/util/sokol_spine.h	/^    SSPINE_RESOURCESTATE_ALLOC,$/;"	e	enum:sspine_resource_state
SSPINE_RESOURCESTATE_FAILED	$SOKOLC/util/sokol_spine.h	/^    SSPINE_RESOURCESTATE_FAILED,$/;"	e	enum:sspine_resource_state
SSPINE_RESOURCESTATE_INITIAL	$SOKOLC/util/sokol_spine.h	/^    SSPINE_RESOURCESTATE_INITIAL,$/;"	e	enum:sspine_resource_state
SSPINE_RESOURCESTATE_INVALID	$SOKOLC/util/sokol_spine.h	/^    SSPINE_RESOURCESTATE_INVALID,$/;"	e	enum:sspine_resource_state
SSPINE_RESOURCESTATE_VALID	$SOKOLC/util/sokol_spine.h	/^    SSPINE_RESOURCESTATE_VALID,$/;"	e	enum:sspine_resource_state
SwapBuffers	$SOKOLC/sokol_app.h	/^    PFNGLXSWAPBUFFERSPROC SwapBuffers;$/;"	E
SwapIntervalEXT	$SOKOLC/sokol_app.h	/^    PFNWGLSWAPINTERVALEXTPROC SwapIntervalEXT;$/;"	E	enum:MONITOR_DPI_TYPE
SwapIntervalMESA	$SOKOLC/sokol_app.h	/^    PFNGLXSWAPINTERVALMESAPROC SwapIntervalMESA;$/;"	E
UTF8_STRING	$SOKOLC/sokol_app.h	/^    Atom UTF8_STRING;$/;"	E
WGL_ACCELERATION_ARB	$SOKOLC/sokol_app.h	/^#define WGL_ACCELERATION_ARB 0x2003$/;"	M	enum:MONITOR_DPI_TYPE
WGL_ALPHA_BITS_ARB	$SOKOLC/sokol_app.h	/^#define WGL_ALPHA_BITS_ARB 0x201b$/;"	M	enum:MONITOR_DPI_TYPE
WGL_BLUE_BITS_ARB	$SOKOLC/sokol_app.h	/^#define WGL_BLUE_BITS_ARB 0x2019$/;"	M	enum:MONITOR_DPI_TYPE
WGL_CONTEXT_CORE_PROFILE_BIT_ARB	$SOKOLC/sokol_app.h	/^#define WGL_CONTEXT_CORE_PROFILE_BIT_ARB 0x00000001$/;"	M	enum:MONITOR_DPI_TYPE
WGL_CONTEXT_DEBUG_BIT_ARB	$SOKOLC/sokol_app.h	/^#define WGL_CONTEXT_DEBUG_BIT_ARB 0x00000001$/;"	M	enum:MONITOR_DPI_TYPE
WGL_CONTEXT_FLAGS_ARB	$SOKOLC/sokol_app.h	/^#define WGL_CONTEXT_FLAGS_ARB 0x2094$/;"	M	enum:MONITOR_DPI_TYPE
WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	$SOKOLC/sokol_app.h	/^#define WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB 0x00000002$/;"	M	enum:MONITOR_DPI_TYPE
WGL_CONTEXT_MAJOR_VERSION_ARB	$SOKOLC/sokol_app.h	/^#define WGL_CONTEXT_MAJOR_VERSION_ARB 0x2091$/;"	M	enum:MONITOR_DPI_TYPE
WGL_CONTEXT_MINOR_VERSION_ARB	$SOKOLC/sokol_app.h	/^#define WGL_CONTEXT_MINOR_VERSION_ARB 0x2092$/;"	M	enum:MONITOR_DPI_TYPE
WGL_CONTEXT_PROFILE_MASK_ARB	$SOKOLC/sokol_app.h	/^#define WGL_CONTEXT_PROFILE_MASK_ARB 0x9126$/;"	M	enum:MONITOR_DPI_TYPE
WGL_DEPTH_BITS_ARB	$SOKOLC/sokol_app.h	/^#define WGL_DEPTH_BITS_ARB 0x2022$/;"	M	enum:MONITOR_DPI_TYPE
WGL_DOUBLE_BUFFER_ARB	$SOKOLC/sokol_app.h	/^#define WGL_DOUBLE_BUFFER_ARB 0x2011$/;"	M	enum:MONITOR_DPI_TYPE
WGL_DRAW_TO_WINDOW_ARB	$SOKOLC/sokol_app.h	/^#define WGL_DRAW_TO_WINDOW_ARB 0x2001$/;"	M	enum:MONITOR_DPI_TYPE
WGL_GREEN_BITS_ARB	$SOKOLC/sokol_app.h	/^#define WGL_GREEN_BITS_ARB 0x2017$/;"	M	enum:MONITOR_DPI_TYPE
WGL_NO_ACCELERATION_ARB	$SOKOLC/sokol_app.h	/^#define WGL_NO_ACCELERATION_ARB 0x2025$/;"	M	enum:MONITOR_DPI_TYPE
WGL_NUMBER_PIXEL_FORMATS_ARB	$SOKOLC/sokol_app.h	/^#define WGL_NUMBER_PIXEL_FORMATS_ARB 0x2000$/;"	M	enum:MONITOR_DPI_TYPE
WGL_PIXEL_TYPE_ARB	$SOKOLC/sokol_app.h	/^#define WGL_PIXEL_TYPE_ARB 0x2013$/;"	M	enum:MONITOR_DPI_TYPE
WGL_RED_BITS_ARB	$SOKOLC/sokol_app.h	/^#define WGL_RED_BITS_ARB 0x2015$/;"	M	enum:MONITOR_DPI_TYPE
WGL_SAMPLES_ARB	$SOKOLC/sokol_app.h	/^#define WGL_SAMPLES_ARB 0x2042$/;"	M	enum:MONITOR_DPI_TYPE
WGL_STENCIL_BITS_ARB	$SOKOLC/sokol_app.h	/^#define WGL_STENCIL_BITS_ARB 0x2023$/;"	M	enum:MONITOR_DPI_TYPE
WGL_SUPPORT_OPENGL_ARB	$SOKOLC/sokol_app.h	/^#define WGL_SUPPORT_OPENGL_ARB 0x2010$/;"	M	enum:MONITOR_DPI_TYPE
WGL_TYPE_RGBA_ARB	$SOKOLC/sokol_app.h	/^#define WGL_TYPE_RGBA_ARB 0x202b$/;"	M	enum:MONITOR_DPI_TYPE
WIN32_LEAN_AND_MEAN	$SOKOLC/sokol_app.h	/^        #define WIN32_LEAN_AND_MEAN$/;"	M
WIN32_LEAN_AND_MEAN	$SOKOLC/sokol_audio.h	/^    #define WIN32_LEAN_AND_MEAN$/;"	M	struct:saudio_desc
WIN32_LEAN_AND_MEAN	$SOKOLC/sokol_fetch.h	/^    #define WIN32_LEAN_AND_MEAN$/;"	d
WIN32_LEAN_AND_MEAN	$SOKOLC/sokol_gfx.h	/^    #define WIN32_LEAN_AND_MEAN$/;"	d
WIN32_LEAN_AND_MEAN	$SOKOLC/sokol_log.h	/^    #define WIN32_LEAN_AND_MEAN$/;"	d
WIN32_LEAN_AND_MEAN	$SOKOLC/sokol_time.h	/^#define WIN32_LEAN_AND_MEAN$/;"	d
WM_DELETE_WINDOW	$SOKOLC/sokol_app.h	/^    Atom WM_DELETE_WINDOW;$/;"	E
WM_DPICHANGED	$SOKOLC/sokol_app.h	/^        #define WM_DPICHANGED (0x02E0)$/;"	M
WM_MOUSEHWHEEL	$SOKOLC/sokol_app.h	/^        #define WM_MOUSEHWHEEL (0x020E)$/;"	M
WM_PROTOCOLS	$SOKOLC/sokol_app.h	/^    Atom WM_PROTOCOLS;$/;"	E
WM_STATE	$SOKOLC/sokol_app.h	/^    Atom WM_STATE;$/;"	E
WinMain	$SOKOLC/sokol_app.h	/^int WINAPI WinMain(_In_ HINSTANCE hInstance, _In_opt_ HINSTANCE hPrevInstance, _In_ LPSTR lpCmdL/;"	f
XdndActionCopy	$SOKOLC/sokol_app.h	/^    Atom XdndActionCopy;$/;"	E
XdndAware	$SOKOLC/sokol_app.h	/^    Atom XdndAware;$/;"	E
XdndDrop	$SOKOLC/sokol_app.h	/^    Atom XdndDrop;$/;"	E
XdndEnter	$SOKOLC/sokol_app.h	/^    Atom XdndEnter;$/;"	E
XdndFinished	$SOKOLC/sokol_app.h	/^    Atom XdndFinished;$/;"	E
XdndPosition	$SOKOLC/sokol_app.h	/^    Atom XdndPosition;$/;"	E
XdndSelection	$SOKOLC/sokol_app.h	/^    Atom XdndSelection;$/;"	E
XdndStatus	$SOKOLC/sokol_app.h	/^    Atom XdndStatus;$/;"	E
XdndTypeList	$SOKOLC/sokol_app.h	/^    Atom XdndTypeList;$/;"	E
acceptsFirstResponder	$SOKOLC/sokol_app.h	/^- (BOOL)acceptsFirstResponder {$/;"	m	implementation:_sapp_macos_view	signature:()	category:NSRect
accum	$SOKOLC/sokol_app.h	/^    double accum;$/;"	E
action	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_pass_action action;$/;"	m	struct:sg_imgui_args_begin_pass_t	typeref:typename:sg_pass_action
active_buffer	$SOKOLC/sokol_audio.h	/^    int active_buffer;$/;"	E
active_context	$SOKOLC/sokol_gfx.h	/^    sg_context active_context;$/;"	m	struct:__anon13e02ee77608	typeref:typename:sg_context
active_slot	$SOKOLC/sokol_gfx.h	/^    int active_slot;$/;"	m	struct:sg_mtl_image_info	typeref:typename:int
activity	$SOKOLC/sokol_app.h	/^    ANativeActivity* activity;$/;"	E
adapter	$SOKOLC/sokol_app.h	/^    WGPUAdapter adapter;$/;"	E
alloc_buffer	$SOKOLC/sokol_gfx.h	/^    void (*alloc_buffer)(sg_buffer result, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_buffer result,void * user_data)
alloc_buffer	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_alloc_buffer_t alloc_buffer;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_alloc_buffer_t
alloc_fn	$SOKOLC/sokol_args.h	/^    void* (*alloc_fn)(size_t size, void* user_data);$/;"	m	struct:sargs_allocator	typeref:typename:void * (*)(size_t size,void * user_data)
alloc_fn	$SOKOLC/sokol_fetch.h	/^    void* (*alloc_fn)(size_t size, void* user_data);$/;"	m	struct:sfetch_allocator_t	typeref:typename:void * (*)(size_t size,void * user_data)
alloc_fn	$SOKOLC/sokol_gfx.h	/^    void* (*alloc_fn)(size_t size, void* user_data);$/;"	m	struct:sg_allocator	typeref:typename:void * (*)(size_t size,void * user_data)
alloc_fn	$SOKOLC/util/sokol_debugtext.h	/^    void* (*alloc_fn)(size_t size, void* user_data);$/;"	m	struct:sdtx_allocator_t	typeref:typename:void * (*)(size_t size,void * user_data)
alloc_fn	$SOKOLC/util/sokol_fontstash.h	/^    void* (*alloc_fn)(size_t size, void* user_data);$/;"	m	struct:sfons_allocator_t	typeref:typename:void * (*)(size_t size,void * user_data)
alloc_fn	$SOKOLC/util/sokol_gfx_imgui.h	/^    void* (*alloc_fn)(size_t size, void* user_data);$/;"	m	struct:sg_imgui_allocator_t	typeref:typename:void * (*)(size_t size,void * user_data)
alloc_fn	$SOKOLC/util/sokol_gl.h	/^    void* (*alloc_fn)(size_t size, void* user_data);$/;"	m	struct:sgl_allocator_t	typeref:typename:void * (*)(size_t size,void * user_data)
alloc_fn	$SOKOLC/util/sokol_imgui.h	/^    void* (*alloc_fn)(size_t size, void* user_data);$/;"	m	struct:simgui_allocator_t	typeref:typename:void * (*)(size_t size,void * user_data)
alloc_fn	$SOKOLC/util/sokol_nuklear.h	/^    void* (*alloc_fn)(size_t size, void* user_data);$/;"	m	struct:snk_allocator_t	typeref:typename:void * (*)(size_t size,void * user_data)
alloc_fn	$SOKOLC/util/sokol_spine.h	/^    void* (*alloc_fn)(size_t size, void* user_data);$/;"	m	struct:sspine_allocator	typeref:typename:void * (*)(size_t size,void * user_data)
alloc_image	$SOKOLC/sokol_gfx.h	/^    void (*alloc_image)(sg_image result, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_image result,void * user_data)
alloc_image	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_alloc_image_t alloc_image;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_alloc_image_t
alloc_pass	$SOKOLC/sokol_gfx.h	/^    void (*alloc_pass)(sg_pass result, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_pass result,void * user_data)
alloc_pass	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_alloc_pass_t alloc_pass;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_alloc_pass_t
alloc_pipeline	$SOKOLC/sokol_gfx.h	/^    void (*alloc_pipeline)(sg_pipeline result, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_pipeline result,void * user_data)
alloc_pipeline	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_alloc_pipeline_t alloc_pipeline;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_alloc_pipeline_t
alloc_sampler	$SOKOLC/sokol_gfx.h	/^    void (*alloc_sampler)(sg_sampler result, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_sampler result,void * user_data)
alloc_sampler	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_alloc_sampler_t alloc_sampler;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_alloc_sampler_t
alloc_shader	$SOKOLC/sokol_gfx.h	/^    void (*alloc_shader)(sg_shader result, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_shader result,void * user_data)
alloc_shader	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_alloc_shader_t alloc_shader;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_alloc_shader_t
allocator	$SOKOLC/sokol_args.h	/^    sargs_allocator allocator;$/;"	m	struct:sargs_desc	typeref:typename:sargs_allocator
allocator	$SOKOLC/sokol_audio.h	/^    saudio_allocator allocator;     \/\/ optional allocation override functions$/;"	E	struct:saudio_desc
allocator	$SOKOLC/sokol_fetch.h	/^    sfetch_allocator_t allocator;   \/\/ optional memory allocation overrides (default: malloc\//;"	m	struct:sfetch_desc_t	typeref:typename:sfetch_allocator_t
allocator	$SOKOLC/sokol_gfx.h	/^    sg_allocator allocator;$/;"	m	struct:sg_desc	typeref:typename:sg_allocator
allocator	$SOKOLC/util/sokol_debugtext.h	/^    sdtx_allocator_t allocator;             \/\/ optional memory allocation overrides (default: /;"	m	struct:sdtx_desc_t	typeref:typename:sdtx_allocator_t
allocator	$SOKOLC/util/sokol_fontstash.h	/^    sfons_allocator_t allocator;    \/\/ optional memory allocation overrides$/;"	m	struct:sfons_desc_t	typeref:typename:sfons_allocator_t
allocator	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_allocator_t allocator; \/\/ optional memory allocation overrides (default: malloc\//;"	m	struct:sg_imgui_desc_t	typeref:typename:sg_imgui_allocator_t
allocator	$SOKOLC/util/sokol_gl.h	/^    sgl_allocator_t allocator;      \/\/ optional memory allocation overrides (default: malloc\//;"	m	struct:sgl_desc_t	typeref:typename:sgl_allocator_t
allocator	$SOKOLC/util/sokol_imgui.h	/^    simgui_allocator_t allocator;   \/\/ optional memory allocation overrides (default: malloc\//;"	m	struct:simgui_desc_t	typeref:typename:simgui_allocator_t
allocator	$SOKOLC/util/sokol_nuklear.h	/^    snk_allocator_t allocator;          \/\/ optional memory allocation overrides (default: mall/;"	m	struct:snk_desc_t	typeref:typename:snk_allocator_t
allocator	$SOKOLC/util/sokol_spine.h	/^    sspine_allocator allocator;     \/\/ optional allocation override functions (default: malloc/;"	m	struct:sspine_desc	typeref:typename:sspine_allocator
alpha_bits	$SOKOLC/sokol_app.h	/^    int         alpha_bits;$/;"	E
alpha_to_coverage_enabled	$SOKOLC/sokol_gfx.h	/^    bool alpha_to_coverage_enabled;$/;"	m	struct:sg_pipeline_desc	typeref:typename:bool
android	$SOKOLC/sokol_app.h	/^        _sapp_android_t android;$/;"	E
android_tooltype	$SOKOLC/sokol_app.h	/^    sapp_android_tooltype android_tooltype; \/\/ only valid on Android$/;"	E	struct:sapp_touchpoint
anim_default_mix	$SOKOLC/util/sokol_spine.h	/^    float anim_default_mix;$/;"	m	struct:sspine_skeleton_desc	typeref:typename:float
app_dlg	$SOKOLC/sokol_app.h	/^    _sapp_macos_app_delegate* app_dlg;$/;"	E
append_buffer	$SOKOLC/sokol_gfx.h	/^    void (*append_buffer)(sg_buffer buf, const sg_range* data, int result, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_buffer buf,const sg_range * data,int result,void * user_data)
append_buffer	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_append_buffer_t append_buffer;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_append_buffer_t
append_frame_index	$SOKOLC/sokol_gfx.h	/^    uint32_t append_frame_index;$/;"	m	struct:__anon13e02ee70608	typeref:typename:uint32_t
append_overflow	$SOKOLC/sokol_gfx.h	/^    bool append_overflow;$/;"	m	struct:__anon13e02ee70608	typeref:typename:bool
append_pos	$SOKOLC/sokol_gfx.h	/^    int append_pos;$/;"	m	struct:__anon13e02ee70608	typeref:typename:int
application:didFinishLaunchingWithOptions:	$SOKOLC/sokol_app.h	/^- (BOOL)application:(UIApplication*)application didFinishLaunchingWithOptions:(NSDictionary*)lau/;"	m	implementation:_sapp_app_delegate	signature:(UIApplication*,NSDictionary*)
applicationDidBecomeActive:	$SOKOLC/sokol_app.h	/^- (void)applicationDidBecomeActive:(UIApplication *)application {$/;"	m	implementation:_sapp_app_delegate	signature:(UIApplication*)
applicationDidFinishLaunching:	$SOKOLC/sokol_app.h	/^- (void)applicationDidFinishLaunching:(NSNotification*)aNotification {$/;"	m	implementation:_sapp_macos_app_delegate	signature:(NSNotification*)
applicationShouldTerminateAfterLastWindowClosed:	$SOKOLC/sokol_app.h	/^- (BOOL)applicationShouldTerminateAfterLastWindowClosed:(NSApplication*)sender {$/;"	m	implementation:_sapp_macos_app_delegate	signature:(NSApplication*)
applicationWillResignActive:	$SOKOLC/sokol_app.h	/^- (void)applicationWillResignActive:(UIApplication *)application {$/;"	m	implementation:_sapp_app_delegate	signature:(UIApplication*)
applicationWillTerminate:	$SOKOLC/sokol_app.h	/^- (void)applicationWillTerminate:(NSNotification*)notification {$/;"	m	implementation:_sapp_macos_app_delegate	signature:(NSNotification*)
applicationWillTerminate:	$SOKOLC/sokol_app.h	/^- (void)applicationWillTerminate:(UIApplication *)application {$/;"	m	implementation:_sapp_app_delegate	signature:(UIApplication*)
apply_bindings	$SOKOLC/sokol_gfx.h	/^    void (*apply_bindings)(const sg_bindings* bindings, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(const sg_bindings * bindings,void * user_data)
apply_bindings	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_apply_bindings_t apply_bindings;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_apply_bindings_t
apply_pipeline	$SOKOLC/sokol_gfx.h	/^    void (*apply_pipeline)(sg_pipeline pip, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_pipeline pip,void * user_data)
apply_pipeline	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_apply_pipeline_t apply_pipeline;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_apply_pipeline_t
apply_scissor_rect	$SOKOLC/sokol_gfx.h	/^    void (*apply_scissor_rect)(int x, int y, int width, int height, bool origin_top_left, void* /;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(int x,int y,int width,int height,bool origin_top_left,void * user_data)
apply_scissor_rect	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_apply_scissor_rect_t apply_scissor_rect;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_apply_scissor_rect_t
apply_uniforms	$SOKOLC/sokol_gfx.h	/^    void (*apply_uniforms)(sg_shader_stage stage, int ub_index, const sg_range* data, void* user/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_shader_stage stage,int ub_index,const sg_range * data,void * user_data)
apply_uniforms	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_apply_uniforms_t apply_uniforms;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_apply_uniforms_t
apply_viewport	$SOKOLC/sokol_gfx.h	/^    void (*apply_viewport)(int x, int y, int width, int height, bool origin_top_left, void* user/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(int x,int y,int width,int height,bool origin_top_left,void * user_data)
apply_viewport	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_apply_viewport_t apply_viewport;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_apply_viewport_t
arb_create_context	$SOKOLC/sokol_app.h	/^    bool arb_create_context;$/;"	E	enum:MONITOR_DPI_TYPE
arb_create_context_profile	$SOKOLC/sokol_app.h	/^    bool arb_create_context_profile;$/;"	E	enum:MONITOR_DPI_TYPE
arb_multisample	$SOKOLC/sokol_app.h	/^    bool arb_multisample;$/;"	E	enum:MONITOR_DPI_TYPE
arb_pixel_format	$SOKOLC/sokol_app.h	/^    bool arb_pixel_format;$/;"	E	enum:MONITOR_DPI_TYPE
argc	$SOKOLC/sokol_args.h	/^    int argc;$/;"	m	struct:sargs_desc	typeref:typename:int
args	$SOKOLC/sokol_args.h	/^    _sargs_kvp_t* args;   \/* key\/value pair array *\/$/;"	m	struct:__anon82b80a0f0208	typeref:typename:_sargs_kvp_t *
args	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_t args;$/;"	m	struct:sg_imgui_capture_item_t	typeref:typename:sg_imgui_args_t
args	$SOKOLC/util/sokol_gl.h	/^    _sgl_args_t args;$/;"	m	struct:__anon382715e20f08	typeref:typename:_sgl_args_t
argv	$SOKOLC/sokol_args.h	/^    char** argv;$/;"	m	struct:sargs_desc	typeref:typename:char **
array_count	$SOKOLC/sokol_gfx.h	/^    int array_count;$/;"	m	struct:sg_shader_uniform_desc	typeref:typename:int
async_init_done	$SOKOLC/sokol_app.h	/^    bool async_init_done;$/;"	E
atlas	$SOKOLC/util/sokol_nuklear.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:__anon5a1189810708	typeref:struct:nk_font_atlas
atlas	$SOKOLC/util/sokol_spine.h	/^    sspine_atlas atlas;$/;"	m	struct:sspine_skeleton_desc	typeref:typename:sspine_atlas
atlas_id	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_image { uint32_t atlas_id; int index; } sspine_image;$/;"	m	struct:sspine_image	typeref:typename:uint32_t
atlas_pool	$SOKOLC/util/sokol_spine.h	/^    _sspine_atlas_pool_t atlas_pool;$/;"	m	struct:__anon5007022e1d08	typeref:typename:_sspine_atlas_pool_t
atlas_pool_size	$SOKOLC/util/sokol_spine.h	/^    int atlas_pool_size;$/;"	m	struct:sspine_desc	typeref:typename:int
attachment_name	$SOKOLC/util/sokol_spine.h	/^    sspine_string attachment_name;$/;"	m	struct:sspine_slot_info	typeref:typename:sspine_string
attr_name	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_str_t attr_name[SG_MAX_VERTEX_ATTRIBUTES];$/;"	m	struct:sg_imgui_shader_t	typeref:typename:sg_imgui_str_t[]
attr_sem_name	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_str_t attr_sem_name[SG_MAX_VERTEX_ATTRIBUTES];$/;"	m	struct:sg_imgui_shader_t	typeref:typename:sg_imgui_str_t[]
attrs	$SOKOLC/sokol_gfx.h	/^    sg_vertex_attr_state attrs[SG_MAX_VERTEX_ATTRIBUTES];$/;"	m	struct:sg_vertex_layout_state	typeref:typename:sg_vertex_attr_state[]
audio_client	$SOKOLC/sokol_audio.h	/^    IAudioClient* audio_client;$/;"	E
audio_path	$SOKOLC/util/sokol_spine.h	/^    sspine_string audio_path;$/;"	m	struct:sspine_event_info	typeref:typename:sspine_string
available	$SOKOLC/sokol_app.h	/^    bool available;$/;"	E
avg	$SOKOLC/sokol_app.h	/^    double avg;$/;"	E
aware	$SOKOLC/sokol_app.h	/^    bool aware;$/;"	E	enum:MONITOR_DPI_TYPE
back	$SOKOLC/sokol_gfx.h	/^    sg_stencil_face_state back;$/;"	m	struct:sg_stencil_state	typeref:typename:sg_stencil_face_state
backend	$SOKOLC/sokol_audio.h	/^    _saudio_backend_t backend;$/;"	E
backend	$SOKOLC/sokol_gfx.h	/^    sg_backend backend;$/;"	m	struct:__anon13e02ee77608	typeref:typename:sg_backend
balance	$SOKOLC/util/sokol_spine.h	/^    float balance;$/;"	m	struct:sspine_triggered_event_info	typeref:typename:float
base_element	$SOKOLC/util/sokol_gfx_imgui.h	/^    int base_element;$/;"	m	struct:sg_imgui_args_draw_t	typeref:typename:int
base_element	$SOKOLC/util/sokol_shape.h	/^    int base_element;$/;"	m	struct:sshape_element_range_t	typeref:typename:int
base_element	$SOKOLC/util/sokol_spine.h	/^    int base_element;$/;"	m	struct:__anon5007022e1608	typeref:typename:int
base_ptr	$SOKOLC/sokol_audio.h	/^    uint8_t* base_ptr;          \/* packet memory chunk base pointer (dynamically allocated) *\/$/;"	E
base_vertex	$SOKOLC/util/sokol_gl.h	/^    int base_vertex;$/;"	m	struct:__anon382715e21008	typeref:typename:int
begin_default_pass	$SOKOLC/sokol_gfx.h	/^    void (*begin_default_pass)(const sg_pass_action* pass_action, int width, int height, void* u/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(const sg_pass_action * pass_action,int width,int height,void * user_data)
begin_default_pass	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_begin_default_pass_t begin_default_pass;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_begin_default_pass_t
begin_pass	$SOKOLC/sokol_gfx.h	/^    void (*begin_pass)(sg_pass pass, const sg_pass_action* pass_action, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_pass pass,const sg_pass_action * pass_action,void * user_data)
begin_pass	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_begin_pass_t begin_pass;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_begin_pass_t
best_match	$SOKOLC/sokol_app.h	/^    bool best_match;$/;"	E
bgl	$SOKOLC/sokol_gfx.h	/^    const void* bgl;      \/\/ WGPUBindGroupLayout;$/;"	m	struct:sg_wgpu_shader_info	typeref:typename:const void *
bias	$SOKOLC/sokol_gfx.h	/^    float bias;$/;"	m	struct:sg_depth_state	typeref:typename:float
bias_clamp	$SOKOLC/sokol_gfx.h	/^    float bias_clamp;$/;"	m	struct:sg_depth_state	typeref:typename:float
bias_slope_scale	$SOKOLC/sokol_gfx.h	/^    float bias_slope_scale;$/;"	m	struct:sg_depth_state	typeref:typename:float
big_icon	$SOKOLC/sokol_app.h	/^    HICON big_icon;$/;"	E	enum:MONITOR_DPI_TYPE
binary_data	$SOKOLC/util/sokol_spine.h	/^    sspine_range binary_data;$/;"	m	struct:sspine_skeleton_desc	typeref:typename:sspine_range
bind	$SOKOLC/sokol_gfx.h	/^    } bind;$/;"	m	struct:__anon13e02ee76708	typeref:struct:__anon13e02ee76708::__anon13e02ee76808
bind	$SOKOLC/util/sokol_gl.h	/^    sg_bindings bind;$/;"	m	struct:__anon382715e21008	typeref:typename:sg_bindings
bind	$SOKOLC/util/sokol_spine.h	/^    sg_bindings bind;$/;"	m	struct:__anon5007022e1708	typeref:typename:sg_bindings
bind_group_layout	$SOKOLC/sokol_gfx.h	/^        WGPUBindGroupLayout bind_group_layout;$/;"	m	struct:__anon13e02ee75f08::__anon13e02ee76008	typeref:typename:WGPUBindGroupLayout
bindgroup	$SOKOLC/sokol_gfx.h	/^    WGPUBindGroup bindgroup;$/;"	m	struct:__anon13e02ee76c08	typeref:typename:WGPUBindGroup
bindgroups	$SOKOLC/sokol_gfx.h	/^    _sg_wgpu_bindgroup_t* bindgroups;$/;"	m	struct:__anon13e02ee76d08	typeref:typename:_sg_wgpu_bindgroup_t *
bindgroups_cache	$SOKOLC/sokol_gfx.h	/^    _sg_wgpu_bindgroups_cache_t bindgroups_cache;$/;"	m	struct:__anon13e02ee77108	typeref:typename:_sg_wgpu_bindgroups_cache_t
bindgroups_pool	$SOKOLC/sokol_gfx.h	/^    _sg_wgpu_bindgroups_pool_t bindgroups_pool;$/;"	m	struct:__anon13e02ee77108	typeref:typename:_sg_wgpu_bindgroups_pool_t
bindings	$SOKOLC/sokol_gfx.h	/^    sg_frame_stats_wgpu_bindings bindings;$/;"	m	struct:sg_frame_stats_wgpu	typeref:typename:sg_frame_stats_wgpu_bindings
bindings	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_bindings bindings;$/;"	m	struct:sg_imgui_args_apply_bindings_t	typeref:typename:sg_bindings
bindings_applied	$SOKOLC/sokol_gfx.h	/^    bool bindings_applied;$/;"	m	struct:__anon13e02ee77608	typeref:typename:bool
bindings_cache	$SOKOLC/sokol_gfx.h	/^    _sg_wgpu_bindings_cache_t bindings_cache;$/;"	m	struct:__anon13e02ee77108	typeref:typename:_sg_wgpu_bindings_cache_t
blend	$SOKOLC/sokol_gfx.h	/^    sg_blend_state blend;$/;"	m	struct:sg_color_target_state	typeref:typename:sg_blend_state
blend_color	$SOKOLC/sokol_gfx.h	/^    sg_color blend_color;$/;"	m	struct:sg_pipeline_desc	typeref:typename:sg_color
blue_bits	$SOKOLC/sokol_app.h	/^    int         blue_bits;$/;"	E
bone	$SOKOLC/util/sokol_spine.h	/^    sspine_bone bone;$/;"	m	struct:sspine_slot_info	typeref:typename:sspine_bone
border_color	$SOKOLC/sokol_gfx.h	/^    sg_border_color border_color;$/;"	m	struct:sg_sampler_desc	typeref:typename:sg_border_color
btn_down	$SOKOLC/util/sokol_nuklear.h	/^    bool btn_down[NK_BUTTON_MAX];$/;"	m	struct:__anon5a1189810708	typeref:typename:bool[]
btn_up	$SOKOLC/util/sokol_nuklear.h	/^    bool btn_up[NK_BUTTON_MAX];$/;"	m	struct:__anon5a1189810708	typeref:typename:bool[]
bucket	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_capture_bucket_t bucket[2];$/;"	m	struct:sg_imgui_capture_t	typeref:typename:sg_imgui_capture_bucket_t[2]
bucket_index	$SOKOLC/util/sokol_gfx_imgui.h	/^    int bucket_index;      \/* which bucket to record to, 0 or 1 *\/$/;"	m	struct:sg_imgui_capture_t	typeref:typename:int
buf	$SOKOLC/sokol_app.h	/^    double buf[_SAPP_RING_NUM_SLOTS];$/;"	E
buf	$SOKOLC/sokol_args.h	/^    char* buf;          \/* character buffer, first char is reserved and zero for 'empty string'/;"	m	struct:__anon82b80a0f0208	typeref:typename:char *
buf	$SOKOLC/sokol_fetch.h	/^    uint32_t* buf;$/;"	m	struct:__anon3d2cd3ac0708	typeref:typename:uint32_t *
buf	$SOKOLC/sokol_gfx.h	/^    uint32_t buf[SG_NUM_INFLIGHT_FRAMES];$/;"	m	struct:sg_gl_buffer_info	typeref:typename:uint32_t[]
buf	$SOKOLC/util/sokol_gfx_imgui.h	/^    char buf[SG_IMGUI_STRBUF_LEN];$/;"	m	struct:sg_imgui_str_t	typeref:typename:char[]
buf_pos	$SOKOLC/sokol_args.h	/^    int buf_pos;        \/* current buffer position *\/$/;"	m	struct:__anon82b80a0f0208	typeref:typename:int
buf_size	$SOKOLC/sokol_app.h	/^    int buf_size;$/;"	E
buf_size	$SOKOLC/sokol_args.h	/^    int buf_size;$/;"	m	struct:sargs_desc	typeref:typename:int
buffer	$SOKOLC/sokol_app.h	/^    sapp_range buffer;      \/\/ the user-provided buffer ptr\/size pair (buffer.ptr == data.ptr/;"	E	struct:sapp_html5_fetch_response
buffer	$SOKOLC/sokol_audio.h	/^    uint8_t* buffer;$/;"	E
buffer	$SOKOLC/sokol_fetch.h	/^    sfetch_range_t buffer;$/;"	m	struct:__anon3d2cd3ac0508	typeref:typename:sfetch_range_t
buffer	$SOKOLC/sokol_gfx.h	/^        sg_buffer buffer;$/;"	m	struct:__anon13e02ee76e08::__anon13e02ee77008	typeref:typename:sg_buffer
buffer	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_buffer buffer;$/;"	m	struct:sg_imgui_args_update_buffer_t	typeref:typename:sg_buffer
buffer	$SOKOLC/util/sokol_shape.h	/^    sshape_range buffer;    \/\/ pointer\/size pair of output buffer$/;"	m	struct:sshape_buffer_item_t	typeref:typename:sshape_range
buffer_byte_size	$SOKOLC/sokol_audio.h	/^    int buffer_byte_size;$/;"	E
buffer_end_event	$SOKOLC/sokol_audio.h	/^    HANDLE buffer_end_event;$/;"	E
buffer_frames	$SOKOLC/sokol_audio.h	/^    int buffer_frames;$/;"	E
buffer_index	$SOKOLC/sokol_gfx.h	/^    int buffer_index;$/;"	m	struct:sg_vertex_attr_state	typeref:typename:int
buffer_pool	$SOKOLC/sokol_gfx.h	/^    _sg_pool_t buffer_pool;$/;"	m	struct:__anon13e02ee77208	typeref:typename:_sg_pool_t
buffer_pool_size	$SOKOLC/sokol_gfx.h	/^    int buffer_pool_size;$/;"	m	struct:sg_desc	typeref:typename:int
buffer_sem	$SOKOLC/sokol_audio.h	/^    _saudio_sles_semaphore_t buffer_sem;$/;"	E
buffers	$SOKOLC/sokol_gfx.h	/^    sg_vertex_buffer_layout_state buffers[SG_MAX_VERTEX_BUFFERS];$/;"	m	struct:sg_vertex_layout_state	typeref:typename:sg_vertex_buffer_layout_state[]
buffers	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_buffers_t buffers;$/;"	m	struct:sg_imgui_t	typeref:typename:sg_imgui_buffers_t
builder	$SOKOLC/sokol_audio.h	/^    AAudioStreamBuilder* builder;$/;"	E
bytecode	$SOKOLC/sokol_gfx.h	/^    sg_range bytecode;$/;"	m	struct:sg_shader_stage_desc	typeref:typename:sg_range
bytes_per_frame	$SOKOLC/sokol_audio.h	/^    int bytes_per_frame;        \/* filled by backend *\/$/;"	E
bytes_per_pixel	$SOKOLC/sokol_gfx.h	/^    int bytes_per_pixel;    \/\/ NOTE: this is 0 for compressed formats, use sg_query_row_pitch(/;"	m	struct:sg_pixelformat_info	typeref:typename:int
ca_audio_queue	$SOKOLC/sokol_audio.h	/^    _saudio_AudioQueueRef ca_audio_queue;$/;"	E
ca_interruption_handler	$SOKOLC/sokol_audio.h	/^    id ca_interruption_handler;$/;"	E
cache	$SOKOLC/sokol_gfx.h	/^    _sg_gl_state_cache_t cache;$/;"	m	struct:__anon13e02ee73208	typeref:typename:_sg_gl_state_cache_t
callback	$SOKOLC/sokol_fetch.h	/^    sfetch_callback_t callback;$/;"	m	struct:__anon3d2cd3ac0508	typeref:typename:sfetch_callback_t
canBecomeKeyView	$SOKOLC/sokol_app.h	/^- (BOOL)canBecomeKeyView {$/;"	m	implementation:_sapp_macos_view	signature:()	category:NSRect
cancel	$SOKOLC/sokol_fetch.h	/^    bool cancel;                \/* cancel the request, switch into FAILED state *\/$/;"	m	struct:__anon3d2cd3ac0308	typeref:typename:bool
cancelled	$SOKOLC/sokol_fetch.h	/^    bool cancelled;                 \/\/ request was cancelled (always set together with 'finish/;"	m	struct:sfetch_response_t	typeref:typename:bool
canvas_height	$SOKOLC/util/sokol_debugtext.h	/^    float canvas_height;                    \/\/ the initial virtual canvas height, default: 400$/;"	m	struct:sdtx_context_desc_t	typeref:typename:float
canvas_size	$SOKOLC/util/sokol_debugtext.h	/^    _sdtx_float2_t canvas_size;$/;"	m	struct:__anona9c6565b0608	typeref:typename:_sdtx_float2_t
canvas_width	$SOKOLC/util/sokol_debugtext.h	/^    float canvas_width;                     \/\/ the initial virtual canvas width, default: 640$/;"	m	struct:sdtx_context_desc_t	typeref:typename:float
cap	$SOKOLC/util/sokol_debugtext.h	/^        int cap;$/;"	m	struct:__anona9c6565b0608::__anona9c6565b0808	typeref:typename:int
cap	$SOKOLC/util/sokol_gl.h	/^        int cap;$/;"	m	struct:__anon382715e21008::__anon382715e21308	typeref:typename:int
cap	$SOKOLC/util/sokol_spine.h	/^        int cap;$/;"	m	struct:__anon5007022e1708::__anon5007022e1a08	typeref:typename:int
caps	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_caps_t caps;$/;"	m	struct:sg_imgui_t	typeref:typename:sg_imgui_caps_t
capture	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_capture_t capture;$/;"	m	struct:sg_imgui_t	typeref:typename:sg_imgui_capture_t
cbufs	$SOKOLC/sokol_gfx.h	/^    ID3D11Buffer* cbufs[SG_MAX_SHADERSTAGE_UBS];$/;"	m	struct:__anon13e02ee73a08	typeref:typename:ID3D11Buffer * []
changed	$SOKOLC/sokol_app.h	/^    bool changed;$/;"	E	struct:sapp_touchpoint
channel	$SOKOLC/sokol_fetch.h	/^    uint32_t channel;$/;"	m	struct:__anon3d2cd3ac0508	typeref:typename:uint32_t
char_buf_size	$SOKOLC/util/sokol_debugtext.h	/^    int char_buf_size;                      \/\/ max number of characters rendered in one frame,/;"	m	struct:sdtx_context_desc_t	typeref:typename:int
char_buffer	$SOKOLC/util/sokol_nuklear.h	/^    char char_buffer[NK_INPUT_MAX];$/;"	m	struct:__anon5a1189810708	typeref:typename:char[]
chn	$SOKOLC/sokol_fetch.h	/^    _sfetch_channel_t chn[SFETCH_MAX_CHANNELS];$/;"	m	struct:_sfetch_t	typeref:typename:_sfetch_channel_t[]
chunk_size	$SOKOLC/sokol_fetch.h	/^    uint32_t chunk_size;$/;"	m	struct:__anon3d2cd3ac0508	typeref:typename:uint32_t
cleanup_called	$SOKOLC/sokol_app.h	/^    bool cleanup_called;$/;"	E
clear_value	$SOKOLC/sokol_gfx.h	/^    uint8_t clear_value;                \/\/ default: 0$/;"	m	struct:sg_stencil_attachment_action	typeref:typename:uint8_t
clipboard	$SOKOLC/sokol_app.h	/^    _sapp_clipboard_t clipboard;$/;"	E
cmd	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_cmd_t cmd;$/;"	m	struct:sg_imgui_capture_item_t	typeref:typename:sg_imgui_cmd_t
cmd	$SOKOLC/util/sokol_gl.h	/^    _sgl_command_type_t cmd;$/;"	m	struct:__anon382715e20f08	typeref:typename:_sgl_command_type_t
cmd_buffer	$SOKOLC/sokol_gfx.h	/^    id<MTLCommandBuffer> cmd_buffer;$/;"	m	struct:__anon13e02ee75708	typeref:typename:id<MTLCommandBuffer>
cmd_enc	$SOKOLC/sokol_gfx.h	/^    WGPUCommandEncoder cmd_enc;$/;"	m	struct:__anon13e02ee77108	typeref:typename:WGPUCommandEncoder
cmd_encoder	$SOKOLC/sokol_gfx.h	/^    id<MTLRenderCommandEncoder> cmd_encoder;$/;"	m	struct:__anon13e02ee75708	typeref:typename:id<MTLRenderCommandEncoder>
cmd_queue	$SOKOLC/sokol_gfx.h	/^    id<MTLCommandQueue> cmd_queue;$/;"	m	struct:__anon13e02ee75708	typeref:typename:id<MTLCommandQueue>
cmn	$SOKOLC/sokol_gfx.h	/^    _sg_shader_common_t cmn;$/;"	m	struct:__anon13e02ee75f08	typeref:typename:_sg_shader_common_t
code	$SOKOLC/sokol_app.h	/^    sapp_keycode code;$/;"	E
col	$SOKOLC/util/sokol_nuklear.h	/^    uint8_t col[4];$/;"	m	struct:_snk_vertex_t	typeref:typename:uint8_t[4]
color	$SOKOLC/util/sokol_debugtext.h	/^    uint32_t color;$/;"	m	struct:__anona9c6565b0608	typeref:typename:uint32_t
color	$SOKOLC/util/sokol_gfx_imgui.h	/^    uint32_t color;$/;"	m	struct:sg_imgui_capture_item_t	typeref:typename:uint32_t
color	$SOKOLC/util/sokol_shape.h	/^    uint32_t color;         \/\/ packed color as UBYTE4N (r,g,b,a);$/;"	m	struct:sshape_vertex_t	typeref:typename:uint32_t
color	$SOKOLC/util/sokol_spine.h	/^    uint32_t color;$/;"	m	struct:__anon5007022e1308	typeref:typename:uint32_t
color_attachments	$SOKOLC/sokol_gfx.h	/^    sg_pass_attachment_desc color_attachments[SG_MAX_COLOR_ATTACHMENTS];$/;"	m	struct:sg_pass_desc	typeref:typename:sg_pass_attachment_desc[]
color_atts	$SOKOLC/sokol_gfx.h	/^    _sg_pass_attachment_common_t color_atts[SG_MAX_COLOR_ATTACHMENTS];$/;"	m	struct:__anon13e02ee71108	typeref:typename:_sg_pass_attachment_common_t[]
color_count	$SOKOLC/sokol_gfx.h	/^    int color_count;$/;"	m	struct:sg_pipeline_desc	typeref:typename:int
color_format	$SOKOLC/sokol_gfx.h	/^    sg_pixel_format color_format;$/;"	m	struct:sg_context_desc	typeref:typename:sg_pixel_format
color_format	$SOKOLC/util/sokol_debugtext.h	/^    sg_pixel_format color_format;           \/\/ color pixel format of target render pass$/;"	m	struct:sdtx_context_desc_t	typeref:typename:sg_pixel_format
color_format	$SOKOLC/util/sokol_gl.h	/^    sg_pixel_format color_format;$/;"	m	struct:sgl_desc_t	typeref:typename:sg_pixel_format
color_format	$SOKOLC/util/sokol_imgui.h	/^    sg_pixel_format color_format;$/;"	m	struct:simgui_desc_t	typeref:typename:sg_pixel_format
color_format	$SOKOLC/util/sokol_nuklear.h	/^    sg_pixel_format color_format;$/;"	m	struct:snk_desc_t	typeref:typename:sg_pixel_format
color_format	$SOKOLC/util/sokol_spine.h	/^    sg_pixel_format color_format;$/;"	m	struct:sspine_desc	typeref:typename:sg_pixel_format
color_image_scale	$SOKOLC/util/sokol_gfx_imgui.h	/^    float color_image_scale[SG_MAX_COLOR_ATTACHMENTS];$/;"	m	struct:sg_imgui_pass_t	typeref:typename:float[]
color_rtv	$SOKOLC/sokol_gfx.h	/^    const void* color_rtv[SG_MAX_COLOR_ATTACHMENTS];      \/\/ ID3D11RenderTargetView$/;"	m	struct:sg_d3d11_pass_info	typeref:typename:const void * []
color_store_actions	$SOKOLC/sokol_gfx.h	/^    sg_store_action color_store_actions[SG_MAX_COLOR_ATTACHMENTS];$/;"	m	struct:__anon13e02ee73208	typeref:typename:sg_store_action[]
color_view	$SOKOLC/sokol_gfx.h	/^    const void* color_view[SG_MAX_COLOR_ATTACHMENTS];     \/\/ WGPUTextureView$/;"	m	struct:sg_wgpu_pass_info	typeref:typename:const void * []
color_write_mask	$SOKOLC/sokol_gfx.h	/^    sg_color_mask color_write_mask[SG_MAX_COLOR_ATTACHMENTS];$/;"	m	struct:__anon13e02ee73108	typeref:typename:sg_color_mask[]
color_write_mask	$SOKOLC/util/sokol_spine.h	/^    sg_color_mask color_write_mask;$/;"	m	struct:sspine_desc	typeref:typename:sg_color_mask
colormap	$SOKOLC/sokol_app.h	/^    Colormap colormap;$/;"	E
colors	$SOKOLC/sokol_gfx.h	/^    sg_color_target_state colors[SG_MAX_COLOR_ATTACHMENTS];$/;"	m	struct:sg_pipeline_desc	typeref:typename:sg_color_target_state[]
commands	$SOKOLC/util/sokol_debugtext.h	/^    } commands;$/;"	m	struct:__anona9c6565b0608	typeref:struct:__anona9c6565b0608::__anona9c6565b0808
commands	$SOKOLC/util/sokol_gl.h	/^    } commands;$/;"	m	struct:__anon382715e21008	typeref:struct:__anon382715e21008::__anon382715e21308
commands	$SOKOLC/util/sokol_spine.h	/^    } commands;$/;"	m	struct:__anon5007022e1708	typeref:struct:__anon5007022e1708::__anon5007022e1a08
commit	$SOKOLC/sokol_gfx.h	/^    void (*commit)(void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(void * user_data)
commit_listeners	$SOKOLC/sokol_gfx.h	/^    _sg_commit_listeners_t commit_listeners;$/;"	m	struct:__anon13e02ee77608	typeref:typename:_sg_commit_listeners_t
compare	$SOKOLC/sokol_gfx.h	/^    sg_compare_func compare;$/;"	m	struct:sg_stencil_face_state	typeref:typename:sg_compare_func
compressed	$SOKOLC/sokol_gfx.h	/^    bool compressed;        \/\/ true if this is a hardware-compressed format$/;"	m	struct:sg_pixelformat_info	typeref:typename:bool
cond	$SOKOLC/sokol_app.h	/^    pthread_cond_t cond;$/;"	E
cond	$SOKOLC/sokol_audio.h	/^    pthread_cond_t cond;$/;"	E
config	$SOKOLC/sokol_app.h	/^    EGLConfig config;$/;"	E
cont	$SOKOLC/sokol_fetch.h	/^    bool cont;                  \/* switch item back to FETCHING if true *\/$/;"	m	struct:__anon3d2cd3ac0308	typeref:typename:bool
content_scale	$SOKOLC/sokol_app.h	/^    float content_scale;$/;"	E	enum:MONITOR_DPI_TYPE
content_size	$SOKOLC/sokol_fetch.h	/^    uint32_t content_size;$/;"	m	struct:__anon3d2cd3ac0408	typeref:typename:uint32_t
context	$SOKOLC/sokol_app.h	/^    EGLContext context;$/;"	E
context	$SOKOLC/sokol_gfx.h	/^    sg_context_desc context;$/;"	m	struct:sg_desc	typeref:typename:sg_context_desc
context	$SOKOLC/util/sokol_debugtext.h	/^    sdtx_context_desc_t context;            \/\/ the default context creation parameters$/;"	m	struct:sdtx_desc_t	typeref:typename:sdtx_context_desc_t
context_pool	$SOKOLC/sokol_gfx.h	/^    _sg_pool_t context_pool;$/;"	m	struct:__anon13e02ee77208	typeref:typename:_sg_pool_t
context_pool	$SOKOLC/util/sokol_debugtext.h	/^    _sdtx_context_pool_t context_pool;$/;"	m	struct:__anona9c6565b0a08	typeref:typename:_sdtx_context_pool_t
context_pool	$SOKOLC/util/sokol_gl.h	/^    _sgl_context_pool_t context_pool;$/;"	m	struct:__anon382715e21508	typeref:typename:_sgl_context_pool_t
context_pool	$SOKOLC/util/sokol_spine.h	/^    _sspine_context_pool_t context_pool;$/;"	m	struct:__anon5007022e1d08	typeref:typename:_sspine_context_pool_t
context_pool_size	$SOKOLC/sokol_gfx.h	/^    int context_pool_size;$/;"	m	struct:sg_desc	typeref:typename:int
context_pool_size	$SOKOLC/util/sokol_debugtext.h	/^    int context_pool_size;                  \/\/ max number of rendering contexts that can be cr/;"	m	struct:sdtx_desc_t	typeref:typename:int
context_pool_size	$SOKOLC/util/sokol_gl.h	/^    int context_pool_size;          \/\/ max number of contexts (including default context), def/;"	m	struct:sgl_desc_t	typeref:typename:int
context_pool_size	$SOKOLC/util/sokol_spine.h	/^    int context_pool_size;$/;"	m	struct:sspine_desc	typeref:typename:int
contexts	$SOKOLC/sokol_gfx.h	/^    _sg_context_t* contexts;$/;"	m	struct:__anon13e02ee77208	typeref:typename:_sg_context_t *
contexts	$SOKOLC/util/sokol_debugtext.h	/^    _sdtx_context_t* contexts;$/;"	m	struct:__anona9c6565b0908	typeref:typename:_sdtx_context_t *
contexts	$SOKOLC/util/sokol_gl.h	/^    _sgl_context_t* contexts;$/;"	m	struct:__anon382715e21408	typeref:typename:_sgl_context_t *
count	$SOKOLC/sokol_audio.h	/^    int count;$/;"	E
count	$SOKOLC/sokol_gfx.h	/^    uint16_t count;$/;"	m	struct:__anon13e02ee72108	typeref:typename:uint16_t
critsec	$SOKOLC/sokol_audio.h	/^    CRITICAL_SECTION critsec;$/;"	E	struct:saudio_desc
cstr	$SOKOLC/util/sokol_spine.h	/^    char cstr[SSPINE_MAX_STRING_SIZE];$/;"	m	struct:sspine_string	typeref:typename:char[]
ctx	$SOKOLC/sokol_app.h	/^    GLXContext ctx;$/;"	E
ctx	$SOKOLC/sokol_fetch.h	/^    struct _sfetch_t* ctx;  \/\/ back-pointer to thread-local _sfetch state pointer, since this /;"	m	struct:__anon3d2cd3ac0808	typeref:struct:_sfetch_t *
ctx	$SOKOLC/sokol_gfx.h	/^    ID3D11DeviceContext* ctx;$/;"	m	struct:__anon13e02ee74408	typeref:typename:ID3D11DeviceContext *
ctx	$SOKOLC/util/sokol_nuklear.h	/^    struct nk_context ctx;$/;"	m	struct:__anon5a1189810708	typeref:struct:nk_context
ctx_id	$SOKOLC/sokol_gfx.h	/^    uint32_t ctx_id;$/;"	m	struct:__anon13e02ee70208	typeref:typename:uint32_t
cull_mode	$SOKOLC/sokol_gfx.h	/^    sg_cull_mode cull_mode;$/;"	m	struct:sg_pipeline_desc	typeref:typename:sg_cull_mode
cur_active_texture	$SOKOLC/sokol_gfx.h	/^    GLenum cur_active_texture;$/;"	m	struct:__anon13e02ee73108	typeref:typename:GLenum
cur_context	$SOKOLC/sokol_gfx.h	/^    _sg_context_t* cur_context;$/;"	m	struct:__anon13e02ee73208	typeref:typename:_sg_context_t *
cur_ctx	$SOKOLC/util/sokol_debugtext.h	/^    _sdtx_context_t* cur_ctx;   \/\/ may be 0!$/;"	m	struct:__anona9c6565b0a08	typeref:typename:_sdtx_context_t *
cur_ctx	$SOKOLC/util/sokol_gl.h	/^    _sgl_context_t* cur_ctx;   \/\/ may be 0!$/;"	m	struct:__anon382715e21508	typeref:typename:_sgl_context_t *
cur_ctx	$SOKOLC/util/sokol_spine.h	/^    _sspine_context_t* cur_ctx;   \/\/ may be 0!$/;"	m	struct:__anon5007022e1d08	typeref:typename:_sspine_context_t *
cur_ctx_id	$SOKOLC/util/sokol_debugtext.h	/^    sdtx_context cur_ctx_id;$/;"	m	struct:__anona9c6565b0a08	typeref:typename:sdtx_context
cur_ctx_id	$SOKOLC/util/sokol_gl.h	/^    sgl_context cur_ctx_id;$/;"	m	struct:__anon382715e21508	typeref:typename:sgl_context
cur_ctx_id	$SOKOLC/util/sokol_spine.h	/^    sspine_context cur_ctx_id;$/;"	m	struct:__anon5007022e1d08	typeref:typename:sspine_context
cur_dpi_scale	$SOKOLC/util/sokol_imgui.h	/^    float cur_dpi_scale;$/;"	m	struct:__anon4720df6a0808	typeref:typename:float
cur_dsv	$SOKOLC/sokol_gfx.h	/^    ID3D11DepthStencilView* cur_dsv;$/;"	m	struct:__anon13e02ee74408	typeref:typename:ID3D11DepthStencilView *
cur_font	$SOKOLC/util/sokol_debugtext.h	/^    int cur_font;$/;"	m	struct:__anona9c6565b0608	typeref:typename:int
cur_frame_rotate_index	$SOKOLC/sokol_gfx.h	/^    uint32_t cur_frame_rotate_index;$/;"	m	struct:__anon13e02ee75708	typeref:typename:uint32_t
cur_fs_image_ids	$SOKOLC/sokol_gfx.h	/^    sg_image cur_fs_image_ids[SG_MAX_SHADERSTAGE_IMAGES];$/;"	m	struct:__anon13e02ee75608	typeref:typename:sg_image[]
cur_fs_images	$SOKOLC/sokol_gfx.h	/^    const _sg_image_t* cur_fs_images[SG_MAX_SHADERSTAGE_IMAGES];$/;"	m	struct:__anon13e02ee75608	typeref:typename:const _sg_image_t * []
cur_fs_sampler_ids	$SOKOLC/sokol_gfx.h	/^    sg_sampler cur_fs_sampler_ids[SG_MAX_SHADERSTAGE_SAMPLERS];$/;"	m	struct:__anon13e02ee75608	typeref:typename:sg_sampler[]
cur_fs_samplers	$SOKOLC/sokol_gfx.h	/^    const _sg_sampler_t* cur_fs_samplers[SG_MAX_SHADERSTAGE_SAMPLERS];$/;"	m	struct:__anon13e02ee75608	typeref:typename:const _sg_sampler_t * []
cur_height	$SOKOLC/sokol_gfx.h	/^    int cur_height;$/;"	m	struct:__anon13e02ee77108	typeref:typename:int
cur_height	$SOKOLC/util/sokol_fontstash.h	/^    int cur_width, cur_height;$/;"	m	struct:_sfons_t	typeref:typename:int
cur_ib_offset	$SOKOLC/sokol_gfx.h	/^    int cur_ib_offset;$/;"	m	struct:__anon13e02ee73108	typeref:typename:int
cur_img	$SOKOLC/util/sokol_gl.h	/^    sg_image cur_img;$/;"	m	struct:__anon382715e21008	typeref:typename:sg_image
cur_index_type	$SOKOLC/sokol_gfx.h	/^    GLenum cur_index_type;$/;"	m	struct:__anon13e02ee73108	typeref:typename:GLenum
cur_indexbuffer	$SOKOLC/sokol_gfx.h	/^    const _sg_buffer_t* cur_indexbuffer;$/;"	m	struct:__anon13e02ee75608	typeref:typename:const _sg_buffer_t *
cur_indexbuffer_id	$SOKOLC/sokol_gfx.h	/^    sg_buffer cur_indexbuffer_id;$/;"	m	struct:__anon13e02ee75608	typeref:typename:sg_buffer
cur_indexbuffer_offset	$SOKOLC/sokol_gfx.h	/^    int cur_indexbuffer_offset;$/;"	m	struct:__anon13e02ee75608	typeref:typename:int
cur_layer_id	$SOKOLC/util/sokol_debugtext.h	/^    int cur_layer_id;$/;"	m	struct:__anona9c6565b0608	typeref:typename:int
cur_matrix_mode	$SOKOLC/util/sokol_gl.h	/^    _sgl_matrix_mode_t cur_matrix_mode;$/;"	m	struct:__anon382715e21008	typeref:typename:_sgl_matrix_mode_t
cur_offset	$SOKOLC/sokol_audio.h	/^    int cur_offset;             \/* current byte-offset into current write packet *\/$/;"	E
cur_packet	$SOKOLC/sokol_audio.h	/^    int cur_packet;             \/* current write-packet *\/$/;"	E
cur_pass	$SOKOLC/sokol_gfx.h	/^    sg_pass cur_pass;$/;"	m	struct:__anon13e02ee77608	typeref:typename:sg_pass
cur_pass_height	$SOKOLC/sokol_gfx.h	/^    int cur_pass_height;$/;"	m	struct:__anon13e02ee73208	typeref:typename:int
cur_pass_id	$SOKOLC/sokol_gfx.h	/^    sg_pass cur_pass_id;$/;"	m	struct:__anon13e02ee74408	typeref:typename:sg_pass
cur_pass_width	$SOKOLC/sokol_gfx.h	/^    int cur_pass_width;$/;"	m	struct:__anon13e02ee73208	typeref:typename:int
cur_pipeline	$SOKOLC/sokol_gfx.h	/^    sg_pipeline cur_pipeline;$/;"	m	struct:__anon13e02ee77608	typeref:typename:sg_pipeline
cur_pipeline	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_pipeline cur_pipeline;$/;"	m	struct:sg_imgui_t	typeref:typename:sg_pipeline
cur_pipeline_id	$SOKOLC/sokol_gfx.h	/^    sg_pipeline cur_pipeline_id;$/;"	m	struct:__anon13e02ee77108	typeref:typename:sg_pipeline
cur_prim_type	$SOKOLC/util/sokol_gl.h	/^    _sgl_primitive_type_t cur_prim_type;$/;"	m	struct:__anon382715e21008	typeref:typename:_sgl_primitive_type_t
cur_primitive_type	$SOKOLC/sokol_gfx.h	/^    GLenum cur_primitive_type;$/;"	m	struct:__anon13e02ee73108	typeref:typename:GLenum
cur_rtvs	$SOKOLC/sokol_gfx.h	/^    ID3D11RenderTargetView* cur_rtvs[SG_MAX_COLOR_ATTACHMENTS];$/;"	m	struct:__anon13e02ee74408	typeref:typename:ID3D11RenderTargetView * []
cur_smp	$SOKOLC/util/sokol_gl.h	/^    sg_sampler cur_smp;$/;"	m	struct:__anon382715e21008	typeref:typename:sg_sampler
cur_triggered_event_index	$SOKOLC/util/sokol_spine.h	/^    int cur_triggered_event_index;$/;"	m	struct:__anon5007022e1108	typeref:typename:int
cur_ub_base_ptr	$SOKOLC/sokol_gfx.h	/^    uint8_t* cur_ub_base_ptr;$/;"	m	struct:__anon13e02ee75708	typeref:typename:uint8_t *
cur_ub_offset	$SOKOLC/sokol_gfx.h	/^    int cur_ub_offset;$/;"	m	struct:__anon13e02ee75708	typeref:typename:int
cur_vertexbuffer_ids	$SOKOLC/sokol_gfx.h	/^    sg_buffer cur_vertexbuffer_ids[SG_MAX_VERTEX_BUFFERS];$/;"	m	struct:__anon13e02ee75608	typeref:typename:sg_buffer[]
cur_vertexbuffer_offsets	$SOKOLC/sokol_gfx.h	/^    int cur_vertexbuffer_offsets[SG_MAX_VERTEX_BUFFERS];$/;"	m	struct:__anon13e02ee75608	typeref:typename:int[]
cur_vertexbuffers	$SOKOLC/sokol_gfx.h	/^    const _sg_buffer_t* cur_vertexbuffers[SG_MAX_VERTEX_BUFFERS];$/;"	m	struct:__anon13e02ee75608	typeref:typename:const _sg_buffer_t * []
cur_vs_image_ids	$SOKOLC/sokol_gfx.h	/^    sg_image cur_vs_image_ids[SG_MAX_SHADERSTAGE_IMAGES];$/;"	m	struct:__anon13e02ee75608	typeref:typename:sg_image[]
cur_vs_images	$SOKOLC/sokol_gfx.h	/^    const _sg_image_t* cur_vs_images[SG_MAX_SHADERSTAGE_IMAGES];$/;"	m	struct:__anon13e02ee75608	typeref:typename:const _sg_image_t * []
cur_vs_sampler_ids	$SOKOLC/sokol_gfx.h	/^    sg_sampler cur_vs_sampler_ids[SG_MAX_SHADERSTAGE_SAMPLERS];$/;"	m	struct:__anon13e02ee75608	typeref:typename:sg_sampler[]
cur_vs_samplers	$SOKOLC/sokol_gfx.h	/^    const _sg_sampler_t* cur_vs_samplers[SG_MAX_SHADERSTAGE_SAMPLERS];$/;"	m	struct:__anon13e02ee75608	typeref:typename:const _sg_sampler_t * []
cur_width	$SOKOLC/sokol_gfx.h	/^    int cur_width;$/;"	m	struct:__anon13e02ee77108	typeref:typename:int
cur_width	$SOKOLC/util/sokol_fontstash.h	/^    int cur_width, cur_height;$/;"	m	struct:_sfons_t	typeref:typename:int
current	$SOKOLC/sokol_app.h	/^    _sapp_android_resources_t current;$/;"	E
current_cursor	$SOKOLC/sokol_app.h	/^    sapp_mouse_cursor current_cursor;$/;"	E
cursors	$SOKOLC/sokol_app.h	/^    NSCursor* cursors[_SAPP_MOUSECURSOR_NUM];$/;"	E
d3d11	$SOKOLC/sokol_app.h	/^            _sapp_d3d11_t d3d11;$/;"	E
d3d11	$SOKOLC/sokol_gfx.h	/^    } d3d11;$/;"	m	struct:__anon13e02ee74108	typeref:struct:__anon13e02ee74108::__anon13e02ee74208
d3d11_buffer	$SOKOLC/sokol_gfx.h	/^    const void* d3d11_buffer;$/;"	m	struct:sg_buffer_desc	typeref:typename:const void *
d3d11_sampler	$SOKOLC/sokol_gfx.h	/^    const void* d3d11_sampler;$/;"	m	struct:sg_sampler_desc	typeref:typename:const void *
d3d11_shader_resource_view	$SOKOLC/sokol_gfx.h	/^    const void* d3d11_shader_resource_view;$/;"	m	struct:sg_image_desc	typeref:typename:const void *
d3d11_target	$SOKOLC/sokol_gfx.h	/^    const char* d3d11_target;$/;"	m	struct:sg_shader_stage_desc	typeref:typename:const char *
d3d11_texture	$SOKOLC/sokol_gfx.h	/^    const void* d3d11_texture;$/;"	m	struct:sg_image_desc	typeref:typename:const void *
d3dcompiler_dll	$SOKOLC/sokol_gfx.h	/^    HINSTANCE d3dcompiler_dll;$/;"	m	struct:__anon13e02ee74408	typeref:typename:HINSTANCE
d3dcompiler_dll_load_failed	$SOKOLC/sokol_gfx.h	/^    bool d3dcompiler_dll_load_failed;$/;"	m	struct:__anon13e02ee74408	typeref:typename:bool
data	$SOKOLC/sokol_app.h	/^    sapp_range data;        \/\/ pointer and size of the fetched data (data.ptr == buffer.ptr, d/;"	E	struct:sapp_html5_fetch_response
data	$SOKOLC/sokol_fetch.h	/^    sfetch_range_t data;            \/\/ the fetched data as ptr\/size pair (data.ptr == buffer./;"	m	struct:sfetch_response_t	typeref:typename:sfetch_range_t
data	$SOKOLC/sokol_gfx.h	/^    sg_range data;$/;"	m	struct:sg_buffer_desc	typeref:typename:sg_range
data	$SOKOLC/util/sokol_debugtext.h	/^    sdtx_range data;        \/\/ pointer to and size of font pixel data$/;"	m	struct:sdtx_font_desc_t	typeref:typename:sdtx_range
data	$SOKOLC/util/sokol_spine.h	/^    sspine_range data;$/;"	m	struct:sspine_atlas_desc	typeref:typename:sspine_range
data_offset	$SOKOLC/sokol_fetch.h	/^    uint32_t data_offset;           \/\/ current offset of fetched data chunk in the overall fil/;"	m	struct:sfetch_response_t	typeref:typename:uint32_t
data_size	$SOKOLC/util/sokol_gfx_imgui.h	/^    size_t data_size;$/;"	m	struct:sg_imgui_args_update_buffer_t	typeref:typename:size_t
data_size	$SOKOLC/util/sokol_shape.h	/^    size_t data_size;       \/\/ size in bytes of valid data in buffer$/;"	m	struct:sshape_buffer_item_t	typeref:typename:size_t
dealloc	$SOKOLC/sokol_audio.h	/^-(void)dealloc {$/;"	m	implementation:_saudio_interruption_handler	signature:()
dealloc_buffer	$SOKOLC/sokol_gfx.h	/^    void (*dealloc_buffer)(sg_buffer buf_id, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_buffer buf_id,void * user_data)
dealloc_buffer	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_dealloc_buffer_t dealloc_buffer;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_dealloc_buffer_t
dealloc_image	$SOKOLC/sokol_gfx.h	/^    void (*dealloc_image)(sg_image img_id, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_image img_id,void * user_data)
dealloc_image	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_dealloc_image_t dealloc_image;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_dealloc_image_t
dealloc_pass	$SOKOLC/sokol_gfx.h	/^    void (*dealloc_pass)(sg_pass pass_id, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_pass pass_id,void * user_data)
dealloc_pass	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_dealloc_pass_t dealloc_pass;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_dealloc_pass_t
dealloc_pipeline	$SOKOLC/sokol_gfx.h	/^    void (*dealloc_pipeline)(sg_pipeline pip_id, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_pipeline pip_id,void * user_data)
dealloc_pipeline	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_dealloc_pipeline_t dealloc_pipeline;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_dealloc_pipeline_t
dealloc_sampler	$SOKOLC/sokol_gfx.h	/^    void (*dealloc_sampler)(sg_sampler smp_id, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_sampler smp_id,void * user_data)
dealloc_sampler	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_dealloc_sampler_t dealloc_sampler;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_dealloc_sampler_t
dealloc_shader	$SOKOLC/sokol_gfx.h	/^    void (*dealloc_shader)(sg_shader shd_id, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_shader shd_id,void * user_data)
dealloc_shader	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_dealloc_shader_t dealloc_shader;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_dealloc_shader_t
def_ctx_id	$SOKOLC/util/sokol_debugtext.h	/^    sdtx_context def_ctx_id;$/;"	m	struct:__anona9c6565b0a08	typeref:typename:sdtx_context
def_ctx_id	$SOKOLC/util/sokol_gl.h	/^    sgl_context def_ctx_id;$/;"	m	struct:__anon382715e21508	typeref:typename:sgl_context
def_ctx_id	$SOKOLC/util/sokol_spine.h	/^    sspine_context def_ctx_id;$/;"	m	struct:__anon5007022e1d08	typeref:typename:sspine_context
def_img	$SOKOLC/util/sokol_gl.h	/^    sg_image def_img;   \/\/ a default white texture$/;"	m	struct:__anon382715e21508	typeref:typename:sg_image
def_img	$SOKOLC/util/sokol_imgui.h	/^    sg_image def_img;       \/\/ used as default image for user images$/;"	m	struct:__anon4720df6a0808	typeref:typename:sg_image
def_img	$SOKOLC/util/sokol_nuklear.h	/^    sg_image def_img;$/;"	m	struct:__anon5a1189810708	typeref:typename:sg_image
def_pip	$SOKOLC/util/sokol_gl.h	/^    sgl_pipeline def_pip;$/;"	m	struct:__anon382715e21008	typeref:typename:sgl_pipeline
def_pip	$SOKOLC/util/sokol_imgui.h	/^    sg_pipeline def_pip;$/;"	m	struct:__anon4720df6a0808	typeref:typename:sg_pipeline
def_shd	$SOKOLC/util/sokol_imgui.h	/^    sg_shader def_shd;$/;"	m	struct:__anon4720df6a0808	typeref:typename:sg_shader
def_smp	$SOKOLC/util/sokol_gl.h	/^    sg_sampler def_smp; \/\/ a default sampler$/;"	m	struct:__anon382715e21508	typeref:typename:sg_sampler
def_smp	$SOKOLC/util/sokol_imgui.h	/^    sg_sampler def_smp;     \/\/ used as default sampler for user images$/;"	m	struct:__anon4720df6a0808	typeref:typename:sg_sampler
def_smp	$SOKOLC/util/sokol_nuklear.h	/^    sg_sampler def_smp;$/;"	m	struct:__anon5a1189810708	typeref:typename:sg_sampler
default_font	$SOKOLC/util/sokol_imgui.h	/^    simgui_image_t default_font;$/;"	m	struct:__anon4720df6a0808	typeref:typename:simgui_image_t
default_font	$SOKOLC/util/sokol_nuklear.h	/^    snk_image_t default_font;$/;"	m	struct:__anon5a1189810708	typeref:typename:snk_image_t
default_framebuffer	$SOKOLC/sokol_gfx.h	/^    GLuint default_framebuffer;$/;"	m	struct:__anon13e02ee72e08	typeref:typename:GLuint
default_framebuffer_cb	$SOKOLC/sokol_gfx.h	/^    uint32_t (*default_framebuffer_cb)(void);$/;"	m	struct:sg_gl_context_desc	typeref:typename:uint32_t (*)(void)
default_framebuffer_userdata_cb	$SOKOLC/sokol_gfx.h	/^    uint32_t (*default_framebuffer_userdata_cb)(void*);$/;"	m	struct:sg_gl_context_desc	typeref:typename:uint32_t (*)(void *)
default_icon_desc	$SOKOLC/sokol_app.h	/^    sapp_icon_desc default_icon_desc;$/;"	E
default_icon_pixels	$SOKOLC/sokol_app.h	/^    uint32_t* default_icon_pixels;$/;"	E
delta_time	$SOKOLC/util/sokol_imgui.h	/^    double delta_time;$/;"	m	struct:simgui_frame_desc_t	typeref:typename:double
depth	$SOKOLC/sokol_gfx.h	/^    sg_depth_state depth;$/;"	m	struct:sg_pipeline_desc	typeref:typename:sg_depth_state
depth	$SOKOLC/util/sokol_shape.h	/^    float width, height, depth;     \/\/ default: 1.0$/;"	m	struct:sshape_box_t	typeref:typename:float
depth_bits	$SOKOLC/sokol_app.h	/^    int         depth_bits;$/;"	E
depth_fail_op	$SOKOLC/sokol_gfx.h	/^    sg_stencil_op depth_fail_op;$/;"	m	struct:sg_stencil_face_state	typeref:typename:sg_stencil_op
depth_format	$SOKOLC/sokol_gfx.h	/^    sg_pixel_format depth_format;$/;"	m	struct:sg_context_desc	typeref:typename:sg_pixel_format
depth_format	$SOKOLC/util/sokol_debugtext.h	/^    sg_pixel_format depth_format;           \/\/ depth pixel format of target render pass$/;"	m	struct:sdtx_context_desc_t	typeref:typename:sg_pixel_format
depth_format	$SOKOLC/util/sokol_gl.h	/^    sg_pixel_format depth_format;$/;"	m	struct:sgl_desc_t	typeref:typename:sg_pixel_format
depth_format	$SOKOLC/util/sokol_imgui.h	/^    sg_pixel_format depth_format;$/;"	m	struct:simgui_desc_t	typeref:typename:sg_pixel_format
depth_format	$SOKOLC/util/sokol_nuklear.h	/^    sg_pixel_format depth_format;$/;"	m	struct:snk_desc_t	typeref:typename:sg_pixel_format
depth_format	$SOKOLC/util/sokol_spine.h	/^    sg_pixel_format depth_format;$/;"	m	struct:sspine_desc	typeref:typename:sg_pixel_format
depth_stencil_attachment	$SOKOLC/sokol_gfx.h	/^    sg_pass_attachment_desc depth_stencil_attachment;$/;"	m	struct:sg_pass_desc	typeref:typename:sg_pass_attachment_desc
depth_stencil_tex	$SOKOLC/sokol_app.h	/^    WGPUTexture depth_stencil_tex;$/;"	E
depth_stencil_view	$SOKOLC/sokol_app.h	/^    WGPUTextureView depth_stencil_view;$/;"	E
depth_stencil_view_cb	$SOKOLC/sokol_gfx.h	/^    const void* (*depth_stencil_view_cb)(void);$/;"	m	struct:sg_d3d11_context_desc	typeref:typename:const void * (*)(void)
depth_stencil_view_userdata_cb	$SOKOLC/sokol_gfx.h	/^    const void* (*depth_stencil_view_userdata_cb)(void*);$/;"	m	struct:sg_wgpu_context_desc	typeref:typename:const void * (*)(void *)
depth_store_action	$SOKOLC/sokol_gfx.h	/^    sg_store_action depth_store_action;$/;"	m	struct:__anon13e02ee73208	typeref:typename:sg_store_action
desc	$SOKOLC/sokol_app.h	/^    sapp_desc desc;$/;"	E
desc	$SOKOLC/sokol_audio.h	/^    saudio_desc desc;$/;"	E
desc	$SOKOLC/sokol_fetch.h	/^    sfetch_desc_t desc;$/;"	m	struct:_sfetch_t	typeref:typename:sfetch_desc_t
desc	$SOKOLC/sokol_gfx.h	/^    sg_desc desc;       \/\/ original desc with default values patched in$/;"	m	struct:__anon13e02ee77608	typeref:typename:sg_desc
desc	$SOKOLC/util/sokol_debugtext.h	/^    sdtx_desc_t desc;$/;"	m	struct:__anona9c6565b0a08	typeref:typename:sdtx_desc_t
desc	$SOKOLC/util/sokol_fontstash.h	/^    sfons_desc_t desc;$/;"	m	struct:_sfons_t	typeref:typename:sfons_desc_t
desc	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_shader_desc desc;$/;"	m	struct:sg_imgui_shader_t	typeref:typename:sg_shader_desc
desc	$SOKOLC/util/sokol_gl.h	/^    sgl_desc_t desc;$/;"	m	struct:__anon382715e21508	typeref:typename:sgl_desc_t
desc	$SOKOLC/util/sokol_imgui.h	/^    simgui_desc_t desc;$/;"	m	struct:__anon4720df6a0808	typeref:typename:simgui_desc_t
desc	$SOKOLC/util/sokol_nuklear.h	/^    snk_desc_t desc;$/;"	m	struct:__anon5a1189810708	typeref:typename:snk_desc_t
desc	$SOKOLC/util/sokol_spine.h	/^    sspine_desc desc;$/;"	m	struct:__anon5007022e1d08	typeref:typename:sspine_desc
destroy_buffer	$SOKOLC/sokol_gfx.h	/^    void (*destroy_buffer)(sg_buffer buf, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_buffer buf,void * user_data)
destroy_buffer	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_destroy_buffer_t destroy_buffer;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_destroy_buffer_t
destroy_image	$SOKOLC/sokol_gfx.h	/^    void (*destroy_image)(sg_image img, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_image img,void * user_data)
destroy_image	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_destroy_image_t destroy_image;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_destroy_image_t
destroy_pass	$SOKOLC/sokol_gfx.h	/^    void (*destroy_pass)(sg_pass pass, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_pass pass,void * user_data)
destroy_pass	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_destroy_pass_t destroy_pass;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_destroy_pass_t
destroy_pipeline	$SOKOLC/sokol_gfx.h	/^    void (*destroy_pipeline)(sg_pipeline pip, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_pipeline pip,void * user_data)
destroy_pipeline	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_destroy_pipeline_t destroy_pipeline;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_destroy_pipeline_t
destroy_sampler	$SOKOLC/sokol_gfx.h	/^    void (*destroy_sampler)(sg_sampler smp, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_sampler smp,void * user_data)
destroy_sampler	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_destroy_sampler_t destroy_sampler;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_destroy_sampler_t
destroy_shader	$SOKOLC/sokol_gfx.h	/^    void (*destroy_shader)(sg_shader shd, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_shader shd,void * user_data)
destroy_shader	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_destroy_shader_t destroy_shader;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_destroy_shader_t
dev	$SOKOLC/sokol_gfx.h	/^    WGPUDevice dev;$/;"	m	struct:__anon13e02ee77108	typeref:typename:WGPUDevice
device	$SOKOLC/sokol_app.h	/^    WGPUDevice device;$/;"	E
device	$SOKOLC/sokol_audio.h	/^    snd_pcm_t* device;$/;"	E
device	$SOKOLC/sokol_gfx.h	/^    id<MTLDevice> device;$/;"	m	struct:__anon13e02ee75708	typeref:typename:id<MTLDevice>
device_context	$SOKOLC/sokol_app.h	/^    ID3D11DeviceContext* device_context;$/;"	E
device_context	$SOKOLC/sokol_gfx.h	/^    const void* device_context;$/;"	m	struct:sg_d3d11_context_desc	typeref:typename:const void *
device_enumerator	$SOKOLC/sokol_audio.h	/^    IMMDeviceEnumerator* device_enumerator;$/;"	E
disable_paste_override	$SOKOLC/util/sokol_imgui.h	/^    bool disable_paste_override;    \/\/ if true, don't send Ctrl-V on EVENTTYPE_CLIPBOARD_PASTE/;"	m	struct:simgui_desc_t	typeref:typename:bool
disable_set_mouse_cursor	$SOKOLC/util/sokol_imgui.h	/^    bool disable_set_mouse_cursor;  \/\/ if true, don't control the mouse cursor type via sapp_s/;"	m	struct:simgui_desc_t	typeref:typename:bool
disable_sokol_imgui_stats	$SOKOLC/util/sokol_gfx_imgui.h	/^    bool disable_sokol_imgui_stats;$/;"	m	struct:sg_imgui_frame_stats_t	typeref:typename:bool
disable_validation	$SOKOLC/sokol_gfx.h	/^    bool disable_validation;    \/\/ disable validation layer even in debug mode, useful for tes/;"	m	struct:sg_desc	typeref:typename:bool
disable_windows_resize_from_edges	$SOKOLC/util/sokol_imgui.h	/^    bool disable_windows_resize_from_edges; \/\/ if true, only resize edges from the bottom righ/;"	m	struct:simgui_desc_t	typeref:typename:bool
disp_size	$SOKOLC/util/sokol_imgui.h	/^    ImVec2 disp_size;$/;"	m	struct:__anon4720df6a0208	typeref:typename:ImVec2
disp_size	$SOKOLC/util/sokol_nuklear.h	/^    float   disp_size[2];$/;"	m	struct:_snk_vs_params_t	typeref:typename:float[2]
dispatched	$SOKOLC/sokol_fetch.h	/^    bool dispatched;                \/\/ true when request is in DISPATCHED state (lane has been/;"	m	struct:sfetch_response_t	typeref:typename:bool
display	$SOKOLC/sokol_app.h	/^    EGLDisplay display;$/;"	E
divisor	$SOKOLC/sokol_gfx.h	/^    int8_t divisor;         \/\/ -1 if not initialized$/;"	m	struct:__anon13e02ee72808	typeref:typename:int8_t
dmy	$SOKOLC/sokol_gfx.h	/^    } dmy;$/;"	m	struct:__anon13e02ee71808	typeref:struct:__anon13e02ee71808::__anon13e02ee71908
doublebuffer	$SOKOLC/sokol_app.h	/^    bool        doublebuffer;$/;"	E
dpi	$SOKOLC/sokol_app.h	/^    float dpi;$/;"	E
dpi_scale	$SOKOLC/sokol_app.h	/^    float dpi_scale;$/;"	E
dpi_scale	$SOKOLC/util/sokol_imgui.h	/^    float dpi_scale;$/;"	m	struct:simgui_frame_desc_t	typeref:typename:float
dpi_scale	$SOKOLC/util/sokol_nuklear.h	/^    float dpi_scale;$/;"	m	struct:snk_desc_t	typeref:typename:float
draggingEntered:	$SOKOLC/sokol_app.h	/^- (NSDragOperation)draggingEntered:(id<NSDraggingInfo>)sender {$/;"	m	implementation:_sapp_macos_window	signature:(id id NSDraggingInfo NSDraggingInfo)
draggingUpdated:	$SOKOLC/sokol_app.h	/^- (NSDragOperation)draggingUpdated:(id<NSDraggingInfo>)sender {$/;"	m	implementation:_sapp_macos_window	signature:(id id NSDraggingInfo NSDraggingInfo)
draw	$SOKOLC/sokol_gfx.h	/^    void (*draw)(int base_element, int num_elements, int num_instances, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(int base_element,int num_elements,int num_instances,void * user_data)
draw	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_draw_t draw;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_draw_t
draw	$SOKOLC/util/sokol_gl.h	/^    _sgl_draw_args_t draw;$/;"	m	union:__anon382715e20e0a	typeref:typename:_sgl_draw_args_t
drawRect:	$SOKOLC/sokol_app.h	/^- (void)drawRect:(CGRect)rect {$/;"	m	implementation:_sapp_ios_view	signature:(CGRect)
drawable_cb	$SOKOLC/sokol_gfx.h	/^    const void*(*drawable_cb)(void);$/;"	m	struct:__anon13e02ee75708	typeref:typename:const void * (*)(void)
drawable_userdata_cb	$SOKOLC/sokol_gfx.h	/^    const void*(*drawable_userdata_cb)(void*);$/;"	m	struct:__anon13e02ee75708	typeref:typename:const void * (*)(void *)
drop	$SOKOLC/sokol_app.h	/^    _sapp_drop_t drop;$/;"	E
dropped_file_index	$SOKOLC/sokol_app.h	/^    int dropped_file_index; \/\/ 0..sapp_get_num_dropped_files()-1$/;"	t
ds_att	$SOKOLC/sokol_gfx.h	/^    _sg_pass_attachment_common_t ds_att;$/;"	m	struct:__anon13e02ee71108	typeref:typename:_sg_pass_attachment_common_t
ds_image_scale	$SOKOLC/util/sokol_gfx_imgui.h	/^    float ds_image_scale;$/;"	m	struct:sg_imgui_pass_t	typeref:typename:float
ds_view	$SOKOLC/sokol_gfx.h	/^    const void* ds_view;  \/\/ WGPUTextureView$/;"	m	struct:sg_wgpu_pass_info	typeref:typename:const void *
dss	$SOKOLC/sokol_gfx.h	/^    const void* dss;  \/\/ ID3D11DepthStencilState*$/;"	m	struct:sg_d3d11_pipeline_info	typeref:typename:const void *
dst_buffer_frames	$SOKOLC/sokol_audio.h	/^    UINT32 dst_buffer_frames;$/;"	E
dst_data_sink	$SOKOLC/sokol_audio.h	/^    SLDataSink dst_data_sink;$/;"	E
dst_factor_alpha	$SOKOLC/sokol_gfx.h	/^    sg_blend_factor dst_factor_alpha;$/;"	m	struct:sg_blend_state	typeref:typename:sg_blend_factor
dst_factor_rgb	$SOKOLC/sokol_gfx.h	/^    sg_blend_factor dst_factor_rgb;$/;"	m	struct:sg_blend_state	typeref:typename:sg_blend_factor
dsv	$SOKOLC/sokol_app.h	/^    ID3D11DepthStencilView* dsv;$/;"	E
dsv	$SOKOLC/sokol_gfx.h	/^    const void* dsv;  \/\/ ID3D11DepthStencilView$/;"	m	struct:sg_d3d11_pass_info	typeref:typename:const void *
dsv_cb	$SOKOLC/sokol_gfx.h	/^    const void* (*dsv_cb)(void);$/;"	m	struct:__anon13e02ee74408	typeref:typename:const void * (*)(void)
dsv_userdata_cb	$SOKOLC/sokol_gfx.h	/^    const void* (*dsv_userdata_cb)(void*);$/;"	m	struct:__anon13e02ee74408	typeref:typename:const void * (*)(void *)
dummy	$SOKOLC/sokol_audio.h	/^    int dummy;$/;"	E	struct:saudio_desc
dummy_mutex	$SOKOLC/sokol_audio.h	/^    int dummy_mutex;$/;"	E	struct:saudio_desc
duration	$SOKOLC/util/sokol_spine.h	/^    float duration;$/;"	m	struct:sspine_anim_info	typeref:typename:float
dxgi_device	$SOKOLC/sokol_app.h	/^    IDXGIDevice1* dxgi_device;$/;"	E
eagl_ctx	$SOKOLC/sokol_app.h	/^        EAGLContext* eagl_ctx;$/;"	E
egl	$SOKOLC/sokol_app.h	/^            _sapp_egl_t egl;$/;"	E
empty_bind_group	$SOKOLC/sokol_gfx.h	/^    WGPUBindGroup empty_bind_group;$/;"	m	struct:__anon13e02ee77108	typeref:typename:WGPUBindGroup
emsc	$SOKOLC/sokol_app.h	/^        _sapp_emsc_t emsc;$/;"	E
enabled	$SOKOLC/sokol_app.h	/^    bool enabled;$/;"	E
enabled	$SOKOLC/sokol_gfx.h	/^    bool enabled;$/;"	m	struct:sg_stencil_state	typeref:typename:bool
end_pass	$SOKOLC/sokol_gfx.h	/^    void (*end_pass)(void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(void * user_data)
engine	$SOKOLC/sokol_audio.h	/^    SLEngineItf engine;$/;"	E
engine_obj	$SOKOLC/sokol_audio.h	/^    SLObjectItf engine_obj;$/;"	E
entry	$SOKOLC/sokol_gfx.h	/^    const char* entry;$/;"	m	struct:sg_shader_stage_desc	typeref:typename:const char *
error	$SOKOLC/util/sokol_gl.h	/^    sgl_error_t error;$/;"	m	struct:__anon382715e21008	typeref:typename:sgl_error_t
error_base	$SOKOLC/sokol_app.h	/^    int error_base;$/;"	E
error_code	$SOKOLC/sokol_app.h	/^    unsigned char error_code;$/;"	E
error_code	$SOKOLC/sokol_fetch.h	/^    sfetch_error_t error_code;$/;"	m	struct:__anon3d2cd3ac0408	typeref:typename:sfetch_error_t
event	$SOKOLC/sokol_app.h	/^    sapp_event event;$/;"	E
event	$SOKOLC/util/sokol_spine.h	/^    sspine_event event;$/;"	m	struct:sspine_triggered_event_info	typeref:typename:sspine_event
event_base	$SOKOLC/sokol_app.h	/^    int event_base;$/;"	E
event_consumed	$SOKOLC/sokol_app.h	/^    bool event_consumed;$/;"	E
ext_anisotropic	$SOKOLC/sokol_gfx.h	/^    bool ext_anisotropic;$/;"	m	struct:__anon13e02ee73208	typeref:typename:bool
ext_swap_control	$SOKOLC/sokol_app.h	/^    bool ext_swap_control;$/;"	E	enum:MONITOR_DPI_TYPE
face_winding	$SOKOLC/sokol_gfx.h	/^    sg_face_winding face_winding;$/;"	m	struct:sg_pipeline_desc	typeref:typename:sg_face_winding
face_winding	$SOKOLC/util/sokol_gl.h	/^    sg_face_winding face_winding;   \/\/ default: SG_FACEWINDING_CCW$/;"	m	struct:sgl_desc_t	typeref:typename:sg_face_winding
fail_buffer	$SOKOLC/sokol_gfx.h	/^    void (*fail_buffer)(sg_buffer buf_id, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_buffer buf_id,void * user_data)
fail_buffer	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_fail_buffer_t fail_buffer;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_fail_buffer_t
fail_image	$SOKOLC/sokol_gfx.h	/^    void (*fail_image)(sg_image img_id, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_image img_id,void * user_data)
fail_image	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_fail_image_t fail_image;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_fail_image_t
fail_op	$SOKOLC/sokol_gfx.h	/^    sg_stencil_op fail_op;$/;"	m	struct:sg_stencil_face_state	typeref:typename:sg_stencil_op
fail_pass	$SOKOLC/sokol_gfx.h	/^    void (*fail_pass)(sg_pass pass_id, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_pass pass_id,void * user_data)
fail_pass	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_fail_pass_t fail_pass;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_fail_pass_t
fail_pipeline	$SOKOLC/sokol_gfx.h	/^    void (*fail_pipeline)(sg_pipeline pip_id, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_pipeline pip_id,void * user_data)
fail_pipeline	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_fail_pipeline_t fail_pipeline;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_fail_pipeline_t
fail_sampler	$SOKOLC/sokol_gfx.h	/^    void (*fail_sampler)(sg_sampler smp_id, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_sampler smp_id,void * user_data)
fail_sampler	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_fail_sampler_t fail_sampler;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_fail_sampler_t
fail_shader	$SOKOLC/sokol_gfx.h	/^    void (*fail_shader)(sg_shader shd_id, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_shader shd_id,void * user_data)
fail_shader	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_fail_shader_t fail_shader;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_fail_shader_t
failed	$SOKOLC/sokol_fetch.h	/^    bool failed;$/;"	m	struct:__anon3d2cd3ac0408	typeref:typename:bool
features	$SOKOLC/sokol_gfx.h	/^    sg_features features;$/;"	m	struct:__anon13e02ee77608	typeref:typename:sg_features
fetched	$SOKOLC/sokol_fetch.h	/^    bool fetched;                   \/\/ true when request is in FETCHED state (fetched data is /;"	m	struct:sfetch_response_t	typeref:typename:bool
fetched_offset	$SOKOLC/sokol_fetch.h	/^    uint32_t fetched_offset;$/;"	m	struct:__anon3d2cd3ac0408	typeref:typename:uint32_t
fetched_size	$SOKOLC/sokol_fetch.h	/^    uint32_t fetched_size;$/;"	m	struct:__anon3d2cd3ac0408	typeref:typename:uint32_t
fifo	$SOKOLC/sokol_audio.h	/^    _saudio_fifo_t fifo;$/;"	E
file_handle	$SOKOLC/sokol_fetch.h	/^    _sfetch_file_handle_t file_handle;$/;"	m	struct:__anon3d2cd3ac0408	typeref:typename:_sfetch_file_handle_t
file_index	$SOKOLC/sokol_app.h	/^    int file_index;         \/\/ index of the dropped file (0..sapp_get_num_dropped_filed()-1)$/;"	E	struct:sapp_html5_fetch_response
filename	$SOKOLC/util/sokol_spine.h	/^    sspine_string filename;$/;"	m	struct:sspine_image_info	typeref:typename:sspine_string
filter	$SOKOLC/sokol_gfx.h	/^    bool filter;$/;"	m	struct:__anon13e02ee77508	typeref:typename:bool
finished	$SOKOLC/sokol_fetch.h	/^    bool finished;$/;"	m	struct:__anon3d2cd3ac0408	typeref:typename:bool
first_char	$SOKOLC/util/sokol_debugtext.h	/^    uint8_t first_char;     \/\/ first character index in font pixel data$/;"	m	struct:sdtx_font_desc_t	typeref:typename:uint8_t
first_frame	$SOKOLC/sokol_app.h	/^    bool first_frame;$/;"	E
first_vertex	$SOKOLC/util/sokol_debugtext.h	/^    int first_vertex;$/;"	m	struct:__anona9c6565b0508	typeref:typename:int
flagsChanged:	$SOKOLC/sokol_app.h	/^- (void)flagsChanged:(NSEvent*)event {$/;"	m	implementation:_sapp_macos_view	signature:(NSEvent*)	category:void
flags_changed_store	$SOKOLC/sokol_app.h	/^    uint32_t flags_changed_store;$/;"	E
float_value	$SOKOLC/util/sokol_spine.h	/^    float float_value;$/;"	m	struct:sspine_triggered_event_info	typeref:typename:float
fmt_buf	$SOKOLC/util/sokol_debugtext.h	/^    char* fmt_buf;$/;"	m	struct:__anona9c6565b0a08	typeref:typename:char *
fmt_buf_size	$SOKOLC/util/sokol_debugtext.h	/^    uint32_t fmt_buf_size;$/;"	m	struct:__anona9c6565b0a08	typeref:typename:uint32_t
font_img	$SOKOLC/util/sokol_debugtext.h	/^    sg_image font_img;$/;"	m	struct:__anona9c6565b0a08	typeref:typename:sg_image
font_img	$SOKOLC/util/sokol_imgui.h	/^    sg_image font_img;$/;"	m	struct:__anon4720df6a0808	typeref:typename:sg_image
font_img	$SOKOLC/util/sokol_nuklear.h	/^    sg_image font_img;$/;"	m	struct:__anon5a1189810708	typeref:typename:sg_image
font_pixels	$SOKOLC/util/sokol_debugtext.h	/^    uint8_t font_pixels[SDTX_MAX_FONTS * 256 * 8 * 8];$/;"	m	struct:__anona9c6565b0a08	typeref:typename:uint8_t[]
font_smp	$SOKOLC/util/sokol_debugtext.h	/^    sg_sampler font_smp;$/;"	m	struct:__anona9c6565b0a08	typeref:typename:sg_sampler
font_smp	$SOKOLC/util/sokol_imgui.h	/^    sg_sampler font_smp;$/;"	m	struct:__anon4720df6a0808	typeref:typename:sg_sampler
font_smp	$SOKOLC/util/sokol_nuklear.h	/^    sg_sampler font_smp;$/;"	m	struct:__anon5a1189810708	typeref:typename:sg_sampler
fonts	$SOKOLC/util/sokol_debugtext.h	/^    sdtx_font_desc_t fonts[SDTX_MAX_FONTS]; \/\/ up to 8 fonts descriptions$/;"	m	struct:sdtx_desc_t	typeref:typename:sdtx_font_desc_t[]
format	$SOKOLC/sokol_app.h	/^    Atom format;$/;"	E
format	$SOKOLC/sokol_gfx.h	/^    sg_vertex_format format;$/;"	m	struct:sg_vertex_attr_state	typeref:typename:sg_vertex_format
formats	$SOKOLC/sokol_gfx.h	/^    _sg_pixelformat_info_t formats[_SG_PIXELFORMAT_NUM];$/;"	m	struct:__anon13e02ee77608	typeref:typename:_sg_pixelformat_info_t[]
frame_buffer	$SOKOLC/sokol_gfx.h	/^    uint32_t frame_buffer;$/;"	m	struct:sg_gl_pass_info	typeref:typename:uint32_t
frame_count	$SOKOLC/sokol_app.h	/^    uint64_t frame_count;$/;"	E
frame_id	$SOKOLC/util/sokol_debugtext.h	/^    uint32_t frame_id;$/;"	m	struct:__anona9c6565b0608	typeref:typename:uint32_t
frame_id	$SOKOLC/util/sokol_gl.h	/^    uint32_t frame_id;$/;"	m	struct:__anon382715e21008	typeref:typename:uint32_t
frame_id	$SOKOLC/util/sokol_spine.h	/^    uint32_t frame_id;$/;"	m	struct:__anon5007022e1d08	typeref:typename:uint32_t
frame_index	$SOKOLC/sokol_gfx.h	/^    uint32_t frame_index;$/;"	m	struct:__anon13e02ee77608	typeref:typename:uint32_t
frame_stats	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_frame_stats_t frame_stats;$/;"	m	struct:sg_imgui_t	typeref:typename:sg_imgui_frame_stats_t
framebuffer_height	$SOKOLC/sokol_app.h	/^    int framebuffer_height;$/;"	E
framebuffer_width	$SOKOLC/sokol_app.h	/^    int framebuffer_width;$/;"	E
free_fn	$SOKOLC/sokol_args.h	/^    void (*free_fn)(void* ptr, void* user_data);$/;"	m	struct:sargs_allocator	typeref:typename:void (*)(void * ptr,void * user_data)
free_fn	$SOKOLC/sokol_fetch.h	/^    void (*free_fn)(void* ptr, void* user_data);$/;"	m	struct:sfetch_allocator_t	typeref:typename:void (*)(void * ptr,void * user_data)
free_fn	$SOKOLC/sokol_gfx.h	/^    void (*free_fn)(void* ptr, void* user_data);$/;"	m	struct:sg_allocator	typeref:typename:void (*)(void * ptr,void * user_data)
free_fn	$SOKOLC/util/sokol_debugtext.h	/^    void (*free_fn)(void* ptr, void* user_data);$/;"	m	struct:sdtx_allocator_t	typeref:typename:void (*)(void * ptr,void * user_data)
free_fn	$SOKOLC/util/sokol_fontstash.h	/^    void (*free_fn)(void* ptr, void* user_data);$/;"	m	struct:sfons_allocator_t	typeref:typename:void (*)(void * ptr,void * user_data)
free_fn	$SOKOLC/util/sokol_gfx_imgui.h	/^    void (*free_fn)(void* ptr, void* user_data);$/;"	m	struct:sg_imgui_allocator_t	typeref:typename:void (*)(void * ptr,void * user_data)
free_fn	$SOKOLC/util/sokol_gl.h	/^    void (*free_fn)(void* ptr, void* user_data);$/;"	m	struct:sgl_allocator_t	typeref:typename:void (*)(void * ptr,void * user_data)
free_fn	$SOKOLC/util/sokol_imgui.h	/^    void (*free_fn)(void* ptr, void* user_data);$/;"	m	struct:simgui_allocator_t	typeref:typename:void (*)(void * ptr,void * user_data)
free_fn	$SOKOLC/util/sokol_nuklear.h	/^    void (*free_fn)(void* ptr, void* user_data);$/;"	m	struct:snk_allocator_t	typeref:typename:void (*)(void * ptr,void * user_data)
free_fn	$SOKOLC/util/sokol_spine.h	/^    void (*free_fn)(void* ptr, void* user_data);$/;"	m	struct:sspine_allocator	typeref:typename:void (*)(void * ptr,void * user_data)
free_lanes	$SOKOLC/sokol_fetch.h	/^    _sfetch_ring_t free_lanes;$/;"	m	struct:__anon3d2cd3ac0808	typeref:typename:_sfetch_ring_t
free_queue	$SOKOLC/sokol_gfx.h	/^    int* free_queue;$/;"	m	struct:__anon13e02ee74608	typeref:typename:int *
free_queue	$SOKOLC/util/sokol_debugtext.h	/^    int* free_queue;$/;"	m	struct:__anona9c6565b0208	typeref:typename:int *
free_queue	$SOKOLC/util/sokol_gl.h	/^    int* free_queue;$/;"	m	struct:__anon382715e20308	typeref:typename:int *
free_queue	$SOKOLC/util/sokol_imgui.h	/^    int* free_queue;$/;"	m	struct:__anon4720df6a0508	typeref:typename:int *
free_queue	$SOKOLC/util/sokol_nuklear.h	/^    int* free_queue;$/;"	m	struct:__anon5a1189810408	typeref:typename:int *
free_queue	$SOKOLC/util/sokol_spine.h	/^    int* free_queue;$/;"	m	struct:__anon5007022e0508	typeref:typename:int *
free_queue_top	$SOKOLC/sokol_gfx.h	/^    int free_queue_top;$/;"	m	struct:__anon13e02ee74608	typeref:typename:int
free_slots	$SOKOLC/sokol_fetch.h	/^    uint32_t* free_slots;$/;"	m	struct:__anon3d2cd3ac0608	typeref:typename:uint32_t *
free_top	$SOKOLC/sokol_fetch.h	/^    uint32_t free_top;$/;"	m	struct:__anon3d2cd3ac0608	typeref:typename:uint32_t
freq	$SOKOLC/sokol_time.h	/^    LARGE_INTEGER freq;$/;"	m	struct:__anonae6a40310108	typeref:typename:LARGE_INTEGER
front	$SOKOLC/sokol_gfx.h	/^    sg_stencil_face_state front;$/;"	m	struct:sg_stencil_state	typeref:typename:sg_stencil_face_state
fs_cbufs	$SOKOLC/sokol_gfx.h	/^    const void* fs_cbufs[SG_MAX_SHADERSTAGE_UBS]; \/\/ ID3D11BUffer* (fragment stage constant bu/;"	m	struct:sg_d3d11_shader_info	typeref:typename:const void * []
fs_d3d11_target	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_str_t fs_d3d11_target;$/;"	m	struct:sg_imgui_shader_t	typeref:typename:sg_imgui_str_t
fs_entry	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_str_t fs_entry;$/;"	m	struct:sg_imgui_shader_t	typeref:typename:sg_imgui_str_t
fs_func	$SOKOLC/sokol_gfx.h	/^    const void* fs_func;  \/\/ id<MTLFunction>$/;"	m	struct:sg_mtl_shader_info	typeref:typename:const void *
fs_image_sampler_name	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_str_t fs_image_sampler_name[SG_MAX_SHADERSTAGE_IMAGESAMPLERPAIRS];$/;"	m	struct:sg_imgui_shader_t	typeref:typename:sg_imgui_str_t[]
fs_imgs	$SOKOLC/sokol_gfx.h	/^    _sg_image_t* fs_imgs[SG_MAX_SHADERSTAGE_IMAGES];$/;"	m	struct:__anon13e02ee77408	typeref:typename:_sg_image_t * []
fs_lib	$SOKOLC/sokol_gfx.h	/^    const void* fs_lib;   \/\/ id<MTLLibrary>$/;"	m	struct:sg_mtl_shader_info	typeref:typename:const void *
fs_mod	$SOKOLC/sokol_gfx.h	/^    const void* fs_mod;   \/\/ WGPUShaderModule$/;"	m	struct:sg_wgpu_shader_info	typeref:typename:const void *
fs_smps	$SOKOLC/sokol_gfx.h	/^    _sg_sampler_t* fs_smps[SG_MAX_SHADERSTAGE_SAMPLERS];$/;"	m	struct:__anon13e02ee77408	typeref:typename:_sg_sampler_t * []
fs_uniform_name	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_str_t fs_uniform_name[SG_MAX_SHADERSTAGE_UBS][SG_MAX_UB_MEMBERS];$/;"	m	struct:sg_imgui_shader_t	typeref:typename:sg_imgui_str_t[][]
fullscreen	$SOKOLC/sokol_app.h	/^    bool fullscreen;$/;"	E
func	$SOKOLC/sokol_fetch.h	/^    void (*func)($/;"	m	struct:sfetch_logger_t	typeref:typename:void (*)(const char * tag,uint32_t log_level,uint32_t log_item_id,const char * message_or_null,uint32_t line_nr,const char * filename_or_null,void * user_data)
func	$SOKOLC/sokol_gfx.h	/^    void (*func)(void* user_data);$/;"	m	struct:sg_commit_listener	typeref:typename:void (*)(void * user_data)
func	$SOKOLC/util/sokol_debugtext.h	/^    void (*func)($/;"	m	struct:sdtx_logger_t	typeref:typename:void (*)(const char * tag,uint32_t log_level,uint32_t log_item_id,const char * message_or_null,uint32_t line_nr,const char * filename_or_null,void * user_data)
func	$SOKOLC/util/sokol_gl.h	/^    void (*func)($/;"	m	struct:sgl_logger_t	typeref:typename:void (*)(const char * tag,uint32_t log_level,uint32_t log_item_id,const char * message_or_null,uint32_t line_nr,const char * filename_or_null,void * user_data)
func	$SOKOLC/util/sokol_imgui.h	/^    void (*func)($/;"	m	struct:simgui_logger_t	typeref:typename:void (*)(const char * tag,uint32_t log_level,uint32_t log_item_id,const char * message_or_null,uint32_t line_nr,const char * filename_or_null,void * user_data)
func	$SOKOLC/util/sokol_nuklear.h	/^    void (*func)($/;"	m	struct:snk_logger_t	typeref:typename:void (*)(const char * tag,uint32_t log_level,uint32_t log_item_id,const char * message_or_null,uint32_t line_nr,const char * filename_or_null,void * user_data)
func	$SOKOLC/util/sokol_spine.h	/^    void (*func)($/;"	m	struct:sspine_logger	typeref:typename:void (*)(const char * tag,uint32_t log_level,uint32_t log_item_id,const char * message_or_null,uint32_t line_nr,const char * filename_or_null,void * user_data)
gen_ctrs	$SOKOLC/sokol_fetch.h	/^    uint32_t* gen_ctrs;$/;"	m	struct:__anon3d2cd3ac0608	typeref:typename:uint32_t *
gen_ctrs	$SOKOLC/sokol_gfx.h	/^    uint32_t* gen_ctrs;$/;"	m	struct:__anon13e02ee70308	typeref:typename:uint32_t *
gen_ctrs	$SOKOLC/util/sokol_debugtext.h	/^    uint32_t* gen_ctrs;$/;"	m	struct:__anona9c6565b0208	typeref:typename:uint32_t *
gen_ctrs	$SOKOLC/util/sokol_gl.h	/^    uint32_t* gen_ctrs;$/;"	m	struct:__anon382715e20308	typeref:typename:uint32_t *
gen_ctrs	$SOKOLC/util/sokol_imgui.h	/^    uint32_t* gen_ctrs;$/;"	m	struct:__anon4720df6a0508	typeref:typename:uint32_t *
gen_ctrs	$SOKOLC/util/sokol_nuklear.h	/^    uint32_t* gen_ctrs;$/;"	m	struct:__anon5a1189810408	typeref:typename:uint32_t *
gen_ctrs	$SOKOLC/util/sokol_spine.h	/^    uint32_t* gen_ctrs;$/;"	m	struct:__anon5007022e0508	typeref:typename:uint32_t *
gl_attr	$SOKOLC/sokol_gfx.h	/^    _sg_gl_attr_t gl_attr;$/;"	m	struct:__anon13e02ee72f08	typeref:typename:_sg_gl_attr_t
gl_buffers	$SOKOLC/sokol_gfx.h	/^    uint32_t gl_buffers[SG_NUM_INFLIGHT_FRAMES];$/;"	m	struct:sg_buffer_desc	typeref:typename:uint32_t[]
gl_ctx	$SOKOLC/sokol_app.h	/^    HGLRC gl_ctx;$/;"	E	enum:MONITOR_DPI_TYPE
gl_loc	$SOKOLC/sokol_gfx.h	/^    GLint gl_loc;$/;"	m	struct:__anon13e02ee72108	typeref:typename:GLint
gl_max_combined_texture_image_units	$SOKOLC/sokol_gfx.h	/^    int gl_max_combined_texture_image_units; \/\/ <= GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS (only o/;"	m	struct:sg_limits	typeref:typename:int
gl_max_vertex_uniform_vectors	$SOKOLC/sokol_gfx.h	/^    int gl_max_vertex_uniform_vectors;  \/\/ <= GL_MAX_VERTEX_UNIFORM_VECTORS (only on GL backen/;"	m	struct:sg_limits	typeref:typename:int
gl_sampler	$SOKOLC/sokol_gfx.h	/^    uint32_t gl_sampler;$/;"	m	struct:sg_sampler_desc	typeref:typename:uint32_t
gl_tex_slot	$SOKOLC/sokol_gfx.h	/^    int gl_tex_slot;$/;"	m	struct:__anon13e02ee72308	typeref:typename:int
gl_texture_target	$SOKOLC/sokol_gfx.h	/^    uint32_t gl_texture_target;$/;"	m	struct:sg_image_desc	typeref:typename:uint32_t
gl_textures	$SOKOLC/sokol_gfx.h	/^    uint32_t gl_textures[SG_NUM_INFLIGHT_FRAMES];$/;"	m	struct:sg_image_desc	typeref:typename:uint32_t[]
gl_vbuf	$SOKOLC/sokol_gfx.h	/^    GLuint gl_vbuf;$/;"	m	struct:__anon13e02ee72f08	typeref:typename:GLuint
glsl_name	$SOKOLC/sokol_gfx.h	/^    const char* glsl_name;$/;"	m	struct:sg_shader_image_sampler_pair_desc	typeref:typename:const char *
glx	$SOKOLC/sokol_app.h	/^            _sapp_glx_t glx;$/;"	E
glyph_size	$SOKOLC/util/sokol_debugtext.h	/^    _sdtx_float2_t glyph_size;$/;"	m	struct:__anona9c6565b0608	typeref:typename:_sdtx_float2_t
green_bits	$SOKOLC/sokol_app.h	/^    int         green_bits;$/;"	E
group	$SOKOLC/sokol_gfx.h	/^        WGPUBindGroup group;$/;"	m	struct:__anon13e02ee76708::__anon13e02ee76808	typeref:typename:WGPUBindGroup
group_layout	$SOKOLC/sokol_gfx.h	/^        WGPUBindGroupLayout group_layout;$/;"	m	struct:__anon13e02ee76708::__anon13e02ee76808	typeref:typename:WGPUBindGroupLayout
handle	$SOKOLC/sokol_app.h	/^    uintptr_t   handle;$/;"	E
handle	$SOKOLC/sokol_fetch.h	/^    sfetch_handle_t handle;$/;"	m	struct:__anon3d2cd3ac0508	typeref:typename:sfetch_handle_t
handle_interruption:	$SOKOLC/sokol_audio.h	/^-(void)handle_interruption:(NSNotification*)notification {$/;"	m	implementation:_saudio_interruption_handler	signature:(NSNotification*)
has_created	$SOKOLC/sokol_app.h	/^    bool has_created;$/;"	E
has_focus	$SOKOLC/sokol_app.h	/^    bool has_focus;$/;"	E
has_resumed	$SOKOLC/sokol_app.h	/^    bool has_resumed;$/;"	E
hash	$SOKOLC/sokol_gfx.h	/^    uint64_t hash;$/;"	m	struct:__anon13e02ee76a08	typeref:typename:uint64_t
head	$SOKOLC/sokol_app.h	/^    int head;$/;"	E
head	$SOKOLC/sokol_audio.h	/^    int head;  \/\/ next slot to write to$/;"	E
head	$SOKOLC/sokol_fetch.h	/^    uint32_t head;$/;"	m	struct:__anon3d2cd3ac0708	typeref:typename:uint32_t
height	$SOKOLC/sokol_gfx.h	/^    int height;$/;"	m	struct:sg_image_desc	typeref:typename:int
height	$SOKOLC/util/sokol_fontstash.h	/^    int height;   \/\/ initial height of font atlas texture (default: 512, must be power of 2)$/;"	m	struct:sfons_desc_t	typeref:typename:int
height	$SOKOLC/util/sokol_gfx_imgui.h	/^    int x, y, width, height;$/;"	m	struct:sg_imgui_args_apply_viewport_t	typeref:typename:int
height	$SOKOLC/util/sokol_imgui.h	/^    int height;$/;"	m	struct:simgui_frame_desc_t	typeref:typename:int
height	$SOKOLC/util/sokol_shape.h	/^    float width, height, depth;     \/\/ default: 1.0$/;"	m	struct:sshape_box_t	typeref:typename:float
height	$SOKOLC/util/sokol_spine.h	/^    int height;$/;"	m	struct:sspine_image_info	typeref:typename:int
hidden_cursor	$SOKOLC/sokol_app.h	/^    Cursor hidden_cursor;$/;"	E
hmonitor	$SOKOLC/sokol_app.h	/^    HMONITOR hmonitor;$/;"	E	enum:MONITOR_DPI_TYPE
hooks	$SOKOLC/sokol_gfx.h	/^    sg_trace_hooks hooks;$/;"	m	struct:__anon13e02ee77608	typeref:typename:sg_trace_hooks
hooks	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_trace_hooks hooks;$/;"	m	struct:sg_imgui_t	typeref:typename:sg_trace_hooks
html5_ask_leave_site	$SOKOLC/sokol_app.h	/^    bool html5_ask_leave_site;$/;"	E
html5_canvas_selector	$SOKOLC/sokol_app.h	/^    char html5_canvas_selector[_SAPP_MAX_TITLE_LENGTH];$/;"	E
http_range_offset	$SOKOLC/sokol_fetch.h	/^    uint32_t http_range_offset;$/;"	m	struct:__anon3d2cd3ac0408	typeref:typename:uint32_t
hwnd	$SOKOLC/sokol_app.h	/^    HWND hwnd;$/;"	E	enum:MONITOR_DPI_TYPE
ib_offset	$SOKOLC/sokol_gfx.h	/^    int ib_offset;$/;"	m	struct:__anon13e02ee77408	typeref:typename:int
ibuf	$SOKOLC/util/sokol_imgui.h	/^    sg_buffer ibuf;$/;"	m	struct:__anon4720df6a0808	typeref:typename:sg_buffer
ibuf	$SOKOLC/util/sokol_nuklear.h	/^    sg_buffer ibuf;$/;"	m	struct:__anon5a1189810708	typeref:typename:sg_buffer
ibuf	$SOKOLC/util/sokol_spine.h	/^    sg_buffer ibuf;$/;"	m	struct:__anon5007022e1708	typeref:typename:sg_buffer
iconified	$SOKOLC/sokol_app.h	/^    bool iconified;$/;"	E	enum:MONITOR_DPI_TYPE
identifier	$SOKOLC/sokol_app.h	/^    uintptr_t identifier;$/;"	E	struct:sapp_touchpoint
idpool	$SOKOLC/sokol_gfx.h	/^    sg_frame_stats_metal_idpool idpool;$/;"	m	struct:sg_frame_stats_metal	typeref:typename:sg_frame_stats_metal_idpool
igBegin	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE bool igBegin(const char* name,bool* p_open,ImGuiWindowFlags flags) {$/;"	f	typeref:typename:_SOKOL_PRIVATE bool	signature:(const char * name,bool * p_open,ImGuiWindowFlags flags)
igBeginChild_Str	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE bool igBeginChild_Str(const char* str_id,const ImVec2 size,bool border,ImGuiWindo/;"	f	typeref:typename:_SOKOL_PRIVATE bool	signature:(const char * str_id,const ImVec2 size,bool border,ImGuiWindowFlags flags)
igBeginMenu	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE bool igBeginMenu(const char* label, bool enabled) {$/;"	f	typeref:typename:_SOKOL_PRIVATE bool	signature:(const char * label,bool enabled)
igBeginTable	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE bool igBeginTable(const char* str_id, int column, ImGuiTableFlags flags, const Im/;"	f	typeref:typename:_SOKOL_PRIVATE bool	signature:(const char * str_id,int column,ImGuiTableFlags flags,const ImVec2 outer_size,float inner_width)
igCheckbox	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE bool igCheckbox(const char* label, bool* v) {$/;"	f	typeref:typename:_SOKOL_PRIVATE bool	signature:(const char * label,bool * v)
igEnd	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE void igEnd() {$/;"	f	typeref:typename:_SOKOL_PRIVATE void	signature:()
igEndChild	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE void igEndChild() {$/;"	f	typeref:typename:_SOKOL_PRIVATE void	signature:()
igEndMenu	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE void igEndMenu(void) {$/;"	f	typeref:typename:_SOKOL_PRIVATE void	signature:(void)
igEndTable	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE void igEndTable(void) {$/;"	f	typeref:typename:_SOKOL_PRIVATE void	signature:(void)
igImage	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE void igImage(ImTextureID user_texture_id,const ImVec2 size,const ImVec2 uv0,const/;"	f	typeref:typename:_SOKOL_PRIVATE void	signature:(ImTextureID user_texture_id,const ImVec2 size,const ImVec2 uv0,const ImVec2 uv1,const ImVec4 tint_col,const ImVec4 border_col)
igIsItemHovered	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE bool igIsItemHovered(ImGuiHoveredFlags flags) {$/;"	f	typeref:typename:_SOKOL_PRIVATE bool	signature:(ImGuiHoveredFlags flags)
igMenuItem_BoolPtr	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE bool igMenuItem_BoolPtr(const char* label, const char* shortcut, bool* p_selected/;"	f	typeref:typename:_SOKOL_PRIVATE bool	signature:(const char * label,const char * shortcut,bool * p_selected,bool enabled)
igPopID	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE void igPopID() {$/;"	f	typeref:typename:_SOKOL_PRIVATE void	signature:()
igPopStyleColor	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE void igPopStyleColor(int count) {$/;"	f	typeref:typename:_SOKOL_PRIVATE void	signature:(int count)
igPushID_Int	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE void igPushID_Int(int int_id) {$/;"	f	typeref:typename:_SOKOL_PRIVATE void	signature:(int int_id)
igPushStyleColor_U32	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE void igPushStyleColor_U32(ImGuiCol idx, ImU32 col) {$/;"	f	typeref:typename:_SOKOL_PRIVATE void	signature:(ImGuiCol idx,ImU32 col)
igSameLine	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE void igSameLine(float offset_from_start_x, float spacing) {$/;"	f	typeref:typename:_SOKOL_PRIVATE void	signature:(float offset_from_start_x,float spacing)
igSelectable_Bool	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE bool igSelectable_Bool(const char* label,bool selected,ImGuiSelectableFlags flags/;"	f	typeref:typename:_SOKOL_PRIVATE bool	signature:(const char * label,bool selected,ImGuiSelectableFlags flags,const ImVec2 size)
igSeparator	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE void igSeparator() {$/;"	f	typeref:typename:_SOKOL_PRIVATE void	signature:()
igSetNextWindowSize	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE void igSetNextWindowSize(const ImVec2 size,ImGuiCond cond) {$/;"	f	typeref:typename:_SOKOL_PRIVATE void	signature:(const ImVec2 size,ImGuiCond cond)
igSetTooltip	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE void igSetTooltip(const char* fmt,...) {$/;"	f	typeref:typename:_SOKOL_PRIVATE void	signature:(const char * fmt,...)
igSliderFloat	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE bool igSliderFloat(const char* label,float* v,float v_min,float v_max,const char*/;"	f	typeref:typename:_SOKOL_PRIVATE bool	signature:(const char * label,float * v,float v_min,float v_max,const char * format,ImGuiSliderFlags flags)
igSmallButton	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE bool igSmallButton(const char* label) {$/;"	f	typeref:typename:_SOKOL_PRIVATE bool	signature:(const char * label)
igTableHeadersRow	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE void igTableHeadersRow(void) {$/;"	f	typeref:typename:_SOKOL_PRIVATE void	signature:(void)
igTableNextRow	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE void igTableNextRow(ImGuiTableRowFlags row_flags, float min_row_height) {$/;"	f	typeref:typename:_SOKOL_PRIVATE void	signature:(ImGuiTableRowFlags row_flags,float min_row_height)
igTableSetColumnIndex	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE bool igTableSetColumnIndex(int column_n) {$/;"	f	typeref:typename:_SOKOL_PRIVATE bool	signature:(int column_n)
igTableSetupColumn	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE void igTableSetupColumn(const char* label, ImGuiTableColumnFlags flags, float ini/;"	f	typeref:typename:_SOKOL_PRIVATE void	signature:(const char * label,ImGuiTableColumnFlags flags,float init_width_or_weight,ImGuiID user_id)
igTableSetupScrollFreeze	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE void igTableSetupScrollFreeze(int cols, int rows) {$/;"	f	typeref:typename:_SOKOL_PRIVATE void	signature:(int cols,int rows)
igText	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE void igText(const char* fmt,...) {$/;"	f	typeref:typename:_SOKOL_PRIVATE void	signature:(const char * fmt,...)
igTreeNode_Str	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE bool igTreeNode_Str(const char* label) {$/;"	f	typeref:typename:_SOKOL_PRIVATE bool	signature:(const char * label)
igTreeNode_StrStr	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE bool igTreeNode_StrStr(const char* str_id,const char* fmt,...) {$/;"	f	typeref:typename:_SOKOL_PRIVATE bool	signature:(const char * str_id,const char * fmt,...)
igTreePop	$SOKOLC/util/sokol_gfx_imgui.h	/^_SOKOL_PRIVATE void igTreePop() {$/;"	f	typeref:typename:_SOKOL_PRIVATE void	signature:()
image	$SOKOLC/sokol_gfx.h	/^    sg_image image;$/;"	m	struct:sg_pass_attachment_desc	typeref:typename:sg_image
image	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_image image;$/;"	m	struct:sg_imgui_args_update_image_t	typeref:typename:sg_image
image	$SOKOLC/util/sokol_imgui.h	/^    sg_image image;$/;"	m	struct:simgui_image_desc_t	typeref:typename:sg_image
image	$SOKOLC/util/sokol_nuklear.h	/^    sg_image image;$/;"	m	struct:snk_image_desc_t	typeref:typename:sg_image
image	$SOKOLC/util/sokol_spine.h	/^    sspine_image_info image;$/;"	m	struct:sspine_atlas_page_info	typeref:typename:sspine_image_info
image_clamp_to_border	$SOKOLC/sokol_gfx.h	/^    bool image_clamp_to_border;         \/\/ border color and clamp-to-border UV-wrap mode is su/;"	m	struct:sg_features	typeref:typename:bool
image_id	$SOKOLC/sokol_gfx.h	/^    sg_image image_id;$/;"	m	struct:__anon13e02ee71008	typeref:typename:sg_image
image_pool	$SOKOLC/sokol_gfx.h	/^    _sg_pool_t image_pool;$/;"	m	struct:__anon13e02ee77208	typeref:typename:_sg_pool_t
image_pool	$SOKOLC/util/sokol_imgui.h	/^    _simgui_image_pool_t image_pool;$/;"	m	struct:__anon4720df6a0808	typeref:typename:_simgui_image_pool_t
image_pool	$SOKOLC/util/sokol_nuklear.h	/^    _snk_image_pool_t image_pool;$/;"	m	struct:__anon5a1189810708	typeref:typename:_snk_image_pool_t
image_pool_size	$SOKOLC/sokol_gfx.h	/^    int image_pool_size;$/;"	m	struct:sg_desc	typeref:typename:int
image_pool_size	$SOKOLC/util/sokol_imgui.h	/^    int image_pool_size;            \/\/ default: 256$/;"	m	struct:simgui_desc_t	typeref:typename:int
image_pool_size	$SOKOLC/util/sokol_nuklear.h	/^    int image_pool_size;                \/\/ default: 256$/;"	m	struct:snk_desc_t	typeref:typename:int
image_sampler_pairs	$SOKOLC/sokol_gfx.h	/^    sg_shader_image_sampler_pair_desc image_sampler_pairs[SG_MAX_SHADERSTAGE_IMAGESAMPLERPAIRS];$/;"	m	struct:sg_shader_stage_desc	typeref:typename:sg_shader_image_sampler_pair_desc[]
image_samplers	$SOKOLC/sokol_gfx.h	/^    _sg_shader_image_sampler_t image_samplers[SG_MAX_SHADERSTAGE_IMAGESAMPLERPAIRS];$/;"	m	struct:__anon13e02ee70d08	typeref:typename:_sg_shader_image_sampler_t[]
image_slot	$SOKOLC/sokol_gfx.h	/^    int image_slot;$/;"	m	struct:sg_shader_image_sampler_pair_desc	typeref:typename:int
image_type	$SOKOLC/sokol_gfx.h	/^    sg_image_type image_type;$/;"	m	struct:sg_shader_image_desc	typeref:typename:sg_image_type
images	$SOKOLC/sokol_app.h	/^    sapp_image_desc images[SAPP_MAX_ICONIMAGES];$/;"	E	struct:sapp_icon_desc
images	$SOKOLC/sokol_gfx.h	/^    sg_shader_image_desc images[SG_MAX_SHADERSTAGE_IMAGES];$/;"	m	struct:sg_shader_stage_desc	typeref:typename:sg_shader_image_desc[]
images	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_images_t images;$/;"	m	struct:sg_imgui_t	typeref:typename:sg_imgui_images_t
img	$SOKOLC/util/sokol_fontstash.h	/^    sg_image img;$/;"	m	struct:_sfons_t	typeref:typename:sg_image
img	$SOKOLC/util/sokol_gl.h	/^    sg_image img;$/;"	m	struct:__anon382715e20b08	typeref:typename:sg_image
img	$SOKOLC/util/sokol_spine.h	/^    sg_image img;$/;"	m	struct:__anon5007022e1608	typeref:typename:sg_image
img_dirty	$SOKOLC/util/sokol_fontstash.h	/^    bool img_dirty;$/;"	m	struct:_sfons_t	typeref:typename:bool
inBuffer	$SOKOLC/sokol_audio.h	/^typedef void (*_saudio_AudioQueueOutputCallback)(void* user_data, _saudio_AudioQueueRef inAQ, _s/;"	t
in_begin	$SOKOLC/util/sokol_gl.h	/^    bool in_begin;$/;"	m	struct:__anon382715e21008	typeref:typename:bool
in_callback	$SOKOLC/sokol_fetch.h	/^    bool in_callback;$/;"	m	struct:_sfetch_t	typeref:typename:bool
in_create_window	$SOKOLC/sokol_app.h	/^    bool in_create_window;$/;"	E	enum:MONITOR_DPI_TYPE
in_escape	$SOKOLC/sokol_args.h	/^    bool in_escape;     \/* currently in an escape sequence *\/$/;"	m	struct:__anon82b80a0f0208	typeref:typename:bool
in_locator	$SOKOLC/sokol_audio.h	/^    SLDataLocator_AndroidSimpleBufferQueue in_locator;$/;"	E
in_pass	$SOKOLC/sokol_gfx.h	/^    bool in_pass;$/;"	m	struct:__anon13e02ee77108	typeref:typename:bool
in_sokol_imgui	$SOKOLC/util/sokol_gfx_imgui.h	/^    bool in_sokol_imgui;$/;"	m	struct:sg_imgui_frame_stats_t	typeref:typename:bool
incoming_cond	$SOKOLC/sokol_fetch.h	/^    pthread_cond_t incoming_cond;$/;"	m	struct:__anon3d2cd3ac0108	typeref:typename:pthread_cond_t
incoming_critsec	$SOKOLC/sokol_fetch.h	/^    CRITICAL_SECTION incoming_critsec;$/;"	m	struct:__anon3d2cd3ac0208	typeref:typename:CRITICAL_SECTION
incoming_event	$SOKOLC/sokol_fetch.h	/^    HANDLE incoming_event;$/;"	m	struct:__anon3d2cd3ac0208	typeref:typename:HANDLE
incoming_mutex	$SOKOLC/sokol_fetch.h	/^    pthread_mutex_t incoming_mutex;$/;"	m	struct:__anon3d2cd3ac0108	typeref:typename:pthread_mutex_t
index	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_slot { uint32_t skeleton_id; int index; } sspine_slot;$/;"	m	struct:sspine_slot	typeref:typename:int
index_buffer	$SOKOLC/sokol_gfx.h	/^    sg_buffer index_buffer;$/;"	m	struct:sg_bindings	typeref:typename:sg_buffer
index_buffer_offset	$SOKOLC/sokol_gfx.h	/^    int index_buffer_offset;$/;"	m	struct:sg_bindings	typeref:typename:int
index_buffer_size	$SOKOLC/util/sokol_nuklear.h	/^    size_t index_buffer_size;$/;"	m	struct:__anon5a1189810708	typeref:typename:size_t
index_format	$SOKOLC/sokol_gfx.h	/^        DXGI_FORMAT index_format;$/;"	m	struct:__anon13e02ee73d08::__anon13e02ee73e08	typeref:typename:DXGI_FORMAT
index_mask	$SOKOLC/sokol_gfx.h	/^    uint32_t index_mask;    \/\/ mask to turn hash into valid index$/;"	m	struct:__anon13e02ee76b08	typeref:typename:uint32_t
index_size	$SOKOLC/sokol_gfx.h	/^        int index_size;$/;"	m	struct:__anon13e02ee75008::__anon13e02ee75108	typeref:typename:int
index_type	$SOKOLC/sokol_gfx.h	/^    sg_index_type index_type;$/;"	m	struct:sg_pipeline_desc	typeref:typename:sg_index_type
indices	$SOKOLC/util/sokol_imgui.h	/^    sg_range indices;$/;"	m	struct:__anon4720df6a0808	typeref:typename:sg_range
indices	$SOKOLC/util/sokol_shape.h	/^    sshape_sizes_item_t indices;$/;"	m	struct:sshape_sizes_t	typeref:typename:sshape_sizes_item_t
indices	$SOKOLC/util/sokol_spine.h	/^    } indices;$/;"	m	struct:__anon5007022e1708	typeref:struct:__anon5007022e1708::__anon5007022e1908
ini_filename	$SOKOLC/util/sokol_imgui.h	/^    const char* ini_filename;$/;"	m	struct:simgui_desc_t	typeref:typename:const char *
init	$SOKOLC/sokol_audio.h	/^-(id)init {$/;"	m	implementation:_saudio_interruption_handler	signature:()
initWithContentRect:styleMask:backing:defer:	$SOKOLC/sokol_app.h	/^                              defer:(BOOL)flag {$/;"	m	implementation:_sapp_macos_window	signature:(NSRect,NSWindowStyleMask,NSBackingStoreType,BOOL)
init_buffer	$SOKOLC/sokol_gfx.h	/^    void (*init_buffer)(sg_buffer buf_id, const sg_buffer_desc* desc, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_buffer buf_id,const sg_buffer_desc * desc,void * user_data)
init_buffer	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_init_buffer_t init_buffer;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_init_buffer_t
init_called	$SOKOLC/sokol_app.h	/^    bool init_called;$/;"	E
init_cookie	$SOKOLC/util/sokol_debugtext.h	/^    uint32_t init_cookie;$/;"	m	struct:__anona9c6565b0a08	typeref:typename:uint32_t
init_cookie	$SOKOLC/util/sokol_gl.h	/^    uint32_t init_cookie;$/;"	m	struct:__anon382715e21508	typeref:typename:uint32_t
init_cookie	$SOKOLC/util/sokol_imgui.h	/^    uint32_t init_cookie;$/;"	m	struct:__anon4720df6a0808	typeref:typename:uint32_t
init_cookie	$SOKOLC/util/sokol_nuklear.h	/^    uint32_t init_cookie;$/;"	m	struct:__anon5a1189810708	typeref:typename:uint32_t
init_cookie	$SOKOLC/util/sokol_spine.h	/^    uint32_t init_cookie;$/;"	m	struct:__anon5007022e1d08	typeref:typename:uint32_t
init_image	$SOKOLC/sokol_gfx.h	/^    void (*init_image)(sg_image img_id, const sg_image_desc* desc, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_image img_id,const sg_image_desc * desc,void * user_data)
init_image	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_init_image_t init_image;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_init_image_t
init_pass	$SOKOLC/sokol_gfx.h	/^    void (*init_pass)(sg_pass pass_id, const sg_pass_desc* desc, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_pass pass_id,const sg_pass_desc * desc,void * user_data)
init_pass	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_init_pass_t init_pass;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_init_pass_t
init_pipeline	$SOKOLC/sokol_gfx.h	/^    void (*init_pipeline)(sg_pipeline pip_id, const sg_pipeline_desc* desc, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_pipeline pip_id,const sg_pipeline_desc * desc,void * user_data)
init_pipeline	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_init_pipeline_t init_pipeline;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_init_pipeline_t
init_sampler	$SOKOLC/sokol_gfx.h	/^    void (*init_sampler)(sg_sampler smp_id, const sg_sampler_desc* desc, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_sampler smp_id,const sg_sampler_desc * desc,void * user_data)
init_sampler	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_init_sampler_t init_sampler;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_init_sampler_t
init_shader	$SOKOLC/sokol_gfx.h	/^    void (*init_shader)(sg_shader shd_id, const sg_shader_desc* desc, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_shader shd_id,const sg_shader_desc * desc,void * user_data)
init_shader	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_init_shader_t init_shader;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_init_shader_t
init_tag	$SOKOLC/util/sokol_gfx_imgui.h	/^    uint32_t init_tag;$/;"	m	struct:sg_imgui_t	typeref:typename:uint32_t
initialized	$SOKOLC/sokol_time.h	/^    uint32_t initialized;$/;"	m	struct:__anonae6a40310408	typeref:typename:uint32_t
injected	$SOKOLC/sokol_gfx.h	/^        bool injected;  \/\/ true if external sampler was injects in sg_sampler_desc.gl_sampler$/;"	m	struct:__anon13e02ee71f08::__anon13e02ee72008	typeref:typename:bool
input	$SOKOLC/sokol_app.h	/^    AInputQueue* input;$/;"	E
instance	$SOKOLC/sokol_app.h	/^    WGPUInstance instance;$/;"	E
instance_pool	$SOKOLC/util/sokol_spine.h	/^    _sspine_instance_pool_t instance_pool;$/;"	m	struct:__anon5007022e1d08	typeref:typename:_sspine_instance_pool_t
instance_pool_size	$SOKOLC/util/sokol_spine.h	/^    int instance_pool_size;$/;"	m	struct:sspine_desc	typeref:typename:int
int	$SOKOLC/sokol_app.h	/^typedef void (*PFNGLXSWAPINTERVALEXTPROC)(Display*,GLXDrawable,int);$/;"	t
int_value	$SOKOLC/util/sokol_spine.h	/^    int int_value;$/;"	m	struct:sspine_triggered_event_info	typeref:typename:int
ios	$SOKOLC/sokol_app.h	/^        _sapp_ios_t ios;$/;"	E
isOpaque	$SOKOLC/sokol_app.h	/^- (BOOL)isOpaque {$/;"	m	implementation:_sapp_macos_view	signature:()	category:NSRect
is_osx	$SOKOLC/util/sokol_imgui.h	/^    bool is_osx;$/;"	m	struct:__anon4720df6a0808	typeref:typename:bool
is_osx	$SOKOLC/util/sokol_nuklear.h	/^    bool is_osx;    \/\/ true if running on OSX (or HTML5 OSX), needed for copy\/paste$/;"	m	struct:__anon5a1189810708	typeref:typename:bool
is_thread_started	$SOKOLC/sokol_app.h	/^    bool is_thread_started;$/;"	E
is_thread_stopped	$SOKOLC/sokol_app.h	/^    bool is_thread_stopped;$/;"	E
is_thread_stopping	$SOKOLC/sokol_app.h	/^    bool is_thread_stopping;$/;"	E
is_win10_or_greater	$SOKOLC/sokol_app.h	/^    bool is_win10_or_greater;$/;"	E	enum:MONITOR_DPI_TYPE
items	$SOKOLC/sokol_fetch.h	/^    _sfetch_item_t* items;$/;"	m	struct:__anon3d2cd3ac0608	typeref:typename:_sfetch_item_t *
items	$SOKOLC/sokol_gfx.h	/^    uint32_t items[_SG_WGPU_BINDGROUPSCACHE_NUM_ITEMS];$/;"	m	struct:__anon13e02ee76a08	typeref:typename:uint32_t[]
items	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_capture_item_t items[SG_IMGUI_MAX_FRAMECAPTURE_ITEMS];$/;"	m	struct:sg_imgui_capture_bucket_t	typeref:typename:sg_imgui_capture_item_t[]
items	$SOKOLC/util/sokol_imgui.h	/^    _simgui_image_t* items;$/;"	m	struct:__anon4720df6a0708	typeref:typename:_simgui_image_t *
items	$SOKOLC/util/sokol_nuklear.h	/^    _snk_image_t* items;$/;"	m	struct:__anon5a1189810608	typeref:typename:_snk_image_t *
items	$SOKOLC/util/sokol_spine.h	/^    _sspine_skinset_t* items;$/;"	m	struct:__anon5007022e0f08	typeref:typename:_sspine_skinset_t *
json_data	$SOKOLC/util/sokol_spine.h	/^    const char* json_data;$/;"	m	struct:sspine_skeleton_desc	typeref:typename:const char *
key	$SOKOLC/sokol_args.h	/^    int key;        \/* index to start of key string in buf *\/$/;"	m	struct:__anon82b80a0f0108	typeref:typename:int
key	$SOKOLC/sokol_gfx.h	/^    _sg_wgpu_bindgroups_cache_key_t key;$/;"	m	struct:__anon13e02ee76c08	typeref:typename:_sg_wgpu_bindgroups_cache_key_t
keyDown:	$SOKOLC/sokol_app.h	/^- (void)keyDown:(NSEvent*)event {$/;"	m	implementation:_sapp_macos_view	signature:(NSEvent*)	category:void
keyUp:	$SOKOLC/sokol_app.h	/^- (void)keyUp:(NSEvent*)event {$/;"	m	implementation:_sapp_macos_view	signature:(NSEvent*)	category:void
keyboardDidChangeFrame:	$SOKOLC/sokol_app.h	/^- (void)keyboardDidChangeFrame:(NSNotification*)notif {$/;"	m	implementation:_sapp_textfield_dlg	signature:(NSNotification*)
keyboardDidChangeFrame:	$SOKOLC/sokol_app.h	/^- (void)keyboardDidChangeFrame:(NSNotification*)notif;$/;"	m	interface:_sapp_textfield_dlg	signature:(NSNotification*)
keyboardWasShown:	$SOKOLC/sokol_app.h	/^- (void)keyboardWasShown:(NSNotification*)notif {$/;"	m	implementation:_sapp_textfield_dlg	signature:(NSNotification*)
keyboardWasShown:	$SOKOLC/sokol_app.h	/^- (void)keyboardWasShown:(NSNotification*)notif;$/;"	m	interface:_sapp_textfield_dlg	signature:(NSNotification*)
keyboardWillBeHidden:	$SOKOLC/sokol_app.h	/^- (void)keyboardWillBeHidden:(NSNotification*)notif {$/;"	m	implementation:_sapp_textfield_dlg	signature:(NSNotification*)
keyboardWillBeHidden:	$SOKOLC/sokol_app.h	/^- (void)keyboardWillBeHidden:(NSNotification*)notif;$/;"	m	interface:_sapp_textfield_dlg	signature:(NSNotification*)
keycodes	$SOKOLC/sokol_app.h	/^    sapp_keycode keycodes[SAPP_MAX_KEYCODES];$/;"	E
keys_down	$SOKOLC/util/sokol_nuklear.h	/^    bool keys_down[NK_KEY_MAX];$/;"	m	struct:__anon5a1189810708	typeref:typename:bool[]
keys_up	$SOKOLC/util/sokol_nuklear.h	/^    bool keys_up[NK_KEY_MAX];$/;"	m	struct:__anon5a1189810708	typeref:typename:bool[]
keysym	$SOKOLC/sokol_app.h	/^  uint16_t keysym;$/;"	E	struct:_sapp_x11_codepair
keyup_monitor	$SOKOLC/sokol_app.h	/^    id keyup_monitor;$/;"	E
label	$SOKOLC/sokol_gfx.h	/^    const char* label;$/;"	m	struct:sg_shader_desc	typeref:typename:const char *
label	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_str_t label;$/;"	m	struct:sg_imgui_shader_t	typeref:typename:sg_imgui_str_t
lane	$SOKOLC/sokol_fetch.h	/^    uint32_t lane;$/;"	m	struct:__anon3d2cd3ac0508	typeref:typename:uint32_t
last	$SOKOLC/sokol_app.h	/^    double last;$/;"	E
last_char	$SOKOLC/util/sokol_debugtext.h	/^    uint8_t last_char;      \/\/ last character index in font pixel data, inclusive (default: 25/;"	m	struct:sdtx_font_desc_t	typeref:typename:uint8_t
layer	$SOKOLC/util/sokol_spine.h	/^    int layer;$/;"	m	struct:__anon5007022e1608	typeref:typename:int
layer_id	$SOKOLC/util/sokol_debugtext.h	/^    int layer_id;$/;"	m	struct:__anona9c6565b0508	typeref:typename:int
layer_id	$SOKOLC/util/sokol_gl.h	/^    int layer_id;$/;"	m	struct:__anon382715e21008	typeref:typename:int
layout	$SOKOLC/sokol_gfx.h	/^    sg_vertex_layout_state layout;$/;"	m	struct:sg_pipeline_desc	typeref:typename:sg_vertex_layout_state
least_color_diff	$SOKOLC/sokol_app.h	/^    int least_color_diff;$/;"	E
least_extra_diff	$SOKOLC/sokol_app.h	/^    int least_extra_diff;$/;"	E
least_missing	$SOKOLC/sokol_app.h	/^    int least_missing;$/;"	E
len	$SOKOLC/util/sokol_spine.h	/^    uint8_t len;$/;"	m	struct:sspine_string	typeref:typename:uint8_t
length	$SOKOLC/util/sokol_spine.h	/^    float length;$/;"	m	struct:sspine_bone_info	typeref:typename:float
libgl	$SOKOLC/sokol_app.h	/^    void* libgl;$/;"	E
limits	$SOKOLC/sokol_gfx.h	/^    sg_limits limits;$/;"	m	struct:__anon13e02ee77608	typeref:typename:sg_limits
load_action	$SOKOLC/sokol_gfx.h	/^    sg_load_action load_action;         \/\/ default: SG_LOADACTION_CLEAR$/;"	m	struct:sg_stencil_attachment_action	typeref:typename:sg_load_action
locked	$SOKOLC/sokol_app.h	/^    bool locked;$/;"	E
logger	$SOKOLC/sokol_audio.h	/^    saudio_logger logger;           \/\/ optional logging function (default: NO LOGGING!)$/;"	E	struct:saudio_desc
logger	$SOKOLC/sokol_fetch.h	/^    sfetch_logger_t logger;         \/\/ optional log function overrides (default: NO LOGGING!)$/;"	m	struct:sfetch_desc_t	typeref:typename:sfetch_logger_t
logger	$SOKOLC/sokol_gfx.h	/^    sg_logger logger; \/\/ optional log function override$/;"	m	struct:sg_desc	typeref:typename:sg_logger
logger	$SOKOLC/util/sokol_debugtext.h	/^    sdtx_logger_t logger;                   \/\/ optional log override function (default: NO LOG/;"	m	struct:sdtx_desc_t	typeref:typename:sdtx_logger_t
logger	$SOKOLC/util/sokol_gl.h	/^    sgl_logger_t logger;            \/\/ optional log function override (default: NO LOGGING)$/;"	m	struct:sgl_desc_t	typeref:typename:sgl_logger_t
logger	$SOKOLC/util/sokol_imgui.h	/^    simgui_logger_t logger;         \/\/ optional log function override$/;"	m	struct:simgui_desc_t	typeref:typename:simgui_logger_t
logger	$SOKOLC/util/sokol_nuklear.h	/^    snk_logger_t logger;                \/\/ optional log function override$/;"	m	struct:snk_desc_t	typeref:typename:snk_logger_t
logger	$SOKOLC/util/sokol_spine.h	/^    sspine_logger logger;           \/\/ optional logging function (default: NO LOGGING!)$/;"	m	struct:sspine_desc	typeref:typename:sspine_logger
looper	$SOKOLC/sokol_app.h	/^    ALooper* looper;$/;"	E
mAudioDataBytesCapacity	$SOKOLC/sokol_audio.h	/^    const uint32_t mAudioDataBytesCapacity;$/;"	t
mDataByteSize	$SOKOLC/sokol_audio.h	/^    uint32_t mDataByteSize;$/;"	E	struct:_saudio_AudioStreamPacketDescription
mFlags	$SOKOLC/sokol_audio.h	/^    _saudio_AudioTimeStampFlags mFlags;$/;"	E	struct:_saudio_AudioTimeStamp
mHostTime	$SOKOLC/sokol_audio.h	/^    uint64_t mHostTime;$/;"	E	struct:_saudio_AudioTimeStamp
mRateScalar	$SOKOLC/sokol_audio.h	/^    double mRateScalar;$/;"	E	struct:_saudio_AudioTimeStamp
mReserved	$SOKOLC/sokol_audio.h	/^    uint32_t mReserved;$/;"	E	struct:_saudio_AudioTimeStamp
mSMPTETime	$SOKOLC/sokol_audio.h	/^    _saudio_SMPTETime mSMPTETime;$/;"	E	struct:_saudio_AudioTimeStamp
mSampleRate	$SOKOLC/sokol_audio.h	/^    double mSampleRate;$/;"	t
mSampleTime	$SOKOLC/sokol_audio.h	/^    double mSampleTime;$/;"	E	struct:_saudio_AudioTimeStamp
mStartOffset	$SOKOLC/sokol_audio.h	/^    int64_t mStartOffset;$/;"	E	struct:_saudio_AudioStreamPacketDescription
mSubframes	$SOKOLC/sokol_audio.h	/^    int16_t mSubframes;$/;"	t
mVariableFramesInPacket	$SOKOLC/sokol_audio.h	/^    uint32_t mVariableFramesInPacket;$/;"	E	struct:_saudio_AudioStreamPacketDescription
mWordClockTime	$SOKOLC/sokol_audio.h	/^    uint64_t mWordClockTime;$/;"	E	struct:_saudio_AudioTimeStamp
mach	$SOKOLC/sokol_app.h	/^        } mach;$/;"	E
macos	$SOKOLC/sokol_app.h	/^        _sapp_macos_t macos;$/;"	E
mag_filter	$SOKOLC/sokol_gfx.h	/^    sg_filter mag_filter;$/;"	m	struct:sg_sampler_desc	typeref:typename:sg_filter
mag_filter	$SOKOLC/util/sokol_spine.h	/^    sg_filter mag_filter;$/;"	m	struct:sspine_image_info	typeref:typename:sg_filter
main	$SOKOLC/sokol_app.h	/^int main(int argc, char* argv[]) {$/;"	f	struct:_sapp_x11_codepair
major	$SOKOLC/sokol_app.h	/^    int major;$/;"	E
major_opcode	$SOKOLC/sokol_app.h	/^    int major_opcode;$/;"	E
make_buffer	$SOKOLC/sokol_gfx.h	/^    void (*make_buffer)(const sg_buffer_desc* desc, sg_buffer result, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(const sg_buffer_desc * desc,sg_buffer result,void * user_data)
make_buffer	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_make_buffer_t make_buffer;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_make_buffer_t
make_image	$SOKOLC/sokol_gfx.h	/^    void (*make_image)(const sg_image_desc* desc, sg_image result, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(const sg_image_desc * desc,sg_image result,void * user_data)
make_image	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_make_image_t make_image;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_make_image_t
make_pass	$SOKOLC/sokol_gfx.h	/^    void (*make_pass)(const sg_pass_desc* desc, sg_pass result, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(const sg_pass_desc * desc,sg_pass result,void * user_data)
make_pass	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_make_pass_t make_pass;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_make_pass_t
make_pipeline	$SOKOLC/sokol_gfx.h	/^    void (*make_pipeline)(const sg_pipeline_desc* desc, sg_pipeline result, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(const sg_pipeline_desc * desc,sg_pipeline result,void * user_data)
make_pipeline	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_make_pipeline_t make_pipeline;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_make_pipeline_t
make_sampler	$SOKOLC/sokol_gfx.h	/^    void (*make_sampler)(const sg_sampler_desc* desc, sg_sampler result, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(const sg_sampler_desc * desc,sg_sampler result,void * user_data)
make_sampler	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_make_sampler_t make_sampler;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_make_sampler_t
make_shader	$SOKOLC/sokol_gfx.h	/^    void (*make_shader)(const sg_shader_desc* desc, sg_shader result, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(const sg_shader_desc * desc,sg_shader result,void * user_data)
make_shader	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_make_shader_t make_shader;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_make_shader_t
matrix_dirty	$SOKOLC/util/sokol_gl.h	/^    bool matrix_dirty;      \/* reset in sgl_end(), set in any of the matrix stack functions *\/$/;"	m	struct:__anon382715e21008	typeref:typename:bool
matrix_stack	$SOKOLC/util/sokol_gl.h	/^    _sgl_matrix_t matrix_stack[SGL_NUM_MATRIXMODES][_SGL_MAX_STACK_DEPTH];$/;"	m	struct:__anon382715e21008	typeref:typename:_sgl_matrix_t[][]
matrix_tos	$SOKOLC/util/sokol_gl.h	/^    int matrix_tos[SGL_NUM_MATRIXMODES];$/;"	m	struct:__anon382715e21008	typeref:typename:int[]
max_anisotropy	$SOKOLC/sokol_gfx.h	/^    uint32_t max_anisotropy;$/;"	m	struct:sg_sampler_desc	typeref:typename:uint32_t
max_args	$SOKOLC/sokol_args.h	/^    int max_args;$/;"	m	struct:sargs_desc	typeref:typename:int
max_commands	$SOKOLC/util/sokol_debugtext.h	/^    int max_commands;                       \/\/ max number of draw commands, each layer transit/;"	m	struct:sdtx_context_desc_t	typeref:typename:int
max_commands	$SOKOLC/util/sokol_gl.h	/^    int max_commands;       \/\/ default: 16k$/;"	m	struct:sgl_context_desc_t	typeref:typename:int
max_commands	$SOKOLC/util/sokol_spine.h	/^    int max_commands;$/;"	m	struct:sspine_desc	typeref:typename:int
max_commit_listeners	$SOKOLC/sokol_gfx.h	/^    int max_commit_listeners;$/;"	m	struct:sg_desc	typeref:typename:int
max_files	$SOKOLC/sokol_app.h	/^    int max_files;$/;"	E
max_image_array_layers	$SOKOLC/sokol_gfx.h	/^    int max_image_array_layers;     \/\/ max number of layers in SG_IMAGETYPE_ARRAY images$/;"	m	struct:sg_limits	typeref:typename:int
max_image_size_2d	$SOKOLC/sokol_gfx.h	/^    int max_image_size_2d;          \/\/ max width\/height of SG_IMAGETYPE_2D images$/;"	m	struct:sg_limits	typeref:typename:int
max_image_size_3d	$SOKOLC/sokol_gfx.h	/^    int max_image_size_3d;          \/\/ max width\/height\/depth of SG_IMAGETYPE_3D images$/;"	m	struct:sg_limits	typeref:typename:int
max_image_size_array	$SOKOLC/sokol_gfx.h	/^    int max_image_size_array;       \/\/ max width\/height of SG_IMAGETYPE_ARRAY images$/;"	m	struct:sg_limits	typeref:typename:int
max_image_size_cube	$SOKOLC/sokol_gfx.h	/^    int max_image_size_cube;        \/\/ max width\/height of SG_IMAGETYPE_CUBE images$/;"	m	struct:sg_limits	typeref:typename:int
max_lod	$SOKOLC/sokol_gfx.h	/^    float max_lod;$/;"	m	struct:sg_sampler_desc	typeref:typename:float
max_path_length	$SOKOLC/sokol_app.h	/^    int max_path_length;$/;"	E
max_requests	$SOKOLC/sokol_fetch.h	/^    uint32_t max_requests;          \/\/ max number of active requests across all channels (defa/;"	m	struct:sfetch_desc_t	typeref:typename:uint32_t
max_vertex_attrs	$SOKOLC/sokol_gfx.h	/^    int max_vertex_attrs;           \/\/ max number of vertex attributes, clamped to SG_MAX_VERT/;"	m	struct:sg_limits	typeref:typename:int
max_vertices	$SOKOLC/util/sokol_gl.h	/^    int max_vertices;       \/\/ default: 64k$/;"	m	struct:sgl_context_desc_t	typeref:typename:int
max_vertices	$SOKOLC/util/sokol_imgui.h	/^    int max_vertices;               \/\/ default: 65536$/;"	m	struct:simgui_desc_t	typeref:typename:int
max_vertices	$SOKOLC/util/sokol_nuklear.h	/^    int max_vertices;                   \/\/ default: 65536$/;"	m	struct:snk_desc_t	typeref:typename:int
max_vertices	$SOKOLC/util/sokol_spine.h	/^    int max_vertices;$/;"	m	struct:sspine_desc	typeref:typename:int
merge	$SOKOLC/util/sokol_shape.h	/^    bool merge;                     \/\/ if true merge with previous shape (default: false)$/;"	m	struct:sshape_torus_t	typeref:typename:bool
metal	$SOKOLC/sokol_gfx.h	/^    sg_metal_context_desc metal;$/;"	m	struct:sg_context_desc	typeref:typename:sg_metal_context_desc
min_filter	$SOKOLC/sokol_gfx.h	/^    sg_filter min_filter;$/;"	m	struct:sg_sampler_desc	typeref:typename:sg_filter
min_filter	$SOKOLC/util/sokol_spine.h	/^    sg_filter min_filter;$/;"	m	struct:sspine_image_info	typeref:typename:sg_filter
min_lod	$SOKOLC/sokol_gfx.h	/^    float min_lod;$/;"	m	struct:sg_sampler_desc	typeref:typename:float
minor	$SOKOLC/sokol_app.h	/^    int minor;$/;"	E
mip_level	$SOKOLC/sokol_gfx.h	/^    int mip_level;$/;"	m	struct:sg_pass_attachment_desc	typeref:typename:int
mipmap_filter	$SOKOLC/sokol_gfx.h	/^    sg_filter mipmap_filter;$/;"	m	struct:sg_sampler_desc	typeref:typename:sg_filter
mipmap_filter	$SOKOLC/util/sokol_spine.h	/^    sg_filter mipmap_filter;$/;"	m	struct:sspine_image_info	typeref:typename:sg_filter
module	$SOKOLC/sokol_gfx.h	/^    WGPUShaderModule module;$/;"	m	struct:__anon13e02ee75e08	typeref:typename:WGPUShaderModule
mouse	$SOKOLC/sokol_app.h	/^    _sapp_mouse_t mouse;$/;"	E
mouseDown:	$SOKOLC/sokol_app.h	/^- (void)mouseDown:(NSEvent*)event {$/;"	m	implementation:_sapp_macos_view	signature:(NSEvent*)	category:void
mouseDragged:	$SOKOLC/sokol_app.h	/^- (void)mouseDragged:(NSEvent*)event {$/;"	m	implementation:_sapp_macos_view	signature:(NSEvent*)	category:void
mouseEntered:	$SOKOLC/sokol_app.h	/^- (void)mouseEntered:(NSEvent*)event {$/;"	m	implementation:_sapp_macos_view	signature:(NSEvent*)	category:void
mouseExited:	$SOKOLC/sokol_app.h	/^- (void)mouseExited:(NSEvent*)event {$/;"	m	implementation:_sapp_macos_view	signature:(NSEvent*)	category:void
mouseMoved:	$SOKOLC/sokol_app.h	/^- (void)mouseMoved:(NSEvent*)event {$/;"	m	implementation:_sapp_macos_view	signature:(NSEvent*)	category:void
mouseUp:	$SOKOLC/sokol_app.h	/^- (void)mouseUp:(NSEvent*)event {$/;"	m	implementation:_sapp_macos_view	signature:(NSEvent*)	category:void
mouse_buttons	$SOKOLC/sokol_app.h	/^    uint8_t mouse_buttons;$/;"	E
mouse_capture_mask	$SOKOLC/sokol_app.h	/^    uint8_t mouse_capture_mask;$/;"	E	enum:MONITOR_DPI_TYPE
mouse_did_move	$SOKOLC/util/sokol_nuklear.h	/^    bool mouse_did_move;$/;"	m	struct:__anon5a1189810708	typeref:typename:bool
mouse_did_scroll	$SOKOLC/util/sokol_nuklear.h	/^    bool mouse_did_scroll;$/;"	m	struct:__anon5a1189810708	typeref:typename:bool
mouse_lock_requested	$SOKOLC/sokol_app.h	/^    bool mouse_lock_requested;$/;"	E
mouse_locked_y	$SOKOLC/sokol_app.h	/^    LONG mouse_locked_x, mouse_locked_y;$/;"	E	enum:MONITOR_DPI_TYPE
mouse_pos	$SOKOLC/util/sokol_nuklear.h	/^    int mouse_pos[2];$/;"	m	struct:__anon5a1189810708	typeref:typename:int[2]
mouse_scale	$SOKOLC/sokol_app.h	/^    float mouse_scale;$/;"	E	enum:MONITOR_DPI_TYPE
mouse_scroll	$SOKOLC/util/sokol_nuklear.h	/^    float mouse_scroll[2];$/;"	m	struct:__anon5a1189810708	typeref:typename:float[2]
mouse_tracked	$SOKOLC/sokol_app.h	/^    bool mouse_tracked;$/;"	E	enum:MONITOR_DPI_TYPE
mrt_independent_blend_state	$SOKOLC/sokol_gfx.h	/^    bool mrt_independent_blend_state;   \/\/ multiple-render-target rendering can use per-render/;"	m	struct:sg_features	typeref:typename:bool
mrt_independent_write_mask	$SOKOLC/sokol_gfx.h	/^    bool mrt_independent_write_mask;    \/\/ multiple-render-target rendering can use per-render/;"	m	struct:sg_features	typeref:typename:bool
msaa	$SOKOLC/sokol_gfx.h	/^    bool msaa;$/;"	m	struct:__anon13e02ee77508	typeref:typename:bool
msaa_render_buffer	$SOKOLC/sokol_gfx.h	/^    uint32_t msaa_render_buffer;$/;"	m	struct:sg_gl_image_info	typeref:typename:uint32_t
msaa_resolve_framebuffer	$SOKOLC/sokol_gfx.h	/^    uint32_t msaa_resolve_framebuffer[SG_MAX_COLOR_ATTACHMENTS];$/;"	m	struct:sg_gl_pass_info	typeref:typename:uint32_t[]
msaa_rt	$SOKOLC/sokol_app.h	/^    ID3D11Texture2D* msaa_rt;$/;"	E
msaa_rtv	$SOKOLC/sokol_app.h	/^    ID3D11RenderTargetView* msaa_rtv;$/;"	E
msaa_tex	$SOKOLC/sokol_app.h	/^    WGPUTexture msaa_tex;$/;"	E
msaa_view	$SOKOLC/sokol_app.h	/^    WGPUTextureView msaa_view;$/;"	E
msg_dc	$SOKOLC/sokol_app.h	/^    HDC msg_dc;$/;"	E	enum:MONITOR_DPI_TYPE
msg_hwnd	$SOKOLC/sokol_app.h	/^    HWND msg_hwnd;$/;"	E	enum:MONITOR_DPI_TYPE
mtl	$SOKOLC/sokol_gfx.h	/^    } mtl;$/;"	m	struct:__anon13e02ee75308	typeref:struct:__anon13e02ee75308::__anon13e02ee75408
mtl_buffers	$SOKOLC/sokol_gfx.h	/^    const void* mtl_buffers[SG_NUM_INFLIGHT_FRAMES];$/;"	m	struct:sg_buffer_desc	typeref:typename:const void * []
mtl_device	$SOKOLC/sokol_app.h	/^        id<MTLDevice> mtl_device;$/;"	E
mtl_force_managed_storage_mode	$SOKOLC/sokol_gfx.h	/^    bool mtl_force_managed_storage_mode; \/\/ for debugging: use Metal managed storage mode for /;"	m	struct:sg_desc	typeref:typename:bool
mtl_func	$SOKOLC/sokol_gfx.h	/^    int mtl_func;$/;"	m	struct:__anon13e02ee74d08	typeref:typename:int
mtl_lib	$SOKOLC/sokol_gfx.h	/^    int mtl_lib;$/;"	m	struct:__anon13e02ee74d08	typeref:typename:int
mtl_sampler	$SOKOLC/sokol_gfx.h	/^    const void* mtl_sampler;$/;"	m	struct:sg_sampler_desc	typeref:typename:const void *
mtl_textures	$SOKOLC/sokol_gfx.h	/^    const void* mtl_textures[SG_NUM_INFLIGHT_FRAMES];$/;"	m	struct:sg_image_desc	typeref:typename:const void * []
multiply	$SOKOLC/util/sokol_spine.h	/^        sg_pipeline multiply;$/;"	m	struct:__anon5007022e1708::__anon5007022e1b08	typeref:typename:sg_pipeline
multisampled	$SOKOLC/sokol_gfx.h	/^    bool multisampled;$/;"	m	struct:sg_shader_image_desc	typeref:typename:bool
mutex	$SOKOLC/sokol_app.h	/^    pthread_mutex_t mutex;$/;"	E
mutex	$SOKOLC/sokol_audio.h	/^    pthread_mutex_t mutex;$/;"	E	struct:saudio_desc
mvp	$SOKOLC/util/sokol_gl.h	/^    _sgl_matrix_t mvp;  \/* model-view-projection matrix *\/$/;"	m	struct:__anon382715e20908	typeref:typename:_sgl_matrix_t
mvp	$SOKOLC/util/sokol_spine.h	/^    float mvp[16];$/;"	m	struct:__anon5007022e0208	typeref:typename:float[16]
name	$SOKOLC/sokol_gfx.h	/^    const char* name;$/;"	m	struct:sg_shader_uniform_desc	typeref:typename:const char *
name	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_str_t name;$/;"	m	struct:sg_imgui_args_push_debug_group_t	typeref:typename:sg_imgui_str_t
name	$SOKOLC/util/sokol_spine.h	/^    sspine_string name;$/;"	m	struct:sspine_slot_info	typeref:typename:sspine_string
next	$SOKOLC/util/sokol_debugtext.h	/^        int next;$/;"	m	struct:__anona9c6565b0608::__anona9c6565b0808	typeref:typename:int
next	$SOKOLC/util/sokol_gl.h	/^        int next;$/;"	m	struct:__anon382715e21008::__anon382715e21308	typeref:typename:int
next	$SOKOLC/util/sokol_spine.h	/^        int next;$/;"	m	struct:__anon5007022e1708::__anon5007022e1a08	typeref:typename:int
next_draw_valid	$SOKOLC/sokol_gfx.h	/^    bool next_draw_valid;$/;"	m	struct:__anon13e02ee77608	typeref:typename:bool
no_default_font	$SOKOLC/util/sokol_imgui.h	/^    bool no_default_font;$/;"	m	struct:simgui_desc_t	typeref:typename:bool
no_default_font	$SOKOLC/util/sokol_nuklear.h	/^    bool no_default_font;$/;"	m	struct:snk_desc_t	typeref:typename:bool
normal	$SOKOLC/util/sokol_shape.h	/^    uint32_t normal;        \/\/ packed normal as BYTE4N$/;"	m	struct:sshape_vertex_t	typeref:typename:uint32_t
normal_additive	$SOKOLC/util/sokol_spine.h	/^        sg_pipeline normal_additive;$/;"	m	struct:__anon5007022e1708::__anon5007022e1b08	typeref:typename:sg_pipeline
normalized	$SOKOLC/sokol_gfx.h	/^    uint8_t normalized;$/;"	m	struct:__anon13e02ee72808	typeref:typename:uint8_t
num	$SOKOLC/sokol_app.h	/^    int num;$/;"	E
num	$SOKOLC/sokol_audio.h	/^    int num;   \/\/ number of slots in queue$/;"	E
num	$SOKOLC/sokol_fetch.h	/^    uint32_t num;$/;"	m	struct:__anon3d2cd3ac0708	typeref:typename:uint32_t
num	$SOKOLC/sokol_gfx.h	/^    uint32_t num;           \/\/ must be 2^n$/;"	m	struct:__anon13e02ee76b08	typeref:typename:uint32_t
num	$SOKOLC/util/sokol_shape.h	/^    uint32_t num;       \/\/ number of elements$/;"	m	struct:sshape_sizes_item_t	typeref:typename:uint32_t
num_active_texture	$SOKOLC/sokol_gfx.h	/^    uint32_t num_active_texture;$/;"	m	struct:sg_frame_stats_gl	typeref:typename:uint32_t
num_added	$SOKOLC/sokol_gfx.h	/^    uint32_t num_added;$/;"	m	struct:sg_frame_stats_metal_idpool	typeref:typename:uint32_t
num_allocs	$SOKOLC/util/sokol_memtrack.h	/^    int num_allocs;$/;"	m	struct:smemtrack_info_t	typeref:typename:int
num_append_buffer	$SOKOLC/sokol_gfx.h	/^    uint32_t num_append_buffer;$/;"	m	struct:sg_frame_stats	typeref:typename:uint32_t
num_apply_bindings	$SOKOLC/sokol_gfx.h	/^    uint32_t num_apply_bindings;$/;"	m	struct:sg_frame_stats	typeref:typename:uint32_t
num_apply_pipeline	$SOKOLC/sokol_gfx.h	/^    uint32_t num_apply_pipeline;$/;"	m	struct:sg_frame_stats	typeref:typename:uint32_t
num_apply_scissor_rect	$SOKOLC/sokol_gfx.h	/^    uint32_t num_apply_scissor_rect;$/;"	m	struct:sg_frame_stats	typeref:typename:uint32_t
num_apply_uniforms	$SOKOLC/sokol_gfx.h	/^    uint32_t num_apply_uniforms;$/;"	m	struct:sg_frame_stats	typeref:typename:uint32_t
num_apply_viewport	$SOKOLC/sokol_gfx.h	/^    uint32_t num_apply_viewport;$/;"	m	struct:sg_frame_stats	typeref:typename:uint32_t
num_args	$SOKOLC/sokol_args.h	/^    int num_args;       \/* number of valid items in args array *\/$/;"	m	struct:__anon82b80a0f0208	typeref:typename:int
num_bind_buffer	$SOKOLC/sokol_gfx.h	/^    uint32_t num_bind_buffer;$/;"	m	struct:sg_frame_stats_gl	typeref:typename:uint32_t
num_bind_sampler	$SOKOLC/sokol_gfx.h	/^    uint32_t num_bind_sampler;$/;"	m	struct:sg_frame_stats_gl	typeref:typename:uint32_t
num_bind_texture	$SOKOLC/sokol_gfx.h	/^    uint32_t num_bind_texture;$/;"	m	struct:sg_frame_stats_gl	typeref:typename:uint32_t
num_bindgroup_cache_collisions	$SOKOLC/sokol_gfx.h	/^    uint32_t num_bindgroup_cache_collisions;$/;"	m	struct:sg_frame_stats_wgpu_bindings	typeref:typename:uint32_t
num_bindgroup_cache_hash_vs_key_mismatch	$SOKOLC/sokol_gfx.h	/^    uint32_t num_bindgroup_cache_hash_vs_key_mismatch;$/;"	m	struct:sg_frame_stats_wgpu_bindings	typeref:typename:uint32_t
num_bindgroup_cache_hits	$SOKOLC/sokol_gfx.h	/^    uint32_t num_bindgroup_cache_hits;$/;"	m	struct:sg_frame_stats_wgpu_bindings	typeref:typename:uint32_t
num_bindgroup_cache_misses	$SOKOLC/sokol_gfx.h	/^    uint32_t num_bindgroup_cache_misses;$/;"	m	struct:sg_frame_stats_wgpu_bindings	typeref:typename:uint32_t
num_bytes	$SOKOLC/sokol_gfx.h	/^    uint32_t num_bytes;$/;"	m	struct:__anon13e02ee76708	typeref:typename:uint32_t
num_bytes	$SOKOLC/util/sokol_memtrack.h	/^    int num_bytes;$/;"	m	struct:smemtrack_info_t	typeref:typename:int
num_channels	$SOKOLC/sokol_audio.h	/^    int num_channels;       \/\/ number of channels, default: 1 (mono)$/;"	E	struct:saudio_desc
num_channels	$SOKOLC/sokol_fetch.h	/^    uint32_t num_channels;          \/\/ number of channels to fetch requests in parallel (defau/;"	m	struct:sfetch_desc_t	typeref:typename:uint32_t
num_clear_depth_stencil_view	$SOKOLC/sokol_gfx.h	/^    uint32_t num_clear_depth_stencil_view;$/;"	m	struct:sg_frame_stats_d3d11_pass	typeref:typename:uint32_t
num_clear_render_target_view	$SOKOLC/sokol_gfx.h	/^    uint32_t num_clear_render_target_view;$/;"	m	struct:sg_frame_stats_d3d11_pass	typeref:typename:uint32_t
num_color_atts	$SOKOLC/sokol_gfx.h	/^    int num_color_atts;$/;"	m	struct:__anon13e02ee71108	typeref:typename:int
num_commands	$SOKOLC/util/sokol_spine.h	/^    int num_commands;   \/\/ current number of commands$/;"	m	struct:sspine_context_info	typeref:typename:int
num_create_bindgroup	$SOKOLC/sokol_gfx.h	/^    uint32_t num_create_bindgroup;$/;"	m	struct:sg_frame_stats_wgpu_bindings	typeref:typename:uint32_t
num_disable_vertex_attrib_array	$SOKOLC/sokol_gfx.h	/^    uint32_t num_disable_vertex_attrib_array;$/;"	m	struct:sg_frame_stats_gl	typeref:typename:uint32_t
num_discard_bindgroup	$SOKOLC/sokol_gfx.h	/^    uint32_t num_discard_bindgroup;$/;"	m	struct:sg_frame_stats_wgpu_bindings	typeref:typename:uint32_t
num_draw	$SOKOLC/sokol_gfx.h	/^    uint32_t num_draw;$/;"	m	struct:sg_frame_stats_d3d11_draw	typeref:typename:uint32_t
num_draw_indexed	$SOKOLC/sokol_gfx.h	/^    uint32_t num_draw_indexed;$/;"	m	struct:sg_frame_stats_d3d11_draw	typeref:typename:uint32_t
num_draw_indexed_instanced	$SOKOLC/sokol_gfx.h	/^    uint32_t num_draw_indexed_instanced;$/;"	m	struct:sg_frame_stats_d3d11_draw	typeref:typename:uint32_t
num_draw_instanced	$SOKOLC/sokol_gfx.h	/^    uint32_t num_draw_instanced;$/;"	m	struct:sg_frame_stats_d3d11_draw	typeref:typename:uint32_t
num_elements	$SOKOLC/util/sokol_gfx_imgui.h	/^    int num_elements;$/;"	m	struct:sg_imgui_args_draw_t	typeref:typename:int
num_elements	$SOKOLC/util/sokol_shape.h	/^    int num_elements;$/;"	m	struct:sshape_element_range_t	typeref:typename:int
num_elements	$SOKOLC/util/sokol_spine.h	/^    int num_elements;$/;"	m	struct:__anon5007022e1608	typeref:typename:int
num_enable_vertex_attrib_array	$SOKOLC/sokol_gfx.h	/^    uint32_t num_enable_vertex_attrib_array;$/;"	m	struct:sg_frame_stats_gl	typeref:typename:uint32_t
num_files	$SOKOLC/sokol_app.h	/^    int num_files;$/;"	E
num_fs_imgs	$SOKOLC/sokol_gfx.h	/^    int num_fs_imgs;$/;"	m	struct:__anon13e02ee77408	typeref:typename:int
num_fs_smps	$SOKOLC/sokol_gfx.h	/^    int num_fs_smps;$/;"	m	struct:__anon13e02ee77408	typeref:typename:int
num_garbage_collected	$SOKOLC/sokol_gfx.h	/^    uint32_t num_garbage_collected;$/;"	m	struct:sg_frame_stats_metal_idpool	typeref:typename:uint32_t
num_ia_set_index_buffer	$SOKOLC/sokol_gfx.h	/^    uint32_t num_ia_set_index_buffer;$/;"	m	struct:sg_frame_stats_d3d11_bindings	typeref:typename:uint32_t
num_ia_set_input_layout	$SOKOLC/sokol_gfx.h	/^    uint32_t num_ia_set_input_layout;$/;"	m	struct:sg_frame_stats_d3d11_pipeline	typeref:typename:uint32_t
num_ia_set_primitive_topology	$SOKOLC/sokol_gfx.h	/^    uint32_t num_ia_set_primitive_topology;$/;"	m	struct:sg_frame_stats_d3d11_pipeline	typeref:typename:uint32_t
num_ia_set_vertex_buffers	$SOKOLC/sokol_gfx.h	/^    uint32_t num_ia_set_vertex_buffers;$/;"	m	struct:sg_frame_stats_d3d11_bindings	typeref:typename:uint32_t
num_image_samplers	$SOKOLC/sokol_gfx.h	/^    int num_image_samplers;$/;"	m	struct:__anon13e02ee70d08	typeref:typename:int
num_images	$SOKOLC/sokol_gfx.h	/^    int num_images;$/;"	m	struct:__anon13e02ee70d08	typeref:typename:int
num_indices	$SOKOLC/util/sokol_spine.h	/^    int num_indices;    \/\/ current number of indices$/;"	m	struct:sspine_context_info	typeref:typename:int
num_instances	$SOKOLC/util/sokol_gfx_imgui.h	/^    int num_instances;$/;"	m	struct:sg_imgui_args_draw_t	typeref:typename:int
num_items	$SOKOLC/util/sokol_gfx_imgui.h	/^    int num_items;$/;"	m	struct:sg_imgui_capture_bucket_t	typeref:typename:int
num_lanes	$SOKOLC/sokol_fetch.h	/^    uint32_t num_lanes;             \/\/ max number of requests active on the same channel (defa/;"	m	struct:sfetch_desc_t	typeref:typename:uint32_t
num_map	$SOKOLC/sokol_gfx.h	/^    uint32_t num_map;$/;"	m	struct:sg_frame_stats_d3d11	typeref:typename:uint32_t
num_mipmaps	$SOKOLC/sokol_gfx.h	/^    int num_mipmaps;$/;"	m	struct:sg_image_desc	typeref:typename:int
num_om_set_blend_state	$SOKOLC/sokol_gfx.h	/^    uint32_t num_om_set_blend_state;$/;"	m	struct:sg_frame_stats_d3d11_pipeline	typeref:typename:uint32_t
num_om_set_depth_stencil_state	$SOKOLC/sokol_gfx.h	/^    uint32_t num_om_set_depth_stencil_state;$/;"	m	struct:sg_frame_stats_d3d11_pipeline	typeref:typename:uint32_t
num_om_set_render_targets	$SOKOLC/sokol_gfx.h	/^    uint32_t num_om_set_render_targets;$/;"	m	struct:sg_frame_stats_d3d11_pass	typeref:typename:uint32_t
num_packets	$SOKOLC/sokol_audio.h	/^    int num_packets;        \/\/ number of packets in packet queue$/;"	E	struct:saudio_desc
num_pages	$SOKOLC/util/sokol_spine.h	/^    int num_pages;$/;"	m	struct:__anon5007022e0608	typeref:typename:int
num_passes	$SOKOLC/sokol_gfx.h	/^    uint32_t num_passes;$/;"	m	struct:sg_frame_stats	typeref:typename:uint32_t
num_ps_set_constant_buffers	$SOKOLC/sokol_gfx.h	/^    uint32_t num_ps_set_constant_buffers;$/;"	m	struct:sg_frame_stats_d3d11_pipeline	typeref:typename:uint32_t
num_ps_set_samplers	$SOKOLC/sokol_gfx.h	/^    uint32_t num_ps_set_samplers;$/;"	m	struct:sg_frame_stats_d3d11_bindings	typeref:typename:uint32_t
num_ps_set_shader	$SOKOLC/sokol_gfx.h	/^    uint32_t num_ps_set_shader;$/;"	m	struct:sg_frame_stats_d3d11_pipeline	typeref:typename:uint32_t
num_ps_set_shader_resources	$SOKOLC/sokol_gfx.h	/^    uint32_t num_ps_set_shader_resources;$/;"	m	struct:sg_frame_stats_d3d11_bindings	typeref:typename:uint32_t
num_released	$SOKOLC/sokol_gfx.h	/^    uint32_t num_released;$/;"	m	struct:sg_frame_stats_metal_idpool	typeref:typename:uint32_t
num_render_state	$SOKOLC/sokol_gfx.h	/^    uint32_t num_render_state;$/;"	m	struct:sg_frame_stats_gl	typeref:typename:uint32_t
num_resolve_subresource	$SOKOLC/sokol_gfx.h	/^    uint32_t num_resolve_subresource;$/;"	m	struct:sg_frame_stats_d3d11_pass	typeref:typename:uint32_t
num_rs_set_state	$SOKOLC/sokol_gfx.h	/^    uint32_t num_rs_set_state;$/;"	m	struct:sg_frame_stats_d3d11_pipeline	typeref:typename:uint32_t
num_rtvs	$SOKOLC/sokol_gfx.h	/^    int num_rtvs;$/;"	m	struct:__anon13e02ee74408	typeref:typename:int
num_samplers	$SOKOLC/sokol_gfx.h	/^    int num_samplers;$/;"	m	struct:__anon13e02ee70d08	typeref:typename:int
num_set_bindgroup	$SOKOLC/sokol_gfx.h	/^    uint32_t num_set_bindgroup;$/;"	m	struct:sg_frame_stats_wgpu_uniforms	typeref:typename:uint32_t
num_set_blend_color	$SOKOLC/sokol_gfx.h	/^    uint32_t num_set_blend_color;$/;"	m	struct:sg_frame_stats_metal_pipeline	typeref:typename:uint32_t
num_set_cull_mode	$SOKOLC/sokol_gfx.h	/^    uint32_t num_set_cull_mode;$/;"	m	struct:sg_frame_stats_metal_pipeline	typeref:typename:uint32_t
num_set_depth_bias	$SOKOLC/sokol_gfx.h	/^    uint32_t num_set_depth_bias;$/;"	m	struct:sg_frame_stats_metal_pipeline	typeref:typename:uint32_t
num_set_depth_stencil_state	$SOKOLC/sokol_gfx.h	/^    uint32_t num_set_depth_stencil_state;$/;"	m	struct:sg_frame_stats_metal_pipeline	typeref:typename:uint32_t
num_set_fragment_buffer_offset	$SOKOLC/sokol_gfx.h	/^    uint32_t num_set_fragment_buffer_offset;$/;"	m	struct:sg_frame_stats_metal_uniforms	typeref:typename:uint32_t
num_set_fragment_sampler_state	$SOKOLC/sokol_gfx.h	/^    uint32_t num_set_fragment_sampler_state;$/;"	m	struct:sg_frame_stats_metal_bindings	typeref:typename:uint32_t
num_set_fragment_texture	$SOKOLC/sokol_gfx.h	/^    uint32_t num_set_fragment_texture;$/;"	m	struct:sg_frame_stats_metal_bindings	typeref:typename:uint32_t
num_set_front_facing_winding	$SOKOLC/sokol_gfx.h	/^    uint32_t num_set_front_facing_winding;$/;"	m	struct:sg_frame_stats_metal_pipeline	typeref:typename:uint32_t
num_set_index_buffer	$SOKOLC/sokol_gfx.h	/^    uint32_t num_set_index_buffer;$/;"	m	struct:sg_frame_stats_wgpu_bindings	typeref:typename:uint32_t
num_set_render_pipeline_state	$SOKOLC/sokol_gfx.h	/^    uint32_t num_set_render_pipeline_state;$/;"	m	struct:sg_frame_stats_metal_pipeline	typeref:typename:uint32_t
num_set_stencil_reference_value	$SOKOLC/sokol_gfx.h	/^    uint32_t num_set_stencil_reference_value;$/;"	m	struct:sg_frame_stats_metal_pipeline	typeref:typename:uint32_t
num_set_vertex_buffer	$SOKOLC/sokol_gfx.h	/^    uint32_t num_set_vertex_buffer;$/;"	m	struct:sg_frame_stats_wgpu_bindings	typeref:typename:uint32_t
num_set_vertex_buffer_offset	$SOKOLC/sokol_gfx.h	/^    uint32_t num_set_vertex_buffer_offset;$/;"	m	struct:sg_frame_stats_metal_uniforms	typeref:typename:uint32_t
num_set_vertex_sampler_state	$SOKOLC/sokol_gfx.h	/^    uint32_t num_set_vertex_sampler_state;$/;"	m	struct:sg_frame_stats_metal_bindings	typeref:typename:uint32_t
num_set_vertex_texture	$SOKOLC/sokol_gfx.h	/^    uint32_t num_set_vertex_texture;$/;"	m	struct:sg_frame_stats_metal_bindings	typeref:typename:uint32_t
num_skip_redundant_bindgroup	$SOKOLC/sokol_gfx.h	/^    uint32_t num_skip_redundant_bindgroup;$/;"	m	struct:sg_frame_stats_wgpu_bindings	typeref:typename:uint32_t
num_skip_redundant_index_buffer	$SOKOLC/sokol_gfx.h	/^    uint32_t num_skip_redundant_index_buffer;$/;"	m	struct:sg_frame_stats_wgpu_bindings	typeref:typename:uint32_t
num_skip_redundant_vertex_buffer	$SOKOLC/sokol_gfx.h	/^    uint32_t num_skip_redundant_vertex_buffer;$/;"	m	struct:sg_frame_stats_wgpu_bindings	typeref:typename:uint32_t
num_slices	$SOKOLC/sokol_gfx.h	/^    int num_slices;$/;"	m	struct:sg_image_desc	typeref:typename:int
num_slots	$SOKOLC/sokol_gfx.h	/^    int num_slots;$/;"	m	struct:__anon13e02ee74608	typeref:typename:int
num_slots	$SOKOLC/util/sokol_gfx_imgui.h	/^    int num_slots;$/;"	m	struct:sg_imgui_shaders_t	typeref:typename:int
num_uniform	$SOKOLC/sokol_gfx.h	/^    uint32_t num_uniform;$/;"	m	struct:sg_frame_stats_gl	typeref:typename:uint32_t
num_uniform_blocks	$SOKOLC/sokol_gfx.h	/^    int num_uniform_blocks;$/;"	m	struct:__anon13e02ee70d08	typeref:typename:int
num_uniforms	$SOKOLC/sokol_gfx.h	/^    int num_uniforms;$/;"	m	struct:__anon13e02ee72208	typeref:typename:int
num_unmap	$SOKOLC/sokol_gfx.h	/^    uint32_t num_unmap;$/;"	m	struct:sg_frame_stats_d3d11	typeref:typename:uint32_t
num_update_buffer	$SOKOLC/sokol_gfx.h	/^    uint32_t num_update_buffer;$/;"	m	struct:sg_frame_stats	typeref:typename:uint32_t
num_update_image	$SOKOLC/sokol_gfx.h	/^    uint32_t num_update_image;$/;"	m	struct:sg_frame_stats	typeref:typename:uint32_t
num_update_subresource	$SOKOLC/sokol_gfx.h	/^    uint32_t num_update_subresource;$/;"	m	struct:sg_frame_stats_d3d11_uniforms	typeref:typename:uint32_t
num_use_program	$SOKOLC/sokol_gfx.h	/^    uint32_t num_use_program;$/;"	m	struct:sg_frame_stats_gl	typeref:typename:uint32_t
num_vbs	$SOKOLC/sokol_gfx.h	/^    int num_vbs;$/;"	m	struct:__anon13e02ee77408	typeref:typename:int
num_vertex_attrib_divisor	$SOKOLC/sokol_gfx.h	/^    uint32_t num_vertex_attrib_divisor;$/;"	m	struct:sg_frame_stats_gl	typeref:typename:uint32_t
num_vertex_attrib_pointer	$SOKOLC/sokol_gfx.h	/^    uint32_t num_vertex_attrib_pointer;$/;"	m	struct:sg_frame_stats_gl	typeref:typename:uint32_t
num_vertices	$SOKOLC/util/sokol_debugtext.h	/^    int num_vertices;$/;"	m	struct:__anona9c6565b0508	typeref:typename:int
num_vertices	$SOKOLC/util/sokol_gl.h	/^    int num_vertices;$/;"	m	struct:__anon382715e20b08	typeref:typename:int
num_vertices	$SOKOLC/util/sokol_spine.h	/^    int num_vertices;   \/\/ current number of vertices$/;"	m	struct:sspine_context_info	typeref:typename:int
num_vs_imgs	$SOKOLC/sokol_gfx.h	/^    int num_vs_imgs;$/;"	m	struct:__anon13e02ee77408	typeref:typename:int
num_vs_set_constant_buffers	$SOKOLC/sokol_gfx.h	/^    uint32_t num_vs_set_constant_buffers;$/;"	m	struct:sg_frame_stats_d3d11_pipeline	typeref:typename:uint32_t
num_vs_set_samplers	$SOKOLC/sokol_gfx.h	/^    uint32_t num_vs_set_samplers;$/;"	m	struct:sg_frame_stats_d3d11_bindings	typeref:typename:uint32_t
num_vs_set_shader	$SOKOLC/sokol_gfx.h	/^    uint32_t num_vs_set_shader;$/;"	m	struct:sg_frame_stats_d3d11_pipeline	typeref:typename:uint32_t
num_vs_set_shader_resources	$SOKOLC/sokol_gfx.h	/^    uint32_t num_vs_set_shader_resources;$/;"	m	struct:sg_frame_stats_d3d11_bindings	typeref:typename:uint32_t
num_vs_smps	$SOKOLC/sokol_gfx.h	/^    int num_vs_smps;$/;"	m	struct:__anon13e02ee77408	typeref:typename:int
offset	$SOKOLC/sokol_gfx.h	/^    uint32_t offset;    \/\/ current offset into buf$/;"	m	struct:__anon13e02ee76708	typeref:typename:uint32_t
offsets	$SOKOLC/sokol_gfx.h	/^        uint32_t offsets[SG_NUM_SHADER_STAGES][SG_MAX_SHADERSTAGE_UBS];$/;"	m	struct:__anon13e02ee76708::__anon13e02ee76808	typeref:typename:uint32_t[][]
onscreen_keyboard_shown	$SOKOLC/sokol_app.h	/^    bool onscreen_keyboard_shown;$/;"	E
op_alpha	$SOKOLC/sokol_gfx.h	/^    sg_blend_op op_alpha;$/;"	m	struct:sg_blend_state	typeref:typename:sg_blend_op
op_rgb	$SOKOLC/sokol_gfx.h	/^    sg_blend_op op_rgb;$/;"	m	struct:sg_blend_state	typeref:typename:sg_blend_op
open	$SOKOLC/util/sokol_gfx_imgui.h	/^    bool open;$/;"	m	struct:sg_imgui_shaders_t	typeref:typename:bool
opengl32	$SOKOLC/sokol_app.h	/^    HINSTANCE opengl32;$/;"	E	enum:MONITOR_DPI_TYPE
opengl32_dll	$SOKOLC/sokol_gfx.h	/^    HINSTANCE opengl32_dll;$/;"	m	struct:__anon13e02ee73208	typeref:typename:HINSTANCE
orig_codepage	$SOKOLC/sokol_app.h	/^    UINT orig_codepage;$/;"	E	enum:MONITOR_DPI_TYPE
origin	$SOKOLC/util/sokol_debugtext.h	/^    _sdtx_float2_t origin;$/;"	m	struct:__anona9c6565b0608	typeref:typename:_sdtx_float2_t
origin	$SOKOLC/util/sokol_spine.h	/^    sspine_vec2 origin;$/;"	m	struct:sspine_layer_transform	typeref:typename:sspine_vec2
origin_top_left	$SOKOLC/sokol_gfx.h	/^    bool origin_top_left;               \/\/ framebuffer and texture origin is in top left corne/;"	m	struct:sg_features	typeref:typename:bool
origin_top_left	$SOKOLC/util/sokol_gfx_imgui.h	/^    bool origin_top_left;$/;"	m	struct:sg_imgui_args_apply_viewport_t	typeref:typename:bool
origin_top_left	$SOKOLC/util/sokol_gl.h	/^    bool origin_top_left;$/;"	m	struct:__anon382715e20d08	typeref:typename:bool
otherMouseDown:	$SOKOLC/sokol_app.h	/^- (void)otherMouseDown:(NSEvent*)event {$/;"	m	implementation:_sapp_macos_view	signature:(NSEvent*)	category:void
otherMouseDragged:	$SOKOLC/sokol_app.h	/^- (void)otherMouseDragged:(NSEvent*)event {$/;"	m	implementation:_sapp_macos_view	signature:(NSEvent*)	category:void
otherMouseUp:	$SOKOLC/sokol_app.h	/^- (void)otherMouseUp:(NSEvent*)event {$/;"	m	implementation:_sapp_macos_view	signature:(NSEvent*)	category:void
out_locator	$SOKOLC/sokol_audio.h	/^    SLDataLocator_OutputMix out_locator;$/;"	E
outgoing_critsec	$SOKOLC/sokol_fetch.h	/^    CRITICAL_SECTION outgoing_critsec;$/;"	m	struct:__anon3d2cd3ac0208	typeref:typename:CRITICAL_SECTION
outgoing_mutex	$SOKOLC/sokol_fetch.h	/^    pthread_mutex_t outgoing_mutex;$/;"	m	struct:__anon3d2cd3ac0108	typeref:typename:pthread_mutex_t
output_buffers	$SOKOLC/sokol_audio.h	/^    int16_t* output_buffers[SAUDIO_SLES_NUM_BUFFERS];$/;"	E
output_mix_obj	$SOKOLC/sokol_audio.h	/^    SLObjectItf output_mix_obj;$/;"	E
output_mix_vol	$SOKOLC/sokol_audio.h	/^    SLVolumeItf output_mix_vol;$/;"	E
override	$SOKOLC/util/sokol_spine.h	/^    sspine_atlas_overrides override;$/;"	m	struct:sspine_atlas_desc	typeref:typename:sspine_atlas_overrides
overrides	$SOKOLC/util/sokol_spine.h	/^    sspine_atlas_overrides overrides;$/;"	m	struct:sspine_atlas_page_info	typeref:typename:sspine_atlas_overrides
packet_frames	$SOKOLC/sokol_audio.h	/^    int packet_frames;      \/\/ number of frames in a packet$/;"	E	struct:saudio_desc
packet_size	$SOKOLC/sokol_audio.h	/^    int packet_size;            \/* size of a single packets in bytes(!) *\/$/;"	E
parent_bone	$SOKOLC/util/sokol_spine.h	/^    sspine_bone parent_bone;$/;"	m	struct:sspine_bone_info	typeref:typename:sspine_bone
parse_state	$SOKOLC/sokol_args.h	/^    uint32_t parse_state;$/;"	m	struct:__anon82b80a0f0208	typeref:typename:uint32_t
pass	$SOKOLC/sokol_gfx.h	/^    sg_frame_stats_d3d11_pass pass;$/;"	m	struct:sg_frame_stats_d3d11	typeref:typename:sg_frame_stats_d3d11_pass
pass	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_pass pass;$/;"	m	struct:sg_imgui_args_uninit_pass_t	typeref:typename:sg_pass
pass_enc	$SOKOLC/sokol_gfx.h	/^    WGPURenderPassEncoder pass_enc;$/;"	m	struct:__anon13e02ee77108	typeref:typename:WGPURenderPassEncoder
pass_op	$SOKOLC/sokol_gfx.h	/^    sg_stencil_op pass_op;$/;"	m	struct:sg_stencil_face_state	typeref:typename:sg_stencil_op
pass_pool	$SOKOLC/sokol_gfx.h	/^    _sg_pool_t pass_pool;$/;"	m	struct:__anon13e02ee77208	typeref:typename:_sg_pool_t
pass_pool_size	$SOKOLC/sokol_gfx.h	/^    int pass_pool_size;$/;"	m	struct:sg_desc	typeref:typename:int
pass_valid	$SOKOLC/sokol_gfx.h	/^    bool pass_valid;$/;"	m	struct:__anon13e02ee77608	typeref:typename:bool
passes	$SOKOLC/sokol_gfx.h	/^    _sg_pass_t* passes;$/;"	m	struct:__anon13e02ee77208	typeref:typename:_sg_pass_t *
passes	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_passes_t passes;$/;"	m	struct:sg_imgui_t	typeref:typename:sg_imgui_passes_t
path	$SOKOLC/sokol_fetch.h	/^    const char* path;               \/\/ the original filesystem path of the request$/;"	m	struct:sfetch_response_t	typeref:typename:const char *
pause	$SOKOLC/sokol_fetch.h	/^    bool pause;                 \/* switch item to PAUSED state if true *\/$/;"	m	struct:__anon3d2cd3ac0308	typeref:typename:bool
paused	$SOKOLC/sokol_fetch.h	/^    bool paused;                    \/\/ request is currently in paused state$/;"	m	struct:sfetch_response_t	typeref:typename:bool
pending	$SOKOLC/sokol_app.h	/^    _sapp_android_resources_t pending;$/;"	E
performDragOperation:	$SOKOLC/sokol_app.h	/^- (BOOL)performDragOperation:(id<NSDraggingInfo>)sender {$/;"	m	implementation:_sapp_macos_window	signature:(id id NSDraggingInfo NSDraggingInfo)
pip	$SOKOLC/sokol_gfx.h	/^    const void* pip;      \/\/ WGPURenderPipeline$/;"	m	struct:sg_wgpu_pipeline_info	typeref:typename:const void *
pip	$SOKOLC/util/sokol_debugtext.h	/^    sg_pipeline pip;$/;"	m	struct:__anona9c6565b0608	typeref:typename:sg_pipeline
pip	$SOKOLC/util/sokol_fontstash.h	/^    sgl_pipeline pip;$/;"	m	struct:_sfons_t	typeref:typename:sgl_pipeline
pip	$SOKOLC/util/sokol_gl.h	/^    sg_pipeline pip[SGL_NUM_PRIMITIVE_TYPES];$/;"	m	struct:__anon382715e20408	typeref:typename:sg_pipeline[]
pip	$SOKOLC/util/sokol_imgui.h	/^    sg_pipeline pip;    \/\/ this will either be _simgui.def_pip or _simgui.pip_unfilterable$/;"	m	struct:__anon4720df6a0608	typeref:typename:sg_pipeline
pip	$SOKOLC/util/sokol_nuklear.h	/^    sg_pipeline pip;$/;"	m	struct:__anon5a1189810708	typeref:typename:sg_pipeline
pip	$SOKOLC/util/sokol_spine.h	/^    } pip;$/;"	m	struct:__anon5007022e1708	typeref:struct:__anon5007022e1708::__anon5007022e1b08
pip_pool	$SOKOLC/util/sokol_gl.h	/^    _sgl_pipeline_pool_t pip_pool;$/;"	m	struct:__anon382715e21508	typeref:typename:_sgl_pipeline_pool_t
pip_stack	$SOKOLC/util/sokol_gl.h	/^    sgl_pipeline pip_stack[_SGL_MAX_STACK_DEPTH];$/;"	m	struct:__anon382715e21008	typeref:typename:sgl_pipeline[]
pip_tos	$SOKOLC/util/sokol_gl.h	/^    int pip_tos;$/;"	m	struct:__anon382715e21008	typeref:typename:int
pip_unfilterable	$SOKOLC/util/sokol_imgui.h	/^    sg_pipeline pip_unfilterable;$/;"	m	struct:__anon4720df6a0808	typeref:typename:sg_pipeline
pipeline	$SOKOLC/sokol_gfx.h	/^    sg_frame_stats_metal_pipeline pipeline;$/;"	m	struct:sg_frame_stats_metal	typeref:typename:sg_frame_stats_metal_pipeline
pipeline	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_pipeline pipeline;$/;"	m	struct:sg_imgui_args_uninit_pipeline_t	typeref:typename:sg_pipeline
pipeline_pool	$SOKOLC/sokol_gfx.h	/^    _sg_pool_t pipeline_pool;$/;"	m	struct:__anon13e02ee77208	typeref:typename:_sg_pool_t
pipeline_pool_size	$SOKOLC/sokol_gfx.h	/^    int pipeline_pool_size;$/;"	m	struct:sg_desc	typeref:typename:int
pipeline_pool_size	$SOKOLC/util/sokol_gl.h	/^    int pipeline_pool_size;         \/\/ size of internal pipeline pool, default: 64$/;"	m	struct:sgl_desc_t	typeref:typename:int
pipelines	$SOKOLC/sokol_gfx.h	/^    _sg_pipeline_t* pipelines;$/;"	m	struct:__anon13e02ee77208	typeref:typename:_sg_pipeline_t *
pipelines	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_pipelines_t pipelines;$/;"	m	struct:sg_imgui_t	typeref:typename:sg_imgui_pipelines_t
pips	$SOKOLC/util/sokol_gl.h	/^    _sgl_pipeline_t* pips;$/;"	m	struct:__anon382715e20508	typeref:typename:_sgl_pipeline_t *
pixel_format	$SOKOLC/sokol_gfx.h	/^    sg_pixel_format pixel_format;$/;"	m	struct:sg_image_desc	typeref:typename:sg_pixel_format
player	$SOKOLC/sokol_audio.h	/^    SLPlayItf player;$/;"	E
player_buffer_queue	$SOKOLC/sokol_audio.h	/^    SLAndroidSimpleBufferQueueItf player_buffer_queue;$/;"	E
player_obj	$SOKOLC/sokol_audio.h	/^    SLObjectItf player_obj;$/;"	E
player_vol	$SOKOLC/sokol_audio.h	/^    SLVolumeItf player_vol;$/;"	E
pma	$SOKOLC/util/sokol_spine.h	/^    float pma;$/;"	m	struct:__anon5007022e0308	typeref:typename:float
point_size	$SOKOLC/util/sokol_gl.h	/^    float point_size;$/;"	m	struct:__anon382715e21008	typeref:typename:float
polygon_offset_enabled	$SOKOLC/sokol_gfx.h	/^    bool polygon_offset_enabled;$/;"	m	struct:__anon13e02ee73108	typeref:typename:bool
pool	$SOKOLC/sokol_fetch.h	/^    _sfetch_pool_t pool;$/;"	m	struct:_sfetch_t	typeref:typename:_sfetch_pool_t
pool	$SOKOLC/sokol_gfx.h	/^    _sg_pool_t pool;$/;"	m	struct:__anon13e02ee76d08	typeref:typename:_sg_pool_t
pool	$SOKOLC/util/sokol_debugtext.h	/^    _sdtx_pool_t pool;$/;"	m	struct:__anona9c6565b0908	typeref:typename:_sdtx_pool_t
pool	$SOKOLC/util/sokol_gl.h	/^    _sgl_pool_t pool;$/;"	m	struct:__anon382715e21408	typeref:typename:_sgl_pool_t
pool	$SOKOLC/util/sokol_imgui.h	/^    _simgui_pool_t pool;$/;"	m	struct:__anon4720df6a0708	typeref:typename:_simgui_pool_t
pool	$SOKOLC/util/sokol_nuklear.h	/^    _snk_pool_t pool;$/;"	m	struct:__anon5a1189810608	typeref:typename:_snk_pool_t
pool	$SOKOLC/util/sokol_spine.h	/^    _sspine_pool_t pool;$/;"	m	struct:__anon5007022e1c08	typeref:typename:_sspine_pool_t
pools	$SOKOLC/sokol_gfx.h	/^    _sg_pools_t pools;$/;"	m	struct:__anon13e02ee77608	typeref:typename:_sg_pools_t
pop_debug_group	$SOKOLC/sokol_gfx.h	/^    void (*pop_debug_group)(void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(void * user_data)
pos	$SOKOLC/util/sokol_debugtext.h	/^    _sdtx_float2_t pos;$/;"	m	struct:__anona9c6565b0608	typeref:typename:_sdtx_float2_t
pos	$SOKOLC/util/sokol_gl.h	/^    float pos[3];$/;"	m	struct:__anon382715e20708	typeref:typename:float[3]
pos	$SOKOLC/util/sokol_nuklear.h	/^    float pos[2];$/;"	m	struct:_snk_vertex_t	typeref:typename:float[2]
pos	$SOKOLC/util/sokol_spine.h	/^    sspine_vec2 pos;$/;"	m	struct:__anon5007022e1308	typeref:typename:sspine_vec2
pos_valid	$SOKOLC/sokol_app.h	/^    bool pos_valid;$/;"	E
pos_x	$SOKOLC/sokol_app.h	/^    float pos_x;$/;"	E	struct:sapp_touchpoint
pos_y	$SOKOLC/sokol_app.h	/^    float pos_y;$/;"	E	struct:sapp_touchpoint
pose	$SOKOLC/util/sokol_spine.h	/^    sspine_bone_transform pose;$/;"	m	struct:sspine_bone_info	typeref:typename:sspine_bone_transform
position	$SOKOLC/util/sokol_spine.h	/^    sspine_vec2 position;$/;"	m	struct:sspine_bone_transform	typeref:typename:sspine_vec2
posix	$SOKOLC/sokol_app.h	/^        } posix;$/;"	E
premul_alpha	$SOKOLC/util/sokol_spine.h	/^    bool premul_alpha;$/;"	m	struct:sspine_image_info	typeref:typename:bool
premul_alpha_disabled	$SOKOLC/util/sokol_spine.h	/^    bool premul_alpha_disabled;$/;"	m	struct:sspine_atlas_overrides	typeref:typename:bool
premul_alpha_enabled	$SOKOLC/util/sokol_spine.h	/^    bool premul_alpha_enabled;$/;"	m	struct:sspine_atlas_overrides	typeref:typename:bool
prepareOpenGL	$SOKOLC/sokol_app.h	/^- (void)prepareOpenGL {$/;"	m	implementation:_sapp_macos_view	signature:()	category:SOKOL_GLCORE33
prescale	$SOKOLC/util/sokol_spine.h	/^    float prescale;$/;"	m	struct:sspine_skeleton_desc	typeref:typename:float
prev_stats	$SOKOLC/sokol_gfx.h	/^    sg_frame_stats prev_stats;$/;"	m	struct:__anon13e02ee77608	typeref:typename:sg_frame_stats
prim_type	$SOKOLC/sokol_gfx.h	/^        MTLPrimitiveType prim_type;$/;"	m	struct:__anon13e02ee75008::__anon13e02ee75108	typeref:typename:MTLPrimitiveType
primitive_type	$SOKOLC/sokol_gfx.h	/^    sg_primitive_type primitive_type;$/;"	m	struct:sg_pipeline_desc	typeref:typename:sg_primitive_type
printf_buf_size	$SOKOLC/util/sokol_debugtext.h	/^    int printf_buf_size;                    \/\/ size of internal buffer for snprintf(), default/;"	m	struct:sdtx_desc_t	typeref:typename:int
procName	$SOKOLC/sokol_app.h	/^typedef __GLXextproc (* PFNGLXGETPROCADDRESSPROC)(const char *procName);$/;"	t
prog	$SOKOLC/sokol_gfx.h	/^    uint32_t prog;$/;"	m	struct:sg_gl_shader_info	typeref:typename:uint32_t
psize	$SOKOLC/util/sokol_gl.h	/^    float psize;$/;"	m	struct:__anon382715e20708	typeref:typename:float
ptr	$SOKOLC/sokol_app.h	/^    const void* ptr;$/;"	E	struct:sapp_range
ptr	$SOKOLC/sokol_fetch.h	/^    const void* ptr;$/;"	m	struct:sfetch_range_t	typeref:typename:const void *
ptr	$SOKOLC/sokol_gfx.h	/^    const void* ptr;$/;"	m	struct:sg_range	typeref:typename:const void *
ptr	$SOKOLC/util/sokol_debugtext.h	/^    const void* ptr;$/;"	m	struct:sdtx_range	typeref:typename:const void *
ptr	$SOKOLC/util/sokol_gl.h	/^        _sgl_vertex_t* ptr;$/;"	m	struct:__anon382715e21008::__anon382715e21108	typeref:typename:_sgl_vertex_t *
ptr	$SOKOLC/util/sokol_shape.h	/^    const void* ptr;$/;"	m	struct:sshape_range	typeref:typename:const void *
ptr	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_range { const void* ptr; size_t size; } sspine_range;$/;"	m	struct:sspine_range	typeref:typename:const void *
push_debug_group	$SOKOLC/sokol_gfx.h	/^    void (*push_debug_group)(const char* name, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(const char * name,void * user_data)
push_debug_group	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_push_debug_group_t push_debug_group;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_push_debug_group_t
queue	$SOKOLC/sokol_audio.h	/^    int queue[SAUDIO_RING_MAX_SLOTS];$/;"	E
queue	$SOKOLC/sokol_gfx.h	/^    WGPUQueue queue;$/;"	m	struct:__anon13e02ee77108	typeref:typename:WGPUQueue
queue_top	$SOKOLC/sokol_gfx.h	/^    int queue_top;$/;"	m	struct:__anon13e02ee70308	typeref:typename:int
queue_top	$SOKOLC/util/sokol_debugtext.h	/^    int queue_top;$/;"	m	struct:__anona9c6565b0208	typeref:typename:int
queue_top	$SOKOLC/util/sokol_gl.h	/^    int queue_top;$/;"	m	struct:__anon382715e20308	typeref:typename:int
queue_top	$SOKOLC/util/sokol_imgui.h	/^    int queue_top;$/;"	m	struct:__anon4720df6a0508	typeref:typename:int
queue_top	$SOKOLC/util/sokol_nuklear.h	/^    int queue_top;$/;"	m	struct:__anon5a1189810408	typeref:typename:int
queue_top	$SOKOLC/util/sokol_spine.h	/^    int queue_top;$/;"	m	struct:__anon5007022e0508	typeref:typename:int
quit_ordered	$SOKOLC/sokol_app.h	/^    bool quit_ordered;$/;"	E
quit_requested	$SOKOLC/sokol_app.h	/^    bool quit_requested;$/;"	E
quote	$SOKOLC/sokol_args.h	/^    char quote;         \/* current quote char, 0 if not in a quote *\/$/;"	m	struct:__anon82b80a0f0208	typeref:typename:char
radius	$SOKOLC/util/sokol_shape.h	/^    float radius;                   \/\/ default: 0.5f$/;"	m	struct:sshape_torus_t	typeref:typename:float
random_colors	$SOKOLC/util/sokol_shape.h	/^    bool random_colors;             \/\/ default: false$/;"	m	struct:sshape_torus_t	typeref:typename:bool
raw_input_data	$SOKOLC/sokol_app.h	/^    uint8_t raw_input_data[256];$/;"	E	enum:MONITOR_DPI_TYPE
raw_input_mousepos_valid	$SOKOLC/sokol_app.h	/^    bool raw_input_mousepos_valid;$/;"	E	enum:MONITOR_DPI_TYPE
raw_input_mousepos_x	$SOKOLC/sokol_app.h	/^    LONG raw_input_mousepos_x;$/;"	E	enum:MONITOR_DPI_TYPE
raw_input_mousepos_y	$SOKOLC/sokol_app.h	/^    LONG raw_input_mousepos_y;$/;"	E	enum:MONITOR_DPI_TYPE
read_from_main_fd	$SOKOLC/sokol_app.h	/^    int read_from_main_fd;$/;"	E
read_mask	$SOKOLC/sokol_gfx.h	/^    uint8_t read_mask;$/;"	m	struct:sg_stencil_state	typeref:typename:uint8_t
read_queue	$SOKOLC/sokol_audio.h	/^    _saudio_ring_t read_queue;  \/* buffers with data, ready to be streamed *\/$/;"	E
red_bits	$SOKOLC/sokol_app.h	/^    int         red_bits;$/;"	E
ref	$SOKOLC/sokol_gfx.h	/^    uint8_t ref;$/;"	m	struct:sg_stencil_state	typeref:typename:uint8_t
release_queue	$SOKOLC/sokol_gfx.h	/^    _sg_mtl_release_item_t* release_queue;$/;"	m	struct:__anon13e02ee74608	typeref:typename:_sg_mtl_release_item_t *
release_queue_back	$SOKOLC/sokol_gfx.h	/^    int release_queue_back;$/;"	m	struct:__anon13e02ee74608	typeref:typename:int
release_queue_front	$SOKOLC/sokol_gfx.h	/^    int release_queue_front;$/;"	m	struct:__anon13e02ee74608	typeref:typename:int
remove_handler	$SOKOLC/sokol_audio.h	/^-(void)remove_handler {$/;"	m	implementation:_saudio_interruption_handler	signature:()
render	$SOKOLC/sokol_gfx.h	/^    bool render;$/;"	m	struct:__anon13e02ee77508	typeref:typename:bool
render_client	$SOKOLC/sokol_audio.h	/^    IAudioRenderClient* render_client;$/;"	E
render_format	$SOKOLC/sokol_app.h	/^    WGPUTextureFormat render_format;$/;"	E
render_target	$SOKOLC/sokol_gfx.h	/^    bool render_target;$/;"	m	struct:sg_image_desc	typeref:typename:bool
render_target_view_cb	$SOKOLC/sokol_gfx.h	/^    const void* (*render_target_view_cb)(void);$/;"	m	struct:sg_d3d11_context_desc	typeref:typename:const void * (*)(void)
render_target_view_userdata_cb	$SOKOLC/sokol_gfx.h	/^    const void* (*render_target_view_userdata_cb)(void*);$/;"	m	struct:sg_d3d11_context_desc	typeref:typename:const void * (*)(void *)
render_view_cb	$SOKOLC/sokol_gfx.h	/^    const void* (*render_view_cb)(void);   \/\/ returns WGPUTextureView$/;"	m	struct:sg_wgpu_context_desc	typeref:typename:const void * (*)(void)
render_view_userdata_cb	$SOKOLC/sokol_gfx.h	/^    const void* (*render_view_userdata_cb)(void*);$/;"	m	struct:sg_wgpu_context_desc	typeref:typename:const void * (*)(void *)
renderpass_descriptor_cb	$SOKOLC/sokol_gfx.h	/^    const void*(*renderpass_descriptor_cb)(void);$/;"	m	struct:__anon13e02ee75708	typeref:typename:const void * (*)(void)
renderpass_descriptor_userdata_cb	$SOKOLC/sokol_gfx.h	/^    const void*(*renderpass_descriptor_userdata_cb)(void*);$/;"	m	struct:__anon13e02ee75708	typeref:typename:const void * (*)(void *)
request_handler	$SOKOLC/sokol_fetch.h	/^    void (*request_handler)(struct _sfetch_t* ctx, uint32_t slot_id);$/;"	m	struct:__anon3d2cd3ac0808	typeref:typename:void (*)(struct _sfetch_t * ctx,uint32_t slot_id)
res	$SOKOLC/sokol_gfx.h	/^    const void* res;      \/\/ ID3D11Resource* (either tex2d or tex3d)$/;"	m	struct:sg_d3d11_image_info	typeref:typename:const void *
res_id	$SOKOLC/sokol_gfx.h	/^    uint32_t res_id;            \/\/ type-neutral resource if (e.g. sg_buffer.id)$/;"	m	struct:sg_slot_info	typeref:typename:uint32_t
res_id	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_shader res_id;$/;"	m	struct:sg_imgui_shader_t	typeref:typename:sg_shader
reset_state_cache	$SOKOLC/sokol_gfx.h	/^    void (*reset_state_cache)(void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(void * user_data)
resolve_attachments	$SOKOLC/sokol_gfx.h	/^    sg_pass_attachment_desc resolve_attachments[SG_MAX_COLOR_ATTACHMENTS];$/;"	m	struct:sg_pass_desc	typeref:typename:sg_pass_attachment_desc[]
resolve_atts	$SOKOLC/sokol_gfx.h	/^    _sg_pass_attachment_common_t resolve_atts[SG_MAX_COLOR_ATTACHMENTS];$/;"	m	struct:__anon13e02ee71108	typeref:typename:_sg_pass_attachment_common_t[]
resolve_image_scale	$SOKOLC/util/sokol_gfx_imgui.h	/^    float resolve_image_scale[SG_MAX_COLOR_ATTACHMENTS];$/;"	m	struct:sg_imgui_pass_t	typeref:typename:float[]
resolve_rtv	$SOKOLC/sokol_gfx.h	/^    const void* resolve_rtv[SG_MAX_COLOR_ATTACHMENTS];    \/\/ ID3D11RenderTargetView$/;"	m	struct:sg_d3d11_pass_info	typeref:typename:const void * []
resolve_view	$SOKOLC/sokol_gfx.h	/^    const void* resolve_view[SG_MAX_COLOR_ATTACHMENTS];    \/\/ WGPUTextureView$/;"	m	struct:sg_wgpu_pass_info	typeref:typename:const void * []
resolve_view_cb	$SOKOLC/sokol_gfx.h	/^    const void* (*resolve_view_cb)(void);  \/\/ returns WGPUTextureView$/;"	m	struct:sg_wgpu_context_desc	typeref:typename:const void * (*)(void)
resolve_view_userdata_cb	$SOKOLC/sokol_gfx.h	/^    const void* (*resolve_view_userdata_cb)(void*);$/;"	m	struct:sg_wgpu_context_desc	typeref:typename:const void * (*)(void *)
result	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_shader result;$/;"	m	struct:sg_imgui_args_make_shader_t	typeref:typename:sg_shader
rewind_frame_id	$SOKOLC/util/sokol_spine.h	/^        uint32_t rewind_frame_id;$/;"	m	struct:__anon5007022e1708::__anon5007022e1a08	typeref:typename:uint32_t
rgba	$SOKOLC/util/sokol_gl.h	/^    uint32_t rgba;$/;"	m	struct:__anon382715e21008	typeref:typename:uint32_t
rightMouseDown:	$SOKOLC/sokol_app.h	/^- (void)rightMouseDown:(NSEvent*)event {$/;"	m	implementation:_sapp_macos_view	signature:(NSEvent*)	category:void
rightMouseDragged:	$SOKOLC/sokol_app.h	/^- (void)rightMouseDragged:(NSEvent*)event {$/;"	m	implementation:_sapp_macos_view	signature:(NSEvent*)	category:void
rightMouseUp:	$SOKOLC/sokol_app.h	/^- (void)rightMouseUp:(NSEvent*)event {$/;"	m	implementation:_sapp_macos_view	signature:(NSEvent*)	category:void
ring	$SOKOLC/sokol_app.h	/^    _sapp_ring_t ring;$/;"	E
ring_radius	$SOKOLC/util/sokol_shape.h	/^    float ring_radius;              \/\/ default: 0.2f$/;"	m	struct:sshape_torus_t	typeref:typename:float
rings	$SOKOLC/util/sokol_shape.h	/^    uint16_t rings;                 \/\/ default: 5$/;"	m	struct:sshape_torus_t	typeref:typename:uint16_t
root	$SOKOLC/sokol_app.h	/^    Window root;$/;"	E
rotation	$SOKOLC/util/sokol_spine.h	/^    float rotation;         \/\/ in degrees$/;"	m	struct:sspine_bone_transform	typeref:typename:float
rps	$SOKOLC/sokol_gfx.h	/^    const void* rps;      \/\/ id<MTLRenderPipelineState>$/;"	m	struct:sg_mtl_pipeline_info	typeref:typename:const void *
rtv	$SOKOLC/sokol_app.h	/^    ID3D11RenderTargetView* rtv;$/;"	E
rtv	$SOKOLC/sokol_gfx.h	/^        ID3D11RenderTargetView* rtv;$/;"	m	union:__anon13e02ee73f08::__anon13e02ee7400a	typeref:typename:ID3D11RenderTargetView *
rtv_cb	$SOKOLC/sokol_gfx.h	/^    const void* (*rtv_cb)(void);$/;"	m	struct:__anon13e02ee74408	typeref:typename:const void * (*)(void)
rtv_userdata_cb	$SOKOLC/sokol_gfx.h	/^    const void* (*rtv_userdata_cb)(void*);$/;"	m	struct:__anon13e02ee74408	typeref:typename:const void * (*)(void *)
running_critsec	$SOKOLC/sokol_fetch.h	/^    CRITICAL_SECTION running_critsec;$/;"	m	struct:__anon3d2cd3ac0208	typeref:typename:CRITICAL_SECTION
running_mutex	$SOKOLC/sokol_fetch.h	/^    pthread_mutex_t running_mutex;$/;"	m	struct:__anon3d2cd3ac0108	typeref:typename:pthread_mutex_t
sample	$SOKOLC/sokol_gfx.h	/^    bool sample;$/;"	m	struct:__anon13e02ee77508	typeref:typename:bool
sample_count	$SOKOLC/sokol_app.h	/^    int sample_count;$/;"	E
sample_count	$SOKOLC/sokol_gfx.h	/^    int sample_count;$/;"	m	struct:sg_pipeline_desc	typeref:typename:int
sample_count	$SOKOLC/util/sokol_debugtext.h	/^    int sample_count;                       \/\/ MSAA sample count of target render pass$/;"	m	struct:sdtx_context_desc_t	typeref:typename:int
sample_count	$SOKOLC/util/sokol_gl.h	/^    int sample_count;$/;"	m	struct:sgl_desc_t	typeref:typename:int
sample_count	$SOKOLC/util/sokol_imgui.h	/^    int sample_count;$/;"	m	struct:simgui_desc_t	typeref:typename:int
sample_count	$SOKOLC/util/sokol_nuklear.h	/^    int sample_count;$/;"	m	struct:snk_desc_t	typeref:typename:int
sample_count	$SOKOLC/util/sokol_spine.h	/^    int sample_count;$/;"	m	struct:sspine_desc	typeref:typename:int
sample_rate	$SOKOLC/sokol_audio.h	/^    int sample_rate;        \/\/ requested sample rate$/;"	E	struct:saudio_desc
sample_type	$SOKOLC/sokol_gfx.h	/^    sg_image_sample_type sample_type;$/;"	m	struct:sg_shader_image_desc	typeref:typename:sg_image_sample_type
sampler	$SOKOLC/sokol_gfx.h	/^    GLuint sampler;$/;"	m	struct:__anon13e02ee73008	typeref:typename:GLuint
sampler	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_sampler sampler;$/;"	m	struct:sg_imgui_args_uninit_sampler_t	typeref:typename:sg_sampler
sampler	$SOKOLC/util/sokol_imgui.h	/^    sg_sampler sampler;$/;"	m	struct:simgui_image_desc_t	typeref:typename:sg_sampler
sampler	$SOKOLC/util/sokol_nuklear.h	/^    sg_sampler sampler;$/;"	m	struct:snk_image_desc_t	typeref:typename:sg_sampler
sampler_pool	$SOKOLC/sokol_gfx.h	/^    _sg_pool_t sampler_pool;$/;"	m	struct:__anon13e02ee77208	typeref:typename:_sg_pool_t
sampler_pool_size	$SOKOLC/sokol_gfx.h	/^    int sampler_pool_size;$/;"	m	struct:sg_desc	typeref:typename:int
sampler_slot	$SOKOLC/sokol_gfx.h	/^    int sampler_slot;$/;"	m	struct:sg_shader_image_sampler_pair_desc	typeref:typename:int
sampler_state	$SOKOLC/sokol_gfx.h	/^        int sampler_state;$/;"	m	struct:__anon13e02ee74b08::__anon13e02ee74c08	typeref:typename:int
sampler_type	$SOKOLC/sokol_gfx.h	/^    sg_sampler_type sampler_type;$/;"	m	struct:sg_shader_sampler_desc	typeref:typename:sg_sampler_type
samplers	$SOKOLC/sokol_gfx.h	/^    sg_shader_sampler_desc samplers[SG_MAX_SHADERSTAGE_SAMPLERS];$/;"	m	struct:sg_shader_stage_desc	typeref:typename:sg_shader_sampler_desc[]
samplers	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_samplers_t samplers;$/;"	m	struct:sg_imgui_t	typeref:typename:sg_imgui_samplers_t
samples	$SOKOLC/sokol_app.h	/^    int         samples;$/;"	E
sapp_android_get_native_activity	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const void* sapp_android_get_native_activity(void);$/;"	f
sapp_android_tooltype	$SOKOLC/sokol_app.h	/^} sapp_android_tooltype;$/;"	t
sapp_cancel_quit	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL void sapp_cancel_quit(void);$/;"	f
sapp_color_format	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL int sapp_color_format(void);$/;"	f
sapp_consume_event	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL void sapp_consume_event(void);$/;"	f
sapp_d3d11_get_depth_stencil_view	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const void* sapp_d3d11_get_depth_stencil_view(void);$/;"	f
sapp_d3d11_get_device	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const void* sapp_d3d11_get_device(void);$/;"	f
sapp_d3d11_get_device_context	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const void* sapp_d3d11_get_device_context(void);$/;"	f
sapp_d3d11_get_render_target_view	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const void* sapp_d3d11_get_render_target_view(void);$/;"	f
sapp_d3d11_get_swap_chain	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const void* sapp_d3d11_get_swap_chain(void);$/;"	f
sapp_depth_format	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL int sapp_depth_format(void);$/;"	f
sapp_dpi_scale	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL float sapp_dpi_scale(void);$/;"	f
sapp_egl_get_context	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const void* sapp_egl_get_context(void);$/;"	f
sapp_egl_get_display	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const void* sapp_egl_get_display(void);$/;"	f
sapp_event_type	$SOKOLC/sokol_app.h	/^} sapp_event_type;$/;"	t	enum:sapp_event_type
sapp_frame_count	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL uint64_t sapp_frame_count(void);$/;"	f
sapp_frame_duration	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL double sapp_frame_duration(void);$/;"	f
sapp_get_clipboard_string	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const char* sapp_get_clipboard_string(void);$/;"	f
sapp_get_dropped_file_path	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const char* sapp_get_dropped_file_path(int index);$/;"	f
sapp_get_mouse_cursor	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL sapp_mouse_cursor sapp_get_mouse_cursor(void);$/;"	f
sapp_get_num_dropped_files	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL int sapp_get_num_dropped_files(void);$/;"	f
sapp_height	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL int sapp_height(void);$/;"	f
sapp_heightf	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL float sapp_heightf(void);$/;"	f
sapp_high_dpi	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL bool sapp_high_dpi(void);$/;"	f
sapp_html5_ask_leave_site	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL void sapp_html5_ask_leave_site(bool ask);$/;"	f
sapp_html5_fetch_dropped_file	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL void sapp_html5_fetch_dropped_file(const sapp_html5_fetch_request* request);$/;"	f
sapp_html5_fetch_error	$SOKOLC/sokol_app.h	/^} sapp_html5_fetch_error;$/;"	t
sapp_html5_fetch_response	$SOKOLC/sokol_app.h	/^} sapp_html5_fetch_response;$/;"	t	struct:sapp_html5_fetch_response
sapp_html5_get_dropped_file_size	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL uint32_t sapp_html5_get_dropped_file_size(int index);$/;"	f
sapp_icon_desc	$SOKOLC/sokol_app.h	/^} sapp_icon_desc;$/;"	t	struct:sapp_icon_desc
sapp_ios_get_window	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const void* sapp_ios_get_window(void);$/;"	f
sapp_is_fullscreen	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL bool sapp_is_fullscreen(void);$/;"	f
sapp_isvalid	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL bool sapp_isvalid(void);$/;"	f
sapp_keyboard_shown	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL bool sapp_keyboard_shown(void);$/;"	f
sapp_keycode	$SOKOLC/sokol_app.h	/^} sapp_keycode;$/;"	t
sapp_lock_mouse	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL void sapp_lock_mouse(bool lock);$/;"	f
sapp_log_item	$SOKOLC/sokol_app.h	/^} sapp_log_item;$/;"	t	enum:sapp_log_item
sapp_logger	$SOKOLC/sokol_app.h	/^} sapp_logger;$/;"	t	struct:sapp_logger
sapp_macos_get_window	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const void* sapp_macos_get_window(void);$/;"	f
sapp_metal_get_device	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const void* sapp_metal_get_device(void);$/;"	f
sapp_metal_get_drawable	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const void* sapp_metal_get_drawable(void);$/;"	f
sapp_metal_get_renderpass_descriptor	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const void* sapp_metal_get_renderpass_descriptor(void);$/;"	f
sapp_mouse_cursor	$SOKOLC/sokol_app.h	/^} sapp_mouse_cursor;$/;"	t
sapp_mouse_locked	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL bool sapp_mouse_locked(void);$/;"	f
sapp_mouse_shown	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL bool sapp_mouse_shown(void);$/;"	f
sapp_mousebutton	$SOKOLC/sokol_app.h	/^} sapp_mousebutton;$/;"	t
sapp_query_desc	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL sapp_desc sapp_query_desc(void);$/;"	f
sapp_quit	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL void sapp_quit(void);$/;"	f
sapp_range	$SOKOLC/sokol_app.h	/^} sapp_range;$/;"	t	struct:sapp_range
sapp_request_quit	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL void sapp_request_quit(void);$/;"	f
sapp_run	$SOKOLC/sokol_app.h	/^inline void sapp_run(const sapp_desc& desc) { return sapp_run(&desc); }$/;"	f
sapp_sample_count	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL int sapp_sample_count(void);$/;"	f
sapp_set_clipboard_string	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL void sapp_set_clipboard_string(const char* str);$/;"	f
sapp_set_icon	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL void sapp_set_icon(const sapp_icon_desc* icon_desc);$/;"	f
sapp_set_mouse_cursor	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL void sapp_set_mouse_cursor(sapp_mouse_cursor cursor);$/;"	f
sapp_set_window_title	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL void sapp_set_window_title(const char* str);$/;"	f
sapp_sgcontext	$SOKOLC/sokol_glue.h	/^SOKOL_GLUE_API_DECL sg_context_desc sapp_sgcontext(void);$/;"	p	typeref:typename:SOKOL_GLUE_API_DECL sg_context_desc	signature:(void)
sapp_show_keyboard	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL void sapp_show_keyboard(bool show);$/;"	f
sapp_show_mouse	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL void sapp_show_mouse(bool show);$/;"	f
sapp_toggle_fullscreen	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL void sapp_toggle_fullscreen(void);$/;"	f
sapp_touchpoint	$SOKOLC/sokol_app.h	/^} sapp_touchpoint;$/;"	t	struct:sapp_touchpoint
sapp_userdata	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL void* sapp_userdata(void);$/;"	f
sapp_wgpu_get_depth_stencil_view	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const void* sapp_wgpu_get_depth_stencil_view(void);$/;"	f
sapp_wgpu_get_device	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const void* sapp_wgpu_get_device(void);$/;"	f
sapp_wgpu_get_render_view	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const void* sapp_wgpu_get_render_view(void);$/;"	f
sapp_wgpu_get_resolve_view	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const void* sapp_wgpu_get_resolve_view(void);$/;"	f
sapp_width	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL int sapp_width(void);$/;"	f
sapp_widthf	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL float sapp_widthf(void);$/;"	f
sapp_win32_get_hwnd	$SOKOLC/sokol_app.h	/^SOKOL_APP_API_DECL const void* sapp_win32_get_hwnd(void);$/;"	f
sargs_allocator	$SOKOLC/sokol_args.h	/^} sargs_allocator;$/;"	t	typeref:struct:sargs_allocator
sargs_boolean	$SOKOLC/sokol_args.h	/^SOKOL_ARGS_API_DECL bool sargs_boolean(const char* key);$/;"	p	typeref:typename:SOKOL_ARGS_API_DECL bool	signature:(const char * key)
sargs_desc	$SOKOLC/sokol_args.h	/^} sargs_desc;$/;"	t	typeref:struct:sargs_desc
sargs_equals	$SOKOLC/sokol_args.h	/^SOKOL_ARGS_API_DECL bool sargs_equals(const char* key, const char* val);$/;"	p	typeref:typename:SOKOL_ARGS_API_DECL bool	signature:(const char * key,const char * val)
sargs_exists	$SOKOLC/sokol_args.h	/^SOKOL_ARGS_API_DECL bool sargs_exists(const char* key);$/;"	p	typeref:typename:SOKOL_ARGS_API_DECL bool	signature:(const char * key)
sargs_find	$SOKOLC/sokol_args.h	/^SOKOL_ARGS_API_DECL int sargs_find(const char* key);$/;"	p	typeref:typename:SOKOL_ARGS_API_DECL int	signature:(const char * key)
sargs_isvalid	$SOKOLC/sokol_args.h	/^SOKOL_ARGS_API_DECL bool sargs_isvalid(void);$/;"	p	typeref:typename:SOKOL_ARGS_API_DECL bool	signature:(void)
sargs_key_at	$SOKOLC/sokol_args.h	/^SOKOL_ARGS_API_DECL const char* sargs_key_at(int index);$/;"	p	typeref:typename:SOKOL_ARGS_API_DECL const char *	signature:(int index)
sargs_num_args	$SOKOLC/sokol_args.h	/^SOKOL_ARGS_API_DECL int sargs_num_args(void);$/;"	p	typeref:typename:SOKOL_ARGS_API_DECL int	signature:(void)
sargs_setup	$SOKOLC/sokol_args.h	/^inline void sargs_setup(const sargs_desc& desc) { return sargs_setup(&desc); }$/;"	f	typeref:typename:void	signature:(const sargs_desc & desc)
sargs_shutdown	$SOKOLC/sokol_args.h	/^SOKOL_ARGS_API_DECL void sargs_shutdown(void);$/;"	p	typeref:typename:SOKOL_ARGS_API_DECL void	signature:(void)
sargs_value	$SOKOLC/sokol_args.h	/^SOKOL_ARGS_API_DECL const char* sargs_value(const char* key);$/;"	p	typeref:typename:SOKOL_ARGS_API_DECL const char *	signature:(const char * key)
sargs_value_at	$SOKOLC/sokol_args.h	/^SOKOL_ARGS_API_DECL const char* sargs_value_at(int index);$/;"	p	typeref:typename:SOKOL_ARGS_API_DECL const char *	signature:(int index)
sargs_value_def	$SOKOLC/sokol_args.h	/^SOKOL_ARGS_API_DECL const char* sargs_value_def(const char* key, const char* def);$/;"	p	typeref:typename:SOKOL_ARGS_API_DECL const char *	signature:(const char * key,const char * def)
saudio_buffer_frames	$SOKOLC/sokol_audio.h	/^SOKOL_AUDIO_API_DECL int saudio_buffer_frames(void);$/;"	f	struct:saudio_desc
saudio_channels	$SOKOLC/sokol_audio.h	/^SOKOL_AUDIO_API_DECL int saudio_channels(void);$/;"	f	struct:saudio_desc
saudio_desc	$SOKOLC/sokol_audio.h	/^} saudio_desc;$/;"	t	struct:saudio_desc
saudio_expect	$SOKOLC/sokol_audio.h	/^SOKOL_AUDIO_API_DECL int saudio_expect(void);$/;"	f	struct:saudio_desc
saudio_isvalid	$SOKOLC/sokol_audio.h	/^SOKOL_AUDIO_API_DECL bool saudio_isvalid(void);$/;"	f	struct:saudio_desc
saudio_log_item	$SOKOLC/sokol_audio.h	/^} saudio_log_item;$/;"	t	enum:saudio_log_item
saudio_logger	$SOKOLC/sokol_audio.h	/^} saudio_logger;$/;"	t	struct:saudio_logger
saudio_push	$SOKOLC/sokol_audio.h	/^SOKOL_AUDIO_API_DECL int saudio_push(const float* frames, int num_frames);$/;"	f	struct:saudio_desc
saudio_query_desc	$SOKOLC/sokol_audio.h	/^SOKOL_AUDIO_API_DECL saudio_desc saudio_query_desc(void);$/;"	f	struct:saudio_desc
saudio_sample_rate	$SOKOLC/sokol_audio.h	/^SOKOL_AUDIO_API_DECL int saudio_sample_rate(void);$/;"	f	struct:saudio_desc
saudio_setup	$SOKOLC/sokol_audio.h	/^inline void saudio_setup(const saudio_desc& desc) { return saudio_setup(&desc); }$/;"	f	struct:saudio_desc
saudio_shutdown	$SOKOLC/sokol_audio.h	/^SOKOL_AUDIO_API_DECL void saudio_shutdown(void);$/;"	f	struct:saudio_desc
saudio_suspended	$SOKOLC/sokol_audio.h	/^SOKOL_AUDIO_API_DECL bool saudio_suspended(void);$/;"	f	struct:saudio_desc
saudio_userdata	$SOKOLC/sokol_audio.h	/^SOKOL_AUDIO_API_DECL void* saudio_userdata(void);$/;"	f	struct:saudio_desc
scale	$SOKOLC/util/sokol_spine.h	/^    sspine_vec2 scale;$/;"	m	struct:sspine_bone_transform	typeref:typename:sspine_vec2
scissor_rect	$SOKOLC/util/sokol_gl.h	/^    _sgl_scissor_rect_args_t scissor_rect;$/;"	m	union:__anon382715e20e0a	typeref:typename:_sgl_scissor_rect_args_t
screen	$SOKOLC/sokol_app.h	/^    int screen;$/;"	E
scrollWheel:	$SOKOLC/sokol_app.h	/^- (void)scrollWheel:(NSEvent*)event {$/;"	m	implementation:_sapp_macos_view	signature:(NSEvent*)	category:void
sdtx_allocator_t	$SOKOLC/util/sokol_debugtext.h	/^} sdtx_allocator_t;$/;"	t	typeref:struct:sdtx_allocator_t
sdtx_canvas	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_canvas(float w, float h);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(float w,float h)
sdtx_color1i	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_color1i(uint32_t rgba);                                \/\/ A/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(uint32_t rgba)
sdtx_color3b	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_color3b(uint8_t r, uint8_t g, uint8_t b);              \/\/ R/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(uint8_t r,uint8_t g,uint8_t b)
sdtx_color3f	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_color3f(float r, float g, float b);                    \/\/ R/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(float r,float g,float b)
sdtx_color4b	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_color4b(uint8_t r, uint8_t g, uint8_t b, uint8_t a);   \/\/ R/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(uint8_t r,uint8_t g,uint8_t b,uint8_t a)
sdtx_color4f	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_color4f(float r, float g, float b, float a);           \/\/ R/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(float r,float g,float b,float a)
sdtx_context	$SOKOLC/util/sokol_debugtext.h	/^typedef struct sdtx_context { uint32_t id; } sdtx_context;$/;"	t	typeref:struct:sdtx_context
sdtx_context_desc_t	$SOKOLC/util/sokol_debugtext.h	/^} sdtx_context_desc_t;$/;"	t	typeref:struct:sdtx_context_desc_t
sdtx_context_draw	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_context_draw(sdtx_context ctx);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(sdtx_context ctx)
sdtx_context_draw_layer	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_context_draw_layer(sdtx_context ctx, int layer_id);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(sdtx_context ctx,int layer_id)
sdtx_crlf	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_crlf(void);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(void)
sdtx_default_context	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL sdtx_context sdtx_default_context(void);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL sdtx_context	signature:(void)
sdtx_desc_t	$SOKOLC/util/sokol_debugtext.h	/^} sdtx_desc_t;$/;"	t	typeref:struct:sdtx_desc_t
sdtx_destroy_context	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_destroy_context(sdtx_context ctx);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(sdtx_context ctx)
sdtx_draw	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_draw(void);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(void)
sdtx_draw_layer	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_draw_layer(int layer_id);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(int layer_id)
sdtx_font	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_font(int font_index);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(int font_index)
sdtx_font_c64	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL sdtx_font_desc_t sdtx_font_c64(void);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL sdtx_font_desc_t	signature:(void)
sdtx_font_cpc	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL sdtx_font_desc_t sdtx_font_cpc(void);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL sdtx_font_desc_t	signature:(void)
sdtx_font_desc_t	$SOKOLC/util/sokol_debugtext.h	/^} sdtx_font_desc_t;$/;"	t	typeref:struct:sdtx_font_desc_t
sdtx_font_kc853	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL sdtx_font_desc_t sdtx_font_kc853(void);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL sdtx_font_desc_t	signature:(void)
sdtx_font_kc854	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL sdtx_font_desc_t sdtx_font_kc854(void);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL sdtx_font_desc_t	signature:(void)
sdtx_font_oric	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL sdtx_font_desc_t sdtx_font_oric(void);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL sdtx_font_desc_t	signature:(void)
sdtx_font_z1013	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL sdtx_font_desc_t sdtx_font_z1013(void);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL sdtx_font_desc_t	signature:(void)
sdtx_get_context	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL sdtx_context sdtx_get_context(void);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL sdtx_context	signature:(void)
sdtx_home	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_home(void);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(void)
sdtx_layer	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_layer(int layer_id);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(int layer_id)
sdtx_log_item_t	$SOKOLC/util/sokol_debugtext.h	/^} sdtx_log_item_t;$/;"	t	typeref:enum:sdtx_log_item_t
sdtx_logger_t	$SOKOLC/util/sokol_debugtext.h	/^} sdtx_logger_t;$/;"	t	typeref:struct:sdtx_logger_t
sdtx_make_context	$SOKOLC/util/sokol_debugtext.h	/^inline sdtx_context sdtx_make_context(const sdtx_context_desc_t& desc) { return sdtx_make_contex/;"	f	typeref:typename:sdtx_context	signature:(const sdtx_context_desc_t & desc)
sdtx_move	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_move(float dx, float dy);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(float dx,float dy)
sdtx_move_x	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_move_x(float dx);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(float dx)
sdtx_move_y	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_move_y(float dy);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(float dy)
sdtx_origin	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_origin(float x, float y);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(float x,float y)
sdtx_pos	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_pos(float x, float y);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(float x,float y)
sdtx_pos_x	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_pos_x(float x);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(float x)
sdtx_pos_y	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_pos_y(float y);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(float y)
sdtx_printf	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL int sdtx_printf(const char* fmt, ...) {$/;"	f	typeref:typename:SOKOL_DEBUGTEXT_API_DECL int	signature:(const char * fmt,...)
sdtx_putc	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_putc(char chr) {$/;"	f	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(char chr)
sdtx_putr	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_putr(const char* str, int len);    \/\/ 'put range', also sto/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(const char * str,int len)
sdtx_puts	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_puts(const char* str);             \/\/ does NOT append newli/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(const char * str)
sdtx_range	$SOKOLC/util/sokol_debugtext.h	/^} sdtx_range;$/;"	t	typeref:struct:sdtx_range
sdtx_set_context	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_set_context(sdtx_context ctx);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(sdtx_context ctx)
sdtx_setup	$SOKOLC/util/sokol_debugtext.h	/^inline void sdtx_setup(const sdtx_desc_t& desc) { return sdtx_setup(&desc); }$/;"	f	typeref:typename:void	signature:(const sdtx_desc_t & desc)
sdtx_shutdown	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL void sdtx_shutdown(void);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL void	signature:(void)
sdtx_vprintf	$SOKOLC/util/sokol_debugtext.h	/^SOKOL_DEBUGTEXT_API_DECL int sdtx_vprintf(const char* fmt, va_list args);$/;"	p	typeref:typename:SOKOL_DEBUGTEXT_API_DECL int	signature:(const char * fmt,va_list args)
sel_buf	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_buffer sel_buf;$/;"	m	struct:sg_imgui_buffers_t	typeref:typename:sg_buffer
sel_img	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_image sel_img;$/;"	m	struct:sg_imgui_images_t	typeref:typename:sg_image
sel_item	$SOKOLC/util/sokol_gfx_imgui.h	/^    int sel_item;          \/* currently selected capture item by index *\/$/;"	m	struct:sg_imgui_capture_t	typeref:typename:int
sel_pass	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_pass sel_pass;$/;"	m	struct:sg_imgui_passes_t	typeref:typename:sg_pass
sel_pip	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_pipeline sel_pip;$/;"	m	struct:sg_imgui_pipelines_t	typeref:typename:sg_pipeline
sel_shd	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_shader sel_shd;$/;"	m	struct:sg_imgui_shaders_t	typeref:typename:sg_shader
sel_smp	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_sampler sel_smp;$/;"	m	struct:sg_imgui_samplers_t	typeref:typename:sg_sampler
sem	$SOKOLC/sokol_gfx.h	/^    dispatch_semaphore_t sem;$/;"	m	struct:__anon13e02ee75708	typeref:typename:dispatch_semaphore_t
sem_index	$SOKOLC/sokol_gfx.h	/^    int sem_index;$/;"	m	struct:__anon13e02ee73908	typeref:typename:int
sem_name	$SOKOLC/sokol_gfx.h	/^    const char* sem_name;       \/\/ HLSL semantic name$/;"	m	struct:sg_shader_attr_desc	typeref:typename:const char *
setup	$SOKOLC/sokol_fetch.h	/^    bool setup;$/;"	m	struct:_sfetch_t	typeref:typename:bool
sfetch_allocator_t	$SOKOLC/sokol_fetch.h	/^} sfetch_allocator_t;$/;"	t	typeref:struct:sfetch_allocator_t
sfetch_bind_buffer	$SOKOLC/sokol_fetch.h	/^SOKOL_FETCH_API_DECL void sfetch_bind_buffer(sfetch_handle_t h, sfetch_range_t buffer);$/;"	p	typeref:typename:SOKOL_FETCH_API_DECL void	signature:(sfetch_handle_t h,sfetch_range_t buffer)
sfetch_callback_t	$SOKOLC/sokol_fetch.h	/^typedef void(*sfetch_callback_t)(const sfetch_response_t*);$/;"	t	typeref:typename:void (*)(const sfetch_response_t *)
sfetch_cancel	$SOKOLC/sokol_fetch.h	/^SOKOL_FETCH_API_DECL void sfetch_cancel(sfetch_handle_t h);$/;"	p	typeref:typename:SOKOL_FETCH_API_DECL void	signature:(sfetch_handle_t h)
sfetch_continue	$SOKOLC/sokol_fetch.h	/^SOKOL_FETCH_API_DECL void sfetch_continue(sfetch_handle_t h);$/;"	p	typeref:typename:SOKOL_FETCH_API_DECL void	signature:(sfetch_handle_t h)
sfetch_desc	$SOKOLC/sokol_fetch.h	/^SOKOL_FETCH_API_DECL sfetch_desc_t sfetch_desc(void);$/;"	p	typeref:typename:SOKOL_FETCH_API_DECL sfetch_desc_t	signature:(void)
sfetch_desc_t	$SOKOLC/sokol_fetch.h	/^} sfetch_desc_t;$/;"	t	typeref:struct:sfetch_desc_t
sfetch_dowork	$SOKOLC/sokol_fetch.h	/^SOKOL_FETCH_API_DECL void sfetch_dowork(void);$/;"	p	typeref:typename:SOKOL_FETCH_API_DECL void	signature:(void)
sfetch_error_t	$SOKOLC/sokol_fetch.h	/^} sfetch_error_t;$/;"	t	typeref:enum:sfetch_error_t
sfetch_handle_t	$SOKOLC/sokol_fetch.h	/^typedef struct sfetch_handle_t { uint32_t id; } sfetch_handle_t;$/;"	t	typeref:struct:sfetch_handle_t
sfetch_handle_valid	$SOKOLC/sokol_fetch.h	/^SOKOL_FETCH_API_DECL bool sfetch_handle_valid(sfetch_handle_t h);$/;"	p	typeref:typename:SOKOL_FETCH_API_DECL bool	signature:(sfetch_handle_t h)
sfetch_log_item_t	$SOKOLC/sokol_fetch.h	/^} sfetch_log_item_t;$/;"	t	typeref:enum:sfetch_log_item_t
sfetch_logger_t	$SOKOLC/sokol_fetch.h	/^} sfetch_logger_t;$/;"	t	typeref:struct:sfetch_logger_t
sfetch_max_path	$SOKOLC/sokol_fetch.h	/^SOKOL_FETCH_API_DECL int sfetch_max_path(void);$/;"	p	typeref:typename:SOKOL_FETCH_API_DECL int	signature:(void)
sfetch_max_userdata_bytes	$SOKOLC/sokol_fetch.h	/^SOKOL_FETCH_API_DECL int sfetch_max_userdata_bytes(void);$/;"	p	typeref:typename:SOKOL_FETCH_API_DECL int	signature:(void)
sfetch_pause	$SOKOLC/sokol_fetch.h	/^SOKOL_FETCH_API_DECL void sfetch_pause(sfetch_handle_t h);$/;"	p	typeref:typename:SOKOL_FETCH_API_DECL void	signature:(sfetch_handle_t h)
sfetch_range_t	$SOKOLC/sokol_fetch.h	/^} sfetch_range_t;$/;"	t	typeref:struct:sfetch_range_t
sfetch_request_t	$SOKOLC/sokol_fetch.h	/^} sfetch_request_t;$/;"	t	typeref:struct:sfetch_request_t
sfetch_response_t	$SOKOLC/sokol_fetch.h	/^} sfetch_response_t;$/;"	t	typeref:struct:sfetch_response_t
sfetch_send	$SOKOLC/sokol_fetch.h	/^inline sfetch_handle_t sfetch_send(const sfetch_request_t& request) { return sfetch_send(&reques/;"	f	typeref:typename:sfetch_handle_t	signature:(const sfetch_request_t & request)
sfetch_setup	$SOKOLC/sokol_fetch.h	/^inline void sfetch_setup(const sfetch_desc_t& desc) { return sfetch_setup(&desc); }$/;"	f	typeref:typename:void	signature:(const sfetch_desc_t & desc)
sfetch_shutdown	$SOKOLC/sokol_fetch.h	/^SOKOL_FETCH_API_DECL void sfetch_shutdown(void);$/;"	p	typeref:typename:SOKOL_FETCH_API_DECL void	signature:(void)
sfetch_unbind_buffer	$SOKOLC/sokol_fetch.h	/^SOKOL_FETCH_API_DECL void* sfetch_unbind_buffer(sfetch_handle_t h);$/;"	p	typeref:typename:SOKOL_FETCH_API_DECL void *	signature:(sfetch_handle_t h)
sfetch_valid	$SOKOLC/sokol_fetch.h	/^SOKOL_FETCH_API_DECL bool sfetch_valid(void);$/;"	p	typeref:typename:SOKOL_FETCH_API_DECL bool	signature:(void)
sfons_allocator_t	$SOKOLC/util/sokol_fontstash.h	/^} sfons_allocator_t;$/;"	t	typeref:struct:sfons_allocator_t
sfons_create	$SOKOLC/util/sokol_fontstash.h	/^SOKOL_FONTSTASH_API_DECL FONScontext* sfons_create(const sfons_desc_t* desc);$/;"	p	typeref:typename:SOKOL_FONTSTASH_API_DECL FONScontext *	signature:(const sfons_desc_t * desc)
sfons_desc_t	$SOKOLC/util/sokol_fontstash.h	/^} sfons_desc_t;$/;"	t	typeref:struct:sfons_desc_t
sfons_destroy	$SOKOLC/util/sokol_fontstash.h	/^SOKOL_FONTSTASH_API_DECL void sfons_destroy(FONScontext* ctx);$/;"	p	typeref:typename:SOKOL_FONTSTASH_API_DECL void	signature:(FONScontext * ctx)
sfons_flush	$SOKOLC/util/sokol_fontstash.h	/^SOKOL_FONTSTASH_API_DECL void sfons_flush(FONScontext* ctx);$/;"	p	typeref:typename:SOKOL_FONTSTASH_API_DECL void	signature:(FONScontext * ctx)
sfons_rgba	$SOKOLC/util/sokol_fontstash.h	/^SOKOL_FONTSTASH_API_DECL uint32_t sfons_rgba(uint8_t r, uint8_t g, uint8_t b, uint8_t a);$/;"	p	typeref:typename:SOKOL_FONTSTASH_API_DECL uint32_t	signature:(uint8_t r,uint8_t g,uint8_t b,uint8_t a)
sg_activate_context	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_activate_context(sg_context ctx_id);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_context ctx_id)
sg_add_commit_listener	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL bool sg_add_commit_listener(sg_commit_listener listener);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL bool	signature:(sg_commit_listener listener)
sg_alice_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_alice_blue = SG_ALICE_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_alloc_buffer	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_buffer sg_alloc_buffer(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_buffer	signature:(void)
sg_alloc_image	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_image sg_alloc_image(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_image	signature:(void)
sg_alloc_pass	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_pass sg_alloc_pass(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_pass	signature:(void)
sg_alloc_pipeline	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_pipeline sg_alloc_pipeline(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_pipeline	signature:(void)
sg_alloc_sampler	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_sampler sg_alloc_sampler(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_sampler	signature:(void)
sg_alloc_shader	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_shader sg_alloc_shader(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_shader	signature:(void)
sg_allocator	$SOKOLC/sokol_gfx.h	/^} sg_allocator;$/;"	t	typeref:struct:sg_allocator
sg_antique_white	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_antique_white = SG_ANTIQUE_WHITE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_append_buffer	$SOKOLC/sokol_gfx.h	/^inline int sg_append_buffer(sg_buffer buf_id, const sg_range& data) { return sg_append_buffer(bu/;"	f	typeref:typename:int	signature:(sg_buffer buf_id,const sg_range & data)
sg_apply_bindings	$SOKOLC/sokol_gfx.h	/^inline void sg_apply_bindings(const sg_bindings& bindings) { return sg_apply_bindings(&bindings)/;"	f	typeref:typename:void	signature:(const sg_bindings & bindings)
sg_apply_pipeline	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_apply_pipeline(sg_pipeline pip);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_pipeline pip)
sg_apply_scissor_rect	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_apply_scissor_rect(int x, int y, int width, int height, bool origin_t/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(int x,int y,int width,int height,bool origin_top_left)
sg_apply_scissor_rectf	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_apply_scissor_rectf(float x, float y, float width, float height, bool/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(float x,float y,float width,float height,bool origin_top_left)
sg_apply_uniforms	$SOKOLC/sokol_gfx.h	/^inline void sg_apply_uniforms(sg_shader_stage stage, int ub_index, const sg_range& data) { retur/;"	f	typeref:typename:void	signature:(sg_shader_stage stage,int ub_index,const sg_range & data)
sg_apply_viewport	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_apply_viewport(int x, int y, int width, int height, bool origin_top_l/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(int x,int y,int width,int height,bool origin_top_left)
sg_apply_viewportf	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_apply_viewportf(float x, float y, float width, float height, bool ori/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(float x,float y,float width,float height,bool origin_top_left)
sg_aqua	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_aqua = SG_AQUA;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_aquamarine	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_aquamarine = SG_AQUAMARINE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_azure	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_azure = SG_AZURE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_backend	$SOKOLC/sokol_gfx.h	/^} sg_backend;$/;"	t	typeref:enum:sg_backend
sg_begin_default_pass	$SOKOLC/sokol_gfx.h	/^inline void sg_begin_default_pass(const sg_pass_action& pass_action, int width, int height) { re/;"	f	typeref:typename:void	signature:(const sg_pass_action & pass_action,int width,int height)
sg_begin_default_passf	$SOKOLC/sokol_gfx.h	/^inline void sg_begin_default_passf(const sg_pass_action& pass_action, float width, float height)/;"	f	typeref:typename:void	signature:(const sg_pass_action & pass_action,float width,float height)
sg_begin_pass	$SOKOLC/sokol_gfx.h	/^inline void sg_begin_pass(sg_pass pass, const sg_pass_action& pass_action) { return sg_begin_pas/;"	f	typeref:typename:void	signature:(sg_pass pass,const sg_pass_action & pass_action)
sg_beige	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_beige = SG_BEIGE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_bindings	$SOKOLC/sokol_gfx.h	/^} sg_bindings;$/;"	t	typeref:struct:sg_bindings
sg_bisque	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_bisque = SG_BISQUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_black	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_black = SG_BLACK;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_blanched_almond	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_blanched_almond = SG_BLANCHED_ALMOND;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_blend_factor	$SOKOLC/sokol_gfx.h	/^} sg_blend_factor;$/;"	t	typeref:enum:sg_blend_factor
sg_blend_op	$SOKOLC/sokol_gfx.h	/^} sg_blend_op;$/;"	t	typeref:enum:sg_blend_op
sg_blend_state	$SOKOLC/sokol_gfx.h	/^} sg_blend_state;$/;"	t	typeref:struct:sg_blend_state
sg_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_blue = SG_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_blue_violet	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_blue_violet = SG_BLUE_VIOLET;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_border_color	$SOKOLC/sokol_gfx.h	/^} sg_border_color;$/;"	t	typeref:enum:sg_border_color
sg_brown	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_brown = SG_BROWN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_buffer	$SOKOLC/sokol_gfx.h	/^typedef struct sg_buffer   { uint32_t id; } sg_buffer;$/;"	t	typeref:struct:sg_buffer
sg_buffer_desc	$SOKOLC/sokol_gfx.h	/^} sg_buffer_desc;$/;"	t	typeref:struct:sg_buffer_desc
sg_buffer_info	$SOKOLC/sokol_gfx.h	/^} sg_buffer_info;$/;"	t	typeref:struct:sg_buffer_info
sg_buffer_type	$SOKOLC/sokol_gfx.h	/^} sg_buffer_type;$/;"	t	typeref:enum:sg_buffer_type
sg_burlywood	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_burlywood = SG_BURLYWOOD;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_cadet_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_cadet_blue = SG_CADET_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_chartreuse	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_chartreuse = SG_CHARTREUSE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_chocolate	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_chocolate = SG_CHOCOLATE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_color	$SOKOLC/sokol_gfx.h	/^typedef struct sg_color { float r, g, b, a; } sg_color;$/;"	t	typeref:struct:sg_color
sg_color_attachment_action	$SOKOLC/sokol_gfx.h	/^} sg_color_attachment_action;$/;"	t	typeref:struct:sg_color_attachment_action
sg_color_lerp	$SOKOLC/util/sokol_color.h	/^inline sg_color sg_color_lerp(const sg_color& color_a, const sg_color& color_b, float amount) {$/;"	f	typeref:typename:sg_color	signature:(const sg_color & color_a,const sg_color & color_b,float amount)
sg_color_lerp_precise	$SOKOLC/util/sokol_color.h	/^inline sg_color sg_color_lerp_precise(const sg_color& color_a, const sg_color& color_b, float am/;"	f	typeref:typename:sg_color	signature:(const sg_color & color_a,const sg_color & color_b,float amount)
sg_color_mask	$SOKOLC/sokol_gfx.h	/^} sg_color_mask;$/;"	t	typeref:enum:sg_color_mask
sg_color_multiply	$SOKOLC/util/sokol_color.h	/^inline sg_color sg_color_multiply(const sg_color& color, float scale) {$/;"	f	typeref:typename:sg_color	signature:(const sg_color & color,float scale)
sg_color_target_state	$SOKOLC/sokol_gfx.h	/^} sg_color_target_state;$/;"	t	typeref:struct:sg_color_target_state
sg_commit	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_commit(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(void)
sg_commit_listener	$SOKOLC/sokol_gfx.h	/^} sg_commit_listener;$/;"	t	typeref:struct:sg_commit_listener
sg_compare_func	$SOKOLC/sokol_gfx.h	/^} sg_compare_func;$/;"	t	typeref:enum:sg_compare_func
sg_context	$SOKOLC/sokol_gfx.h	/^typedef struct sg_context  { uint32_t id; } sg_context;$/;"	t	typeref:struct:sg_context
sg_context_desc	$SOKOLC/sokol_gfx.h	/^} sg_context_desc;$/;"	t	typeref:struct:sg_context_desc
sg_coral	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_coral = SG_CORAL;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_cornflower_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_cornflower_blue = SG_CORNFLOWER_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_cornsilk	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_cornsilk = SG_CORNSILK;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_crimson	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_crimson = SG_CRIMSON;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_cube_face	$SOKOLC/sokol_gfx.h	/^} sg_cube_face;$/;"	t	typeref:enum:sg_cube_face
sg_cull_mode	$SOKOLC/sokol_gfx.h	/^} sg_cull_mode;$/;"	t	typeref:enum:sg_cull_mode
sg_cyan	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_cyan = SG_CYAN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_d3d11_buffer_info	$SOKOLC/sokol_gfx.h	/^} sg_d3d11_buffer_info;$/;"	t	typeref:struct:sg_d3d11_buffer_info
sg_d3d11_context_desc	$SOKOLC/sokol_gfx.h	/^} sg_d3d11_context_desc;$/;"	t	typeref:struct:sg_d3d11_context_desc
sg_d3d11_device	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL const void* sg_d3d11_device(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL const void *	signature:(void)
sg_d3d11_device_context	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL const void* sg_d3d11_device_context(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL const void *	signature:(void)
sg_d3d11_image_info	$SOKOLC/sokol_gfx.h	/^} sg_d3d11_image_info;$/;"	t	typeref:struct:sg_d3d11_image_info
sg_d3d11_pass_info	$SOKOLC/sokol_gfx.h	/^} sg_d3d11_pass_info;$/;"	t	typeref:struct:sg_d3d11_pass_info
sg_d3d11_pipeline_info	$SOKOLC/sokol_gfx.h	/^} sg_d3d11_pipeline_info;$/;"	t	typeref:struct:sg_d3d11_pipeline_info
sg_d3d11_query_buffer_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_d3d11_buffer_info sg_d3d11_query_buffer_info(sg_buffer buf);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_d3d11_buffer_info	signature:(sg_buffer buf)
sg_d3d11_query_image_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_d3d11_image_info sg_d3d11_query_image_info(sg_image img);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_d3d11_image_info	signature:(sg_image img)
sg_d3d11_query_pass_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_d3d11_pass_info sg_d3d11_query_pass_info(sg_pass pass);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_d3d11_pass_info	signature:(sg_pass pass)
sg_d3d11_query_pipeline_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_d3d11_pipeline_info sg_d3d11_query_pipeline_info(sg_pipeline pip);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_d3d11_pipeline_info	signature:(sg_pipeline pip)
sg_d3d11_query_sampler_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_d3d11_sampler_info sg_d3d11_query_sampler_info(sg_sampler smp);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_d3d11_sampler_info	signature:(sg_sampler smp)
sg_d3d11_query_shader_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_d3d11_shader_info sg_d3d11_query_shader_info(sg_shader shd);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_d3d11_shader_info	signature:(sg_shader shd)
sg_d3d11_sampler_info	$SOKOLC/sokol_gfx.h	/^} sg_d3d11_sampler_info;$/;"	t	typeref:struct:sg_d3d11_sampler_info
sg_d3d11_shader_info	$SOKOLC/sokol_gfx.h	/^} sg_d3d11_shader_info;$/;"	t	typeref:struct:sg_d3d11_shader_info
sg_dark_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_dark_blue = SG_DARK_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_dark_cyan	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_dark_cyan = SG_DARK_CYAN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_dark_goldenrod	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_dark_goldenrod = SG_DARK_GOLDENROD;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_dark_gray	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_dark_gray = SG_DARK_GRAY;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_dark_green	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_dark_green = SG_DARK_GREEN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_dark_khaki	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_dark_khaki = SG_DARK_KHAKI;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_dark_magenta	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_dark_magenta = SG_DARK_MAGENTA;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_dark_olive_green	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_dark_olive_green = SG_DARK_OLIVE_GREEN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_dark_orange	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_dark_orange = SG_DARK_ORANGE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_dark_orchid	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_dark_orchid = SG_DARK_ORCHID;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_dark_red	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_dark_red = SG_DARK_RED;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_dark_salmon	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_dark_salmon = SG_DARK_SALMON;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_dark_sea_green	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_dark_sea_green = SG_DARK_SEA_GREEN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_dark_slate_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_dark_slate_blue = SG_DARK_SLATE_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_dark_slate_gray	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_dark_slate_gray = SG_DARK_SLATE_GRAY;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_dark_turquoise	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_dark_turquoise = SG_DARK_TURQUOISE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_dark_violet	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_dark_violet = SG_DARK_VIOLET;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_dealloc_buffer	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_dealloc_buffer(sg_buffer buf);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_buffer buf)
sg_dealloc_image	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_dealloc_image(sg_image img);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_image img)
sg_dealloc_pass	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_dealloc_pass(sg_pass pass);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_pass pass)
sg_dealloc_pipeline	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_dealloc_pipeline(sg_pipeline pip);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_pipeline pip)
sg_dealloc_sampler	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_dealloc_sampler(sg_sampler smp);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_sampler smp)
sg_dealloc_shader	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_dealloc_shader(sg_shader shd);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_shader shd)
sg_deep_pink	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_deep_pink = SG_DEEP_PINK;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_deep_sky_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_deep_sky_blue = SG_DEEP_SKY_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_depth_attachment_action	$SOKOLC/sokol_gfx.h	/^} sg_depth_attachment_action;$/;"	t	typeref:struct:sg_depth_attachment_action
sg_depth_state	$SOKOLC/sokol_gfx.h	/^} sg_depth_state;$/;"	t	typeref:struct:sg_depth_state
sg_desc	$SOKOLC/sokol_gfx.h	/^} sg_desc;$/;"	t	typeref:struct:sg_desc
sg_destroy_buffer	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_destroy_buffer(sg_buffer buf);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_buffer buf)
sg_destroy_image	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_destroy_image(sg_image img);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_image img)
sg_destroy_pass	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_destroy_pass(sg_pass pass);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_pass pass)
sg_destroy_pipeline	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_destroy_pipeline(sg_pipeline pip);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_pipeline pip)
sg_destroy_sampler	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_destroy_sampler(sg_sampler smp);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_sampler smp)
sg_destroy_shader	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_destroy_shader(sg_shader shd);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_shader shd)
sg_dim_gray	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_dim_gray = SG_DIM_GRAY;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_disable_frame_stats	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_disable_frame_stats(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(void)
sg_discard_context	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_discard_context(sg_context ctx_id);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_context ctx_id)
sg_dodger_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_dodger_blue = SG_DODGER_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_draw	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_draw(int base_element, int num_elements, int num_instances);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(int base_element,int num_elements,int num_instances)
sg_enable_frame_stats	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_enable_frame_stats(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(void)
sg_end_pass	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_end_pass(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(void)
sg_face_winding	$SOKOLC/sokol_gfx.h	/^} sg_face_winding;$/;"	t	typeref:enum:sg_face_winding
sg_fail_buffer	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_fail_buffer(sg_buffer buf);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_buffer buf)
sg_fail_image	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_fail_image(sg_image img);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_image img)
sg_fail_pass	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_fail_pass(sg_pass pass);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_pass pass)
sg_fail_pipeline	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_fail_pipeline(sg_pipeline pip);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_pipeline pip)
sg_fail_sampler	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_fail_sampler(sg_sampler smp);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_sampler smp)
sg_fail_shader	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_fail_shader(sg_shader shd);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_shader shd)
sg_features	$SOKOLC/sokol_gfx.h	/^} sg_features;$/;"	t	typeref:struct:sg_features
sg_filter	$SOKOLC/sokol_gfx.h	/^} sg_filter;$/;"	t	typeref:enum:sg_filter
sg_firebrick	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_firebrick = SG_FIREBRICK;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_floral_white	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_floral_white = SG_FLORAL_WHITE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_forest_green	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_forest_green = SG_FOREST_GREEN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_frame_stats	$SOKOLC/sokol_gfx.h	/^} sg_frame_stats;$/;"	t	typeref:struct:sg_frame_stats
sg_frame_stats_d3d11	$SOKOLC/sokol_gfx.h	/^} sg_frame_stats_d3d11;$/;"	t	typeref:struct:sg_frame_stats_d3d11
sg_frame_stats_d3d11_bindings	$SOKOLC/sokol_gfx.h	/^} sg_frame_stats_d3d11_bindings;$/;"	t	typeref:struct:sg_frame_stats_d3d11_bindings
sg_frame_stats_d3d11_draw	$SOKOLC/sokol_gfx.h	/^} sg_frame_stats_d3d11_draw;$/;"	t	typeref:struct:sg_frame_stats_d3d11_draw
sg_frame_stats_d3d11_pass	$SOKOLC/sokol_gfx.h	/^} sg_frame_stats_d3d11_pass;$/;"	t	typeref:struct:sg_frame_stats_d3d11_pass
sg_frame_stats_d3d11_pipeline	$SOKOLC/sokol_gfx.h	/^} sg_frame_stats_d3d11_pipeline;$/;"	t	typeref:struct:sg_frame_stats_d3d11_pipeline
sg_frame_stats_d3d11_uniforms	$SOKOLC/sokol_gfx.h	/^} sg_frame_stats_d3d11_uniforms;$/;"	t	typeref:struct:sg_frame_stats_d3d11_uniforms
sg_frame_stats_enabled	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL bool sg_frame_stats_enabled(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL bool	signature:(void)
sg_frame_stats_gl	$SOKOLC/sokol_gfx.h	/^} sg_frame_stats_gl;$/;"	t	typeref:struct:sg_frame_stats_gl
sg_frame_stats_metal	$SOKOLC/sokol_gfx.h	/^} sg_frame_stats_metal;$/;"	t	typeref:struct:sg_frame_stats_metal
sg_frame_stats_metal_bindings	$SOKOLC/sokol_gfx.h	/^} sg_frame_stats_metal_bindings;$/;"	t	typeref:struct:sg_frame_stats_metal_bindings
sg_frame_stats_metal_idpool	$SOKOLC/sokol_gfx.h	/^} sg_frame_stats_metal_idpool;$/;"	t	typeref:struct:sg_frame_stats_metal_idpool
sg_frame_stats_metal_pipeline	$SOKOLC/sokol_gfx.h	/^} sg_frame_stats_metal_pipeline;$/;"	t	typeref:struct:sg_frame_stats_metal_pipeline
sg_frame_stats_metal_uniforms	$SOKOLC/sokol_gfx.h	/^} sg_frame_stats_metal_uniforms;$/;"	t	typeref:struct:sg_frame_stats_metal_uniforms
sg_frame_stats_wgpu	$SOKOLC/sokol_gfx.h	/^} sg_frame_stats_wgpu;$/;"	t	typeref:struct:sg_frame_stats_wgpu
sg_frame_stats_wgpu_bindings	$SOKOLC/sokol_gfx.h	/^} sg_frame_stats_wgpu_bindings;$/;"	t	typeref:struct:sg_frame_stats_wgpu_bindings
sg_frame_stats_wgpu_uniforms	$SOKOLC/sokol_gfx.h	/^} sg_frame_stats_wgpu_uniforms;$/;"	t	typeref:struct:sg_frame_stats_wgpu_uniforms
sg_fuchsia	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_fuchsia = SG_FUCHSIA;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_gainsboro	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_gainsboro = SG_GAINSBORO;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_ghost_white	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_ghost_white = SG_GHOST_WHITE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_gl_buffer_info	$SOKOLC/sokol_gfx.h	/^} sg_gl_buffer_info;$/;"	t	typeref:struct:sg_gl_buffer_info
sg_gl_context_desc	$SOKOLC/sokol_gfx.h	/^} sg_gl_context_desc;$/;"	t	typeref:struct:sg_gl_context_desc
sg_gl_image_info	$SOKOLC/sokol_gfx.h	/^} sg_gl_image_info;$/;"	t	typeref:struct:sg_gl_image_info
sg_gl_pass_info	$SOKOLC/sokol_gfx.h	/^} sg_gl_pass_info;$/;"	t	typeref:struct:sg_gl_pass_info
sg_gl_query_buffer_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_gl_buffer_info sg_gl_query_buffer_info(sg_buffer buf);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_gl_buffer_info	signature:(sg_buffer buf)
sg_gl_query_image_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_gl_image_info sg_gl_query_image_info(sg_image img);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_gl_image_info	signature:(sg_image img)
sg_gl_query_pass_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_gl_pass_info sg_gl_query_pass_info(sg_pass pass);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_gl_pass_info	signature:(sg_pass pass)
sg_gl_query_sampler_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_gl_sampler_info sg_gl_query_sampler_info(sg_sampler smp);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_gl_sampler_info	signature:(sg_sampler smp)
sg_gl_query_shader_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_gl_shader_info sg_gl_query_shader_info(sg_shader shd);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_gl_shader_info	signature:(sg_shader shd)
sg_gl_sampler_info	$SOKOLC/sokol_gfx.h	/^} sg_gl_sampler_info;$/;"	t	typeref:struct:sg_gl_sampler_info
sg_gl_shader_info	$SOKOLC/sokol_gfx.h	/^} sg_gl_shader_info;$/;"	t	typeref:struct:sg_gl_shader_info
sg_gold	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_gold = SG_GOLD;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_goldenrod	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_goldenrod = SG_GOLDENROD;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_gray	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_gray = SG_GRAY;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_green	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_green = SG_GREEN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_green_yellow	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_green_yellow = SG_GREEN_YELLOW;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_honeydew	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_honeydew = SG_HONEYDEW;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_hot_pink	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_hot_pink = SG_HOT_PINK;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_image	$SOKOLC/sokol_gfx.h	/^typedef struct sg_image    { uint32_t id; } sg_image;$/;"	t	typeref:struct:sg_image
sg_image_data	$SOKOLC/sokol_gfx.h	/^} sg_image_data;$/;"	t	typeref:struct:sg_image_data
sg_image_desc	$SOKOLC/sokol_gfx.h	/^} sg_image_desc;$/;"	t	typeref:struct:sg_image_desc
sg_image_info	$SOKOLC/sokol_gfx.h	/^} sg_image_info;$/;"	t	typeref:struct:sg_image_info
sg_image_sample_type	$SOKOLC/sokol_gfx.h	/^} sg_image_sample_type;$/;"	t	typeref:enum:sg_image_sample_type
sg_image_type	$SOKOLC/sokol_gfx.h	/^} sg_image_type;$/;"	t	typeref:enum:sg_image_type
sg_imgui_allocator_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_allocator_t;$/;"	t	typeref:struct:sg_imgui_allocator_t
sg_imgui_args_alloc_buffer_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_alloc_buffer_t;$/;"	t	typeref:struct:sg_imgui_args_alloc_buffer_t
sg_imgui_args_alloc_image_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_alloc_image_t;$/;"	t	typeref:struct:sg_imgui_args_alloc_image_t
sg_imgui_args_alloc_pass_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_alloc_pass_t;$/;"	t	typeref:struct:sg_imgui_args_alloc_pass_t
sg_imgui_args_alloc_pipeline_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_alloc_pipeline_t;$/;"	t	typeref:struct:sg_imgui_args_alloc_pipeline_t
sg_imgui_args_alloc_sampler_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_alloc_sampler_t;$/;"	t	typeref:struct:sg_imgui_args_alloc_sampler_t
sg_imgui_args_alloc_shader_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_alloc_shader_t;$/;"	t	typeref:struct:sg_imgui_args_alloc_shader_t
sg_imgui_args_append_buffer_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_append_buffer_t;$/;"	t	typeref:struct:sg_imgui_args_append_buffer_t
sg_imgui_args_apply_bindings_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_apply_bindings_t;$/;"	t	typeref:struct:sg_imgui_args_apply_bindings_t
sg_imgui_args_apply_pipeline_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_apply_pipeline_t;$/;"	t	typeref:struct:sg_imgui_args_apply_pipeline_t
sg_imgui_args_apply_scissor_rect_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_apply_scissor_rect_t;$/;"	t	typeref:struct:sg_imgui_args_apply_scissor_rect_t
sg_imgui_args_apply_uniforms_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_apply_uniforms_t;$/;"	t	typeref:struct:sg_imgui_args_apply_uniforms_t
sg_imgui_args_apply_viewport_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_apply_viewport_t;$/;"	t	typeref:struct:sg_imgui_args_apply_viewport_t
sg_imgui_args_begin_default_pass_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_begin_default_pass_t;$/;"	t	typeref:struct:sg_imgui_args_begin_default_pass_t
sg_imgui_args_begin_pass_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_begin_pass_t;$/;"	t	typeref:struct:sg_imgui_args_begin_pass_t
sg_imgui_args_dealloc_buffer_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_dealloc_buffer_t;$/;"	t	typeref:struct:sg_imgui_args_dealloc_buffer_t
sg_imgui_args_dealloc_image_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_dealloc_image_t;$/;"	t	typeref:struct:sg_imgui_args_dealloc_image_t
sg_imgui_args_dealloc_pass_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_dealloc_pass_t;$/;"	t	typeref:struct:sg_imgui_args_dealloc_pass_t
sg_imgui_args_dealloc_pipeline_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_dealloc_pipeline_t;$/;"	t	typeref:struct:sg_imgui_args_dealloc_pipeline_t
sg_imgui_args_dealloc_sampler_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_dealloc_sampler_t;$/;"	t	typeref:struct:sg_imgui_args_dealloc_sampler_t
sg_imgui_args_dealloc_shader_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_dealloc_shader_t;$/;"	t	typeref:struct:sg_imgui_args_dealloc_shader_t
sg_imgui_args_destroy_buffer_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_destroy_buffer_t;$/;"	t	typeref:struct:sg_imgui_args_destroy_buffer_t
sg_imgui_args_destroy_image_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_destroy_image_t;$/;"	t	typeref:struct:sg_imgui_args_destroy_image_t
sg_imgui_args_destroy_pass_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_destroy_pass_t;$/;"	t	typeref:struct:sg_imgui_args_destroy_pass_t
sg_imgui_args_destroy_pipeline_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_destroy_pipeline_t;$/;"	t	typeref:struct:sg_imgui_args_destroy_pipeline_t
sg_imgui_args_destroy_sampler_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_destroy_sampler_t;$/;"	t	typeref:struct:sg_imgui_args_destroy_sampler_t
sg_imgui_args_destroy_shader_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_destroy_shader_t;$/;"	t	typeref:struct:sg_imgui_args_destroy_shader_t
sg_imgui_args_draw_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_draw_t;$/;"	t	typeref:struct:sg_imgui_args_draw_t
sg_imgui_args_fail_buffer_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_fail_buffer_t;$/;"	t	typeref:struct:sg_imgui_args_fail_buffer_t
sg_imgui_args_fail_image_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_fail_image_t;$/;"	t	typeref:struct:sg_imgui_args_fail_image_t
sg_imgui_args_fail_pass_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_fail_pass_t;$/;"	t	typeref:struct:sg_imgui_args_fail_pass_t
sg_imgui_args_fail_pipeline_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_fail_pipeline_t;$/;"	t	typeref:struct:sg_imgui_args_fail_pipeline_t
sg_imgui_args_fail_sampler_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_fail_sampler_t;$/;"	t	typeref:struct:sg_imgui_args_fail_sampler_t
sg_imgui_args_fail_shader_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_fail_shader_t;$/;"	t	typeref:struct:sg_imgui_args_fail_shader_t
sg_imgui_args_init_buffer_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_init_buffer_t;$/;"	t	typeref:struct:sg_imgui_args_init_buffer_t
sg_imgui_args_init_image_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_init_image_t;$/;"	t	typeref:struct:sg_imgui_args_init_image_t
sg_imgui_args_init_pass_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_init_pass_t;$/;"	t	typeref:struct:sg_imgui_args_init_pass_t
sg_imgui_args_init_pipeline_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_init_pipeline_t;$/;"	t	typeref:struct:sg_imgui_args_init_pipeline_t
sg_imgui_args_init_sampler_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_init_sampler_t;$/;"	t	typeref:struct:sg_imgui_args_init_sampler_t
sg_imgui_args_init_shader_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_init_shader_t;$/;"	t	typeref:struct:sg_imgui_args_init_shader_t
sg_imgui_args_make_buffer_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_make_buffer_t;$/;"	t	typeref:struct:sg_imgui_args_make_buffer_t
sg_imgui_args_make_image_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_make_image_t;$/;"	t	typeref:struct:sg_imgui_args_make_image_t
sg_imgui_args_make_pass_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_make_pass_t;$/;"	t	typeref:struct:sg_imgui_args_make_pass_t
sg_imgui_args_make_pipeline_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_make_pipeline_t;$/;"	t	typeref:struct:sg_imgui_args_make_pipeline_t
sg_imgui_args_make_sampler_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_make_sampler_t;$/;"	t	typeref:struct:sg_imgui_args_make_sampler_t
sg_imgui_args_make_shader_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_make_shader_t;$/;"	t	typeref:struct:sg_imgui_args_make_shader_t
sg_imgui_args_push_debug_group_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_push_debug_group_t;$/;"	t	typeref:struct:sg_imgui_args_push_debug_group_t
sg_imgui_args_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_t;$/;"	t	typeref:union:sg_imgui_args_t
sg_imgui_args_uninit_buffer_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_uninit_buffer_t;$/;"	t	typeref:struct:sg_imgui_args_uninit_buffer_t
sg_imgui_args_uninit_image_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_uninit_image_t;$/;"	t	typeref:struct:sg_imgui_args_uninit_image_t
sg_imgui_args_uninit_pass_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_uninit_pass_t;$/;"	t	typeref:struct:sg_imgui_args_uninit_pass_t
sg_imgui_args_uninit_pipeline_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_uninit_pipeline_t;$/;"	t	typeref:struct:sg_imgui_args_uninit_pipeline_t
sg_imgui_args_uninit_sampler_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_uninit_sampler_t;$/;"	t	typeref:struct:sg_imgui_args_uninit_sampler_t
sg_imgui_args_uninit_shader_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_uninit_shader_t;$/;"	t	typeref:struct:sg_imgui_args_uninit_shader_t
sg_imgui_args_update_buffer_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_update_buffer_t;$/;"	t	typeref:struct:sg_imgui_args_update_buffer_t
sg_imgui_args_update_image_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_args_update_image_t;$/;"	t	typeref:struct:sg_imgui_args_update_image_t
sg_imgui_buffer_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_buffer_t;$/;"	t	typeref:struct:sg_imgui_buffer_t
sg_imgui_buffers_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_buffers_t;$/;"	t	typeref:struct:sg_imgui_buffers_t
sg_imgui_caps_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_caps_t;$/;"	t	typeref:struct:sg_imgui_caps_t
sg_imgui_capture_bucket_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_capture_bucket_t;$/;"	t	typeref:struct:sg_imgui_capture_bucket_t
sg_imgui_capture_item_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_capture_item_t;$/;"	t	typeref:struct:sg_imgui_capture_item_t
sg_imgui_capture_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_capture_t;$/;"	t	typeref:struct:sg_imgui_capture_t
sg_imgui_cmd_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_cmd_t;$/;"	t	typeref:enum:sg_imgui_cmd_t
sg_imgui_desc_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_desc_t;$/;"	t	typeref:struct:sg_imgui_desc_t
sg_imgui_discard	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_discard(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_draw	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_draw_buffers_content	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw_buffers_content(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_draw_buffers_window	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw_buffers_window(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_draw_capabilities_content	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw_capabilities_content(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_draw_capabilities_window	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw_capabilities_window(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_draw_capture_content	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw_capture_content(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_draw_capture_window	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw_capture_window(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_draw_frame_stats_content	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw_frame_stats_content(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_draw_frame_stats_window	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw_frame_stats_window(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_draw_images_content	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw_images_content(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_draw_images_window	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw_images_window(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_draw_menu	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw_menu(sg_imgui_t* ctx, const char* title);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx,const char * title)
sg_imgui_draw_passes_content	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw_passes_content(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_draw_passes_window	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw_passes_window(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_draw_pipelines_content	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw_pipelines_content(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_draw_pipelines_window	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw_pipelines_window(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_draw_samplers_content	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw_samplers_content(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_draw_samplers_window	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw_samplers_window(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_draw_shaders_content	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw_shaders_content(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_draw_shaders_window	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_draw_shaders_window(sg_imgui_t* ctx);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx)
sg_imgui_frame_stats_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_frame_stats_t;$/;"	t	typeref:struct:sg_imgui_frame_stats_t
sg_imgui_image_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_image_t;$/;"	t	typeref:struct:sg_imgui_image_t
sg_imgui_images_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_images_t;$/;"	t	typeref:struct:sg_imgui_images_t
sg_imgui_init	$SOKOLC/util/sokol_gfx_imgui.h	/^SOKOL_GFX_IMGUI_API_DECL void sg_imgui_init(sg_imgui_t* ctx, const sg_imgui_desc_t* desc);$/;"	p	typeref:typename:SOKOL_GFX_IMGUI_API_DECL void	signature:(sg_imgui_t * ctx,const sg_imgui_desc_t * desc)
sg_imgui_pass_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_pass_t;$/;"	t	typeref:struct:sg_imgui_pass_t
sg_imgui_passes_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_passes_t;$/;"	t	typeref:struct:sg_imgui_passes_t
sg_imgui_pipeline_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_pipeline_t;$/;"	t	typeref:struct:sg_imgui_pipeline_t
sg_imgui_pipelines_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_pipelines_t;$/;"	t	typeref:struct:sg_imgui_pipelines_t
sg_imgui_sampler_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_sampler_t;$/;"	t	typeref:struct:sg_imgui_sampler_t
sg_imgui_samplers_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_samplers_t;$/;"	t	typeref:struct:sg_imgui_samplers_t
sg_imgui_shader_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_shader_t;$/;"	t	typeref:struct:sg_imgui_shader_t
sg_imgui_shaders_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_shaders_t;$/;"	t	typeref:struct:sg_imgui_shaders_t
sg_imgui_str_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_str_t;$/;"	t	typeref:struct:sg_imgui_str_t
sg_imgui_t	$SOKOLC/util/sokol_gfx_imgui.h	/^} sg_imgui_t;$/;"	t	typeref:struct:sg_imgui_t
sg_index_type	$SOKOLC/sokol_gfx.h	/^} sg_index_type;$/;"	t	typeref:enum:sg_index_type
sg_indian_red	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_indian_red = SG_INDIAN_RED;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_indigo	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_indigo = SG_INDIGO;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_init_buffer	$SOKOLC/sokol_gfx.h	/^inline void sg_init_buffer(sg_buffer buf, const sg_buffer_desc& desc) { return sg_init_buffer(bu/;"	f	typeref:typename:void	signature:(sg_buffer buf,const sg_buffer_desc & desc)
sg_init_image	$SOKOLC/sokol_gfx.h	/^inline void sg_init_image(sg_image img, const sg_image_desc& desc) { return sg_init_image(img, &/;"	f	typeref:typename:void	signature:(sg_image img,const sg_image_desc & desc)
sg_init_pass	$SOKOLC/sokol_gfx.h	/^inline void sg_init_pass(sg_pass pass, const sg_pass_desc& desc) { return sg_init_pass(pass, &de/;"	f	typeref:typename:void	signature:(sg_pass pass,const sg_pass_desc & desc)
sg_init_pipeline	$SOKOLC/sokol_gfx.h	/^inline void sg_init_pipeline(sg_pipeline pip, const sg_pipeline_desc& desc) { return sg_init_pip/;"	f	typeref:typename:void	signature:(sg_pipeline pip,const sg_pipeline_desc & desc)
sg_init_sampler	$SOKOLC/sokol_gfx.h	/^inline void sg_init_sampler(sg_sampler smp, const sg_sampler_desc& desc) { return sg_init_sample/;"	f	typeref:typename:void	signature:(sg_sampler smp,const sg_sampler_desc & desc)
sg_init_shader	$SOKOLC/sokol_gfx.h	/^inline void sg_init_shader(sg_shader shd, const sg_shader_desc& desc) { return sg_init_shader(sh/;"	f	typeref:typename:void	signature:(sg_shader shd,const sg_shader_desc & desc)
sg_install_trace_hooks	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_trace_hooks sg_install_trace_hooks(const sg_trace_hooks* trace_hooks);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_trace_hooks	signature:(const sg_trace_hooks * trace_hooks)
sg_isvalid	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL bool sg_isvalid(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL bool	signature:(void)
sg_ivory	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_ivory = SG_IVORY;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_khaki	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_khaki = SG_KHAKI;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_lavender	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_lavender = SG_LAVENDER;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_lavender_blush	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_lavender_blush = SG_LAVENDER_BLUSH;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_lawn_green	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_lawn_green = SG_LAWN_GREEN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_lemon_chiffon	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_lemon_chiffon = SG_LEMON_CHIFFON;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_light_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_light_blue = SG_LIGHT_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_light_coral	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_light_coral = SG_LIGHT_CORAL;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_light_cyan	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_light_cyan = SG_LIGHT_CYAN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_light_goldenrod	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_light_goldenrod = SG_LIGHT_GOLDENROD;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_light_gray	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_light_gray = SG_LIGHT_GRAY;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_light_green	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_light_green = SG_LIGHT_GREEN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_light_pink	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_light_pink = SG_LIGHT_PINK;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_light_salmon	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_light_salmon = SG_LIGHT_SALMON;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_light_sea_green	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_light_sea_green = SG_LIGHT_SEA_GREEN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_light_sky_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_light_sky_blue = SG_LIGHT_SKY_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_light_slate_gray	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_light_slate_gray = SG_LIGHT_SLATE_GRAY;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_light_steel_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_light_steel_blue = SG_LIGHT_STEEL_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_light_yellow	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_light_yellow = SG_LIGHT_YELLOW;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_lime	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_lime = SG_LIME;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_lime_green	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_lime_green = SG_LIME_GREEN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_limits	$SOKOLC/sokol_gfx.h	/^} sg_limits;$/;"	t	typeref:struct:sg_limits
sg_linen	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_linen = SG_LINEN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_load_action	$SOKOLC/sokol_gfx.h	/^} sg_load_action;$/;"	t	typeref:enum:sg_load_action
sg_log_item	$SOKOLC/sokol_gfx.h	/^} sg_log_item;$/;"	t	typeref:enum:sg_log_item
sg_logger	$SOKOLC/sokol_gfx.h	/^} sg_logger;$/;"	t	typeref:struct:sg_logger
sg_magenta	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_magenta = SG_MAGENTA;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_make_buffer	$SOKOLC/sokol_gfx.h	/^inline sg_buffer sg_make_buffer(const sg_buffer_desc& desc) { return sg_make_buffer(&desc); }$/;"	f	typeref:typename:sg_buffer	signature:(const sg_buffer_desc & desc)
sg_make_color	$SOKOLC/util/sokol_color.h	/^inline sg_color sg_make_color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) {$/;"	f	typeref:typename:sg_color	signature:(uint8_t r,uint8_t g,uint8_t b,uint8_t a)
sg_make_color_1i	$SOKOLC/util/sokol_color.h	/^SOKOL_COLOR_API_DECL sg_color sg_make_color_1i(uint32_t rgba);$/;"	p	typeref:typename:SOKOL_COLOR_API_DECL sg_color	signature:(uint32_t rgba)
sg_make_color_4b	$SOKOLC/util/sokol_color.h	/^SOKOL_COLOR_API_DECL sg_color sg_make_color_4b(uint8_t r, uint8_t g, uint8_t b, uint8_t a);$/;"	p	typeref:typename:SOKOL_COLOR_API_DECL sg_color	signature:(uint8_t r,uint8_t g,uint8_t b,uint8_t a)
sg_make_image	$SOKOLC/sokol_gfx.h	/^inline sg_image sg_make_image(const sg_image_desc& desc) { return sg_make_image(&desc); }$/;"	f	typeref:typename:sg_image	signature:(const sg_image_desc & desc)
sg_make_pass	$SOKOLC/sokol_gfx.h	/^inline sg_pass sg_make_pass(const sg_pass_desc& desc) { return sg_make_pass(&desc); }$/;"	f	typeref:typename:sg_pass	signature:(const sg_pass_desc & desc)
sg_make_pipeline	$SOKOLC/sokol_gfx.h	/^inline sg_pipeline sg_make_pipeline(const sg_pipeline_desc& desc) { return sg_make_pipeline(&des/;"	f	typeref:typename:sg_pipeline	signature:(const sg_pipeline_desc & desc)
sg_make_sampler	$SOKOLC/sokol_gfx.h	/^inline sg_sampler sg_make_sampler(const sg_sampler_desc& desc) { return sg_make_sampler(&desc); /;"	f	typeref:typename:sg_sampler	signature:(const sg_sampler_desc & desc)
sg_make_shader	$SOKOLC/sokol_gfx.h	/^inline sg_shader sg_make_shader(const sg_shader_desc& desc) { return sg_make_shader(&desc); }$/;"	f	typeref:typename:sg_shader	signature:(const sg_shader_desc & desc)
sg_maroon	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_maroon = SG_MAROON;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_medium_aquamarine	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_medium_aquamarine = SG_MEDIUM_AQUAMARINE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_medium_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_medium_blue = SG_MEDIUM_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_medium_orchid	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_medium_orchid = SG_MEDIUM_ORCHID;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_medium_purple	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_medium_purple = SG_MEDIUM_PURPLE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_medium_sea_green	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_medium_sea_green = SG_MEDIUM_SEA_GREEN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_medium_slate_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_medium_slate_blue = SG_MEDIUM_SLATE_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_medium_spring_green	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_medium_spring_green = SG_MEDIUM_SPRING_GREEN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_medium_turquoise	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_medium_turquoise = SG_MEDIUM_TURQUOISE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_medium_violet_red	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_medium_violet_red = SG_MEDIUM_VIOLET_RED;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_metal_context_desc	$SOKOLC/sokol_gfx.h	/^} sg_metal_context_desc;$/;"	t	typeref:struct:sg_metal_context_desc
sg_midnight_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_midnight_blue = SG_MIDNIGHT_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_mint_cream	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_mint_cream = SG_MINT_CREAM;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_misty_rose	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_misty_rose = SG_MISTY_ROSE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_moccasin	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_moccasin = SG_MOCCASIN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_mtl_buffer_info	$SOKOLC/sokol_gfx.h	/^} sg_mtl_buffer_info;$/;"	t	typeref:struct:sg_mtl_buffer_info
sg_mtl_device	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL const void* sg_mtl_device(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL const void *	signature:(void)
sg_mtl_image_info	$SOKOLC/sokol_gfx.h	/^} sg_mtl_image_info;$/;"	t	typeref:struct:sg_mtl_image_info
sg_mtl_pipeline_info	$SOKOLC/sokol_gfx.h	/^} sg_mtl_pipeline_info;$/;"	t	typeref:struct:sg_mtl_pipeline_info
sg_mtl_query_buffer_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_mtl_buffer_info sg_mtl_query_buffer_info(sg_buffer buf);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_mtl_buffer_info	signature:(sg_buffer buf)
sg_mtl_query_image_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_mtl_image_info sg_mtl_query_image_info(sg_image img);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_mtl_image_info	signature:(sg_image img)
sg_mtl_query_pipeline_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_mtl_pipeline_info sg_mtl_query_pipeline_info(sg_pipeline pip);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_mtl_pipeline_info	signature:(sg_pipeline pip)
sg_mtl_query_sampler_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_mtl_sampler_info sg_mtl_query_sampler_info(sg_sampler smp);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_mtl_sampler_info	signature:(sg_sampler smp)
sg_mtl_query_shader_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_mtl_shader_info sg_mtl_query_shader_info(sg_shader shd);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_mtl_shader_info	signature:(sg_shader shd)
sg_mtl_render_command_encoder	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL const void* sg_mtl_render_command_encoder(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL const void *	signature:(void)
sg_mtl_sampler_info	$SOKOLC/sokol_gfx.h	/^} sg_mtl_sampler_info;$/;"	t	typeref:struct:sg_mtl_sampler_info
sg_mtl_shader_info	$SOKOLC/sokol_gfx.h	/^} sg_mtl_shader_info;$/;"	t	typeref:struct:sg_mtl_shader_info
sg_navajo_white	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_navajo_white = SG_NAVAJO_WHITE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_navy_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_navy_blue = SG_NAVY_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_old_lace	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_old_lace = SG_OLD_LACE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_olive	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_olive = SG_OLIVE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_olive_drab	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_olive_drab = SG_OLIVE_DRAB;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_orange	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_orange = SG_ORANGE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_orange_red	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_orange_red = SG_ORANGE_RED;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_orchid	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_orchid = SG_ORCHID;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_pale_goldenrod	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_pale_goldenrod = SG_PALE_GOLDENROD;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_pale_green	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_pale_green = SG_PALE_GREEN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_pale_turquoise	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_pale_turquoise = SG_PALE_TURQUOISE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_pale_violet_red	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_pale_violet_red = SG_PALE_VIOLET_RED;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_papaya_whip	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_papaya_whip = SG_PAPAYA_WHIP;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_pass	$SOKOLC/sokol_gfx.h	/^typedef struct sg_pass     { uint32_t id; } sg_pass;$/;"	t	typeref:struct:sg_pass
sg_pass_action	$SOKOLC/sokol_gfx.h	/^} sg_pass_action;$/;"	t	typeref:struct:sg_pass_action
sg_pass_attachment_desc	$SOKOLC/sokol_gfx.h	/^} sg_pass_attachment_desc;$/;"	t	typeref:struct:sg_pass_attachment_desc
sg_pass_desc	$SOKOLC/sokol_gfx.h	/^} sg_pass_desc;$/;"	t	typeref:struct:sg_pass_desc
sg_pass_info	$SOKOLC/sokol_gfx.h	/^} sg_pass_info;$/;"	t	typeref:struct:sg_pass_info
sg_peach_puff	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_peach_puff = SG_PEACH_PUFF;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_peru	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_peru = SG_PERU;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_pink	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_pink = SG_PINK;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_pipeline	$SOKOLC/sokol_gfx.h	/^typedef struct sg_pipeline { uint32_t id; } sg_pipeline;$/;"	t	typeref:struct:sg_pipeline
sg_pipeline_desc	$SOKOLC/sokol_gfx.h	/^} sg_pipeline_desc;$/;"	t	typeref:struct:sg_pipeline_desc
sg_pipeline_info	$SOKOLC/sokol_gfx.h	/^} sg_pipeline_info;$/;"	t	typeref:struct:sg_pipeline_info
sg_pixel_format	$SOKOLC/sokol_gfx.h	/^} sg_pixel_format;$/;"	t	typeref:enum:sg_pixel_format
sg_pixelformat_info	$SOKOLC/sokol_gfx.h	/^} sg_pixelformat_info;$/;"	t	typeref:struct:sg_pixelformat_info
sg_plum	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_plum = SG_PLUM;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_pop_debug_group	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_pop_debug_group(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(void)
sg_powder_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_powder_blue = SG_POWDER_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_primitive_type	$SOKOLC/sokol_gfx.h	/^} sg_primitive_type;$/;"	t	typeref:enum:sg_primitive_type
sg_purple	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_purple = SG_PURPLE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_push_debug_group	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_push_debug_group(const char* name);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(const char * name)
sg_query_backend	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_backend sg_query_backend(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_backend	signature:(void)
sg_query_buffer_defaults	$SOKOLC/sokol_gfx.h	/^inline sg_buffer_desc sg_query_buffer_defaults(const sg_buffer_desc& desc) { return sg_query_buf/;"	f	typeref:typename:sg_buffer_desc	signature:(const sg_buffer_desc & desc)
sg_query_buffer_desc	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_buffer_desc sg_query_buffer_desc(sg_buffer buf);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_buffer_desc	signature:(sg_buffer buf)
sg_query_buffer_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_buffer_info sg_query_buffer_info(sg_buffer buf);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_buffer_info	signature:(sg_buffer buf)
sg_query_buffer_overflow	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL bool sg_query_buffer_overflow(sg_buffer buf);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL bool	signature:(sg_buffer buf)
sg_query_buffer_state	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_resource_state sg_query_buffer_state(sg_buffer buf);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_resource_state	signature:(sg_buffer buf)
sg_query_buffer_will_overflow	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL bool sg_query_buffer_will_overflow(sg_buffer buf, size_t size);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL bool	signature:(sg_buffer buf,size_t size)
sg_query_desc	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_desc sg_query_desc(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_desc	signature:(void)
sg_query_features	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_features sg_query_features(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_features	signature:(void)
sg_query_frame_stats	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_frame_stats sg_query_frame_stats(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_frame_stats	signature:(void)
sg_query_image_defaults	$SOKOLC/sokol_gfx.h	/^inline sg_image_desc sg_query_image_defaults(const sg_image_desc& desc) { return sg_query_image_/;"	f	typeref:typename:sg_image_desc	signature:(const sg_image_desc & desc)
sg_query_image_desc	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_image_desc sg_query_image_desc(sg_image img);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_image_desc	signature:(sg_image img)
sg_query_image_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_image_info sg_query_image_info(sg_image img);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_image_info	signature:(sg_image img)
sg_query_image_state	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_resource_state sg_query_image_state(sg_image img);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_resource_state	signature:(sg_image img)
sg_query_limits	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_limits sg_query_limits(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_limits	signature:(void)
sg_query_pass_defaults	$SOKOLC/sokol_gfx.h	/^inline sg_pass_desc sg_query_pass_defaults(const sg_pass_desc& desc) { return sg_query_pass_defa/;"	f	typeref:typename:sg_pass_desc	signature:(const sg_pass_desc & desc)
sg_query_pass_desc	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_pass_desc sg_query_pass_desc(sg_pass pass);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_pass_desc	signature:(sg_pass pass)
sg_query_pass_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_pass_info sg_query_pass_info(sg_pass pass);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_pass_info	signature:(sg_pass pass)
sg_query_pass_state	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_resource_state sg_query_pass_state(sg_pass pass);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_resource_state	signature:(sg_pass pass)
sg_query_pipeline_defaults	$SOKOLC/sokol_gfx.h	/^inline sg_pipeline_desc sg_query_pipeline_defaults(const sg_pipeline_desc& desc) { return sg_que/;"	f	typeref:typename:sg_pipeline_desc	signature:(const sg_pipeline_desc & desc)
sg_query_pipeline_desc	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_pipeline_desc sg_query_pipeline_desc(sg_pipeline pip);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_pipeline_desc	signature:(sg_pipeline pip)
sg_query_pipeline_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_pipeline_info sg_query_pipeline_info(sg_pipeline pip);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_pipeline_info	signature:(sg_pipeline pip)
sg_query_pipeline_state	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_resource_state sg_query_pipeline_state(sg_pipeline pip);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_resource_state	signature:(sg_pipeline pip)
sg_query_pixelformat	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_pixelformat_info sg_query_pixelformat(sg_pixel_format fmt);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_pixelformat_info	signature:(sg_pixel_format fmt)
sg_query_row_pitch	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL int sg_query_row_pitch(sg_pixel_format fmt, int width, int row_align_bytes);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL int	signature:(sg_pixel_format fmt,int width,int row_align_bytes)
sg_query_sampler_defaults	$SOKOLC/sokol_gfx.h	/^inline sg_sampler_desc sg_query_sampler_defaults(const sg_sampler_desc& desc) { return sg_query_/;"	f	typeref:typename:sg_sampler_desc	signature:(const sg_sampler_desc & desc)
sg_query_sampler_desc	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_sampler_desc sg_query_sampler_desc(sg_sampler smp);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_sampler_desc	signature:(sg_sampler smp)
sg_query_sampler_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_sampler_info sg_query_sampler_info(sg_sampler smp);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_sampler_info	signature:(sg_sampler smp)
sg_query_sampler_state	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_resource_state sg_query_sampler_state(sg_sampler smp);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_resource_state	signature:(sg_sampler smp)
sg_query_shader_defaults	$SOKOLC/sokol_gfx.h	/^inline sg_shader_desc sg_query_shader_defaults(const sg_shader_desc& desc) { return sg_query_sha/;"	f	typeref:typename:sg_shader_desc	signature:(const sg_shader_desc & desc)
sg_query_shader_desc	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_shader_desc sg_query_shader_desc(sg_shader shd);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_shader_desc	signature:(sg_shader shd)
sg_query_shader_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_shader_info sg_query_shader_info(sg_shader shd);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_shader_info	signature:(sg_shader shd)
sg_query_shader_state	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_resource_state sg_query_shader_state(sg_shader shd);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_resource_state	signature:(sg_shader shd)
sg_query_surface_pitch	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL int sg_query_surface_pitch(sg_pixel_format fmt, int width, int height, int ro/;"	p	typeref:typename:SOKOL_GFX_API_DECL int	signature:(sg_pixel_format fmt,int width,int height,int row_align_bytes)
sg_range	$SOKOLC/sokol_gfx.h	/^} sg_range;$/;"	t	typeref:struct:sg_range
sg_rebecca_purple	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_rebecca_purple = SG_REBECCA_PURPLE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_red	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_red = SG_RED;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_remove_commit_listener	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL bool sg_remove_commit_listener(sg_commit_listener listener);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL bool	signature:(sg_commit_listener listener)
sg_reset_state_cache	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_reset_state_cache(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(void)
sg_resource_state	$SOKOLC/sokol_gfx.h	/^} sg_resource_state;$/;"	t	typeref:enum:sg_resource_state
sg_rosy_brown	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_rosy_brown = SG_ROSY_BROWN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_royal_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_royal_blue = SG_ROYAL_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_saddle_brown	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_saddle_brown = SG_SADDLE_BROWN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_salmon	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_salmon = SG_SALMON;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_sampler	$SOKOLC/sokol_gfx.h	/^typedef struct sg_sampler  { uint32_t id; } sg_sampler;$/;"	t	typeref:struct:sg_sampler
sg_sampler_desc	$SOKOLC/sokol_gfx.h	/^} sg_sampler_desc;$/;"	t	typeref:struct:sg_sampler_desc
sg_sampler_info	$SOKOLC/sokol_gfx.h	/^} sg_sampler_info;$/;"	t	typeref:struct:sg_sampler_info
sg_sampler_type	$SOKOLC/sokol_gfx.h	/^} sg_sampler_type;$/;"	t	typeref:enum:sg_sampler_type
sg_sandy_brown	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_sandy_brown = SG_SANDY_BROWN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_sea_green	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_sea_green = SG_SEA_GREEN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_seashell	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_seashell = SG_SEASHELL;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_setup	$SOKOLC/sokol_gfx.h	/^inline void sg_setup(const sg_desc& desc) { return sg_setup(&desc); }$/;"	f	typeref:typename:void	signature:(const sg_desc & desc)
sg_setup_context	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_context sg_setup_context(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_context	signature:(void)
sg_shader	$SOKOLC/sokol_gfx.h	/^typedef struct sg_shader   { uint32_t id; } sg_shader;$/;"	t	typeref:struct:sg_shader
sg_shader_attr_desc	$SOKOLC/sokol_gfx.h	/^} sg_shader_attr_desc;$/;"	t	typeref:struct:sg_shader_attr_desc
sg_shader_desc	$SOKOLC/sokol_gfx.h	/^} sg_shader_desc;$/;"	t	typeref:struct:sg_shader_desc
sg_shader_image_desc	$SOKOLC/sokol_gfx.h	/^} sg_shader_image_desc;$/;"	t	typeref:struct:sg_shader_image_desc
sg_shader_image_sampler_pair_desc	$SOKOLC/sokol_gfx.h	/^} sg_shader_image_sampler_pair_desc;$/;"	t	typeref:struct:sg_shader_image_sampler_pair_desc
sg_shader_info	$SOKOLC/sokol_gfx.h	/^} sg_shader_info;$/;"	t	typeref:struct:sg_shader_info
sg_shader_sampler_desc	$SOKOLC/sokol_gfx.h	/^} sg_shader_sampler_desc;$/;"	t	typeref:struct:sg_shader_sampler_desc
sg_shader_stage	$SOKOLC/sokol_gfx.h	/^} sg_shader_stage;$/;"	t	typeref:enum:sg_shader_stage
sg_shader_stage_desc	$SOKOLC/sokol_gfx.h	/^} sg_shader_stage_desc;$/;"	t	typeref:struct:sg_shader_stage_desc
sg_shader_uniform_block_desc	$SOKOLC/sokol_gfx.h	/^} sg_shader_uniform_block_desc;$/;"	t	typeref:struct:sg_shader_uniform_block_desc
sg_shader_uniform_desc	$SOKOLC/sokol_gfx.h	/^} sg_shader_uniform_desc;$/;"	t	typeref:struct:sg_shader_uniform_desc
sg_shutdown	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_shutdown(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(void)
sg_sienna	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_sienna = SG_SIENNA;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_silver	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_silver = SG_SILVER;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_sky_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_sky_blue = SG_SKY_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_slate_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_slate_blue = SG_SLATE_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_slate_gray	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_slate_gray = SG_SLATE_GRAY;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_slot_info	$SOKOLC/sokol_gfx.h	/^} sg_slot_info;$/;"	t	typeref:struct:sg_slot_info
sg_snow	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_snow = SG_SNOW;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_spring_green	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_spring_green = SG_SPRING_GREEN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_stage_bindings	$SOKOLC/sokol_gfx.h	/^} sg_stage_bindings;$/;"	t	typeref:struct:sg_stage_bindings
sg_steel_blue	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_steel_blue = SG_STEEL_BLUE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_stencil_attachment_action	$SOKOLC/sokol_gfx.h	/^} sg_stencil_attachment_action;$/;"	t	typeref:struct:sg_stencil_attachment_action
sg_stencil_face_state	$SOKOLC/sokol_gfx.h	/^} sg_stencil_face_state;$/;"	t	typeref:struct:sg_stencil_face_state
sg_stencil_op	$SOKOLC/sokol_gfx.h	/^} sg_stencil_op;$/;"	t	typeref:enum:sg_stencil_op
sg_stencil_state	$SOKOLC/sokol_gfx.h	/^} sg_stencil_state;$/;"	t	typeref:struct:sg_stencil_state
sg_store_action	$SOKOLC/sokol_gfx.h	/^} sg_store_action;$/;"	t	typeref:enum:sg_store_action
sg_tan	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_tan = SG_TAN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_teal	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_teal = SG_TEAL;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_thistle	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_thistle = SG_THISTLE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_tomato	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_tomato = SG_TOMATO;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_trace_hooks	$SOKOLC/sokol_gfx.h	/^} sg_trace_hooks;$/;"	t	typeref:struct:sg_trace_hooks
sg_transparent	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_transparent = SG_TRANSPARENT;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_turquoise	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_turquoise = SG_TURQUOISE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_uniform_layout	$SOKOLC/sokol_gfx.h	/^} sg_uniform_layout;$/;"	t	typeref:enum:sg_uniform_layout
sg_uniform_type	$SOKOLC/sokol_gfx.h	/^} sg_uniform_type;$/;"	t	typeref:enum:sg_uniform_type
sg_uninit_buffer	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_uninit_buffer(sg_buffer buf);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_buffer buf)
sg_uninit_image	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_uninit_image(sg_image img);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_image img)
sg_uninit_pass	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_uninit_pass(sg_pass pass);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_pass pass)
sg_uninit_pipeline	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_uninit_pipeline(sg_pipeline pip);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_pipeline pip)
sg_uninit_sampler	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_uninit_sampler(sg_sampler smp);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_sampler smp)
sg_uninit_shader	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL void sg_uninit_shader(sg_shader shd);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL void	signature:(sg_shader shd)
sg_update_buffer	$SOKOLC/sokol_gfx.h	/^inline void sg_update_buffer(sg_buffer buf_id, const sg_range& data) { return sg_update_buffer(b/;"	f	typeref:typename:void	signature:(sg_buffer buf_id,const sg_range & data)
sg_update_image	$SOKOLC/sokol_gfx.h	/^inline void sg_update_image(sg_image img, const sg_image_data& data) { return sg_update_image(im/;"	f	typeref:typename:void	signature:(sg_image img,const sg_image_data & data)
sg_usage	$SOKOLC/sokol_gfx.h	/^} sg_usage;$/;"	t	typeref:enum:sg_usage
sg_vertex_attr_state	$SOKOLC/sokol_gfx.h	/^} sg_vertex_attr_state;$/;"	t	typeref:struct:sg_vertex_attr_state
sg_vertex_buffer_layout_state	$SOKOLC/sokol_gfx.h	/^} sg_vertex_buffer_layout_state;$/;"	t	typeref:struct:sg_vertex_buffer_layout_state
sg_vertex_format	$SOKOLC/sokol_gfx.h	/^} sg_vertex_format;$/;"	t	typeref:enum:sg_vertex_format
sg_vertex_layout_state	$SOKOLC/sokol_gfx.h	/^} sg_vertex_layout_state;$/;"	t	typeref:struct:sg_vertex_layout_state
sg_vertex_step	$SOKOLC/sokol_gfx.h	/^} sg_vertex_step;$/;"	t	typeref:enum:sg_vertex_step
sg_violet	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_violet = SG_VIOLET;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_web_gray	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_web_gray = SG_WEB_GRAY;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_web_green	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_web_green = SG_WEB_GREEN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_web_maroon	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_web_maroon = SG_WEB_MAROON;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_web_purple	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_web_purple = SG_WEB_PURPLE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_wgpu_buffer_info	$SOKOLC/sokol_gfx.h	/^} sg_wgpu_buffer_info;$/;"	t	typeref:struct:sg_wgpu_buffer_info
sg_wgpu_command_encoder	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL const void* sg_wgpu_command_encoder(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL const void *	signature:(void)
sg_wgpu_context_desc	$SOKOLC/sokol_gfx.h	/^} sg_wgpu_context_desc;$/;"	t	typeref:struct:sg_wgpu_context_desc
sg_wgpu_device	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL const void* sg_wgpu_device(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL const void *	signature:(void)
sg_wgpu_image_info	$SOKOLC/sokol_gfx.h	/^} sg_wgpu_image_info;$/;"	t	typeref:struct:sg_wgpu_image_info
sg_wgpu_pass_info	$SOKOLC/sokol_gfx.h	/^} sg_wgpu_pass_info;$/;"	t	typeref:struct:sg_wgpu_pass_info
sg_wgpu_pipeline_info	$SOKOLC/sokol_gfx.h	/^} sg_wgpu_pipeline_info;$/;"	t	typeref:struct:sg_wgpu_pipeline_info
sg_wgpu_query_buffer_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_wgpu_buffer_info sg_wgpu_query_buffer_info(sg_buffer buf);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_wgpu_buffer_info	signature:(sg_buffer buf)
sg_wgpu_query_image_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_wgpu_image_info sg_wgpu_query_image_info(sg_image img);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_wgpu_image_info	signature:(sg_image img)
sg_wgpu_query_pass_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_wgpu_pass_info sg_wgpu_query_pass_info(sg_pass pass);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_wgpu_pass_info	signature:(sg_pass pass)
sg_wgpu_query_pipeline_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_wgpu_pipeline_info sg_wgpu_query_pipeline_info(sg_pipeline pip);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_wgpu_pipeline_info	signature:(sg_pipeline pip)
sg_wgpu_query_sampler_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_wgpu_sampler_info sg_wgpu_query_sampler_info(sg_sampler smp);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_wgpu_sampler_info	signature:(sg_sampler smp)
sg_wgpu_query_shader_info	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL sg_wgpu_shader_info sg_wgpu_query_shader_info(sg_shader shd);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL sg_wgpu_shader_info	signature:(sg_shader shd)
sg_wgpu_queue	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL const void* sg_wgpu_queue(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL const void *	signature:(void)
sg_wgpu_render_pass_encoder	$SOKOLC/sokol_gfx.h	/^SOKOL_GFX_API_DECL const void* sg_wgpu_render_pass_encoder(void);$/;"	p	typeref:typename:SOKOL_GFX_API_DECL const void *	signature:(void)
sg_wgpu_sampler_info	$SOKOLC/sokol_gfx.h	/^} sg_wgpu_sampler_info;$/;"	t	typeref:struct:sg_wgpu_sampler_info
sg_wgpu_shader_info	$SOKOLC/sokol_gfx.h	/^} sg_wgpu_shader_info;$/;"	t	typeref:struct:sg_wgpu_shader_info
sg_wheat	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_wheat = SG_WHEAT;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_white	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_white = SG_WHITE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_white_smoke	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_white_smoke = SG_WHITE_SMOKE;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_wrap	$SOKOLC/sokol_gfx.h	/^} sg_wrap;$/;"	t	typeref:enum:sg_wrap
sg_yellow	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_yellow = SG_YELLOW;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sg_yellow_green	$SOKOLC/util/sokol_color.h	/^static SOKOL_COLOR_CONSTEXPR sg_color sg_yellow_green = SG_YELLOW_GREEN;$/;"	v	typeref:typename:SOKOL_COLOR_CONSTEXPR sg_color
sgimage	$SOKOLC/util/sokol_spine.h	/^    sg_image sgimage;$/;"	m	struct:sspine_image_info	typeref:typename:sg_image
sgl_allocator_t	$SOKOLC/util/sokol_gl.h	/^} sgl_allocator_t;$/;"	t	typeref:struct:sgl_allocator_t
sgl_begin_line_strip	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_begin_line_strip(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_begin_lines	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_begin_lines(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_begin_points	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_begin_points(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_begin_quads	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_begin_quads(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_begin_triangle_strip	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_begin_triangle_strip(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_begin_triangles	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_begin_triangles(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_c1i	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_c1i(uint32_t rgba);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(uint32_t rgba)
sgl_c3b	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_c3b(uint8_t r, uint8_t g, uint8_t b);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(uint8_t r,uint8_t g,uint8_t b)
sgl_c3f	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_c3f(float r, float g, float b);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float r,float g,float b)
sgl_c4b	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_c4b(uint8_t r, uint8_t g, uint8_t b, uint8_t a);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(uint8_t r,uint8_t g,uint8_t b,uint8_t a)
sgl_c4f	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_c4f(float r, float g, float b, float a);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float r,float g,float b,float a)
sgl_context	$SOKOLC/util/sokol_gl.h	/^typedef struct sgl_context { uint32_t id; } sgl_context;$/;"	t	typeref:struct:sgl_context
sgl_context_desc_t	$SOKOLC/util/sokol_gl.h	/^} sgl_context_desc_t;$/;"	t	typeref:struct:sgl_context_desc_t
sgl_context_draw	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_context_draw(sgl_context ctx);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(sgl_context ctx)
sgl_context_draw_layer	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_context_draw_layer(sgl_context ctx, int layer_id);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(sgl_context ctx,int layer_id)
sgl_context_error	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL sgl_error_t sgl_context_error(sgl_context ctx);$/;"	p	typeref:typename:SOKOL_GL_API_DECL sgl_error_t	signature:(sgl_context ctx)
sgl_context_make_pipeline	$SOKOLC/util/sokol_gl.h	/^inline sgl_pipeline sgl_context_make_pipeline(sgl_context ctx, const sg_pipeline_desc& desc) { r/;"	f	typeref:typename:sgl_pipeline	signature:(sgl_context ctx,const sg_pipeline_desc & desc)
sgl_default_context	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL sgl_context sgl_default_context(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL sgl_context	signature:(void)
sgl_defaults	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_defaults(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_deg	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL float sgl_deg(float rad);$/;"	p	typeref:typename:SOKOL_GL_API_DECL float	signature:(float rad)
sgl_desc_t	$SOKOLC/util/sokol_gl.h	/^} sgl_desc_t;$/;"	t	typeref:struct:sgl_desc_t
sgl_destroy_context	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_destroy_context(sgl_context ctx);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(sgl_context ctx)
sgl_destroy_pipeline	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_destroy_pipeline(sgl_pipeline pip);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(sgl_pipeline pip)
sgl_disable_texture	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_disable_texture(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_draw	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_draw();$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:()
sgl_draw_layer	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_draw_layer(int layer_id);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(int layer_id)
sgl_enable_texture	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_enable_texture(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_end	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_end(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_error	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL sgl_error_t sgl_error(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL sgl_error_t	signature:(void)
sgl_error_t	$SOKOLC/util/sokol_gl.h	/^} sgl_error_t;$/;"	t	typeref:enum:sgl_error_t
sgl_frustum	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_frustum(float l, float r, float b, float t, float n, float f);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float l,float r,float b,float t,float n,float f)
sgl_get_context	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL sgl_context sgl_get_context(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL sgl_context	signature:(void)
sgl_layer	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_layer(int layer_id);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(int layer_id)
sgl_load_default_pipeline	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_load_default_pipeline(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_load_identity	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_load_identity(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_load_matrix	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_load_matrix(const float m[16]);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(const float m[16])
sgl_load_pipeline	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_load_pipeline(sgl_pipeline pip);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(sgl_pipeline pip)
sgl_load_transpose_matrix	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_load_transpose_matrix(const float m[16]);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(const float m[16])
sgl_log_item_t	$SOKOLC/util/sokol_gl.h	/^} sgl_log_item_t;$/;"	t	typeref:enum:sgl_log_item_t
sgl_logger_t	$SOKOLC/util/sokol_gl.h	/^} sgl_logger_t;$/;"	t	typeref:struct:sgl_logger_t
sgl_lookat	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_lookat(float eye_x, float eye_y, float eye_z, float center_x, float c/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float eye_x,float eye_y,float eye_z,float center_x,float center_y,float center_z,float up_x,float up_y,float up_z)
sgl_make_context	$SOKOLC/util/sokol_gl.h	/^inline sgl_context sgl_make_context(const sgl_context_desc_t& desc) { return sgl_make_context(&d/;"	f	typeref:typename:sgl_context	signature:(const sgl_context_desc_t & desc)
sgl_make_pipeline	$SOKOLC/util/sokol_gl.h	/^inline sgl_pipeline sgl_make_pipeline(const sg_pipeline_desc& desc) { return sgl_make_pipeline(&/;"	f	typeref:typename:sgl_pipeline	signature:(const sg_pipeline_desc & desc)
sgl_matrix_mode_modelview	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_matrix_mode_modelview(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_matrix_mode_projection	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_matrix_mode_projection(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_matrix_mode_texture	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_matrix_mode_texture(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_mult_matrix	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_mult_matrix(const float m[16]);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(const float m[16])
sgl_mult_transpose_matrix	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_mult_transpose_matrix(const float m[16]);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(const float m[16])
sgl_ortho	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_ortho(float l, float r, float b, float t, float n, float f);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float l,float r,float b,float t,float n,float f)
sgl_perspective	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_perspective(float fov_y, float aspect, float z_near, float z_far);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float fov_y,float aspect,float z_near,float z_far)
sgl_pipeline	$SOKOLC/util/sokol_gl.h	/^typedef struct sgl_pipeline { uint32_t id; } sgl_pipeline;$/;"	t	typeref:struct:sgl_pipeline
sgl_point_size	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_point_size(float s);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float s)
sgl_pop_matrix	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_pop_matrix(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_pop_pipeline	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_pop_pipeline(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_push_matrix	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_push_matrix(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_push_pipeline	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_push_pipeline(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_rad	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL float sgl_rad(float deg);$/;"	p	typeref:typename:SOKOL_GL_API_DECL float	signature:(float deg)
sgl_rotate	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_rotate(float angle_rad, float x, float y, float z);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float angle_rad,float x,float y,float z)
sgl_scale	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_scale(float x, float y, float z);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float z)
sgl_scissor_rect	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_scissor_rect(int x, int y, int w, int h, bool origin_top_left);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(int x,int y,int w,int h,bool origin_top_left)
sgl_scissor_rectf	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_scissor_rectf(float x, float y, float w, float h, bool origin_top_lef/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float w,float h,bool origin_top_left)
sgl_set_context	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_set_context(sgl_context ctx);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(sgl_context ctx)
sgl_setup	$SOKOLC/util/sokol_gl.h	/^inline void sgl_setup(const sgl_desc_t& desc) { return sgl_setup(&desc); }$/;"	f	typeref:typename:void	signature:(const sgl_desc_t & desc)
sgl_shutdown	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_shutdown(void);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(void)
sgl_t2f	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_t2f(float u, float v);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float u,float v)
sgl_texture	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_texture(sg_image img, sg_sampler smp);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(sg_image img,sg_sampler smp)
sgl_translate	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_translate(float x, float y, float z);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float z)
sgl_v2f	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v2f(float x, float y);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y)
sgl_v2f_c1i	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v2f_c1i(float x, float y, uint32_t rgba);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,uint32_t rgba)
sgl_v2f_c3b	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v2f_c3b(float x, float y, uint8_t r, uint8_t g, uint8_t b);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,uint8_t r,uint8_t g,uint8_t b)
sgl_v2f_c3f	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v2f_c3f(float x, float y, float r, float g, float b);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float r,float g,float b)
sgl_v2f_c4b	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v2f_c4b(float x, float y, uint8_t r, uint8_t g, uint8_t b, uint8_t a)/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,uint8_t r,uint8_t g,uint8_t b,uint8_t a)
sgl_v2f_c4f	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v2f_c4f(float x, float y, float r, float g, float b, float a);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float r,float g,float b,float a)
sgl_v2f_t2f	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v2f_t2f(float x, float y, float u, float v);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float u,float v)
sgl_v2f_t2f_c1i	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v2f_t2f_c1i(float x, float y, float u, float v, uint32_t rgba);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float u,float v,uint32_t rgba)
sgl_v2f_t2f_c3b	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v2f_t2f_c3b(float x, float y, float u, float v, uint8_t r, uint8_t g,/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float u,float v,uint8_t r,uint8_t g,uint8_t b)
sgl_v2f_t2f_c3f	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v2f_t2f_c3f(float x, float y, float u, float v, float r, float g, flo/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float u,float v,float r,float g,float b)
sgl_v2f_t2f_c4b	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v2f_t2f_c4b(float x, float y, float u, float v, uint8_t r, uint8_t g,/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float u,float v,uint8_t r,uint8_t g,uint8_t b,uint8_t a)
sgl_v2f_t2f_c4f	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v2f_t2f_c4f(float x, float y, float u, float v, float r, float g, flo/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float u,float v,float r,float g,float b,float a)
sgl_v3f	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v3f(float x, float y, float z);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float z)
sgl_v3f_c1i	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v3f_c1i(float x, float y, float z, uint32_t rgba);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float z,uint32_t rgba)
sgl_v3f_c3b	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v3f_c3b(float x, float y, float z, uint8_t r, uint8_t g, uint8_t b);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float z,uint8_t r,uint8_t g,uint8_t b)
sgl_v3f_c3f	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v3f_c3f(float x, float y, float z, float r, float g, float b);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float z,float r,float g,float b)
sgl_v3f_c4b	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v3f_c4b(float x, float y, float z, uint8_t r, uint8_t g, uint8_t b, u/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float z,uint8_t r,uint8_t g,uint8_t b,uint8_t a)
sgl_v3f_c4f	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v3f_c4f(float x, float y, float z, float r, float g, float b, float a/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float z,float r,float g,float b,float a)
sgl_v3f_t2f	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v3f_t2f(float x, float y, float z, float u, float v);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float z,float u,float v)
sgl_v3f_t2f_c1i	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v3f_t2f_c1i(float x, float y, float z, float u, float v, uint32_t rgb/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float z,float u,float v,uint32_t rgba)
sgl_v3f_t2f_c3b	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v3f_t2f_c3b(float x, float y, float z, float u, float v, uint8_t r, u/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float z,float u,float v,uint8_t r,uint8_t g,uint8_t b)
sgl_v3f_t2f_c3f	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v3f_t2f_c3f(float x, float y, float z, float u, float v, float r, flo/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float z,float u,float v,float r,float g,float b)
sgl_v3f_t2f_c4b	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v3f_t2f_c4b(float x, float y, float z, float u, float v, uint8_t r, u/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float z,float u,float v,uint8_t r,uint8_t g,uint8_t b,uint8_t a)
sgl_v3f_t2f_c4f	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_v3f_t2f_c4f(float x, float y, float z, float u, float v, float r, flo/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float z,float u,float v,float r,float g,float b,float a)
sgl_viewport	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_viewport(int x, int y, int w, int h, bool origin_top_left);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(int x,int y,int w,int h,bool origin_top_left)
sgl_viewportf	$SOKOLC/util/sokol_gl.h	/^SOKOL_GL_API_DECL void sgl_viewportf(float x, float y, float w, float h, bool origin_top_left);$/;"	p	typeref:typename:SOKOL_GL_API_DECL void	signature:(float x,float y,float w,float h,bool origin_top_left)
sgsampler	$SOKOLC/util/sokol_spine.h	/^    sg_sampler sgsampler;$/;"	m	struct:sspine_image_info	typeref:typename:sg_sampler
shader	$SOKOLC/sokol_gfx.h	/^    sg_shader shader;$/;"	m	struct:sg_pipeline_desc	typeref:typename:sg_shader
shader	$SOKOLC/util/sokol_debugtext.h	/^    sg_shader shader;$/;"	m	struct:__anona9c6565b0a08	typeref:typename:sg_shader
shader	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_shader shader;$/;"	m	struct:sg_imgui_args_uninit_shader_t	typeref:typename:sg_shader
shader_id	$SOKOLC/sokol_gfx.h	/^    sg_shader shader_id;$/;"	m	struct:__anon13e02ee70f08	typeref:typename:sg_shader
shader_pool	$SOKOLC/sokol_gfx.h	/^    _sg_pool_t shader_pool;$/;"	m	struct:__anon13e02ee77208	typeref:typename:_sg_pool_t
shader_pool_size	$SOKOLC/sokol_gfx.h	/^    int shader_pool_size;$/;"	m	struct:sg_desc	typeref:typename:int
shaders	$SOKOLC/sokol_gfx.h	/^    _sg_shader_t* shaders;$/;"	m	struct:__anon13e02ee77208	typeref:typename:_sg_shader_t *
shaders	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_shaders_t shaders;$/;"	m	struct:sg_imgui_t	typeref:typename:sg_imgui_shaders_t
shape_offset	$SOKOLC/util/sokol_shape.h	/^    size_t shape_offset;    \/\/ data offset of the most recent shape$/;"	m	struct:sshape_buffer_item_t	typeref:typename:size_t
shd	$SOKOLC/util/sokol_fontstash.h	/^    sg_shader shd;$/;"	m	struct:_sfons_t	typeref:typename:sg_shader
shd	$SOKOLC/util/sokol_gl.h	/^    sg_shader shd;      \/\/ same shader for all contexts$/;"	m	struct:__anon382715e21508	typeref:typename:sg_shader
shd	$SOKOLC/util/sokol_nuklear.h	/^    sg_shader shd;$/;"	m	struct:__anon5a1189810708	typeref:typename:sg_shader
shd	$SOKOLC/util/sokol_spine.h	/^    sg_shader shd;$/;"	m	struct:__anon5007022e1d08	typeref:typename:sg_shader
shd_unfilterable	$SOKOLC/util/sokol_imgui.h	/^    sg_shader shd_unfilterable;$/;"	m	struct:__anon4720df6a0808	typeref:typename:sg_shader
shear	$SOKOLC/util/sokol_spine.h	/^    sspine_vec2 shear;      \/\/ in degrees$/;"	m	struct:sspine_bone_transform	typeref:typename:sspine_vec2
shown	$SOKOLC/sokol_app.h	/^    bool shown;$/;"	E
sides	$SOKOLC/util/sokol_shape.h	/^    uint16_t sides;                 \/\/ default: 5$/;"	m	struct:sshape_torus_t	typeref:typename:uint16_t
simgui_add_focus_event	$SOKOLC/util/sokol_imgui.h	/^SOKOL_IMGUI_API_DECL void simgui_add_focus_event(bool focus);$/;"	p	typeref:typename:SOKOL_IMGUI_API_DECL void	signature:(bool focus)
simgui_add_input_character	$SOKOLC/util/sokol_imgui.h	/^SOKOL_IMGUI_API_DECL void simgui_add_input_character(uint32_t c);$/;"	p	typeref:typename:SOKOL_IMGUI_API_DECL void	signature:(uint32_t c)
simgui_add_input_characters_utf8	$SOKOLC/util/sokol_imgui.h	/^SOKOL_IMGUI_API_DECL void simgui_add_input_characters_utf8(const char* c);$/;"	p	typeref:typename:SOKOL_IMGUI_API_DECL void	signature:(const char * c)
simgui_add_key_event	$SOKOLC/util/sokol_imgui.h	/^SOKOL_IMGUI_API_DECL void simgui_add_key_event(int (*map_keycode)(int), int keycode, bool down);$/;"	p	typeref:typename:SOKOL_IMGUI_API_DECL void	signature:(int (* map_keycode)(int),int keycode,bool down)
simgui_add_mouse_button_event	$SOKOLC/util/sokol_imgui.h	/^SOKOL_IMGUI_API_DECL void simgui_add_mouse_button_event(int mouse_button, bool down);$/;"	p	typeref:typename:SOKOL_IMGUI_API_DECL void	signature:(int mouse_button,bool down)
simgui_add_mouse_pos_event	$SOKOLC/util/sokol_imgui.h	/^SOKOL_IMGUI_API_DECL void simgui_add_mouse_pos_event(float x, float y);$/;"	p	typeref:typename:SOKOL_IMGUI_API_DECL void	signature:(float x,float y)
simgui_add_mouse_wheel_event	$SOKOLC/util/sokol_imgui.h	/^SOKOL_IMGUI_API_DECL void simgui_add_mouse_wheel_event(float wheel_x, float wheel_y);$/;"	p	typeref:typename:SOKOL_IMGUI_API_DECL void	signature:(float wheel_x,float wheel_y)
simgui_add_touch_button_event	$SOKOLC/util/sokol_imgui.h	/^SOKOL_IMGUI_API_DECL void simgui_add_touch_button_event(int mouse_button, bool down);$/;"	p	typeref:typename:SOKOL_IMGUI_API_DECL void	signature:(int mouse_button,bool down)
simgui_add_touch_pos_event	$SOKOLC/util/sokol_imgui.h	/^SOKOL_IMGUI_API_DECL void simgui_add_touch_pos_event(float x, float y);$/;"	p	typeref:typename:SOKOL_IMGUI_API_DECL void	signature:(float x,float y)
simgui_allocator_t	$SOKOLC/util/sokol_imgui.h	/^} simgui_allocator_t;$/;"	t	typeref:struct:simgui_allocator_t
simgui_desc_t	$SOKOLC/util/sokol_imgui.h	/^} simgui_desc_t;$/;"	t	typeref:struct:simgui_desc_t
simgui_destroy_image	$SOKOLC/util/sokol_imgui.h	/^SOKOL_IMGUI_API_DECL void simgui_destroy_image(simgui_image_t img);$/;"	p	typeref:typename:SOKOL_IMGUI_API_DECL void	signature:(simgui_image_t img)
simgui_frame_desc_t	$SOKOLC/util/sokol_imgui.h	/^} simgui_frame_desc_t;$/;"	t	typeref:struct:simgui_frame_desc_t
simgui_handle_event	$SOKOLC/util/sokol_imgui.h	/^SOKOL_IMGUI_API_DECL bool simgui_handle_event(const sapp_event* ev);$/;"	p	typeref:typename:SOKOL_IMGUI_API_DECL bool	signature:(const sapp_event * ev)
simgui_image_desc_t	$SOKOLC/util/sokol_imgui.h	/^} simgui_image_desc_t;$/;"	t	typeref:struct:simgui_image_desc_t
simgui_image_from_imtextureid	$SOKOLC/util/sokol_imgui.h	/^SOKOL_IMGUI_API_DECL simgui_image_t simgui_image_from_imtextureid(void* imtextureid);$/;"	p	typeref:typename:SOKOL_IMGUI_API_DECL simgui_image_t	signature:(void * imtextureid)
simgui_image_t	$SOKOLC/util/sokol_imgui.h	/^typedef struct simgui_image_t { uint32_t id; } simgui_image_t;$/;"	t	typeref:struct:simgui_image_t
simgui_img	$SOKOLC/util/sokol_gfx_imgui.h	/^    simgui_image_t simgui_img;$/;"	m	struct:sg_imgui_image_t	typeref:typename:simgui_image_t
simgui_imtextureid	$SOKOLC/util/sokol_imgui.h	/^SOKOL_IMGUI_API_DECL void* simgui_imtextureid(simgui_image_t img);$/;"	p	typeref:typename:SOKOL_IMGUI_API_DECL void *	signature:(simgui_image_t img)
simgui_log_item_t	$SOKOLC/util/sokol_imgui.h	/^} simgui_log_item_t;$/;"	t	typeref:enum:simgui_log_item_t
simgui_logger_t	$SOKOLC/util/sokol_imgui.h	/^} simgui_logger_t;$/;"	t	typeref:struct:simgui_logger_t
simgui_make_image	$SOKOLC/util/sokol_imgui.h	/^inline simgui_image_t simgui_make_image(const simgui_image_desc_t& desc) { return simgui_make_im/;"	f	typeref:typename:simgui_image_t	signature:(const simgui_image_desc_t & desc)
simgui_map_keycode	$SOKOLC/util/sokol_imgui.h	/^SOKOL_IMGUI_API_DECL int simgui_map_keycode(sapp_keycode keycode);  \/\/ returns ImGuiKey_*$/;"	p	typeref:typename:SOKOL_IMGUI_API_DECL int	signature:(sapp_keycode keycode)
simgui_new_frame	$SOKOLC/util/sokol_imgui.h	/^inline void simgui_new_frame(const simgui_frame_desc_t& desc) { return simgui_new_frame(&desc); /;"	f	typeref:typename:void	signature:(const simgui_frame_desc_t & desc)
simgui_query_image_desc	$SOKOLC/util/sokol_imgui.h	/^SOKOL_IMGUI_API_DECL simgui_image_desc_t simgui_query_image_desc(simgui_image_t img);$/;"	p	typeref:typename:SOKOL_IMGUI_API_DECL simgui_image_desc_t	signature:(simgui_image_t img)
simgui_render	$SOKOLC/util/sokol_imgui.h	/^SOKOL_IMGUI_API_DECL void simgui_render(void);$/;"	p	typeref:typename:SOKOL_IMGUI_API_DECL void	signature:(void)
simgui_setup	$SOKOLC/util/sokol_imgui.h	/^inline void simgui_setup(const simgui_desc_t& desc) { return simgui_setup(&desc); }$/;"	f	typeref:typename:void	signature:(const simgui_desc_t & desc)
simgui_shutdown	$SOKOLC/util/sokol_imgui.h	/^SOKOL_IMGUI_API_DECL void simgui_shutdown(void);$/;"	p	typeref:typename:SOKOL_IMGUI_API_DECL void	signature:(void)
size	$SOKOLC/sokol_app.h	/^    size_t size;$/;"	E	struct:sapp_range
size	$SOKOLC/sokol_fetch.h	/^    uint32_t size;$/;"	m	struct:__anon3d2cd3ac0608	typeref:typename:uint32_t
size	$SOKOLC/sokol_gfx.h	/^    uint8_t size;$/;"	m	struct:__anon13e02ee72808	typeref:typename:uint8_t
size	$SOKOLC/util/sokol_debugtext.h	/^    size_t size;$/;"	m	struct:sdtx_range	typeref:typename:size_t
size	$SOKOLC/util/sokol_gl.h	/^    int size;$/;"	m	struct:__anon382715e20308	typeref:typename:int
size	$SOKOLC/util/sokol_imgui.h	/^    int size;$/;"	m	struct:__anon4720df6a0508	typeref:typename:int
size	$SOKOLC/util/sokol_nuklear.h	/^    int size;$/;"	m	struct:__anon5a1189810408	typeref:typename:int
size	$SOKOLC/util/sokol_shape.h	/^    uint32_t size;      \/\/ the same as size in bytes$/;"	m	struct:sshape_sizes_item_t	typeref:typename:uint32_t
size	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_range { const void* ptr; size_t size; } sspine_range;$/;"	m	struct:sspine_range	typeref:typename:size_t
size_append_buffer	$SOKOLC/sokol_gfx.h	/^    uint32_t size_append_buffer;$/;"	m	struct:sg_frame_stats	typeref:typename:uint32_t
size_apply_uniforms	$SOKOLC/sokol_gfx.h	/^    uint32_t size_apply_uniforms;$/;"	m	struct:sg_frame_stats	typeref:typename:uint32_t
size_update_buffer	$SOKOLC/sokol_gfx.h	/^    uint32_t size_update_buffer;$/;"	m	struct:sg_frame_stats	typeref:typename:uint32_t
size_update_image	$SOKOLC/sokol_gfx.h	/^    uint32_t size_update_image;$/;"	m	struct:sg_frame_stats	typeref:typename:uint32_t
size_write_buffer	$SOKOLC/sokol_gfx.h	/^    uint32_t size_write_buffer;$/;"	m	struct:sg_frame_stats_wgpu_uniforms	typeref:typename:uint32_t
skel	$SOKOLC/util/sokol_spine.h	/^    _sspine_skeleton_ref_t skel;$/;"	m	struct:__anon5007022e1108	typeref:typename:_sspine_skeleton_ref_t
skeleton	$SOKOLC/util/sokol_spine.h	/^    sspine_skeleton skeleton;$/;"	m	struct:sspine_skinset_desc	typeref:typename:sspine_skeleton
skeleton_id	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_slot { uint32_t skeleton_id; int index; } sspine_slot;$/;"	m	struct:sspine_slot	typeref:typename:uint32_t
skeleton_pool	$SOKOLC/util/sokol_spine.h	/^    _sspine_skeleton_pool_t skeleton_pool;$/;"	m	struct:__anon5007022e1d08	typeref:typename:_sspine_skeleton_pool_t
skeleton_pool_size	$SOKOLC/util/sokol_spine.h	/^    int skeleton_pool_size;$/;"	m	struct:sspine_desc	typeref:typename:int
skins	$SOKOLC/util/sokol_spine.h	/^    sspine_skin skins[SSPINE_MAX_SKINSET_SKINS];$/;"	m	struct:sspine_skinset_desc	typeref:typename:sspine_skin[]
skinset	$SOKOLC/util/sokol_spine.h	/^    _sspine_skinset_ref_t skinset;$/;"	m	struct:__anon5007022e1108	typeref:typename:_sspine_skinset_ref_t
skinset_pool	$SOKOLC/util/sokol_spine.h	/^    _sspine_skinset_pool_t skinset_pool;$/;"	m	struct:__anon5007022e1d08	typeref:typename:_sspine_skinset_pool_t
skinset_pool_size	$SOKOLC/util/sokol_spine.h	/^    int skinset_pool_size;$/;"	m	struct:sspine_desc	typeref:typename:int
slice	$SOKOLC/sokol_gfx.h	/^    int slice;$/;"	m	struct:__anon13e02ee71008	typeref:typename:int
slices	$SOKOLC/util/sokol_shape.h	/^    uint16_t slices;                \/\/ default: 5$/;"	m	struct:sshape_sphere_t	typeref:typename:uint16_t
slog_func	$SOKOLC/sokol_log.h	/^SOKOL_LOG_API_DECL void slog_func(const char* tag, uint32_t log_level, uint32_t log_item, const /;"	p	typeref:typename:SOKOL_LOG_API_DECL void	signature:(const char * tag,uint32_t log_level,uint32_t log_item,const char * message,uint32_t line_nr,const char * filename,void * user_data)
slot	$SOKOLC/sokol_gfx.h	/^    sg_slot_info slot;              \/\/ resource pool slot info$/;"	m	struct:sg_shader_info	typeref:typename:sg_slot_info
slot	$SOKOLC/util/sokol_debugtext.h	/^    _sdtx_slot_t slot;$/;"	m	struct:__anona9c6565b0608	typeref:typename:_sdtx_slot_t
slot	$SOKOLC/util/sokol_gl.h	/^    _sgl_slot_t slot;$/;"	m	struct:__anon382715e21008	typeref:typename:_sgl_slot_t
slot	$SOKOLC/util/sokol_imgui.h	/^    _simgui_slot_t slot;$/;"	m	struct:__anon4720df6a0608	typeref:typename:_simgui_slot_t
slot	$SOKOLC/util/sokol_nuklear.h	/^    _snk_slot_t slot;$/;"	m	struct:__anon5a1189810508	typeref:typename:_snk_slot_t
slot	$SOKOLC/util/sokol_spine.h	/^    _sspine_slot_t slot;$/;"	m	struct:__anon5007022e1708	typeref:typename:_sspine_slot_t
slot_index	$SOKOLC/sokol_gfx.h	/^    int slot_index;$/;"	m	struct:__anon13e02ee74508	typeref:typename:int
slots	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_shader_t* slots;$/;"	m	struct:sg_imgui_shaders_t	typeref:typename:sg_imgui_shader_t *
small_icon	$SOKOLC/sokol_app.h	/^    HICON small_icon;$/;"	E	enum:MONITOR_DPI_TYPE
smemtrack_alloc	$SOKOLC/util/sokol_memtrack.h	/^SOKOL_MEMTRACK_API_DECL void* smemtrack_alloc(size_t size, void* user_data);$/;"	p	typeref:typename:SOKOL_MEMTRACK_API_DECL void *	signature:(size_t size,void * user_data)
smemtrack_free	$SOKOLC/util/sokol_memtrack.h	/^SOKOL_MEMTRACK_API_DECL void smemtrack_free(void* ptr, void* user_data);$/;"	p	typeref:typename:SOKOL_MEMTRACK_API_DECL void	signature:(void * ptr,void * user_data)
smemtrack_info	$SOKOLC/util/sokol_memtrack.h	/^SOKOL_MEMTRACK_API_DECL smemtrack_info_t smemtrack_info(void);$/;"	p	typeref:typename:SOKOL_MEMTRACK_API_DECL smemtrack_info_t	signature:(void)
smemtrack_info_t	$SOKOLC/util/sokol_memtrack.h	/^} smemtrack_info_t;$/;"	t	typeref:struct:smemtrack_info_t
smp	$SOKOLC/sokol_gfx.h	/^    uint32_t smp;$/;"	m	struct:sg_gl_sampler_info	typeref:typename:uint32_t
smp	$SOKOLC/util/sokol_fontstash.h	/^    sg_sampler smp;$/;"	m	struct:_sfons_t	typeref:typename:sg_sampler
smp	$SOKOLC/util/sokol_gl.h	/^    sg_sampler smp;$/;"	m	struct:__anon382715e20b08	typeref:typename:sg_sampler
smp	$SOKOLC/util/sokol_spine.h	/^    sg_sampler smp;$/;"	m	struct:__anon5007022e1608	typeref:typename:sg_sampler
snk_allocator_t	$SOKOLC/util/sokol_nuklear.h	/^} snk_allocator_t;$/;"	t	typeref:struct:snk_allocator_t
snk_desc_t	$SOKOLC/util/sokol_nuklear.h	/^} snk_desc_t;$/;"	t	typeref:struct:snk_desc_t
snk_destroy_image	$SOKOLC/util/sokol_nuklear.h	/^SOKOL_NUKLEAR_API_DECL void snk_destroy_image(snk_image_t img);$/;"	p	typeref:typename:SOKOL_NUKLEAR_API_DECL void	signature:(snk_image_t img)
snk_edit_string	$SOKOLC/util/sokol_nuklear.h	/^SOKOL_NUKLEAR_API_DECL nk_flags snk_edit_string(struct nk_context *ctx, nk_flags flags, char *me/;"	p	typeref:typename:SOKOL_NUKLEAR_API_DECL nk_flags	signature:(struct nk_context * ctx,nk_flags flags,char * memory,int * len,int max,nk_plugin_filter filter)
snk_handle_event	$SOKOLC/util/sokol_nuklear.h	/^SOKOL_NUKLEAR_API_DECL bool snk_handle_event(const sapp_event* ev);$/;"	p	typeref:typename:SOKOL_NUKLEAR_API_DECL bool	signature:(const sapp_event * ev)
snk_image_desc_t	$SOKOLC/util/sokol_nuklear.h	/^} snk_image_desc_t;$/;"	t	typeref:struct:snk_image_desc_t
snk_image_from_nkhandle	$SOKOLC/util/sokol_nuklear.h	/^SOKOL_NUKLEAR_API_DECL snk_image_t snk_image_from_nkhandle(nk_handle handle);$/;"	p	typeref:typename:SOKOL_NUKLEAR_API_DECL snk_image_t	signature:(nk_handle handle)
snk_image_t	$SOKOLC/util/sokol_nuklear.h	/^typedef struct snk_image_t { uint32_t id; } snk_image_t;$/;"	t	typeref:struct:snk_image_t
snk_log_item_t	$SOKOLC/util/sokol_nuklear.h	/^} snk_log_item_t;$/;"	t	typeref:enum:snk_log_item_t
snk_logger_t	$SOKOLC/util/sokol_nuklear.h	/^} snk_logger_t;$/;"	t	typeref:struct:snk_logger_t
snk_make_image	$SOKOLC/util/sokol_nuklear.h	/^inline snk_image_t snk_make_image(const snk_image_desc_t& desc) { return snk_make_image(&desc); /;"	f	typeref:typename:snk_image_t	signature:(const snk_image_desc_t & desc)
snk_new_frame	$SOKOLC/util/sokol_nuklear.h	/^SOKOL_NUKLEAR_API_DECL struct nk_context* snk_new_frame(void);$/;"	p	typeref:typename:SOKOL_NUKLEAR_API_DECL struct nk_context *	signature:(void)
snk_nkhandle	$SOKOLC/util/sokol_nuklear.h	/^SOKOL_NUKLEAR_API_DECL nk_handle snk_nkhandle(snk_image_t img);$/;"	p	typeref:typename:SOKOL_NUKLEAR_API_DECL nk_handle	signature:(snk_image_t img)
snk_query_image_desc	$SOKOLC/util/sokol_nuklear.h	/^SOKOL_NUKLEAR_API_DECL snk_image_desc_t snk_query_image_desc(snk_image_t img);$/;"	p	typeref:typename:SOKOL_NUKLEAR_API_DECL snk_image_desc_t	signature:(snk_image_t img)
snk_render	$SOKOLC/util/sokol_nuklear.h	/^SOKOL_NUKLEAR_API_DECL void snk_render(int width, int height);$/;"	p	typeref:typename:SOKOL_NUKLEAR_API_DECL void	signature:(int width,int height)
snk_setup	$SOKOLC/util/sokol_nuklear.h	/^inline void snk_setup(const snk_desc_t& desc) { return snk_setup(&desc); }$/;"	f	typeref:typename:void	signature:(const snk_desc_t & desc)
snk_shutdown	$SOKOLC/util/sokol_nuklear.h	/^SOKOL_NUKLEAR_API_DECL void snk_shutdown(void);$/;"	p	typeref:typename:SOKOL_NUKLEAR_API_DECL void	signature:(void)
sokol_default	$SOKOLC/sokol_app.h	/^    bool sokol_default;$/;"	E	struct:sapp_icon_desc
sokol_main	$SOKOLC/sokol_app.h	/^sapp_desc sokol_main(int argc, char* argv[]) {$/;"	f	struct:_sapp_x11_codepair
source	$SOKOLC/sokol_app.h	/^    Window source;$/;"	E
source	$SOKOLC/sokol_gfx.h	/^    const char* source;$/;"	m	struct:sg_shader_stage_desc	typeref:typename:const char *
sp_anim_data	$SOKOLC/util/sokol_spine.h	/^    spAnimationStateData* sp_anim_data;$/;"	m	struct:__anon5007022e0a08	typeref:typename:spAnimationStateData *
sp_anim_state	$SOKOLC/util/sokol_spine.h	/^    spAnimationState* sp_anim_state;$/;"	m	struct:__anon5007022e1108	typeref:typename:spAnimationState *
sp_atlas	$SOKOLC/util/sokol_spine.h	/^    spAtlas* sp_atlas;$/;"	m	struct:__anon5007022e0608	typeref:typename:spAtlas *
sp_clip	$SOKOLC/util/sokol_spine.h	/^    spSkeletonClipping* sp_clip;$/;"	m	struct:__anon5007022e1108	typeref:typename:spSkeletonClipping *
sp_skel	$SOKOLC/util/sokol_spine.h	/^    spSkeleton* sp_skel;$/;"	m	struct:__anon5007022e1108	typeref:typename:spSkeleton *
sp_skel_data	$SOKOLC/util/sokol_spine.h	/^    spSkeletonData* sp_skel_data;$/;"	m	struct:__anon5007022e0a08	typeref:typename:spSkeletonData *
sp_skin	$SOKOLC/util/sokol_spine.h	/^    spSkin* sp_skin;$/;"	m	struct:__anon5007022e0e08	typeref:typename:spSkin *
spike_count	$SOKOLC/sokol_app.h	/^    int spike_count;$/;"	E
src_buffer	$SOKOLC/sokol_audio.h	/^    float* src_buffer;$/;"	E
src_buffer_byte_size	$SOKOLC/sokol_audio.h	/^    int src_buffer_byte_size;$/;"	E
src_buffer_frames	$SOKOLC/sokol_audio.h	/^    int src_buffer_frames;$/;"	E
src_buffer_pos	$SOKOLC/sokol_audio.h	/^    int src_buffer_pos;$/;"	E
src_factor_alpha	$SOKOLC/sokol_gfx.h	/^    sg_blend_factor src_factor_alpha;$/;"	m	struct:sg_blend_state	typeref:typename:sg_blend_factor
src_factor_rgb	$SOKOLC/sokol_gfx.h	/^    sg_blend_factor src_factor_rgb;$/;"	m	struct:sg_blend_state	typeref:typename:sg_blend_factor
srv	$SOKOLC/sokol_gfx.h	/^    const void* srv;      \/\/ ID3D11ShaderResourceView*$/;"	m	struct:sg_d3d11_image_info	typeref:typename:const void *
sshape_box_sizes	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sshape_sizes_t sshape_box_sizes(uint32_t tiles);$/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL sshape_sizes_t	signature:(uint32_t tiles)
sshape_box_t	$SOKOLC/util/sokol_shape.h	/^} sshape_box_t;$/;"	t	typeref:struct:sshape_box_t
sshape_buffer_item_t	$SOKOLC/util/sokol_shape.h	/^} sshape_buffer_item_t;$/;"	t	typeref:struct:sshape_buffer_item_t
sshape_buffer_t	$SOKOLC/util/sokol_shape.h	/^} sshape_buffer_t;$/;"	t	typeref:struct:sshape_buffer_t
sshape_build_box	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sshape_buffer_t sshape_build_box(const sshape_buffer_t* buf, const sshape_b/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL sshape_buffer_t	signature:(const sshape_buffer_t * buf,const sshape_box_t * params)
sshape_build_cylinder	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sshape_buffer_t sshape_build_cylinder(const sshape_buffer_t* in_buf, const /;"	f	typeref:typename:SOKOL_SHAPE_API_DECL sshape_buffer_t	signature:(const sshape_buffer_t * in_buf,const sshape_cylinder_t * in_params)
sshape_build_plane	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sshape_buffer_t sshape_build_plane(const sshape_buffer_t* buf, const sshape/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL sshape_buffer_t	signature:(const sshape_buffer_t * buf,const sshape_plane_t * params)
sshape_build_sphere	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sshape_buffer_t sshape_build_sphere(const sshape_buffer_t* buf, const sshap/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL sshape_buffer_t	signature:(const sshape_buffer_t * buf,const sshape_sphere_t * params)
sshape_build_torus	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sshape_buffer_t sshape_build_torus(const sshape_buffer_t* buf, const sshape/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL sshape_buffer_t	signature:(const sshape_buffer_t * buf,const sshape_torus_t * params)
sshape_color_3b	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL uint32_t sshape_color_3b(uint8_t r, uint8_t g, uint8_t b);$/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL uint32_t	signature:(uint8_t r,uint8_t g,uint8_t b)
sshape_color_3f	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL uint32_t sshape_color_3f(float r, float g, float b);$/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL uint32_t	signature:(float r,float g,float b)
sshape_color_4b	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL uint32_t sshape_color_4b(uint8_t r, uint8_t g, uint8_t b, uint8_t a);$/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL uint32_t	signature:(uint8_t r,uint8_t g,uint8_t b,uint8_t a)
sshape_color_4f	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL uint32_t sshape_color_4f(float r, float g, float b, float a);$/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL uint32_t	signature:(float r,float g,float b,float a)
sshape_color_vertex_attr_state	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sg_vertex_attr_state sshape_color_vertex_attr_state(void);$/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL sg_vertex_attr_state	signature:(void)
sshape_cylinder_sizes	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sshape_sizes_t sshape_cylinder_sizes(uint32_t slices, uint32_t stacks);$/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL sshape_sizes_t	signature:(uint32_t slices,uint32_t stacks)
sshape_cylinder_t	$SOKOLC/util/sokol_shape.h	/^} sshape_cylinder_t;$/;"	t	typeref:struct:sshape_cylinder_t
sshape_element_range	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sshape_element_range_t sshape_element_range(const sshape_buffer_t* buf);$/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL sshape_element_range_t	signature:(const sshape_buffer_t * buf)
sshape_element_range_t	$SOKOLC/util/sokol_shape.h	/^} sshape_element_range_t;$/;"	t	typeref:struct:sshape_element_range_t
sshape_index_buffer_desc	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sg_buffer_desc sshape_index_buffer_desc(const sshape_buffer_t* buf);$/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL sg_buffer_desc	signature:(const sshape_buffer_t * buf)
sshape_mat4	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sshape_mat4_t sshape_mat4(const float m[16]);$/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL sshape_mat4_t	signature:(const float m[16])
sshape_mat4_t	$SOKOLC/util/sokol_shape.h	/^typedef struct sshape_mat4_t { float m[4][4]; } sshape_mat4_t;$/;"	t	typeref:struct:sshape_mat4_t
sshape_mat4_transpose	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sshape_mat4_t sshape_mat4_transpose(const float m[16]);$/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL sshape_mat4_t	signature:(const float m[16])
sshape_normal_vertex_attr_state	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sg_vertex_attr_state sshape_normal_vertex_attr_state(void);$/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL sg_vertex_attr_state	signature:(void)
sshape_plane_sizes	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sshape_sizes_t sshape_plane_sizes(uint32_t tiles);$/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL sshape_sizes_t	signature:(uint32_t tiles)
sshape_plane_t	$SOKOLC/util/sokol_shape.h	/^} sshape_plane_t;$/;"	t	typeref:struct:sshape_plane_t
sshape_position_vertex_attr_state	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sg_vertex_attr_state sshape_position_vertex_attr_state(void);$/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL sg_vertex_attr_state	signature:(void)
sshape_range	$SOKOLC/util/sokol_shape.h	/^} sshape_range;$/;"	t	typeref:struct:sshape_range
sshape_sizes_item_t	$SOKOLC/util/sokol_shape.h	/^} sshape_sizes_item_t;$/;"	t	typeref:struct:sshape_sizes_item_t
sshape_sizes_t	$SOKOLC/util/sokol_shape.h	/^} sshape_sizes_t;$/;"	t	typeref:struct:sshape_sizes_t
sshape_sphere_sizes	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sshape_sizes_t sshape_sphere_sizes(uint32_t slices, uint32_t stacks);$/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL sshape_sizes_t	signature:(uint32_t slices,uint32_t stacks)
sshape_sphere_t	$SOKOLC/util/sokol_shape.h	/^} sshape_sphere_t;$/;"	t	typeref:struct:sshape_sphere_t
sshape_texcoord_vertex_attr_state	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sg_vertex_attr_state sshape_texcoord_vertex_attr_state(void);$/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL sg_vertex_attr_state	signature:(void)
sshape_torus_sizes	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sshape_sizes_t sshape_torus_sizes(uint32_t sides, uint32_t rings);$/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL sshape_sizes_t	signature:(uint32_t sides,uint32_t rings)
sshape_torus_t	$SOKOLC/util/sokol_shape.h	/^} sshape_torus_t;$/;"	t	typeref:struct:sshape_torus_t
sshape_vertex_buffer_desc	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sg_buffer_desc sshape_vertex_buffer_desc(const sshape_buffer_t* buf);$/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL sg_buffer_desc	signature:(const sshape_buffer_t * buf)
sshape_vertex_buffer_layout_state	$SOKOLC/util/sokol_shape.h	/^SOKOL_SHAPE_API_DECL sg_vertex_buffer_layout_state sshape_vertex_buffer_layout_state(void);$/;"	p	typeref:typename:SOKOL_SHAPE_API_DECL sg_vertex_buffer_layout_state	signature:(void)
sshape_vertex_t	$SOKOLC/util/sokol_shape.h	/^} sshape_vertex_t;$/;"	t	typeref:struct:sshape_vertex_t
sspine_add_animation	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_add_animation(sspine_instance instance, sspine_anim anim, int t/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance,sspine_anim anim,int track_index,bool loop,float delay)
sspine_add_empty_animation	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_add_empty_animation(sspine_instance instance, int track_index, /;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance,int track_index,float mix_duration,float delay)
sspine_allocator	$SOKOLC/util/sokol_spine.h	/^} sspine_allocator;$/;"	t	typeref:struct:sspine_allocator
sspine_anim	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_anim { uint32_t skeleton_id; int index; } sspine_anim;$/;"	t	typeref:struct:sspine_anim
sspine_anim_by_index	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_anim sspine_anim_by_index(sspine_skeleton skeleton, int index);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_anim	signature:(sspine_skeleton skeleton,int index)
sspine_anim_by_name	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_anim sspine_anim_by_name(sspine_skeleton skeleton, const char* name)/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_anim	signature:(sspine_skeleton skeleton,const char * name)
sspine_anim_equal	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_anim_equal(sspine_anim first, sspine_anim second);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_anim first,sspine_anim second)
sspine_anim_info	$SOKOLC/util/sokol_spine.h	/^} sspine_anim_info;$/;"	t	typeref:struct:sspine_anim_info
sspine_anim_valid	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_anim_valid(sspine_anim anim);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_anim anim)
sspine_atlas	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_atlas { uint32_t id; } sspine_atlas;$/;"	t	typeref:struct:sspine_atlas
sspine_atlas_desc	$SOKOLC/util/sokol_spine.h	/^} sspine_atlas_desc;$/;"	t	typeref:struct:sspine_atlas_desc
sspine_atlas_overrides	$SOKOLC/util/sokol_spine.h	/^} sspine_atlas_overrides;$/;"	t	typeref:struct:sspine_atlas_overrides
sspine_atlas_page	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_atlas_page { uint32_t atlas_id; int index; } sspine_atlas_page;$/;"	t	typeref:struct:sspine_atlas_page
sspine_atlas_page_by_index	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_atlas_page sspine_atlas_page_by_index(sspine_atlas atlas, int index)/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_atlas_page	signature:(sspine_atlas atlas,int index)
sspine_atlas_page_equal	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_atlas_page_equal(sspine_atlas_page first, sspine_atlas_page sec/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_atlas_page first,sspine_atlas_page second)
sspine_atlas_page_info	$SOKOLC/util/sokol_spine.h	/^} sspine_atlas_page_info;$/;"	t	typeref:struct:sspine_atlas_page_info
sspine_atlas_page_valid	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_atlas_page_valid(sspine_atlas_page page);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_atlas_page page)
sspine_atlas_valid	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_atlas_valid(sspine_atlas atlas);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_atlas atlas)
sspine_bone	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_bone { uint32_t skeleton_id; int index; } sspine_bone;$/;"	t	typeref:struct:sspine_bone
sspine_bone_by_index	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_bone sspine_bone_by_index(sspine_skeleton skeleton, int index);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_bone	signature:(sspine_skeleton skeleton,int index)
sspine_bone_by_name	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_bone sspine_bone_by_name(sspine_skeleton skeleton, const char* name)/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_bone	signature:(sspine_skeleton skeleton,const char * name)
sspine_bone_equal	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_bone_equal(sspine_bone first, sspine_bone second);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_bone first,sspine_bone second)
sspine_bone_info	$SOKOLC/util/sokol_spine.h	/^} sspine_bone_info;$/;"	t	typeref:struct:sspine_bone_info
sspine_bone_local_to_world	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_vec2 sspine_bone_local_to_world(sspine_instance instance, sspine_bon/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_vec2	signature:(sspine_instance instance,sspine_bone bone,sspine_vec2 local_pos)
sspine_bone_transform	$SOKOLC/util/sokol_spine.h	/^} sspine_bone_transform;$/;"	t	typeref:struct:sspine_bone_transform
sspine_bone_valid	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_bone_valid(sspine_bone bone);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_bone bone)
sspine_bone_world_to_local	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_vec2 sspine_bone_world_to_local(sspine_instance instance, sspine_bon/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_vec2	signature:(sspine_instance instance,sspine_bone bone,sspine_vec2 world_pos)
sspine_clear_animation_track	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_clear_animation_track(sspine_instance instance, int track_index/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance,int track_index)
sspine_clear_animation_tracks	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_clear_animation_tracks(sspine_instance instance);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance)
sspine_color	$SOKOLC/util/sokol_spine.h	/^typedef sg_color sspine_color;$/;"	t	typeref:typename:sg_color
sspine_context	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_context { uint32_t id; } sspine_context;$/;"	t	typeref:struct:sspine_context
sspine_context_desc	$SOKOLC/util/sokol_spine.h	/^} sspine_context_desc;$/;"	t	typeref:struct:sspine_context_desc
sspine_context_draw_instance_in_layer	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_context_draw_instance_in_layer(sspine_context ctx, sspine_insta/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_context ctx,sspine_instance instance,int layer)
sspine_context_draw_layer	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_context_draw_layer(sspine_context ctx, int layer, const sspine_/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_context ctx,int layer,const sspine_layer_transform * tform)
sspine_context_info	$SOKOLC/util/sokol_spine.h	/^} sspine_context_info;$/;"	t	typeref:struct:sspine_context_info
sspine_context_valid	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_context_valid(sspine_context context);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_context context)
sspine_default_context	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_context sspine_default_context(void);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_context	signature:(void)
sspine_desc	$SOKOLC/util/sokol_spine.h	/^} sspine_desc;$/;"	t	typeref:struct:sspine_desc
sspine_destroy_atlas	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_destroy_atlas(sspine_atlas atlas);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_atlas atlas)
sspine_destroy_context	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_destroy_context(sspine_context ctx);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_context ctx)
sspine_destroy_instance	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_destroy_instance(sspine_instance instance);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance)
sspine_destroy_skeleton	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_destroy_skeleton(sspine_skeleton skeleton);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_skeleton skeleton)
sspine_destroy_skinset	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_destroy_skinset(sspine_skinset skinset);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_skinset skinset)
sspine_draw_instance_in_layer	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_draw_instance_in_layer(sspine_instance instance, int layer);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance,int layer)
sspine_draw_layer	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_draw_layer(int layer, const sspine_layer_transform* tform);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(int layer,const sspine_layer_transform * tform)
sspine_event	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_event { uint32_t skeleton_id; int index; } sspine_event;$/;"	t	typeref:struct:sspine_event
sspine_event_by_index	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_event sspine_event_by_index(sspine_skeleton skeleton, int index);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_event	signature:(sspine_skeleton skeleton,int index)
sspine_event_by_name	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_event sspine_event_by_name(sspine_skeleton skeleton, const char* nam/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_event	signature:(sspine_skeleton skeleton,const char * name)
sspine_event_equal	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_event_equal(sspine_event first, sspine_event second);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_event first,sspine_event second)
sspine_event_info	$SOKOLC/util/sokol_spine.h	/^} sspine_event_info;$/;"	t	typeref:struct:sspine_event_info
sspine_event_valid	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_event_valid(sspine_event event);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_event event)
sspine_get_anim_info	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_anim_info sspine_get_anim_info(sspine_anim anim);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_anim_info	signature:(sspine_anim anim)
sspine_get_atlas_page_info	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_atlas_page_info sspine_get_atlas_page_info(sspine_atlas_page page);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_atlas_page_info	signature:(sspine_atlas_page page)
sspine_get_atlas_resource_state	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_resource_state sspine_get_atlas_resource_state(sspine_atlas atlas);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_resource_state	signature:(sspine_atlas atlas)
sspine_get_bone_info	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_bone_info sspine_get_bone_info(sspine_bone bone);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_bone_info	signature:(sspine_bone bone)
sspine_get_bone_position	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_vec2 sspine_get_bone_position(sspine_instance instance, sspine_bone /;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_vec2	signature:(sspine_instance instance,sspine_bone bone)
sspine_get_bone_rotation	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL float sspine_get_bone_rotation(sspine_instance instance, sspine_bone bone);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL float	signature:(sspine_instance instance,sspine_bone bone)
sspine_get_bone_scale	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_vec2 sspine_get_bone_scale(sspine_instance instance, sspine_bone bon/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_vec2	signature:(sspine_instance instance,sspine_bone bone)
sspine_get_bone_shear	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_vec2 sspine_get_bone_shear(sspine_instance instance, sspine_bone bon/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_vec2	signature:(sspine_instance instance,sspine_bone bone)
sspine_get_bone_transform	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_bone_transform sspine_get_bone_transform(sspine_instance instance, s/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_bone_transform	signature:(sspine_instance instance,sspine_bone bone)
sspine_get_bone_world_position	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_vec2 sspine_get_bone_world_position(sspine_instance instance, sspine/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_vec2	signature:(sspine_instance instance,sspine_bone bone)
sspine_get_color	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_color sspine_get_color(sspine_instance instance);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_color	signature:(sspine_instance instance)
sspine_get_context	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_context sspine_get_context(void);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_context	signature:(void)
sspine_get_context_info	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_context_info sspine_get_context_info(sspine_context ctx);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_context_info	signature:(sspine_context ctx)
sspine_get_context_resource_state	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_resource_state sspine_get_context_resource_state(sspine_context cont/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_resource_state	signature:(sspine_context context)
sspine_get_event_info	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_event_info sspine_get_event_info(sspine_event event);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_event_info	signature:(sspine_event event)
sspine_get_iktarget_info	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_iktarget_info sspine_get_iktarget_info(sspine_iktarget iktarget);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_iktarget_info	signature:(sspine_iktarget iktarget)
sspine_get_image_info	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_image_info sspine_get_image_info(sspine_image image);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_image_info	signature:(sspine_image image)
sspine_get_instance_resource_state	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_resource_state sspine_get_instance_resource_state(sspine_instance in/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_resource_state	signature:(sspine_instance instance)
sspine_get_instance_skeleton	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_skeleton sspine_get_instance_skeleton(sspine_instance instance);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_skeleton	signature:(sspine_instance instance)
sspine_get_position	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_vec2 sspine_get_position(sspine_instance instance);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_vec2	signature:(sspine_instance instance)
sspine_get_scale	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_vec2 sspine_get_scale(sspine_instance instance);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_vec2	signature:(sspine_instance instance)
sspine_get_skeleton_atlas	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_atlas sspine_get_skeleton_atlas(sspine_skeleton skeleton);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_atlas	signature:(sspine_skeleton skeleton)
sspine_get_skeleton_resource_state	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_resource_state sspine_get_skeleton_resource_state(sspine_skeleton sk/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_resource_state	signature:(sspine_skeleton skeleton)
sspine_get_skin_info	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_skin_info sspine_get_skin_info(sspine_skin skin);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_skin_info	signature:(sspine_skin skin)
sspine_get_skinset_resource_state	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_resource_state sspine_get_skinset_resource_state(sspine_skinset skin/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_resource_state	signature:(sspine_skinset skinset)
sspine_get_slot_color	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_color sspine_get_slot_color(sspine_instance instance, sspine_slot sl/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_color	signature:(sspine_instance instance,sspine_slot slot)
sspine_get_slot_info	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_slot_info sspine_get_slot_info(sspine_slot slot);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_slot_info	signature:(sspine_slot slot)
sspine_get_triggered_event_info	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_triggered_event_info sspine_get_triggered_event_info(sspine_instance/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_triggered_event_info	signature:(sspine_instance instance,int triggered_event_index)
sspine_iktarget	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_iktarget { uint32_t skeleton_id; int index; } sspine_iktarget;$/;"	t	typeref:struct:sspine_iktarget
sspine_iktarget_by_index	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_iktarget sspine_iktarget_by_index(sspine_skeleton skeleton, int inde/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_iktarget	signature:(sspine_skeleton skeleton,int index)
sspine_iktarget_by_name	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_iktarget sspine_iktarget_by_name(sspine_skeleton skeleton, const cha/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_iktarget	signature:(sspine_skeleton skeleton,const char * name)
sspine_iktarget_equal	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_iktarget_equal(sspine_iktarget first, sspine_iktarget second);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_iktarget first,sspine_iktarget second)
sspine_iktarget_info	$SOKOLC/util/sokol_spine.h	/^} sspine_iktarget_info;$/;"	t	typeref:struct:sspine_iktarget_info
sspine_iktarget_valid	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_iktarget_valid(sspine_iktarget iktarget);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_iktarget iktarget)
sspine_image	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_image { uint32_t atlas_id; int index; } sspine_image;$/;"	t	typeref:struct:sspine_image
sspine_image_by_index	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_image sspine_image_by_index(sspine_atlas atlas, int index);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_image	signature:(sspine_atlas atlas,int index)
sspine_image_equal	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_image_equal(sspine_image first, sspine_image second);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_image first,sspine_image second)
sspine_image_info	$SOKOLC/util/sokol_spine.h	/^} sspine_image_info;$/;"	t	typeref:struct:sspine_image_info
sspine_image_valid	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_image_valid(sspine_image image);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_image image)
sspine_instance	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_instance { uint32_t id; } sspine_instance;$/;"	t	typeref:struct:sspine_instance
sspine_instance_desc	$SOKOLC/util/sokol_spine.h	/^} sspine_instance_desc;$/;"	t	typeref:struct:sspine_instance_desc
sspine_instance_valid	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_instance_valid(sspine_instance instance);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_instance instance)
sspine_layer_transform	$SOKOLC/util/sokol_spine.h	/^} sspine_layer_transform;$/;"	t	typeref:struct:sspine_layer_transform
sspine_layer_transform_to_mat4	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_mat4 sspine_layer_transform_to_mat4(const sspine_layer_transform* tf/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_mat4	signature:(const sspine_layer_transform * tform)
sspine_log_item	$SOKOLC/util/sokol_spine.h	/^} sspine_log_item;$/;"	t	typeref:enum:sspine_log_item
sspine_logger	$SOKOLC/util/sokol_spine.h	/^} sspine_logger;$/;"	t	typeref:struct:sspine_logger
sspine_make_atlas	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_atlas sspine_make_atlas(const sspine_atlas_desc* desc);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_atlas	signature:(const sspine_atlas_desc * desc)
sspine_make_context	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_context sspine_make_context(const sspine_context_desc* desc);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_context	signature:(const sspine_context_desc * desc)
sspine_make_instance	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_instance sspine_make_instance(const sspine_instance_desc* desc);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_instance	signature:(const sspine_instance_desc * desc)
sspine_make_skeleton	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_skeleton sspine_make_skeleton(const sspine_skeleton_desc* desc);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_skeleton	signature:(const sspine_skeleton_desc * desc)
sspine_make_skinset	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_skinset sspine_make_skinset(const sspine_skinset_desc* desc);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_skinset	signature:(const sspine_skinset_desc * desc)
sspine_mat4	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_mat4 { float m[16]; } sspine_mat4;$/;"	t	typeref:struct:sspine_mat4
sspine_num_anims	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL int sspine_num_anims(sspine_skeleton skeleton);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL int	signature:(sspine_skeleton skeleton)
sspine_num_atlas_pages	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL int sspine_num_atlas_pages(sspine_atlas atlas);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL int	signature:(sspine_atlas atlas)
sspine_num_bones	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL int sspine_num_bones(sspine_skeleton skeleton);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL int	signature:(sspine_skeleton skeleton)
sspine_num_events	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL int sspine_num_events(sspine_skeleton skeleton);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL int	signature:(sspine_skeleton skeleton)
sspine_num_iktargets	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL int sspine_num_iktargets(sspine_skeleton skeleton);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL int	signature:(sspine_skeleton skeleton)
sspine_num_images	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL int sspine_num_images(sspine_atlas atlas);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL int	signature:(sspine_atlas atlas)
sspine_num_skins	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL int sspine_num_skins(sspine_skeleton skeleton);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL int	signature:(sspine_skeleton skeleton)
sspine_num_slots	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL int sspine_num_slots(sspine_skeleton skeleton);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL int	signature:(sspine_skeleton skeleton)
sspine_num_triggered_events	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL int sspine_num_triggered_events(sspine_instance instance);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL int	signature:(sspine_instance instance)
sspine_range	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_range { const void* ptr; size_t size; } sspine_range;$/;"	t	typeref:struct:sspine_range
sspine_resource_state	$SOKOLC/util/sokol_spine.h	/^} sspine_resource_state;$/;"	t	typeref:enum:sspine_resource_state
sspine_set_animation	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_set_animation(sspine_instance instance, sspine_anim anim, int t/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance,sspine_anim anim,int track_index,bool loop)
sspine_set_bone_position	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_set_bone_position(sspine_instance instance, sspine_bone bone, s/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance,sspine_bone bone,sspine_vec2 position)
sspine_set_bone_rotation	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_set_bone_rotation(sspine_instance instance, sspine_bone bone, f/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance,sspine_bone bone,float rotation)
sspine_set_bone_scale	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_set_bone_scale(sspine_instance instance, sspine_bone bone, sspi/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance,sspine_bone bone,sspine_vec2 scale)
sspine_set_bone_shear	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_set_bone_shear(sspine_instance instance, sspine_bone bone, sspi/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance,sspine_bone bone,sspine_vec2 shear)
sspine_set_bone_transform	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_set_bone_transform(sspine_instance instance, sspine_bone bone, /;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance,sspine_bone bone,const sspine_bone_transform * transform)
sspine_set_color	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_set_color(sspine_instance instance, sspine_color color);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance,sspine_color color)
sspine_set_context	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_set_context(sspine_context ctx);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_context ctx)
sspine_set_empty_animation	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_set_empty_animation(sspine_instance instance, int track_index, /;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance,int track_index,float mix_duration)
sspine_set_iktarget_world_pos	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_set_iktarget_world_pos(sspine_instance instance, sspine_iktarge/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance,sspine_iktarget iktarget,sspine_vec2 world_pos)
sspine_set_position	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_set_position(sspine_instance instance, sspine_vec2 position);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance,sspine_vec2 position)
sspine_set_scale	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_set_scale(sspine_instance instance, sspine_vec2 scale);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance,sspine_vec2 scale)
sspine_set_skin	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_set_skin(sspine_instance instance_id, sspine_skin skin) {$/;"	f	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance_id,sspine_skin skin)
sspine_set_skinset	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_set_skinset(sspine_instance instance, sspine_skinset skinset);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance,sspine_skinset skinset)
sspine_set_slot_color	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_set_slot_color(sspine_instance instance, sspine_slot slot, sspi/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance,sspine_slot slot,sspine_color color)
sspine_setup	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_setup(const sspine_desc* desc);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(const sspine_desc * desc)
sspine_shutdown	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_shutdown(void);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(void)
sspine_skeleton	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_skeleton { uint32_t id; } sspine_skeleton;$/;"	t	typeref:struct:sspine_skeleton
sspine_skeleton_desc	$SOKOLC/util/sokol_spine.h	/^} sspine_skeleton_desc;$/;"	t	typeref:struct:sspine_skeleton_desc
sspine_skeleton_valid	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_skeleton_valid(sspine_skeleton skeleton);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_skeleton skeleton)
sspine_skin	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_skin { uint32_t skeleton_id; int index; } sspine_skin;$/;"	t	typeref:struct:sspine_skin
sspine_skin_by_index	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_skin sspine_skin_by_index(sspine_skeleton skeleton, int index);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_skin	signature:(sspine_skeleton skeleton,int index)
sspine_skin_by_name	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_skin sspine_skin_by_name(sspine_skeleton skeleton, const char* name)/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_skin	signature:(sspine_skeleton skeleton,const char * name)
sspine_skin_equal	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_skin_equal(sspine_skin first, sspine_skin second);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_skin first,sspine_skin second)
sspine_skin_info	$SOKOLC/util/sokol_spine.h	/^} sspine_skin_info;$/;"	t	typeref:struct:sspine_skin_info
sspine_skin_valid	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_skin_valid(sspine_skin skin);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_skin skin)
sspine_skinset	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_skinset { uint32_t id; } sspine_skinset;$/;"	t	typeref:struct:sspine_skinset
sspine_skinset_desc	$SOKOLC/util/sokol_spine.h	/^} sspine_skinset_desc;$/;"	t	typeref:struct:sspine_skinset_desc
sspine_skinset_valid	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_skinset_valid(sspine_skinset skinset);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_skinset skinset)
sspine_slot	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_slot { uint32_t skeleton_id; int index; } sspine_slot;$/;"	t	typeref:struct:sspine_slot
sspine_slot_by_index	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_slot sspine_slot_by_index(sspine_skeleton skeleton, int index);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_slot	signature:(sspine_skeleton skeleton,int index)
sspine_slot_by_name	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL sspine_slot sspine_slot_by_name(sspine_skeleton skeleton, const char* name)/;"	p	typeref:typename:SOKOL_SPINE_API_DECL sspine_slot	signature:(sspine_skeleton skeleton,const char * name)
sspine_slot_equal	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_slot_equal(sspine_slot first, sspine_slot second);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_slot first,sspine_slot second)
sspine_slot_info	$SOKOLC/util/sokol_spine.h	/^} sspine_slot_info;$/;"	t	typeref:struct:sspine_slot_info
sspine_slot_valid	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL bool sspine_slot_valid(sspine_slot slot);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL bool	signature:(sspine_slot slot)
sspine_string	$SOKOLC/util/sokol_spine.h	/^} sspine_string;$/;"	t	typeref:struct:sspine_string
sspine_triggered_event_info	$SOKOLC/util/sokol_spine.h	/^} sspine_triggered_event_info;$/;"	t	typeref:struct:sspine_triggered_event_info
sspine_update_instance	$SOKOLC/util/sokol_spine.h	/^SOKOL_SPINE_API_DECL void sspine_update_instance(sspine_instance instance, float delta_time);$/;"	p	typeref:typename:SOKOL_SPINE_API_DECL void	signature:(sspine_instance instance,float delta_time)
sspine_vec2	$SOKOLC/util/sokol_spine.h	/^typedef struct sspine_vec2 { float x, y; } sspine_vec2;$/;"	t	typeref:struct:sspine_vec2
stacks	$SOKOLC/util/sokol_shape.h	/^    uint16_t stacks;                \/\/ default: 4$/;"	m	struct:sshape_sphere_t	typeref:typename:uint16_t
stage	$SOKOLC/sokol_gfx.h	/^    _sg_shader_stage_t stage[SG_NUM_SHADER_STAGES];$/;"	m	struct:__anon13e02ee70e08	typeref:typename:_sg_shader_stage_t[]
stage	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_shader_stage stage;$/;"	m	struct:sg_imgui_args_apply_uniforms_t	typeref:typename:sg_shader_stage
staging	$SOKOLC/sokol_gfx.h	/^    uint8_t* staging;   \/\/ intermediate buffer for uniform data updates$/;"	m	struct:__anon13e02ee76708	typeref:typename:uint8_t *
start	$SOKOLC/sokol_time.h	/^    uint64_t start;$/;"	m	struct:__anonae6a40310408	typeref:typename:uint64_t
state	$SOKOLC/sokol_fetch.h	/^    _sfetch_state_t state;$/;"	m	struct:__anon3d2cd3ac0508	typeref:typename:_sfetch_state_t
state	$SOKOLC/sokol_gfx.h	/^    sg_resource_state state;$/;"	m	struct:__anon13e02ee70208	typeref:typename:sg_resource_state
state	$SOKOLC/util/sokol_debugtext.h	/^    sg_resource_state state;$/;"	m	struct:__anona9c6565b0108	typeref:typename:sg_resource_state
state	$SOKOLC/util/sokol_gl.h	/^    sg_resource_state state;$/;"	m	struct:__anon382715e20208	typeref:typename:sg_resource_state
state	$SOKOLC/util/sokol_imgui.h	/^    _simgui_resource_state state;$/;"	m	struct:__anon4720df6a0408	typeref:typename:_simgui_resource_state
state	$SOKOLC/util/sokol_memtrack.h	/^    smemtrack_info_t state;$/;"	m	struct:__anonaf127b230108	typeref:typename:smemtrack_info_t
state	$SOKOLC/util/sokol_nuklear.h	/^    _snk_resource_state state;$/;"	m	struct:__anon5a1189810308	typeref:typename:_snk_resource_state
state	$SOKOLC/util/sokol_spine.h	/^    sspine_resource_state state;$/;"	m	struct:__anon5007022e0408	typeref:typename:sspine_resource_state
state_cache	$SOKOLC/sokol_gfx.h	/^    _sg_mtl_state_cache_t state_cache;$/;"	m	struct:__anon13e02ee75708	typeref:typename:_sg_mtl_state_cache_t
stats	$SOKOLC/sokol_gfx.h	/^    sg_frame_stats stats;$/;"	m	struct:__anon13e02ee77608	typeref:typename:sg_frame_stats
stats	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_frame_stats stats;$/;"	m	struct:sg_imgui_frame_stats_t	typeref:typename:sg_frame_stats
stats_enabled	$SOKOLC/sokol_gfx.h	/^    bool stats_enabled;$/;"	m	struct:__anon13e02ee77608	typeref:typename:bool
stencil	$SOKOLC/sokol_gfx.h	/^    sg_stencil_state stencil;$/;"	m	struct:sg_pipeline_desc	typeref:typename:sg_stencil_state
stencil_bits	$SOKOLC/sokol_app.h	/^    int         stencil_bits;$/;"	E
stencil_ref	$SOKOLC/sokol_gfx.h	/^        uint32_t stencil_ref;$/;"	m	struct:__anon13e02ee75008::__anon13e02ee75108	typeref:typename:uint32_t
stencil_store_action	$SOKOLC/sokol_gfx.h	/^    sg_store_action stencil_store_action;$/;"	m	struct:__anon13e02ee73208	typeref:typename:sg_store_action
step_func	$SOKOLC/sokol_gfx.h	/^    sg_vertex_step step_func;$/;"	m	struct:sg_vertex_buffer_layout_state	typeref:typename:sg_vertex_step
step_rate	$SOKOLC/sokol_gfx.h	/^    int step_rate;$/;"	m	struct:sg_vertex_buffer_layout_state	typeref:typename:int
stm_diff	$SOKOLC/sokol_time.h	/^SOKOL_TIME_API_DECL uint64_t stm_diff(uint64_t new_ticks, uint64_t old_ticks);$/;"	p	typeref:typename:SOKOL_TIME_API_DECL uint64_t	signature:(uint64_t new_ticks,uint64_t old_ticks)
stm_laptime	$SOKOLC/sokol_time.h	/^SOKOL_TIME_API_DECL uint64_t stm_laptime(uint64_t* last_time);$/;"	p	typeref:typename:SOKOL_TIME_API_DECL uint64_t	signature:(uint64_t * last_time)
stm_ms	$SOKOLC/sokol_time.h	/^SOKOL_TIME_API_DECL double stm_ms(uint64_t ticks);$/;"	p	typeref:typename:SOKOL_TIME_API_DECL double	signature:(uint64_t ticks)
stm_now	$SOKOLC/sokol_time.h	/^SOKOL_TIME_API_DECL uint64_t stm_now(void);$/;"	p	typeref:typename:SOKOL_TIME_API_DECL uint64_t	signature:(void)
stm_ns	$SOKOLC/sokol_time.h	/^SOKOL_TIME_API_DECL double stm_ns(uint64_t ticks);$/;"	p	typeref:typename:SOKOL_TIME_API_DECL double	signature:(uint64_t ticks)
stm_round_to_common_refresh_rate	$SOKOLC/sokol_time.h	/^SOKOL_TIME_API_DECL uint64_t stm_round_to_common_refresh_rate(uint64_t frame_ticks);$/;"	p	typeref:typename:SOKOL_TIME_API_DECL uint64_t	signature:(uint64_t frame_ticks)
stm_sec	$SOKOLC/sokol_time.h	/^SOKOL_TIME_API_DECL double stm_sec(uint64_t ticks);$/;"	p	typeref:typename:SOKOL_TIME_API_DECL double	signature:(uint64_t ticks)
stm_setup	$SOKOLC/sokol_time.h	/^SOKOL_TIME_API_DECL void stm_setup(void);$/;"	p	typeref:typename:SOKOL_TIME_API_DECL void	signature:(void)
stm_since	$SOKOLC/sokol_time.h	/^SOKOL_TIME_API_DECL uint64_t stm_since(uint64_t start_ticks);$/;"	p	typeref:typename:SOKOL_TIME_API_DECL uint64_t	signature:(uint64_t start_ticks)
stm_us	$SOKOLC/sokol_time.h	/^SOKOL_TIME_API_DECL double stm_us(uint64_t ticks);$/;"	p	typeref:typename:SOKOL_TIME_API_DECL double	signature:(uint64_t ticks)
stop	$SOKOLC/sokol_audio.h	/^    bool stop;$/;"	E
stop_critsec	$SOKOLC/sokol_fetch.h	/^    CRITICAL_SECTION stop_critsec;$/;"	m	struct:__anon3d2cd3ac0208	typeref:typename:CRITICAL_SECTION
stop_mutex	$SOKOLC/sokol_fetch.h	/^    pthread_mutex_t stop_mutex;$/;"	m	struct:__anon3d2cd3ac0108	typeref:typename:pthread_mutex_t
stop_requested	$SOKOLC/sokol_fetch.h	/^    bool stop_requested;$/;"	m	struct:__anon3d2cd3ac0208	typeref:typename:bool
store_action	$SOKOLC/sokol_gfx.h	/^    sg_store_action store_action;       \/\/ default: SG_STOREACTION_STORE$/;"	m	struct:sg_color_attachment_action	typeref:typename:sg_store_action
stored_index_buffer	$SOKOLC/sokol_gfx.h	/^    GLuint stored_index_buffer;$/;"	m	struct:__anon13e02ee73108	typeref:typename:GLuint
stored_texture_sampler	$SOKOLC/sokol_gfx.h	/^    _sg_gl_cache_texture_sampler_bind_slot stored_texture_sampler;$/;"	m	struct:__anon13e02ee73108	typeref:typename:_sg_gl_cache_texture_sampler_bind_slot
stored_vertex_buffer	$SOKOLC/sokol_gfx.h	/^    GLuint stored_vertex_buffer;$/;"	m	struct:__anon13e02ee73108	typeref:typename:GLuint
stored_window_rect	$SOKOLC/sokol_app.h	/^    RECT stored_window_rect;    \/\/ used to restore window pos\/size when toggling fullscreen =/;"	E	enum:MONITOR_DPI_TYPE
str	$SOKOLC/sokol_app.h	/^    const char* str;$/;"	E
stream	$SOKOLC/sokol_audio.h	/^    AAudioStream* stream;$/;"	E
stride	$SOKOLC/sokol_gfx.h	/^    uint8_t stride;$/;"	m	struct:__anon13e02ee72808	typeref:typename:uint8_t
string_value	$SOKOLC/util/sokol_spine.h	/^    sspine_string string_value;$/;"	m	struct:sspine_triggered_event_info	typeref:typename:sspine_string
subimage	$SOKOLC/sokol_gfx.h	/^    sg_range subimage[SG_CUBEFACE_NUM][SG_MAX_MIPMAPS];$/;"	m	struct:sg_image_data	typeref:typename:sg_range[][]
subres_data	$SOKOLC/sokol_gfx.h	/^    D3D11_SUBRESOURCE_DATA subres_data[SG_MAX_MIPMAPS * SG_MAX_TEXTUREARRAY_LAYERS];$/;"	m	struct:__anon13e02ee74408	typeref:typename:D3D11_SUBRESOURCE_DATA[]
succeeded	$SOKOLC/sokol_app.h	/^    bool succeeded;         \/\/ true if the loading operation has succeeded$/;"	E	struct:sapp_html5_fetch_response
surface	$SOKOLC/sokol_app.h	/^    WGPUSurface surface;$/;"	E
suspended	$SOKOLC/sokol_app.h	/^    bool suspended;$/;"	E
swap_chain	$SOKOLC/sokol_app.h	/^    IDXGISwapChain* swap_chain;$/;"	E
swap_chain_desc	$SOKOLC/sokol_app.h	/^    DXGI_SWAP_CHAIN_DESC swap_chain_desc;$/;"	E
swap_interval	$SOKOLC/sokol_app.h	/^    int swap_interval;$/;"	E
swapchain	$SOKOLC/sokol_app.h	/^    WGPUSwapChain swapchain;$/;"	E
swapchain_view	$SOKOLC/sokol_app.h	/^    WGPUTextureView swapchain_view;$/;"	E
sync_refresh_count	$SOKOLC/sokol_app.h	/^    UINT sync_refresh_count;$/;"	E
tab_width	$SOKOLC/util/sokol_debugtext.h	/^    int tab_width;                          \/\/ tab width in number of characters, default: 4$/;"	m	struct:sdtx_context_desc_t	typeref:typename:int
tail	$SOKOLC/sokol_app.h	/^    int tail;$/;"	E
tail	$SOKOLC/sokol_audio.h	/^    int tail;  \/\/ next slot to read from$/;"	E
tail	$SOKOLC/sokol_fetch.h	/^    uint32_t tail;$/;"	m	struct:__anon3d2cd3ac0708	typeref:typename:uint32_t
target	$SOKOLC/sokol_gfx.h	/^    GLenum target;$/;"	m	struct:__anon13e02ee73008	typeref:typename:GLenum
target_bone	$SOKOLC/util/sokol_spine.h	/^    sspine_bone target_bone;$/;"	m	struct:sspine_iktarget_info	typeref:typename:sspine_bone
tex	$SOKOLC/sokol_gfx.h	/^    uint32_t tex[SG_NUM_INFLIGHT_FRAMES];$/;"	m	struct:sg_gl_image_info	typeref:typename:uint32_t[]
tex2d	$SOKOLC/sokol_gfx.h	/^    const void* tex2d;    \/\/ ID3D11Texture2D*$/;"	m	struct:sg_d3d11_image_info	typeref:typename:const void *
tex3d	$SOKOLC/sokol_gfx.h	/^    const void* tex3d;    \/\/ ID3D11Texture3D*$/;"	m	struct:sg_d3d11_image_info	typeref:typename:const void *
tex_target	$SOKOLC/sokol_gfx.h	/^    uint32_t tex_target;$/;"	m	struct:sg_gl_image_info	typeref:typename:uint32_t
textField:shouldChangeCharactersInRange:replacementString:	$SOKOLC/sokol_app.h	/^- (BOOL)textField:(UITextField*)textField shouldChangeCharactersInRange:(NSRange)range replaceme/;"	m	implementation:_sapp_textfield_dlg	signature:(UITextField*,NSRange,NSString*)
text_uri_list	$SOKOLC/sokol_app.h	/^    Atom text_uri_list;$/;"	E
textfield	$SOKOLC/sokol_app.h	/^    UITextField* textfield;$/;"	E
textfield_dlg	$SOKOLC/sokol_app.h	/^    _sapp_textfield_dlg* textfield_dlg;$/;"	E
texture	$SOKOLC/sokol_gfx.h	/^    GLuint texture;$/;"	m	struct:__anon13e02ee73008	typeref:typename:GLuint
texture_samplers	$SOKOLC/sokol_gfx.h	/^    _sg_gl_cache_texture_sampler_bind_slot texture_samplers[_SG_GL_TEXTURE_SAMPLER_CACHE_SIZE];$/;"	m	struct:__anon13e02ee73108	typeref:typename:_sg_gl_cache_texture_sampler_bind_slot[]
texturing_enabled	$SOKOLC/util/sokol_gl.h	/^    bool texturing_enabled;$/;"	m	struct:__anon382715e21008	typeref:typename:bool
tform_buf	$SOKOLC/util/sokol_spine.h	/^    } tform_buf;$/;"	m	struct:__anon5007022e0a08	typeref:struct:__anon5007022e0a08::__anon5007022e0b08
thread	$SOKOLC/sokol_app.h	/^    pthread_t thread;$/;"	E
thread	$SOKOLC/sokol_audio.h	/^    pthread_t thread;$/;"	E
thread	$SOKOLC/sokol_fetch.h	/^    pthread_t thread;$/;"	m	struct:__anon3d2cd3ac0108	typeref:typename:pthread_t
thread_handle	$SOKOLC/sokol_audio.h	/^    HANDLE thread_handle;$/;"	E
thread_incoming	$SOKOLC/sokol_fetch.h	/^    _sfetch_ring_t thread_incoming;$/;"	m	struct:__anon3d2cd3ac0808	typeref:typename:_sfetch_ring_t
thread_outgoing	$SOKOLC/sokol_fetch.h	/^    _sfetch_ring_t thread_outgoing;$/;"	m	struct:__anon3d2cd3ac0808	typeref:typename:_sfetch_ring_t
thread_stop	$SOKOLC/sokol_audio.h	/^    volatile int thread_stop;$/;"	E
tiles	$SOKOLC/util/sokol_shape.h	/^    uint16_t tiles;                 \/\/ default: 1$/;"	m	struct:sshape_plane_t	typeref:typename:uint16_t
time	$SOKOLC/util/sokol_spine.h	/^    float time;$/;"	m	struct:sspine_triggered_event_info	typeref:typename:float
timebase	$SOKOLC/sokol_time.h	/^    mach_timebase_info_data_t timebase;$/;"	m	struct:__anonae6a40310208	typeref:typename:mach_timebase_info_data_t
timerFired:	$SOKOLC/sokol_app.h	/^    - (void)timerFired:(id)sender;$/;"	m	interface:_sapp_macos_view	signature:(id)
timerFired:	$SOKOLC/sokol_app.h	/^- (void)timerFired:(id)sender {$/;"	m	implementation:_sapp_macos_view	signature:(id)	category:SOKOL_GLCORE33
timestamp	$SOKOLC/sokol_app.h	/^    _sapp_timestamp_t timestamp;$/;"	E
timing	$SOKOLC/sokol_app.h	/^    _sapp_timing_t timing;$/;"	E
topology	$SOKOLC/sokol_gfx.h	/^        D3D_PRIMITIVE_TOPOLOGY topology;$/;"	m	struct:__anon13e02ee73d08::__anon13e02ee73e08	typeref:typename:D3D_PRIMITIVE_TOPOLOGY
touchesBegan:withEvent:	$SOKOLC/sokol_app.h	/^- (void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent*)event {$/;"	m	implementation:_sapp_ios_view	signature:(NSSet NSSet UITouch* UITouch*,UIEvent*)
touchesCancelled:withEvent:	$SOKOLC/sokol_app.h	/^- (void)touchesCancelled:(NSSet<UITouch *> *)touches withEvent:(UIEvent*)event {$/;"	m	implementation:_sapp_ios_view	signature:(NSSet NSSet UITouch* UITouch*,UIEvent*)
touchesEnded:withEvent:	$SOKOLC/sokol_app.h	/^- (void)touchesEnded:(NSSet<UITouch *> *)touches withEvent:(UIEvent*)event {$/;"	m	implementation:_sapp_ios_view	signature:(NSSet NSSet UITouch* UITouch*,UIEvent*)
touchesMoved:withEvent:	$SOKOLC/sokol_app.h	/^- (void)touchesMoved:(NSSet<UITouch *> *)touches withEvent:(UIEvent*)event {$/;"	m	implementation:_sapp_ios_view	signature:(NSSet NSSet UITouch* UITouch*,UIEvent*)
tracking_area	$SOKOLC/sokol_app.h	/^    NSTrackingArea* tracking_area;$/;"	E
transform	$SOKOLC/util/sokol_shape.h	/^    sshape_mat4_t transform;        \/\/ default: identity matrix$/;"	m	struct:sshape_torus_t	typeref:typename:sshape_mat4_t
transform	$SOKOLC/util/sokol_spine.h	/^    float transform[16];$/;"	m	struct:__anon5007022e1708	typeref:typename:float[16]
triggered_events	$SOKOLC/util/sokol_spine.h	/^    sspine_triggered_event_info triggered_events[_SSPINE_MAX_TRIGGERED_EVENTS];$/;"	m	struct:__anon5007022e1108	typeref:typename:sspine_triggered_event_info[]
truncated	$SOKOLC/util/sokol_spine.h	/^    bool truncated;$/;"	m	struct:sspine_string	typeref:typename:bool
type	$SOKOLC/sokol_gfx.h	/^    sg_uniform_type type;$/;"	m	struct:sg_shader_uniform_desc	typeref:typename:sg_uniform_type
ub_index	$SOKOLC/util/sokol_gfx_imgui.h	/^    int ub_index;$/;"	m	struct:sg_imgui_args_apply_uniforms_t	typeref:typename:int
ub_size	$SOKOLC/sokol_gfx.h	/^    int ub_size;$/;"	m	struct:__anon13e02ee75708	typeref:typename:int
ubuf	$SOKOLC/util/sokol_gfx_imgui.h	/^    uint8_t* ubuf;          \/* buffer for capturing uniform updates *\/$/;"	m	struct:sg_imgui_capture_bucket_t	typeref:typename:uint8_t *
ubuf_pos	$SOKOLC/util/sokol_gfx_imgui.h	/^    size_t ubuf_pos;        \/* start of copied data in capture buffer *\/$/;"	m	struct:sg_imgui_args_apply_uniforms_t	typeref:typename:size_t
ubuf_size	$SOKOLC/util/sokol_gfx_imgui.h	/^    size_t ubuf_size;       \/* size of uniform capture buffer in bytes *\/$/;"	m	struct:sg_imgui_capture_bucket_t	typeref:typename:size_t
ucs	$SOKOLC/sokol_app.h	/^  uint16_t ucs;$/;"	E	struct:_sapp_x11_codepair
ui_scale	$SOKOLC/util/sokol_gfx_imgui.h	/^    float ui_scale;$/;"	m	struct:sg_imgui_image_t	typeref:typename:float
uniform	$SOKOLC/sokol_gfx.h	/^    _sg_wgpu_uniform_buffer_t uniform;$/;"	m	struct:__anon13e02ee77108	typeref:typename:_sg_wgpu_uniform_buffer_t
uniform_blocks	$SOKOLC/sokol_gfx.h	/^    sg_shader_uniform_block_desc uniform_blocks[SG_MAX_SHADERSTAGE_UBS];$/;"	m	struct:sg_shader_stage_desc	typeref:typename:sg_shader_uniform_block_desc[]
uniform_buffer_size	$SOKOLC/sokol_gfx.h	/^    int uniform_buffer_size;$/;"	m	struct:sg_desc	typeref:typename:int
uniform_buffers	$SOKOLC/sokol_gfx.h	/^    id<MTLBuffer> uniform_buffers[SG_NUM_INFLIGHT_FRAMES];$/;"	m	struct:__anon13e02ee75708	typeref:typename:id<MTLBuffer>[]
uniform_index	$SOKOLC/util/sokol_gl.h	/^    int uniform_index;$/;"	m	struct:__anon382715e20b08	typeref:typename:int
uniforms	$SOKOLC/sokol_gfx.h	/^    sg_shader_uniform_desc uniforms[SG_MAX_UB_MEMBERS];$/;"	m	struct:sg_shader_uniform_block_desc	typeref:typename:sg_shader_uniform_desc[]
uniforms	$SOKOLC/util/sokol_gl.h	/^    } uniforms;$/;"	m	struct:__anon382715e21008	typeref:struct:__anon382715e21008::__anon382715e21208
uninit_buffer	$SOKOLC/sokol_gfx.h	/^    void (*uninit_buffer)(sg_buffer buf_id, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_buffer buf_id,void * user_data)
uninit_buffer	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_uninit_buffer_t uninit_buffer;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_uninit_buffer_t
uninit_image	$SOKOLC/sokol_gfx.h	/^    void (*uninit_image)(sg_image img_id, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_image img_id,void * user_data)
uninit_image	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_uninit_image_t uninit_image;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_uninit_image_t
uninit_pass	$SOKOLC/sokol_gfx.h	/^    void (*uninit_pass)(sg_pass pass_id, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_pass pass_id,void * user_data)
uninit_pass	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_uninit_pass_t uninit_pass;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_uninit_pass_t
uninit_pipeline	$SOKOLC/sokol_gfx.h	/^    void (*uninit_pipeline)(sg_pipeline pip_id, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_pipeline pip_id,void * user_data)
uninit_pipeline	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_uninit_pipeline_t uninit_pipeline;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_uninit_pipeline_t
uninit_sampler	$SOKOLC/sokol_gfx.h	/^    void (*uninit_sampler)(sg_sampler smp_id, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_sampler smp_id,void * user_data)
uninit_sampler	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_uninit_sampler_t uninit_sampler;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_uninit_sampler_t
uninit_shader	$SOKOLC/sokol_gfx.h	/^    void (*uninit_shader)(sg_shader shd_id, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_shader shd_id,void * user_data)
uninit_shader	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_uninit_shader_t uninit_shader;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_uninit_shader_t
upd_frame_index	$SOKOLC/sokol_gfx.h	/^    uint32_t upd_frame_index;$/;"	m	struct:__anon13e02ee70708	typeref:typename:uint32_t
updateTrackingAreas	$SOKOLC/sokol_app.h	/^- (void)updateTrackingAreas {$/;"	m	implementation:_sapp_macos_view	signature:()	category:NSRect
update_buffer	$SOKOLC/sokol_gfx.h	/^    void (*update_buffer)(sg_buffer buf, const sg_range* data, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_buffer buf,const sg_range * data,void * user_data)
update_buffer	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_update_buffer_t update_buffer;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_update_buffer_t
update_frame_id	$SOKOLC/util/sokol_debugtext.h	/^    uint32_t update_frame_id;$/;"	m	struct:__anona9c6565b0608	typeref:typename:uint32_t
update_frame_id	$SOKOLC/util/sokol_gl.h	/^    uint32_t update_frame_id;$/;"	m	struct:__anon382715e21008	typeref:typename:uint32_t
update_frame_id	$SOKOLC/util/sokol_spine.h	/^    uint32_t update_frame_id;$/;"	m	struct:__anon5007022e1708	typeref:typename:uint32_t
update_frame_index	$SOKOLC/sokol_gfx.h	/^    uint32_t update_frame_index;$/;"	m	struct:__anon13e02ee70608	typeref:typename:uint32_t
update_image	$SOKOLC/sokol_gfx.h	/^    void (*update_image)(sg_image img, const sg_image_data* data, void* user_data);$/;"	m	struct:sg_trace_hooks	typeref:typename:void (*)(sg_image img,const sg_image_data * data,void * user_data)
update_image	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_args_update_image_t update_image;$/;"	m	union:sg_imgui_args_t	typeref:typename:sg_imgui_args_update_image_t
upper	$SOKOLC/sokol_gfx.h	/^    int upper;      \/\/ the current upper index (no valid items past this point)$/;"	m	struct:__anon13e02ee77308	typeref:typename:int
usage	$SOKOLC/sokol_gfx.h	/^    sg_usage usage;$/;"	m	struct:sg_image_desc	typeref:typename:sg_usage
use_dxgi_frame_stats	$SOKOLC/sokol_app.h	/^    bool use_dxgi_frame_stats;$/;"	E
use_indexed_draw	$SOKOLC/sokol_gfx.h	/^    bool use_indexed_draw;$/;"	m	struct:__anon13e02ee77108	typeref:typename:bool
use_instanced_draw	$SOKOLC/sokol_gfx.h	/^    bool use_instanced_draw;$/;"	m	struct:__anon13e02ee74408	typeref:typename:bool
use_shared_storage_mode	$SOKOLC/sokol_gfx.h	/^    bool use_shared_storage_mode;$/;"	m	struct:__anon13e02ee75708	typeref:typename:bool
used	$SOKOLC/sokol_gfx.h	/^    bool used;$/;"	m	struct:sg_shader_sampler_desc	typeref:typename:bool
user	$SOKOLC/sokol_fetch.h	/^    _sfetch_item_user_t user;$/;"	m	struct:__anon3d2cd3ac0508	typeref:typename:_sfetch_item_user_t
user_data	$SOKOLC/sokol_app.h	/^    void* user_data;$/;"	E	struct:sapp_logger
user_data	$SOKOLC/sokol_args.h	/^    void* user_data;$/;"	m	struct:sargs_allocator	typeref:typename:void *
user_data	$SOKOLC/sokol_audio.h	/^    void* user_data;$/;"	E	struct:saudio_logger
user_data	$SOKOLC/sokol_fetch.h	/^    void* user_data;$/;"	m	struct:sfetch_logger_t	typeref:typename:void *
user_data	$SOKOLC/sokol_gfx.h	/^    void* user_data;$/;"	m	struct:sg_wgpu_context_desc	typeref:typename:void *
user_data	$SOKOLC/util/sokol_debugtext.h	/^    void* user_data;$/;"	m	struct:sdtx_logger_t	typeref:typename:void *
user_data	$SOKOLC/util/sokol_fontstash.h	/^    void* user_data;$/;"	m	struct:sfons_allocator_t	typeref:typename:void *
user_data	$SOKOLC/util/sokol_gfx_imgui.h	/^    void* user_data;$/;"	m	struct:sg_imgui_allocator_t	typeref:typename:void *
user_data	$SOKOLC/util/sokol_gl.h	/^    void* user_data;$/;"	m	struct:sgl_logger_t	typeref:typename:void *
user_data	$SOKOLC/util/sokol_imgui.h	/^    void* user_data;$/;"	m	struct:simgui_logger_t	typeref:typename:void *
user_data	$SOKOLC/util/sokol_nuklear.h	/^    void* user_data;$/;"	m	struct:snk_logger_t	typeref:typename:void *
user_data	$SOKOLC/util/sokol_spine.h	/^    void* user_data;$/;"	m	struct:sspine_logger	typeref:typename:void *
user_data_size	$SOKOLC/sokol_fetch.h	/^    size_t user_data_size;$/;"	m	struct:__anon3d2cd3ac0308	typeref:typename:size_t
user_incoming	$SOKOLC/sokol_fetch.h	/^    _sfetch_ring_t user_incoming;$/;"	m	struct:__anon3d2cd3ac0808	typeref:typename:_sfetch_ring_t
user_outgoing	$SOKOLC/sokol_fetch.h	/^    _sfetch_ring_t user_outgoing;$/;"	m	struct:__anon3d2cd3ac0808	typeref:typename:_sfetch_ring_t
user_sent	$SOKOLC/sokol_fetch.h	/^    _sfetch_ring_t user_sent;$/;"	m	struct:__anon3d2cd3ac0808	typeref:typename:_sfetch_ring_t
val	$SOKOLC/sokol_args.h	/^    int val;        \/* index to start of value string in buf *\/$/;"	m	struct:__anon82b80a0f0108	typeref:typename:int
valid	$SOKOLC/sokol_app.h	/^    bool valid;$/;"	E
valid	$SOKOLC/sokol_args.h	/^    bool valid;$/;"	m	struct:__anon82b80a0f0208	typeref:typename:bool
valid	$SOKOLC/sokol_audio.h	/^    bool valid;$/;"	E
valid	$SOKOLC/sokol_fetch.h	/^    bool valid;$/;"	m	struct:_sfetch_t	typeref:typename:bool
valid	$SOKOLC/sokol_gfx.h	/^    bool valid;$/;"	m	struct:__anon13e02ee77608	typeref:typename:bool
valid	$SOKOLC/util/sokol_shape.h	/^    bool valid;$/;"	m	struct:sshape_buffer_t	typeref:typename:bool
valid	$SOKOLC/util/sokol_spine.h	/^    bool valid;$/;"	m	struct:sspine_triggered_event_info	typeref:typename:bool
validate_error	$SOKOLC/sokol_gfx.h	/^    sg_log_item validate_error;$/;"	m	struct:__anon13e02ee77608	typeref:typename:sg_log_item
vao	$SOKOLC/sokol_gfx.h	/^    GLuint vao;$/;"	m	struct:__anon13e02ee72e08	typeref:typename:GLuint
vb_index	$SOKOLC/sokol_gfx.h	/^    int8_t vb_index;        \/\/ -1 if attr is not enabled$/;"	m	struct:__anon13e02ee72808	typeref:typename:int8_t
vb_offsets	$SOKOLC/sokol_gfx.h	/^    int vb_offsets[SG_MAX_VERTEX_BUFFERS];$/;"	m	struct:__anon13e02ee77408	typeref:typename:int[]
vb_strides	$SOKOLC/sokol_gfx.h	/^        UINT vb_strides[SG_MAX_VERTEX_BUFFERS];$/;"	m	struct:__anon13e02ee73d08::__anon13e02ee73e08	typeref:typename:UINT[]
vbs	$SOKOLC/sokol_gfx.h	/^    } vbs[SG_MAX_VERTEX_BUFFERS];$/;"	m	struct:__anon13e02ee76e08	typeref:struct:__anon13e02ee76e08::__anon13e02ee76f08[]
vbuf	$SOKOLC/util/sokol_debugtext.h	/^    sg_buffer vbuf;$/;"	m	struct:__anona9c6565b0608	typeref:typename:sg_buffer
vbuf	$SOKOLC/util/sokol_gl.h	/^    sg_buffer vbuf;$/;"	m	struct:__anon382715e21008	typeref:typename:sg_buffer
vbuf	$SOKOLC/util/sokol_imgui.h	/^    sg_buffer vbuf;$/;"	m	struct:__anon4720df6a0808	typeref:typename:sg_buffer
vbuf	$SOKOLC/util/sokol_nuklear.h	/^    sg_buffer vbuf;$/;"	m	struct:__anon5a1189810708	typeref:typename:sg_buffer
vbuf	$SOKOLC/util/sokol_spine.h	/^    sg_buffer vbuf;$/;"	m	struct:__anon5007022e1708	typeref:typename:sg_buffer
version	$SOKOLC/sokol_app.h	/^    int version;$/;"	E
vertex_buffer	$SOKOLC/sokol_gfx.h	/^    GLuint vertex_buffer;$/;"	m	struct:__anon13e02ee73108	typeref:typename:GLuint
vertex_buffer_layout_active	$SOKOLC/sokol_gfx.h	/^    bool vertex_buffer_layout_active[SG_MAX_VERTEX_BUFFERS];$/;"	m	struct:__anon13e02ee70f08	typeref:typename:bool[]
vertex_buffer_offsets	$SOKOLC/sokol_gfx.h	/^    int vertex_buffer_offsets[SG_MAX_VERTEX_BUFFERS];$/;"	m	struct:sg_bindings	typeref:typename:int[]
vertex_buffer_size	$SOKOLC/util/sokol_nuklear.h	/^    size_t vertex_buffer_size;$/;"	m	struct:__anon5a1189810708	typeref:typename:size_t
vertex_buffers	$SOKOLC/sokol_gfx.h	/^    sg_buffer vertex_buffers[SG_MAX_VERTEX_BUFFERS];$/;"	m	struct:sg_bindings	typeref:typename:sg_buffer[]
vertices	$SOKOLC/util/sokol_debugtext.h	/^    } vertices;$/;"	m	struct:__anona9c6565b0608	typeref:struct:__anona9c6565b0608::__anona9c6565b0708
vertices	$SOKOLC/util/sokol_gl.h	/^    } vertices;$/;"	m	struct:__anon382715e21008	typeref:struct:__anon382715e21008::__anon382715e21108
vertices	$SOKOLC/util/sokol_imgui.h	/^    sg_range vertices;$/;"	m	struct:__anon4720df6a0808	typeref:typename:sg_range
vertices	$SOKOLC/util/sokol_shape.h	/^    sshape_sizes_item_t vertices;$/;"	m	struct:sshape_sizes_t	typeref:typename:sshape_sizes_item_t
vertices	$SOKOLC/util/sokol_spine.h	/^    } vertices;$/;"	m	struct:__anon5007022e1708	typeref:struct:__anon5007022e1708::__anon5007022e1808
view	$SOKOLC/sokol_app.h	/^    _sapp_macos_view* view;$/;"	E
view	$SOKOLC/sokol_gfx.h	/^    } view;$/;"	m	struct:__anon13e02ee73f08	typeref:union:__anon13e02ee73f08::__anon13e02ee7400a
view_ctrl	$SOKOLC/sokol_app.h	/^        UIViewController* view_ctrl;$/;"	E
viewport	$SOKOLC/util/sokol_gl.h	/^    _sgl_viewport_args_t viewport;$/;"	m	union:__anon382715e20e0a	typeref:typename:_sgl_viewport_args_t
void	$SOKOLC/sokol_app.h	/^typedef void (*__GLXextproc)(void);$/;"	t
void	$SOKOLC/sokol_audio.h	/^    void (*stream_userdata_cb)(float* buffer, int num_frames, int num_channels, void* user_data)/;"	E	struct:saudio_desc
volume	$SOKOLC/util/sokol_spine.h	/^    float volume;$/;"	m	struct:sspine_triggered_event_info	typeref:typename:float
vs_blob	$SOKOLC/sokol_gfx.h	/^        void* vs_blob;$/;"	m	struct:__anon13e02ee73b08::__anon13e02ee73c08	typeref:typename:void *
vs_blob_length	$SOKOLC/sokol_gfx.h	/^        size_t vs_blob_length;$/;"	m	struct:__anon13e02ee73b08::__anon13e02ee73c08	typeref:typename:size_t
vs_cbufs	$SOKOLC/sokol_gfx.h	/^    const void* vs_cbufs[SG_MAX_SHADERSTAGE_UBS]; \/\/ ID3D11Buffer* (vertex stage constant buff/;"	m	struct:sg_d3d11_shader_info	typeref:typename:const void * []
vs_d3d11_target	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_str_t vs_d3d11_target;$/;"	m	struct:sg_imgui_shader_t	typeref:typename:sg_imgui_str_t
vs_entry	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_str_t vs_entry;$/;"	m	struct:sg_imgui_shader_t	typeref:typename:sg_imgui_str_t
vs_func	$SOKOLC/sokol_gfx.h	/^    const void* vs_func;  \/\/ id<MTLFunction>$/;"	m	struct:sg_mtl_shader_info	typeref:typename:const void *
vs_image_sampler_name	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_str_t vs_image_sampler_name[SG_MAX_SHADERSTAGE_IMAGESAMPLERPAIRS];$/;"	m	struct:sg_imgui_shader_t	typeref:typename:sg_imgui_str_t[]
vs_imgs	$SOKOLC/sokol_gfx.h	/^    _sg_image_t* vs_imgs[SG_MAX_SHADERSTAGE_IMAGES];$/;"	m	struct:__anon13e02ee77408	typeref:typename:_sg_image_t * []
vs_lib	$SOKOLC/sokol_gfx.h	/^    const void* vs_lib;   \/\/ id<MTLLibrary>$/;"	m	struct:sg_mtl_shader_info	typeref:typename:const void *
vs_mod	$SOKOLC/sokol_gfx.h	/^    const void* vs_mod;   \/\/ WGPUShaderModule$/;"	m	struct:sg_wgpu_shader_info	typeref:typename:const void *
vs_params	$SOKOLC/util/sokol_nuklear.h	/^    _snk_vs_params_t vs_params;$/;"	m	struct:__anon5a1189810708	typeref:typename:_snk_vs_params_t
vs_smps	$SOKOLC/sokol_gfx.h	/^    _sg_sampler_t* vs_smps[SG_MAX_SHADERSTAGE_SAMPLERS];$/;"	m	struct:__anon13e02ee77408	typeref:typename:_sg_sampler_t * []
vs_uniform_name	$SOKOLC/util/sokol_gfx_imgui.h	/^    sg_imgui_str_t vs_uniform_name[SG_MAX_SHADERSTAGE_UBS][SG_MAX_UB_MEMBERS];$/;"	m	struct:sg_imgui_shader_t	typeref:typename:sg_imgui_str_t[][]
vtx_count	$SOKOLC/util/sokol_gl.h	/^    int vtx_count;          \/* number of times vtx function has been called, used for non-trian/;"	m	struct:__anon382715e21008	typeref:typename:int
wgl	$SOKOLC/sokol_app.h	/^            _sapp_wgl_t wgl;$/;"	E
wgpu	$SOKOLC/sokol_app.h	/^            _sapp_wgpu_t wgpu;$/;"	E
wgpu	$SOKOLC/sokol_gfx.h	/^    } wgpu;$/;"	m	struct:__anon13e02ee76408	typeref:struct:__anon13e02ee76408::__anon13e02ee76508
wgpu_bindgroups_cache_size	$SOKOLC/sokol_gfx.h	/^    int wgpu_bindgroups_cache_size;      \/\/ number of slots in the WebGPU bindgroup cache (mus/;"	m	struct:sg_desc	typeref:typename:int
wgpu_buffer	$SOKOLC/sokol_gfx.h	/^    const void* wgpu_buffer;$/;"	m	struct:sg_buffer_desc	typeref:typename:const void *
wgpu_disable_bindgroups_cache	$SOKOLC/sokol_gfx.h	/^    bool wgpu_disable_bindgroups_cache;  \/\/ set to true to disable the WebGPU backend BindGrou/;"	m	struct:sg_desc	typeref:typename:bool
wgpu_sampler	$SOKOLC/sokol_gfx.h	/^    const void* wgpu_sampler;$/;"	m	struct:sg_sampler_desc	typeref:typename:const void *
wgpu_texture	$SOKOLC/sokol_gfx.h	/^    const void* wgpu_texture;$/;"	m	struct:sg_image_desc	typeref:typename:const void *
wgpu_texture_view	$SOKOLC/sokol_gfx.h	/^    const void* wgpu_texture_view;$/;"	m	struct:sg_image_desc	typeref:typename:const void *
width	$SOKOLC/sokol_app.h	/^    int width;$/;"	t
width	$SOKOLC/sokol_gfx.h	/^    int width;$/;"	m	struct:sg_image_desc	typeref:typename:int
width	$SOKOLC/util/sokol_fontstash.h	/^    int width;    \/\/ initial width of font atlas texture (default: 512, must be power of 2)$/;"	m	struct:sfons_desc_t	typeref:typename:int
width	$SOKOLC/util/sokol_gfx_imgui.h	/^    int x, y, width, height;$/;"	m	struct:sg_imgui_args_apply_viewport_t	typeref:typename:int
width	$SOKOLC/util/sokol_imgui.h	/^    int width;$/;"	m	struct:simgui_frame_desc_t	typeref:typename:int
width	$SOKOLC/util/sokol_shape.h	/^    float width, height, depth;     \/\/ default: 1.0$/;"	m	struct:sshape_box_t	typeref:typename:float
width	$SOKOLC/util/sokol_spine.h	/^    int width;$/;"	m	struct:sspine_image_info	typeref:typename:int
win	$SOKOLC/sokol_app.h	/^        } win;$/;"	E
win32	$SOKOLC/sokol_app.h	/^        _sapp_win32_t win32;$/;"	E
win_dlg	$SOKOLC/sokol_app.h	/^    _sapp_macos_window_delegate* win_dlg;$/;"	E
winding	$SOKOLC/sokol_gfx.h	/^        MTLWinding winding;$/;"	m	struct:__anon13e02ee75008::__anon13e02ee75108	typeref:typename:MTLWinding
window	$SOKOLC/sokol_app.h	/^    Window window;$/;"	E
windowDidBecomeKey:	$SOKOLC/sokol_app.h	/^- (void)windowDidBecomeKey:(NSNotification*)notification {$/;"	m	implementation:_sapp_macos_window_delegate	signature:(NSNotification*)	category:SOKOL_METAL
windowDidChangeScreen:	$SOKOLC/sokol_app.h	/^- (void)windowDidChangeScreen:(NSNotification*)notification {$/;"	m	implementation:_sapp_macos_window_delegate	signature:(NSNotification*)	category:SOKOL_METAL
windowDidDeminiaturize:	$SOKOLC/sokol_app.h	/^- (void)windowDidDeminiaturize:(NSNotification*)notification {$/;"	m	implementation:_sapp_macos_window_delegate	signature:(NSNotification*)	category:SOKOL_METAL
windowDidEnterFullScreen:	$SOKOLC/sokol_app.h	/^- (void)windowDidEnterFullScreen:(NSNotification*)notification {$/;"	m	implementation:_sapp_macos_window_delegate	signature:(NSNotification*)	category:SOKOL_METAL
windowDidExitFullScreen:	$SOKOLC/sokol_app.h	/^- (void)windowDidExitFullScreen:(NSNotification*)notification {$/;"	m	implementation:_sapp_macos_window_delegate	signature:(NSNotification*)	category:SOKOL_METAL
windowDidMiniaturize:	$SOKOLC/sokol_app.h	/^- (void)windowDidMiniaturize:(NSNotification*)notification {$/;"	m	implementation:_sapp_macos_window_delegate	signature:(NSNotification*)	category:SOKOL_METAL
windowDidResignKey:	$SOKOLC/sokol_app.h	/^- (void)windowDidResignKey:(NSNotification*)notification {$/;"	m	implementation:_sapp_macos_window_delegate	signature:(NSNotification*)	category:SOKOL_METAL
windowDidResize:	$SOKOLC/sokol_app.h	/^- (void)windowDidResize:(NSNotification*)notification {$/;"	m	implementation:_sapp_macos_window_delegate	signature:(NSNotification*)	category:SOKOL_METAL
windowShouldClose:	$SOKOLC/sokol_app.h	/^- (BOOL)windowShouldClose:(id)sender {$/;"	m	implementation:_sapp_macos_window_delegate	signature:(id)
windowWillStartLiveResize:	$SOKOLC/sokol_app.h	/^- (void)windowWillStartLiveResize:(NSNotification *)notification {$/;"	m	implementation:_sapp_macos_window_delegate	signature:(NSNotification*)	category:SOKOL_METAL
window_height	$SOKOLC/sokol_app.h	/^    int window_height;$/;"	E
window_scale	$SOKOLC/sokol_app.h	/^    float window_scale;$/;"	E	enum:MONITOR_DPI_TYPE
window_state	$SOKOLC/sokol_app.h	/^    int window_state;$/;"	E
window_title	$SOKOLC/sokol_app.h	/^    char window_title[_SAPP_MAX_TITLE_LENGTH];      \/\/ UTF-8$/;"	E
window_title_wide	$SOKOLC/sokol_app.h	/^    wchar_t window_title_wide[_SAPP_MAX_TITLE_LENGTH];   \/\/ UTF-32 or UCS-2 *\/$/;"	E
window_width	$SOKOLC/sokol_app.h	/^    int window_width;$/;"	E
wrap_u	$SOKOLC/sokol_gfx.h	/^    sg_wrap wrap_u;$/;"	m	struct:sg_sampler_desc	typeref:typename:sg_wrap
wrap_u	$SOKOLC/util/sokol_spine.h	/^    sg_wrap wrap_u;$/;"	m	struct:sspine_image_info	typeref:typename:sg_wrap
wrap_v	$SOKOLC/sokol_gfx.h	/^    sg_wrap wrap_v;$/;"	m	struct:sg_sampler_desc	typeref:typename:sg_wrap
wrap_v	$SOKOLC/util/sokol_spine.h	/^    sg_wrap wrap_v;$/;"	m	struct:sspine_image_info	typeref:typename:sg_wrap
wrap_w	$SOKOLC/sokol_gfx.h	/^    sg_wrap wrap_w;$/;"	m	struct:sg_sampler_desc	typeref:typename:sg_wrap
write_alpha_channel	$SOKOLC/util/sokol_imgui.h	/^    bool write_alpha_channel;       \/\/ if true, alpha values get written into the framebuffer$/;"	m	struct:simgui_desc_t	typeref:typename:bool
write_enabled	$SOKOLC/sokol_gfx.h	/^    bool write_enabled;$/;"	m	struct:sg_depth_state	typeref:typename:bool
write_from_main_fd	$SOKOLC/sokol_app.h	/^    int write_from_main_fd;$/;"	E
write_mask	$SOKOLC/sokol_gfx.h	/^    uint8_t write_mask;$/;"	m	struct:sg_stencil_state	typeref:typename:uint8_t
write_queue	$SOKOLC/sokol_audio.h	/^    _saudio_ring_t write_queue; \/* empty buffers, ready to be pushed to *\/$/;"	E
x11	$SOKOLC/sokol_app.h	/^        _sapp_x11_t x11;$/;"	E
xdnd	$SOKOLC/sokol_app.h	/^    _sapp_xdnd_t xdnd;$/;"	E
